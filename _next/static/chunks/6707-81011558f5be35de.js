(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [6707], {
        59035: function(e, t, r) {
            "use strict";
            r.d(t, {
                Sg: function() {
                    return a
                },
                zt: function() {
                    return s
                }
            });
            var n = r(93310);
            r(9784);
            var i = r(36173);
            let o = new(r(13421)).Yd("abstract-provider/5.7.0");
            class a extends i.dk {
                static isForkEvent(e) {
                    return !!(e && e._isForkEvent)
                }
            }
            class s {
                constructor() {
                    o.checkAbstract(new.target, s), (0, i.zG)(this, "_isProvider", !0)
                }
                getFeeData() {
                    var e, t, r, o;
                    return e = this, t = void 0, r = void 0, o = function*() {
                        let {
                            block: e,
                            gasPrice: t
                        } = yield(0, i.mE)({
                            block: this.getBlock("latest"),
                            gasPrice: this.getGasPrice().catch(e => null)
                        }), r = null, o = null, a = null;
                        return e && e.baseFeePerGas && (r = e.baseFeePerGas, a = n.O$.from("1500000000"), o = e.baseFeePerGas.mul(2).add(a)), {
                            lastBaseFeePerGas: r,
                            maxFeePerGas: o,
                            maxPriorityFeePerGas: a,
                            gasPrice: t
                        }
                    }, new(r || (r = Promise))(function(n, i) {
                        function a(e) {
                            try {
                                u(o.next(e))
                            } catch (e) {
                                i(e)
                            }
                        }

                        function s(e) {
                            try {
                                u(o.throw(e))
                            } catch (e) {
                                i(e)
                            }
                        }

                        function u(e) {
                            var t;
                            e.done ? n(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(a, s)
                        }
                        u((o = o.apply(e, t || [])).next())
                    })
                }
                addListener(e, t) {
                    return this.on(e, t)
                }
                removeListener(e, t) {
                    return this.off(e, t)
                }
                static isProvider(e) {
                    return !!(e && e._isProvider)
                }
            }
        },
        37637: function(e, t, r) {
            "use strict";
            r.d(t, {
                E: function() {
                    return c
                },
                b: function() {
                    return l
                }
            });
            var n = r(36173),
                i = r(13421),
                o = function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function u(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(a, s)
                        }
                        u((n = n.apply(e, t || [])).next())
                    })
                };
            let a = new i.Yd("abstract-signer/5.7.0"),
                s = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                u = [i.Yd.errors.INSUFFICIENT_FUNDS, i.Yd.errors.NONCE_EXPIRED, i.Yd.errors.REPLACEMENT_UNDERPRICED];
            class c {
                constructor() {
                    a.checkAbstract(new.target, c), (0, n.zG)(this, "_isSigner", !0)
                }
                getBalance(e) {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), e)
                    })
                }
                getTransactionCount(e) {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), e)
                    })
                }
                estimateGas(e) {
                    return o(this, void 0, void 0, function*() {
                        this._checkProvider("estimateGas");
                        let t = yield(0, n.mE)(this.checkTransaction(e));
                        return yield this.provider.estimateGas(t)
                    })
                }
                call(e, t) {
                    return o(this, void 0, void 0, function*() {
                        this._checkProvider("call");
                        let r = yield(0, n.mE)(this.checkTransaction(e));
                        return yield this.provider.call(r, t)
                    })
                }
                sendTransaction(e) {
                    return o(this, void 0, void 0, function*() {
                        this._checkProvider("sendTransaction");
                        let t = yield this.populateTransaction(e), r = yield this.signTransaction(t);
                        return yield this.provider.sendTransaction(r)
                    })
                }
                getChainId() {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("getChainId"), (yield this.provider.getNetwork()).chainId
                    })
                }
                getGasPrice() {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice()
                    })
                }
                getFeeData() {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("getFeeData"), yield this.provider.getFeeData()
                    })
                }
                resolveName(e) {
                    return o(this, void 0, void 0, function*() {
                        return this._checkProvider("resolveName"), yield this.provider.resolveName(e)
                    })
                }
                checkTransaction(e) {
                    for (let t in e) - 1 === s.indexOf(t) && a.throwArgumentError("invalid transaction key: " + t, "transaction", e);
                    let t = (0, n.DC)(e);
                    return null == t.from ? t.from = this.getAddress() : t.from = Promise.all([Promise.resolve(t.from), this.getAddress()]).then(t => (t[0].toLowerCase() !== t[1].toLowerCase() && a.throwArgumentError("from address mismatch", "transaction", e), t[0])), t
                }
                populateTransaction(e) {
                    return o(this, void 0, void 0, function*() {
                        let t = yield(0, n.mE)(this.checkTransaction(e));
                        null != t.to && (t.to = Promise.resolve(t.to).then(e => o(this, void 0, void 0, function*() {
                            if (null == e) return null;
                            let t = yield this.resolveName(e);
                            return null == t && a.throwArgumentError("provided ENS name resolves to null", "tx.to", e), t
                        })), t.to.catch(e => {}));
                        let r = null != t.maxFeePerGas || null != t.maxPriorityFeePerGas;
                        if (null != t.gasPrice && (2 === t.type || r) ? a.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e) : (0 === t.type || 1 === t.type) && r && a.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e), (2 === t.type || null == t.type) && null != t.maxFeePerGas && null != t.maxPriorityFeePerGas) t.type = 2;
                        else if (0 === t.type || 1 === t.type) null == t.gasPrice && (t.gasPrice = this.getGasPrice());
                        else {
                            let e = yield this.getFeeData();
                            if (null == t.type) {
                                if (null != e.maxFeePerGas && null != e.maxPriorityFeePerGas) {
                                    if (t.type = 2, null != t.gasPrice) {
                                        let e = t.gasPrice;
                                        delete t.gasPrice, t.maxFeePerGas = e, t.maxPriorityFeePerGas = e
                                    } else null == t.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas)
                                } else null != e.gasPrice ? (r && a.throwError("network does not support EIP-1559", i.Yd.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                }), null == t.gasPrice && (t.gasPrice = e.gasPrice), t.type = 0) : a.throwError("failed to get consistent fee data", i.Yd.errors.UNSUPPORTED_OPERATION, {
                                    operation: "signer.getFeeData"
                                })
                            } else 2 === t.type && (null == t.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas))
                        }
                        return null == t.nonce && (t.nonce = this.getTransactionCount("pending")), null == t.gasLimit && (t.gasLimit = this.estimateGas(t).catch(e => {
                            if (u.indexOf(e.code) >= 0) throw e;
                            return a.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", i.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                                error: e,
                                tx: t
                            })
                        })), null == t.chainId ? t.chainId = this.getChainId() : t.chainId = Promise.all([Promise.resolve(t.chainId), this.getChainId()]).then(t => (0 !== t[1] && t[0] !== t[1] && a.throwArgumentError("chainId address mismatch", "transaction", e), t[0])), yield(0, n.mE)(t)
                    })
                }
                _checkProvider(e) {
                    this.provider || a.throwError("missing provider", i.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: e || "_checkProvider"
                    })
                }
                static isSigner(e) {
                    return !!(e && e._isSigner)
                }
            }
            class l extends c {
                constructor(e, t) {
                    super(), (0, n.zG)(this, "address", e), (0, n.zG)(this, "provider", t || null)
                }
                getAddress() {
                    return Promise.resolve(this.address)
                }
                _fail(e, t) {
                    return Promise.resolve().then(() => {
                        a.throwError(e, i.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: t
                        })
                    })
                }
                signMessage(e) {
                    return this._fail("VoidSigner cannot sign messages", "signMessage")
                }
                signTransaction(e) {
                    return this._fail("VoidSigner cannot sign transactions", "signTransaction")
                }
                _signTypedData(e, t, r) {
                    return this._fail("VoidSigner cannot sign typed data", "signTypedData")
                }
                connect(e) {
                    return new l(this.address, e)
                }
            }
        },
        89005: function(e, t, r) {
            "use strict";
            r.d(t, {
                Kn: function() {
                    return d
                },
                CR: function() {
                    return f
                }
            });
            var n = r(9784),
                i = r(93310),
                o = r(43481),
                a = r(18162);
            let s = new(r(13421)).Yd("address/5.7.0");

            function u(e) {
                (0, n.A7)(e, 20) || s.throwArgumentError("invalid address", "address", e);
                let t = (e = e.toLowerCase()).substring(2).split(""),
                    r = new Uint8Array(40);
                for (let e = 0; e < 40; e++) r[e] = t[e].charCodeAt(0);
                let i = (0, n.lE)((0, o.w)(r));
                for (let e = 0; e < 40; e += 2) i[e >> 1] >> 4 >= 8 && (t[e] = t[e].toUpperCase()), (15 & i[e >> 1]) >= 8 && (t[e + 1] = t[e + 1].toUpperCase());
                return "0x" + t.join("")
            }
            let c = {};
            for (let e = 0; e < 10; e++) c[String(e)] = String(e);
            for (let e = 0; e < 26; e++) c[String.fromCharCode(65 + e)] = String(10 + e);
            let l = Math.floor(Math.log10 ? Math.log10(9007199254740991) : Math.log(9007199254740991) / Math.LN10);

            function d(e) {
                let t = null;
                if ("string" != typeof e && s.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = u(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && s.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== function(e) {
                            let t = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map(e => c[e]).join("");
                            for (; t.length >= l;) {
                                let e = t.substring(0, l);
                                t = parseInt(e, 10) % 97 + t.substring(e.length)
                            }
                            let r = String(98 - parseInt(t, 10) % 97);
                            for (; r.length < 2;) r = "0" + r;
                            return r
                        }(e) && s.throwArgumentError("bad icap checksum", "address", e), t = (0, i.g$)(e.substring(4)); t.length < 40;) t = "0" + t;
                    t = u("0x" + t)
                } else s.throwArgumentError("invalid address", "address", e);
                return t
            }

            function f(e) {
                let t = null;
                try {
                    t = d(e.from)
                } catch (t) {
                    s.throwArgumentError("missing from address", "transaction", e)
                }
                let r = (0, n.G1)((0, n.lE)(i.O$.from(e.nonce).toHexString()));
                return d((0, n.p3)((0, o.w)((0, a.c)([t, r])), 12))
            }
        },
        93310: function(e, t, r) {
            "use strict";
            r.d(t, {
                O$: function() {
                    return d
                },
                g$: function() {
                    return g
                }
            });
            var n = r(58171),
                i = r.n(n),
                o = r(9784),
                a = r(13421),
                s = i().BN;
            let u = new a.Yd("bignumber/5.7.0"),
                c = {},
                l = !1;
            class d {
                constructor(e, t) {
                    e !== c && u.throwError("cannot call constructor directly; use BigNumber.from", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(e) {
                    return h(p(this).fromTwos(e))
                }
                toTwos(e) {
                    return h(p(this).toTwos(e))
                }
                abs() {
                    return "-" === this._hex[0] ? d.from(this._hex.substring(1)) : this
                }
                add(e) {
                    return h(p(this).add(p(e)))
                }
                sub(e) {
                    return h(p(this).sub(p(e)))
                }
                div(e) {
                    return d.from(e).isZero() && m("division-by-zero", "div"), h(p(this).div(p(e)))
                }
                mul(e) {
                    return h(p(this).mul(p(e)))
                }
                mod(e) {
                    let t = p(e);
                    return t.isNeg() && m("division-by-zero", "mod"), h(p(this).umod(t))
                }
                pow(e) {
                    let t = p(e);
                    return t.isNeg() && m("negative-power", "pow"), h(p(this).pow(t))
                }
                and(e) {
                    let t = p(e);
                    return (this.isNegative() || t.isNeg()) && m("unbound-bitwise-result", "and"), h(p(this).and(t))
                }
                or(e) {
                    let t = p(e);
                    return (this.isNegative() || t.isNeg()) && m("unbound-bitwise-result", "or"), h(p(this).or(t))
                }
                xor(e) {
                    let t = p(e);
                    return (this.isNegative() || t.isNeg()) && m("unbound-bitwise-result", "xor"), h(p(this).xor(t))
                }
                mask(e) {
                    return (this.isNegative() || e < 0) && m("negative-width", "mask"), h(p(this).maskn(e))
                }
                shl(e) {
                    return (this.isNegative() || e < 0) && m("negative-width", "shl"), h(p(this).shln(e))
                }
                shr(e) {
                    return (this.isNegative() || e < 0) && m("negative-width", "shr"), h(p(this).shrn(e))
                }
                eq(e) {
                    return p(this).eq(p(e))
                }
                lt(e) {
                    return p(this).lt(p(e))
                }
                lte(e) {
                    return p(this).lte(p(e))
                }
                gt(e) {
                    return p(this).gt(p(e))
                }
                gte(e) {
                    return p(this).gte(p(e))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return p(this).isZero()
                }
                toNumber() {
                    try {
                        return p(this).toNumber()
                    } catch (e) {
                        m("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (e) {}
                    return u.throwError("this platform does not support BigInt", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? l || (l = !0, u.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? u.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", a.Yd.errors.UNEXPECTED_ARGUMENT, {}) : u.throwError("BigNumber.toString does not accept parameters", a.Yd.errors.UNEXPECTED_ARGUMENT, {})), p(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(e) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(e) {
                    if (e instanceof d) return e;
                    if ("string" == typeof e) return e.match(/^-?0x[0-9a-f]+$/i) ? new d(c, f(e)) : e.match(/^-?[0-9]+$/) ? new d(c, f(new s(e))) : u.throwArgumentError("invalid BigNumber string", "value", e);
                    if ("number" == typeof e) return e % 1 && m("underflow", "BigNumber.from", e), (e >= 9007199254740991 || e <= -9007199254740991) && m("overflow", "BigNumber.from", e), d.from(String(e));
                    if ("bigint" == typeof e) return d.from(e.toString());
                    if ((0, o._t)(e)) return d.from((0, o.Dv)(e));
                    if (e) {
                        if (e.toHexString) {
                            let t = e.toHexString();
                            if ("string" == typeof t) return d.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" == typeof t && ((0, o.A7)(t) || "-" === t[0] && (0, o.A7)(t.substring(1)))) return d.from(t)
                        }
                    }
                    return u.throwArgumentError("invalid BigNumber value", "value", e)
                }
                static isBigNumber(e) {
                    return !!(e && e._isBigNumber)
                }
            }

            function f(e) {
                if ("string" != typeof e) return f(e.toString(16));
                if ("-" === e[0]) return ("-" === (e = e.substring(1))[0] && u.throwArgumentError("invalid hex", "value", e), "0x00" === (e = f(e))) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function h(e) {
                return d.from(f(e))
            }

            function p(e) {
                let t = d.from(e).toHexString();
                return "-" === t[0] ? new s("-" + t.substring(3), 16) : new s(t.substring(2), 16)
            }

            function m(e, t, r) {
                let n = {
                    fault: e,
                    operation: t
                };
                return null != r && (n.value = r), u.throwError(e, a.Yd.errors.NUMERIC_FAULT, n)
            }

            function g(e) {
                return new s(e, 36).toString(16)
            }
        },
        9784: function(e, t, r) {
            "use strict";
            r.d(t, {
                lE: function() {
                    return c
                },
                zo: function() {
                    return l
                },
                xs: function() {
                    return b
                },
                E1: function() {
                    return m
                },
                p3: function() {
                    return g
                },
                $P: function() {
                    return y
                },
                $m: function() {
                    return v
                },
                Dv: function() {
                    return p
                },
                _t: function() {
                    return u
                },
                Zq: function() {
                    return a
                },
                A7: function() {
                    return f
                },
                N: function() {
                    return w
                },
                G1: function() {
                    return d
                }
            });
            let n = new(r(13421)).Yd("bytes/5.7.0");

            function i(e) {
                return !!e.toHexString
            }

            function o(e) {
                return e.slice || (e.slice = function() {
                    let t = Array.prototype.slice.call(arguments);
                    return o(new Uint8Array(Array.prototype.slice.apply(e, t)))
                }), e
            }

            function a(e) {
                return f(e) && !(e.length % 2) || u(e)
            }

            function s(e) {
                return "number" == typeof e && e == e && e % 1 == 0
            }

            function u(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" == typeof e || !s(e.length) || e.length < 0) return !1;
                for (let t = 0; t < e.length; t++) {
                    let r = e[t];
                    if (!s(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function c(e, t) {
                if (t || (t = {}), "number" == typeof e) {
                    n.checkSafeUint53(e, "invalid arrayify value");
                    let t = [];
                    for (; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), o(new Uint8Array(t))
                }
                if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e) && (e = e.toHexString()), f(e)) {
                    let r = e.substring(2);
                    r.length % 2 && ("left" === t.hexPad ? r = "0" + r : "right" === t.hexPad ? r += "0" : n.throwArgumentError("hex data is odd-length", "value", e));
                    let i = [];
                    for (let e = 0; e < r.length; e += 2) i.push(parseInt(r.substring(e, e + 2), 16));
                    return o(new Uint8Array(i))
                }
                return u(e) ? o(new Uint8Array(e)) : n.throwArgumentError("invalid arrayify value", "value", e)
            }

            function l(e) {
                let t = e.map(e => c(e)),
                    r = new Uint8Array(t.reduce((e, t) => e + t.length, 0));
                return t.reduce((e, t) => (r.set(t, e), e + t.length), 0), o(r)
            }

            function d(e) {
                let t = c(e);
                if (0 === t.length) return t;
                let r = 0;
                for (; r < t.length && 0 === t[r];) r++;
                return r && (t = t.slice(r)), t
            }

            function f(e, t) {
                return "string" == typeof e && !!e.match(/^0x[0-9A-Fa-f]*$/) && (!t || e.length === 2 + 2 * t)
            }
            let h = "0123456789abcdef";

            function p(e, t) {
                if (t || (t = {}), "number" == typeof e) {
                    n.checkSafeUint53(e, "invalid hexlify value");
                    let t = "";
                    for (; e;) t = h[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" == typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e)) return e.toHexString();
                if (f(e)) return e.length % 2 && ("left" === t.hexPad ? e = "0x0" + e.substring(2) : "right" === t.hexPad ? e += "0" : n.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (u(e)) {
                    let t = "0x";
                    for (let r = 0; r < e.length; r++) {
                        let n = e[r];
                        t += h[(240 & n) >> 4] + h[15 & n]
                    }
                    return t
                }
                return n.throwArgumentError("invalid hexlify value", "value", e)
            }

            function m(e) {
                if ("string" != typeof e) e = p(e);
                else if (!f(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function g(e, t, r) {
                return ("string" != typeof e ? e = p(e) : (!f(e) || e.length % 2) && n.throwArgumentError("invalid hexData", "value", e), t = 2 + 2 * t, null != r) ? "0x" + e.substring(t, 2 + 2 * r) : "0x" + e.substring(t)
            }

            function b(e) {
                let t = "0x";
                return e.forEach(e => {
                    t += p(e).substring(2)
                }), t
            }

            function y(e) {
                let t = function(e) {
                    "string" != typeof e && (e = p(e)), f(e) || n.throwArgumentError("invalid hex string", "value", e), e = e.substring(2);
                    let t = 0;
                    for (; t < e.length && "0" === e[t];) t++;
                    return "0x" + e.substring(t)
                }(p(e, {
                    hexPad: "left"
                }));
                return "0x" === t ? "0x0" : t
            }

            function v(e, t) {
                for ("string" != typeof e ? e = p(e) : f(e) || n.throwArgumentError("invalid hex string", "value", e), e.length > 2 * t + 2 && n.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * t + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function w(e) {
                let t = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (a(e)) {
                    let r = c(e);
                    64 === r.length ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = p(r.slice(0, 32)), t.s = p(r.slice(32, 64))) : 65 === r.length ? (t.r = p(r.slice(0, 32)), t.s = p(r.slice(32, 64)), t.v = r[64]) : n.throwArgumentError("invalid signature string", "signature", e), t.v < 27 && (0 === t.v || 1 === t.v ? t.v += 27 : n.throwArgumentError("signature invalid v byte", "signature", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = p(r.slice(32, 64))
                } else {
                    if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, null != t._vs) {
                        let r = function(e, t) {
                            (e = c(e)).length > t && n.throwArgumentError("value out of range", "value", arguments[0]);
                            let r = new Uint8Array(t);
                            return r.set(e, t - e.length), o(r)
                        }(c(t._vs), 32);
                        t._vs = p(r);
                        let i = r[0] >= 128 ? 1 : 0;
                        null == t.recoveryParam ? t.recoveryParam = i : t.recoveryParam !== i && n.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), r[0] &= 127;
                        let a = p(r);
                        null == t.s ? t.s = a : t.s !== a && n.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == t.recoveryParam) null == t.v ? n.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === t.v || 1 === t.v ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
                    else if (null == t.v) t.v = 27 + t.recoveryParam;
                    else {
                        let r = 0 === t.v || 1 === t.v ? t.v : 1 - t.v % 2;
                        t.recoveryParam !== r && n.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != t.r && f(t.r) ? t.r = v(t.r, 32) : n.throwArgumentError("signature missing or invalid r", "signature", e), null != t.s && f(t.s) ? t.s = v(t.s, 32) : n.throwArgumentError("signature missing or invalid s", "signature", e);
                    let r = c(t.s);
                    r[0] >= 128 && n.throwArgumentError("signature s out of range", "signature", e), t.recoveryParam && (r[0] |= 128);
                    let i = p(r);
                    t._vs && (f(t._vs) || n.throwArgumentError("signature invalid _vs", "signature", e), t._vs = v(t._vs, 32)), null == t._vs ? t._vs = i : t._vs !== i && n.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t
            }
        },
        75986: function(e, t, r) {
            "use strict";
            r.d(t, {
                Bz: function() {
                    return s
                },
                _Y: function() {
                    return o
                },
                fh: function() {
                    return a
                },
                tL: function() {
                    return i
                }
            });
            var n = r(93310);
            let i = n.O$.from(-1),
                o = n.O$.from(0),
                a = n.O$.from(1),
                s = n.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
        },
        22554: function(e, t, r) {
            "use strict";
            r.d(t, {
                CH: function() {
                    return eT
                }
            });
            var n = r(9784),
                i = r(93310),
                o = r(36173),
                a = r(13421);
            let s = "abi/5.7.0",
                u = new a.Yd(s);
            class c {
                constructor(e, t, r, n) {
                    this.name = e, this.type = t, this.localName = r, this.dynamic = n
                }
                _throwError(e, t) {
                    u.throwArgumentError(e, this.localName, t)
                }
            }
            class l {
                constructor(e) {
                    (0, o.zG)(this, "wordSize", e || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(e)
                }
                get data() {
                    return (0, n.xs)(this._data)
                }
                get length() {
                    return this._dataLength
                }
                _writeData(e) {
                    return this._data.push(e), this._dataLength += e.length, e.length
                }
                appendWriter(e) {
                    return this._writeData((0, n.zo)(e._data))
                }
                writeBytes(e) {
                    let t = (0, n.lE)(e),
                        r = t.length % this.wordSize;
                    return r && (t = (0, n.zo)([t, this._padding.slice(r)])), this._writeData(t)
                }
                _getValue(e) {
                    let t = (0, n.lE)(i.O$.from(e));
                    return t.length > this.wordSize && u.throwError("value out-of-bounds", a.Yd.errors.BUFFER_OVERRUN, {
                        length: this.wordSize,
                        offset: t.length
                    }), t.length % this.wordSize && (t = (0, n.zo)([this._padding.slice(t.length % this.wordSize), t])), t
                }
                writeValue(e) {
                    return this._writeData(this._getValue(e))
                }
                writeUpdatableValue() {
                    let e = this._data.length;
                    return this._data.push(this._padding), this._dataLength += this.wordSize, t => {
                        this._data[e] = this._getValue(t)
                    }
                }
            }
            class d {
                constructor(e, t, r, i) {
                    (0, o.zG)(this, "_data", (0, n.lE)(e)), (0, o.zG)(this, "wordSize", t || 32), (0, o.zG)(this, "_coerceFunc", r), (0, o.zG)(this, "allowLoose", i), this._offset = 0
                }
                get data() {
                    return (0, n.Dv)(this._data)
                }
                get consumed() {
                    return this._offset
                }
                static coerce(e, t) {
                    let r = e.match("^u?int([0-9]+)$");
                    return r && 48 >= parseInt(r[1]) && (t = t.toNumber()), t
                }
                coerce(e, t) {
                    return this._coerceFunc ? this._coerceFunc(e, t) : d.coerce(e, t)
                }
                _peekBytes(e, t, r) {
                    let n = Math.ceil(t / this.wordSize) * this.wordSize;
                    return this._offset + n > this._data.length && (this.allowLoose && r && this._offset + t <= this._data.length ? n = t : u.throwError("data out-of-bounds", a.Yd.errors.BUFFER_OVERRUN, {
                        length: this._data.length,
                        offset: this._offset + n
                    })), this._data.slice(this._offset, this._offset + n)
                }
                subReader(e) {
                    return new d(this._data.slice(this._offset + e), this.wordSize, this._coerceFunc, this.allowLoose)
                }
                readBytes(e, t) {
                    let r = this._peekBytes(0, e, !!t);
                    return this._offset += r.length, r.slice(0, e)
                }
                readValue() {
                    return i.O$.from(this.readBytes(this.wordSize))
                }
            }
            var f = r(89005),
                h = r(99554),
                p = r(43481);
            class m extends c {
                constructor(e) {
                    super("address", "address", e, !1)
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000"
                }
                encode(e, t) {
                    try {
                        t = (0, f.Kn)(t)
                    } catch (e) {
                        this._throwError(e.message, t)
                    }
                    return e.writeValue(t)
                }
                decode(e) {
                    return (0, f.Kn)((0, n.$m)(e.readValue().toHexString(), 20))
                }
            }
            class g extends c {
                constructor(e) {
                    super(e.name, e.type, void 0, e.dynamic), this.coder = e
                }
                defaultValue() {
                    return this.coder.defaultValue()
                }
                encode(e, t) {
                    return this.coder.encode(e, t)
                }
                decode(e) {
                    return this.coder.decode(e)
                }
            }
            let b = new a.Yd(s);

            function y(e, t, r) {
                let n = null;
                if (Array.isArray(r)) n = r;
                else if (r && "object" == typeof r) {
                    let e = {};
                    n = t.map(t => {
                        let n = t.localName;
                        return n || b.throwError("cannot encode object for signature with missing names", a.Yd.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: t,
                            value: r
                        }), e[n] && b.throwError("cannot encode object for signature with duplicate names", a.Yd.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: t,
                            value: r
                        }), e[n] = !0, r[n]
                    })
                } else b.throwArgumentError("invalid tuple value", "tuple", r);
                t.length !== n.length && b.throwArgumentError("types/value length mismatch", "tuple", r);
                let i = new l(e.wordSize),
                    o = new l(e.wordSize),
                    s = [];
                return t.forEach((e, t) => {
                    let r = n[t];
                    if (e.dynamic) {
                        let t = o.length;
                        e.encode(o, r);
                        let n = i.writeUpdatableValue();
                        s.push(e => {
                            n(e + t)
                        })
                    } else e.encode(i, r)
                }), s.forEach(e => {
                    e(i.length)
                }), e.appendWriter(i) + e.appendWriter(o)
            }

            function v(e, t) {
                let r = [],
                    n = e.subReader(0);
                t.forEach(t => {
                    let i = null;
                    if (t.dynamic) {
                        let r = e.readValue(),
                            o = n.subReader(r.toNumber());
                        try {
                            i = t.decode(o)
                        } catch (e) {
                            if (e.code === a.Yd.errors.BUFFER_OVERRUN) throw e;
                            (i = e).baseType = t.name, i.name = t.localName, i.type = t.type
                        }
                    } else try {
                        i = t.decode(e)
                    } catch (e) {
                        if (e.code === a.Yd.errors.BUFFER_OVERRUN) throw e;
                        (i = e).baseType = t.name, i.name = t.localName, i.type = t.type
                    }
                    void 0 != i && r.push(i)
                });
                let i = t.reduce((e, t) => {
                    let r = t.localName;
                    return r && (e[r] || (e[r] = 0), e[r]++), e
                }, {});
                t.forEach((e, t) => {
                    let n = e.localName;
                    if (!n || 1 !== i[n] || ("length" === n && (n = "_length"), null != r[n])) return;
                    let o = r[t];
                    o instanceof Error ? Object.defineProperty(r, n, {
                        enumerable: !0,
                        get: () => {
                            throw o
                        }
                    }) : r[n] = o
                });
                for (let e = 0; e < r.length; e++) {
                    let t = r[e];
                    t instanceof Error && Object.defineProperty(r, e, {
                        enumerable: !0,
                        get: () => {
                            throw t
                        }
                    })
                }
                return Object.freeze(r)
            }
            class w extends c {
                constructor(e, t, r) {
                    super("array", e.type + "[" + (t >= 0 ? t : "") + "]", r, -1 === t || e.dynamic), this.coder = e, this.length = t
                }
                defaultValue() {
                    let e = this.coder.defaultValue(),
                        t = [];
                    for (let r = 0; r < this.length; r++) t.push(e);
                    return t
                }
                encode(e, t) {
                    Array.isArray(t) || this._throwError("expected array value", t);
                    let r = this.length; - 1 === r && (r = t.length, e.writeValue(t.length)), b.checkArgumentCount(t.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
                    let n = [];
                    for (let e = 0; e < t.length; e++) n.push(this.coder);
                    return y(e, n, t)
                }
                decode(e) {
                    let t = this.length; - 1 === t && 32 * (t = e.readValue().toNumber()) > e._data.length && b.throwError("insufficient data length", a.Yd.errors.BUFFER_OVERRUN, {
                        length: e._data.length,
                        count: t
                    });
                    let r = [];
                    for (let e = 0; e < t; e++) r.push(new g(this.coder));
                    return e.coerce(this.name, v(e, r))
                }
            }
            class E extends c {
                constructor(e) {
                    super("bool", "bool", e, !1)
                }
                defaultValue() {
                    return !1
                }
                encode(e, t) {
                    return e.writeValue(t ? 1 : 0)
                }
                decode(e) {
                    return e.coerce(this.type, !e.readValue().isZero())
                }
            }
            class A extends c {
                constructor(e, t) {
                    super(e, e, t, !0)
                }
                defaultValue() {
                    return "0x"
                }
                encode(e, t) {
                    return t = (0, n.lE)(t), e.writeValue(t.length) + e.writeBytes(t)
                }
                decode(e) {
                    return e.readBytes(e.readValue().toNumber(), !0)
                }
            }
            class P extends A {
                constructor(e) {
                    super("bytes", e)
                }
                decode(e) {
                    return e.coerce(this.name, (0, n.Dv)(super.decode(e)))
                }
            }
            class x extends c {
                constructor(e, t) {
                    let r = "bytes" + String(e);
                    super(r, r, t, !1), this.size = e
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
                }
                encode(e, t) {
                    let r = (0, n.lE)(t);
                    return r.length !== this.size && this._throwError("incorrect data length", t), e.writeBytes(r)
                }
                decode(e) {
                    return e.coerce(this.name, (0, n.Dv)(e.readBytes(this.size)))
                }
            }
            class O extends c {
                constructor(e) {
                    super("null", "", e, !1)
                }
                defaultValue() {
                    return null
                }
                encode(e, t) {
                    return null != t && this._throwError("not null", t), e.writeBytes([])
                }
                decode(e) {
                    return e.readBytes(0), e.coerce(this.name, null)
                }
            }
            var _ = r(75986);
            class I extends c {
                constructor(e, t, r) {
                    let n = (t ? "int" : "uint") + 8 * e;
                    super(n, n, r, !1), this.size = e, this.signed = t
                }
                defaultValue() {
                    return 0
                }
                encode(e, t) {
                    let r = i.O$.from(t),
                        n = _.Bz.mask(8 * e.wordSize);
                    if (this.signed) {
                        let e = n.mask(8 * this.size - 1);
                        (r.gt(e) || r.lt(e.add(_.fh).mul(_.tL))) && this._throwError("value out-of-bounds", t)
                    } else(r.lt(_._Y) || r.gt(n.mask(8 * this.size))) && this._throwError("value out-of-bounds", t);
                    return r = r.toTwos(8 * this.size).mask(8 * this.size), this.signed && (r = r.fromTwos(8 * this.size).toTwos(8 * e.wordSize)), e.writeValue(r)
                }
                decode(e) {
                    let t = e.readValue().mask(8 * this.size);
                    return this.signed && (t = t.fromTwos(8 * this.size)), e.coerce(this.name, t)
                }
            }
            var T = r(28257);
            class C extends A {
                constructor(e) {
                    super("string", e)
                }
                defaultValue() {
                    return ""
                }
                encode(e, t) {
                    return super.encode(e, (0, T.Y0)(t))
                }
                decode(e) {
                    return (0, T.ZN)(super.decode(e))
                }
            }
            class S extends c {
                constructor(e, t) {
                    let r = !1,
                        n = [];
                    e.forEach(e => {
                        e.dynamic && (r = !0), n.push(e.type)
                    }), super("tuple", "tuple(" + n.join(",") + ")", t, r), this.coders = e
                }
                defaultValue() {
                    let e = [];
                    this.coders.forEach(t => {
                        e.push(t.defaultValue())
                    });
                    let t = this.coders.reduce((e, t) => {
                        let r = t.localName;
                        return r && (e[r] || (e[r] = 0), e[r]++), e
                    }, {});
                    return this.coders.forEach((r, n) => {
                        let i = r.localName;
                        i && 1 === t[i] && ("length" === i && (i = "_length"), null == e[i] && (e[i] = e[n]))
                    }), Object.freeze(e)
                }
                encode(e, t) {
                    return y(e, this.coders, t)
                }
                decode(e) {
                    return e.coerce(this.name, v(e, this.coders))
                }
            }
            let k = new a.Yd(s),
                M = {},
                B = {
                    calldata: !0,
                    memory: !0,
                    storage: !0
                },
                N = {
                    calldata: !0,
                    memory: !0
                };

            function R(e, t) {
                if ("bytes" === e || "string" === e) {
                    if (B[t]) return !0
                } else if ("address" === e) {
                    if ("payable" === t) return !0
                } else if ((e.indexOf("[") >= 0 || "tuple" === e) && N[t]) return !0;
                return (B[t] || "payable" === t) && k.throwArgumentError("invalid modifier", "name", t), !1
            }

            function D(e, t) {
                for (let r in t)(0, o.zG)(e, r, t[r])
            }
            let j = Object.freeze({
                    sighash: "sighash",
                    minimal: "minimal",
                    full: "full",
                    json: "json"
                }),
                F = new RegExp(/^(.*)\[([0-9]*)\]$/);
            class U {
                constructor(e, t) {
                    e !== M && k.throwError("use fromString", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "new ParamType()"
                    }), D(this, t);
                    let r = this.type.match(F);
                    r ? D(this, {
                        arrayLength: parseInt(r[2] || "-1"),
                        arrayChildren: U.fromObject({
                            type: r[1],
                            components: this.components
                        }),
                        baseType: "array"
                    }) : D(this, {
                        arrayLength: null,
                        arrayChildren: null,
                        baseType: null != this.components ? "tuple" : this.type
                    }), this._isParamType = !0, Object.freeze(this)
                }
                format(e) {
                    if (e || (e = j.sighash), j[e] || k.throwArgumentError("invalid format type", "format", e), e === j.json) {
                        let t = {
                            type: "tuple" === this.baseType ? "tuple" : this.type,
                            name: this.name || void 0
                        };
                        return "boolean" == typeof this.indexed && (t.indexed = this.indexed), this.components && (t.components = this.components.map(t => JSON.parse(t.format(e)))), JSON.stringify(t)
                    }
                    let t = "";
                    return "array" === this.baseType ? t += this.arrayChildren.format(e) + "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]" : "tuple" === this.baseType ? (e !== j.sighash && (t += this.type), t += "(" + this.components.map(t => t.format(e)).join(e === j.full ? ", " : ",") + ")") : t += this.type, e !== j.sighash && (!0 === this.indexed && (t += " indexed"), e === j.full && this.name && (t += " " + this.name)), t
                }
                static from(e, t) {
                    return "string" == typeof e ? U.fromString(e, t) : U.fromObject(e)
                }
                static fromObject(e) {
                    return U.isParamType(e) ? e : new U(M, {
                        name: e.name || null,
                        type: Q(e.type),
                        indexed: null == e.indexed ? null : !!e.indexed,
                        components: e.components ? e.components.map(U.fromObject) : null
                    })
                }
                static fromString(e, t) {
                    var r;
                    return r = function(e, t) {
                        let r = e;

                        function n(t) {
                            k.throwArgumentError(`unexpected character at position ${t}`, "param", e)
                        }

                        function i(e) {
                            let r = {
                                type: "",
                                name: "",
                                parent: e,
                                state: {
                                    allowType: !0
                                }
                            };
                            return t && (r.indexed = !1), r
                        }
                        e = e.replace(/\s/g, " ");
                        let o = {
                                type: "",
                                name: "",
                                state: {
                                    allowType: !0
                                }
                            },
                            a = o;
                        for (let r = 0; r < e.length; r++) {
                            let o = e[r];
                            switch (o) {
                                case "(":
                                    a.state.allowType && "" === a.type ? a.type = "tuple" : a.state.allowParams || n(r), a.state.allowType = !1, a.type = Q(a.type), a.components = [i(a)], a = a.components[0];
                                    break;
                                case ")":
                                    delete a.state, "indexed" === a.name && (t || n(r), a.indexed = !0, a.name = ""), R(a.type, a.name) && (a.name = ""), a.type = Q(a.type);
                                    let s = a;
                                    (a = a.parent) || n(r), delete s.parent, a.state.allowParams = !1, a.state.allowName = !0, a.state.allowArray = !0;
                                    break;
                                case ",":
                                    delete a.state, "indexed" === a.name && (t || n(r), a.indexed = !0, a.name = ""), R(a.type, a.name) && (a.name = ""), a.type = Q(a.type);
                                    let u = i(a.parent);
                                    a.parent.components.push(u), delete a.parent, a = u;
                                    break;
                                case " ":
                                    a.state.allowType && "" !== a.type && (a.type = Q(a.type), delete a.state.allowType, a.state.allowName = !0, a.state.allowParams = !0), a.state.allowName && "" !== a.name && ("indexed" === a.name ? (t || n(r), a.indexed && n(r), a.indexed = !0, a.name = "") : R(a.type, a.name) ? a.name = "" : a.state.allowName = !1);
                                    break;
                                case "[":
                                    a.state.allowArray || n(r), a.type += o, a.state.allowArray = !1, a.state.allowName = !1, a.state.readArray = !0;
                                    break;
                                case "]":
                                    a.state.readArray || n(r), a.type += o, a.state.readArray = !1, a.state.allowArray = !0, a.state.allowName = !0;
                                    break;
                                default:
                                    a.state.allowType ? (a.type += o, a.state.allowParams = !0, a.state.allowArray = !0) : a.state.allowName ? (a.name += o, delete a.state.allowArray) : a.state.readArray ? a.type += o : n(r)
                            }
                        }
                        return a.parent && k.throwArgumentError("unexpected eof", "param", e), delete o.state, "indexed" === a.name ? (t || n(r.length - 7), a.indexed && n(r.length - 7), a.indexed = !0, a.name = "") : R(a.type, a.name) && (a.name = ""), o.type = Q(o.type), o
                    }(e, !!t), U.fromObject({
                        name: r.name,
                        type: r.type,
                        indexed: r.indexed,
                        components: r.components
                    })
                }
                static isParamType(e) {
                    return !!(null != e && e._isParamType)
                }
            }

            function L(e, t) {
                return (function(e) {
                    e = e.trim();
                    let t = [],
                        r = "",
                        n = 0;
                    for (let i = 0; i < e.length; i++) {
                        let o = e[i];
                        "," === o && 0 === n ? (t.push(r), r = "") : (r += o, "(" === o ? n++ : ")" === o && -1 == --n && k.throwArgumentError("unbalanced parenthesis", "value", e))
                    }
                    return r && t.push(r), t
                })(e).map(e => U.fromString(e, t))
            }
            class q {
                constructor(e, t) {
                    e !== M && k.throwError("use a static from method", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "new Fragment()"
                    }), D(this, t), this._isFragment = !0, Object.freeze(this)
                }
                static from(e) {
                    return q.isFragment(e) ? e : "string" == typeof e ? q.fromString(e) : q.fromObject(e)
                }
                static fromObject(e) {
                    if (q.isFragment(e)) return e;
                    switch (e.type) {
                        case "function":
                            return K.fromObject(e);
                        case "event":
                            return z.fromObject(e);
                        case "constructor":
                            return W.fromObject(e);
                        case "error":
                            return V.fromObject(e);
                        case "fallback":
                        case "receive":
                            return null
                    }
                    return k.throwArgumentError("invalid fragment object", "value", e)
                }
                static fromString(e) {
                    return "event" === (e = (e = (e = e.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? z.fromString(e.substring(5).trim()) : "function" === e.split(" ")[0] ? K.fromString(e.substring(8).trim()) : "constructor" === e.split("(")[0].trim() ? W.fromString(e.trim()) : "error" === e.split(" ")[0] ? V.fromString(e.substring(5).trim()) : k.throwArgumentError("unsupported fragment", "value", e)
                }
                static isFragment(e) {
                    return !!(e && e._isFragment)
                }
            }
            class z extends q {
                format(e) {
                    if (e || (e = j.sighash), j[e] || k.throwArgumentError("invalid format type", "format", e), e === j.json) return JSON.stringify({
                        type: "event",
                        anonymous: this.anonymous,
                        name: this.name,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = "";
                    return e !== j.sighash && (t += "event "), t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === j.full ? ", " : ",") + ") ", e !== j.sighash && this.anonymous && (t += "anonymous "), t.trim()
                }
                static from(e) {
                    return "string" == typeof e ? z.fromString(e) : z.fromObject(e)
                }
                static fromObject(e) {
                    return z.isEventFragment(e) ? e : ("event" !== e.type && k.throwArgumentError("invalid event object", "value", e), new z(M, {
                        name: Z(e.name),
                        anonymous: e.anonymous,
                        inputs: e.inputs ? e.inputs.map(U.fromObject) : [],
                        type: "event"
                    }))
                }
                static fromString(e) {
                    let t = e.match(X);
                    t || k.throwArgumentError("invalid event string", "value", e);
                    let r = !1;
                    return t[3].split(" ").forEach(e => {
                        switch (e.trim()) {
                            case "anonymous":
                                r = !0;
                                break;
                            case "":
                                break;
                            default:
                                k.warn("unknown modifier: " + e)
                        }
                    }), z.fromObject({
                        name: t[1].trim(),
                        anonymous: r,
                        inputs: L(t[2], !0),
                        type: "event"
                    })
                }
                static isEventFragment(e) {
                    return e && e._isFragment && "event" === e.type
                }
            }

            function $(e, t) {
                t.gas = null;
                let r = e.split("@");
                return 1 !== r.length ? (r.length > 2 && k.throwArgumentError("invalid human-readable ABI signature", "value", e), r[1].match(/^[0-9]+$/) || k.throwArgumentError("invalid human-readable ABI signature gas", "value", e), t.gas = i.O$.from(r[1]), r[0]) : e
            }

            function H(e, t) {
                t.constant = !1, t.payable = !1, t.stateMutability = "nonpayable", e.split(" ").forEach(e => {
                    switch (e.trim()) {
                        case "constant":
                            t.constant = !0;
                            break;
                        case "payable":
                            t.payable = !0, t.stateMutability = "payable";
                            break;
                        case "nonpayable":
                            t.payable = !1, t.stateMutability = "nonpayable";
                            break;
                        case "pure":
                            t.constant = !0, t.stateMutability = "pure";
                            break;
                        case "view":
                            t.constant = !0, t.stateMutability = "view";
                            break;
                        case "external":
                        case "public":
                        case "":
                            break;
                        default:
                            console.log("unknown modifier: " + e)
                    }
                })
            }

            function G(e) {
                let t = {
                    constant: !1,
                    payable: !0,
                    stateMutability: "payable"
                };
                return null != e.stateMutability ? (t.stateMutability = e.stateMutability, t.constant = "view" === t.stateMutability || "pure" === t.stateMutability, null != e.constant && !!e.constant !== t.constant && k.throwArgumentError("cannot have constant function with mutability " + t.stateMutability, "value", e), t.payable = "payable" === t.stateMutability, null != e.payable && !!e.payable !== t.payable && k.throwArgumentError("cannot have payable function with mutability " + t.stateMutability, "value", e)) : null != e.payable ? (t.payable = !!e.payable, null != e.constant || t.payable || "constructor" === e.type || k.throwArgumentError("unable to determine stateMutability", "value", e), t.constant = !!e.constant, t.constant ? t.stateMutability = "view" : t.stateMutability = t.payable ? "payable" : "nonpayable", t.payable && t.constant && k.throwArgumentError("cannot have constant payable function", "value", e)) : null != e.constant ? (t.constant = !!e.constant, t.payable = !t.constant, t.stateMutability = t.constant ? "view" : "payable") : "constructor" !== e.type && k.throwArgumentError("unable to determine stateMutability", "value", e), t
            }
            class W extends q {
                format(e) {
                    if (e || (e = j.sighash), j[e] || k.throwArgumentError("invalid format type", "format", e), e === j.json) return JSON.stringify({
                        type: "constructor",
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    e === j.sighash && k.throwError("cannot format a constructor for sighash", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "format(sighash)"
                    });
                    let t = "constructor(" + this.inputs.map(t => t.format(e)).join(e === j.full ? ", " : ",") + ") ";
                    return this.stateMutability && "nonpayable" !== this.stateMutability && (t += this.stateMutability + " "), t.trim()
                }
                static from(e) {
                    return "string" == typeof e ? W.fromString(e) : W.fromObject(e)
                }
                static fromObject(e) {
                    if (W.isConstructorFragment(e)) return e;
                    "constructor" !== e.type && k.throwArgumentError("invalid constructor object", "value", e);
                    let t = G(e);
                    return t.constant && k.throwArgumentError("constructor cannot be constant", "value", e), new W(M, {
                        name: null,
                        type: e.type,
                        inputs: e.inputs ? e.inputs.map(U.fromObject) : [],
                        payable: t.payable,
                        stateMutability: t.stateMutability,
                        gas: e.gas ? i.O$.from(e.gas) : null
                    })
                }
                static fromString(e) {
                    let t = {
                            type: "constructor"
                        },
                        r = (e = $(e, t)).match(X);
                    return r && "constructor" === r[1].trim() || k.throwArgumentError("invalid constructor string", "value", e), t.inputs = L(r[2].trim(), !1), H(r[3].trim(), t), W.fromObject(t)
                }
                static isConstructorFragment(e) {
                    return e && e._isFragment && "constructor" === e.type
                }
            }
            class K extends W {
                format(e) {
                    if (e || (e = j.sighash), j[e] || k.throwArgumentError("invalid format type", "format", e), e === j.json) return JSON.stringify({
                        type: "function",
                        name: this.name,
                        constant: this.constant,
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e))),
                        outputs: this.outputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = "";
                    return e !== j.sighash && (t += "function "), t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === j.full ? ", " : ",") + ") ", e !== j.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (t += this.stateMutability + " ") : this.constant && (t += "view "), this.outputs && this.outputs.length && (t += "returns (" + this.outputs.map(t => t.format(e)).join(", ") + ") "), null != this.gas && (t += "@" + this.gas.toString() + " ")), t.trim()
                }
                static from(e) {
                    return "string" == typeof e ? K.fromString(e) : K.fromObject(e)
                }
                static fromObject(e) {
                    if (K.isFunctionFragment(e)) return e;
                    "function" !== e.type && k.throwArgumentError("invalid function object", "value", e);
                    let t = G(e);
                    return new K(M, {
                        type: e.type,
                        name: Z(e.name),
                        constant: t.constant,
                        inputs: e.inputs ? e.inputs.map(U.fromObject) : [],
                        outputs: e.outputs ? e.outputs.map(U.fromObject) : [],
                        payable: t.payable,
                        stateMutability: t.stateMutability,
                        gas: e.gas ? i.O$.from(e.gas) : null
                    })
                }
                static fromString(e) {
                    let t = {
                            type: "function"
                        },
                        r = (e = $(e, t)).split(" returns ");
                    r.length > 2 && k.throwArgumentError("invalid function string", "value", e);
                    let n = r[0].match(X);
                    if (n || k.throwArgumentError("invalid function signature", "value", e), t.name = n[1].trim(), t.name && Z(t.name), t.inputs = L(n[2], !1), H(n[3].trim(), t), r.length > 1) {
                        let n = r[1].match(X);
                        ("" != n[1].trim() || "" != n[3].trim()) && k.throwArgumentError("unexpected tokens", "value", e), t.outputs = L(n[2], !1)
                    } else t.outputs = [];
                    return K.fromObject(t)
                }
                static isFunctionFragment(e) {
                    return e && e._isFragment && "function" === e.type
                }
            }

            function Y(e) {
                let t = e.format();
                return ("Error(string)" === t || "Panic(uint256)" === t) && k.throwArgumentError(`cannot specify user defined ${t} error`, "fragment", e), e
            }
            class V extends q {
                format(e) {
                    if (e || (e = j.sighash), j[e] || k.throwArgumentError("invalid format type", "format", e), e === j.json) return JSON.stringify({
                        type: "error",
                        name: this.name,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = "";
                    return e !== j.sighash && (t += "error "), (t += this.name + "(" + this.inputs.map(t => t.format(e)).join(e === j.full ? ", " : ",") + ") ").trim()
                }
                static from(e) {
                    return "string" == typeof e ? V.fromString(e) : V.fromObject(e)
                }
                static fromObject(e) {
                    return V.isErrorFragment(e) ? e : ("error" !== e.type && k.throwArgumentError("invalid error object", "value", e), Y(new V(M, {
                        type: e.type,
                        name: Z(e.name),
                        inputs: e.inputs ? e.inputs.map(U.fromObject) : []
                    })))
                }
                static fromString(e) {
                    let t = {
                            type: "error"
                        },
                        r = e.match(X);
                    return r || k.throwArgumentError("invalid error signature", "value", e), t.name = r[1].trim(), t.name && Z(t.name), t.inputs = L(r[2], !1), Y(V.fromObject(t))
                }
                static isErrorFragment(e) {
                    return e && e._isFragment && "error" === e.type
                }
            }

            function Q(e) {
                return e.match(/^uint($|[^1-9])/) ? e = "uint256" + e.substring(4) : e.match(/^int($|[^1-9])/) && (e = "int256" + e.substring(3)), e
            }
            let J = RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");

            function Z(e) {
                return e && e.match(J) || k.throwArgumentError(`invalid identifier "${e}"`, "value", e), e
            }
            let X = RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"),
                ee = new a.Yd(s),
                et = new RegExp(/^bytes([0-9]*)$/),
                er = new RegExp(/^(u?int)([0-9]*)$/);
            class en {
                constructor(e) {
                    (0, o.zG)(this, "coerceFunc", e || null)
                }
                _getCoder(e) {
                    switch (e.baseType) {
                        case "address":
                            return new m(e.name);
                        case "bool":
                            return new E(e.name);
                        case "string":
                            return new C(e.name);
                        case "bytes":
                            return new P(e.name);
                        case "array":
                            return new w(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
                        case "tuple":
                            return new S((e.components || []).map(e => this._getCoder(e)), e.name);
                        case "":
                            return new O(e.name)
                    }
                    let t = e.type.match(er);
                    if (t) {
                        let r = parseInt(t[2] || "256");
                        return (0 === r || r > 256 || r % 8 != 0) && ee.throwArgumentError("invalid " + t[1] + " bit length", "param", e), new I(r / 8, "int" === t[1], e.name)
                    }
                    if (t = e.type.match(et)) {
                        let r = parseInt(t[1]);
                        return (0 === r || r > 32) && ee.throwArgumentError("invalid bytes length", "param", e), new x(r, e.name)
                    }
                    return ee.throwArgumentError("invalid type", "type", e.type)
                }
                _getWordSize() {
                    return 32
                }
                _getReader(e, t) {
                    return new d(e, this._getWordSize(), this.coerceFunc, t)
                }
                _getWriter() {
                    return new l(this._getWordSize())
                }
                getDefaultValue(e) {
                    return new S(e.map(e => this._getCoder(U.from(e))), "_").defaultValue()
                }
                encode(e, t) {
                    e.length !== t.length && ee.throwError("types/values length mismatch", a.Yd.errors.INVALID_ARGUMENT, {
                        count: {
                            types: e.length,
                            values: t.length
                        },
                        value: {
                            types: e,
                            values: t
                        }
                    });
                    let r = new S(e.map(e => this._getCoder(U.from(e))), "_"),
                        n = this._getWriter();
                    return r.encode(n, t), n.data
                }
                decode(e, t, r) {
                    return new S(e.map(e => this._getCoder(U.from(e))), "_").decode(this._getReader((0, n.lE)(t), r))
                }
            }
            let ei = new en,
                eo = new a.Yd(s);
            class ea extends o.dk {}
            class es extends o.dk {}
            class eu extends o.dk {}
            class ec extends o.dk {
                static isIndexed(e) {
                    return !!(e && e._isIndexed)
                }
            }
            let el = {
                "0x08c379a0": {
                    signature: "Error(string)",
                    name: "Error",
                    inputs: ["string"],
                    reason: !0
                },
                "0x4e487b71": {
                    signature: "Panic(uint256)",
                    name: "Panic",
                    inputs: ["uint256"]
                }
            };

            function ed(e, t) {
                let r = Error(`deferred error during ABI decoding triggered accessing ${e}`);
                return r.error = t, r
            }
            class ef {
                constructor(e) {
                    let t = [];
                    t = "string" == typeof e ? JSON.parse(e) : e, (0, o.zG)(this, "fragments", t.map(e => q.from(e)).filter(e => null != e)), (0, o.zG)(this, "_abiCoder", (0, o.tu)(new.target, "getAbiCoder")()), (0, o.zG)(this, "functions", {}), (0, o.zG)(this, "errors", {}), (0, o.zG)(this, "events", {}), (0, o.zG)(this, "structs", {}), this.fragments.forEach(e => {
                        let t = null;
                        switch (e.type) {
                            case "constructor":
                                if (this.deploy) {
                                    eo.warn("duplicate definition - constructor");
                                    return
                                }(0, o.zG)(this, "deploy", e);
                                return;
                            case "function":
                                t = this.functions;
                                break;
                            case "event":
                                t = this.events;
                                break;
                            case "error":
                                t = this.errors;
                                break;
                            default:
                                return
                        }
                        let r = e.format();
                        if (t[r]) {
                            eo.warn("duplicate definition - " + r);
                            return
                        }
                        t[r] = e
                    }), this.deploy || (0, o.zG)(this, "deploy", W.from({
                        payable: !1,
                        type: "constructor"
                    })), (0, o.zG)(this, "_isInterface", !0)
                }
                format(e) {
                    e || (e = j.full), e === j.sighash && eo.throwArgumentError("interface does not support formatting sighash", "format", e);
                    let t = this.fragments.map(t => t.format(e));
                    return e === j.json ? JSON.stringify(t.map(e => JSON.parse(e))) : t
                }
                static getAbiCoder() {
                    return ei
                }
                static getAddress(e) {
                    return (0, f.Kn)(e)
                }
                static getSighash(e) {
                    return (0, n.p3)((0, h.id)(e.format()), 0, 4)
                }
                static getEventTopic(e) {
                    return (0, h.id)(e.format())
                }
                getFunction(e) {
                    if ((0, n.A7)(e)) {
                        for (let t in this.functions)
                            if (e === this.getSighash(t)) return this.functions[t];
                        eo.throwArgumentError("no matching function", "sighash", e)
                    }
                    if (-1 === e.indexOf("(")) {
                        let t = e.trim(),
                            r = Object.keys(this.functions).filter(e => e.split("(")[0] === t);
                        return 0 === r.length ? eo.throwArgumentError("no matching function", "name", t) : r.length > 1 && eo.throwArgumentError("multiple matching functions", "name", t), this.functions[r[0]]
                    }
                    let t = this.functions[K.fromString(e).format()];
                    return t || eo.throwArgumentError("no matching function", "signature", e), t
                }
                getEvent(e) {
                    if ((0, n.A7)(e)) {
                        let t = e.toLowerCase();
                        for (let e in this.events)
                            if (t === this.getEventTopic(e)) return this.events[e];
                        eo.throwArgumentError("no matching event", "topichash", t)
                    }
                    if (-1 === e.indexOf("(")) {
                        let t = e.trim(),
                            r = Object.keys(this.events).filter(e => e.split("(")[0] === t);
                        return 0 === r.length ? eo.throwArgumentError("no matching event", "name", t) : r.length > 1 && eo.throwArgumentError("multiple matching events", "name", t), this.events[r[0]]
                    }
                    let t = this.events[z.fromString(e).format()];
                    return t || eo.throwArgumentError("no matching event", "signature", e), t
                }
                getError(e) {
                    if ((0, n.A7)(e)) {
                        let t = (0, o.tu)(this.constructor, "getSighash");
                        for (let r in this.errors)
                            if (e === t(this.errors[r])) return this.errors[r];
                        eo.throwArgumentError("no matching error", "sighash", e)
                    }
                    if (-1 === e.indexOf("(")) {
                        let t = e.trim(),
                            r = Object.keys(this.errors).filter(e => e.split("(")[0] === t);
                        return 0 === r.length ? eo.throwArgumentError("no matching error", "name", t) : r.length > 1 && eo.throwArgumentError("multiple matching errors", "name", t), this.errors[r[0]]
                    }
                    let t = this.errors[K.fromString(e).format()];
                    return t || eo.throwArgumentError("no matching error", "signature", e), t
                }
                getSighash(e) {
                    if ("string" == typeof e) try {
                        e = this.getFunction(e)
                    } catch (t) {
                        try {
                            e = this.getError(e)
                        } catch (e) {
                            throw t
                        }
                    }
                    return (0, o.tu)(this.constructor, "getSighash")(e)
                }
                getEventTopic(e) {
                    return "string" == typeof e && (e = this.getEvent(e)), (0, o.tu)(this.constructor, "getEventTopic")(e)
                }
                _decodeParams(e, t) {
                    return this._abiCoder.decode(e, t)
                }
                _encodeParams(e, t) {
                    return this._abiCoder.encode(e, t)
                }
                encodeDeploy(e) {
                    return this._encodeParams(this.deploy.inputs, e || [])
                }
                decodeErrorResult(e, t) {
                    "string" == typeof e && (e = this.getError(e));
                    let r = (0, n.lE)(t);
                    return (0, n.Dv)(r.slice(0, 4)) !== this.getSighash(e) && eo.throwArgumentError(`data signature does not match error ${e.name}.`, "data", (0, n.Dv)(r)), this._decodeParams(e.inputs, r.slice(4))
                }
                encodeErrorResult(e, t) {
                    return "string" == typeof e && (e = this.getError(e)), (0, n.Dv)((0, n.zo)([this.getSighash(e), this._encodeParams(e.inputs, t || [])]))
                }
                decodeFunctionData(e, t) {
                    "string" == typeof e && (e = this.getFunction(e));
                    let r = (0, n.lE)(t);
                    return (0, n.Dv)(r.slice(0, 4)) !== this.getSighash(e) && eo.throwArgumentError(`data signature does not match function ${e.name}.`, "data", (0, n.Dv)(r)), this._decodeParams(e.inputs, r.slice(4))
                }
                encodeFunctionData(e, t) {
                    return "string" == typeof e && (e = this.getFunction(e)), (0, n.Dv)((0, n.zo)([this.getSighash(e), this._encodeParams(e.inputs, t || [])]))
                }
                decodeFunctionResult(e, t) {
                    "string" == typeof e && (e = this.getFunction(e));
                    let r = (0, n.lE)(t),
                        i = null,
                        o = "",
                        s = null,
                        u = null,
                        c = null;
                    switch (r.length % this._abiCoder._getWordSize()) {
                        case 0:
                            try {
                                return this._abiCoder.decode(e.outputs, r)
                            } catch (e) {}
                            break;
                        case 4:
                            {
                                let e = (0, n.Dv)(r.slice(0, 4)),
                                    t = el[e];
                                if (t) s = this._abiCoder.decode(t.inputs, r.slice(4)),
                                u = t.name,
                                c = t.signature,
                                t.reason && (i = s[0]),
                                "Error" === u ? o = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(s[0])}` : "Panic" === u && (o = `; VM Exception while processing transaction: reverted with panic code ${s[0]}`);
                                else try {
                                    let t = this.getError(e);
                                    s = this._abiCoder.decode(t.inputs, r.slice(4)), u = t.name, c = t.format()
                                } catch (e) {}
                            }
                    }
                    return eo.throwError("call revert exception" + o, a.Yd.errors.CALL_EXCEPTION, {
                        method: e.format(),
                        data: (0, n.Dv)(t),
                        errorArgs: s,
                        errorName: u,
                        errorSignature: c,
                        reason: i
                    })
                }
                encodeFunctionResult(e, t) {
                    return "string" == typeof e && (e = this.getFunction(e)), (0, n.Dv)(this._abiCoder.encode(e.outputs, t || []))
                }
                encodeFilterTopics(e, t) {
                    "string" == typeof e && (e = this.getEvent(e)), t.length > e.inputs.length && eo.throwError("too many arguments for " + e.format(), a.Yd.errors.UNEXPECTED_ARGUMENT, {
                        argument: "values",
                        value: t
                    });
                    let r = [];
                    e.anonymous || r.push(this.getEventTopic(e));
                    let o = (e, t) => "string" === e.type ? (0, h.id)(t) : "bytes" === e.type ? (0, p.w)((0, n.Dv)(t)) : ("bool" === e.type && "boolean" == typeof t && (t = t ? "0x01" : "0x00"), e.type.match(/^u?int/) && (t = i.O$.from(t).toHexString()), "address" === e.type && this._abiCoder.encode(["address"], [t]), (0, n.$m)((0, n.Dv)(t), 32));
                    for (t.forEach((t, n) => {
                            let i = e.inputs[n];
                            if (!i.indexed) {
                                null != t && eo.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + i.name, t);
                                return
                            }
                            null == t ? r.push(null) : "array" === i.baseType || "tuple" === i.baseType ? eo.throwArgumentError("filtering with tuples or arrays not supported", "contract." + i.name, t) : Array.isArray(t) ? r.push(t.map(e => o(i, e))) : r.push(o(i, t))
                        }); r.length && null === r[r.length - 1];) r.pop();
                    return r
                }
                encodeEventLog(e, t) {
                    "string" == typeof e && (e = this.getEvent(e));
                    let r = [],
                        n = [],
                        i = [];
                    return e.anonymous || r.push(this.getEventTopic(e)), t.length !== e.inputs.length && eo.throwArgumentError("event arguments/values mismatch", "values", t), e.inputs.forEach((e, o) => {
                        let a = t[o];
                        if (e.indexed) {
                            if ("string" === e.type) r.push((0, h.id)(a));
                            else if ("bytes" === e.type) r.push((0, p.w)(a));
                            else if ("tuple" === e.baseType || "array" === e.baseType) throw Error("not implemented");
                            else r.push(this._abiCoder.encode([e.type], [a]))
                        } else n.push(e), i.push(a)
                    }), {
                        data: this._abiCoder.encode(n, i),
                        topics: r
                    }
                }
                decodeEventLog(e, t, r) {
                    if ("string" == typeof e && (e = this.getEvent(e)), null != r && !e.anonymous) {
                        let t = this.getEventTopic(e);
                        (0, n.A7)(r[0], 32) && r[0].toLowerCase() === t || eo.throwError("fragment/topic mismatch", a.Yd.errors.INVALID_ARGUMENT, {
                            argument: "topics[0]",
                            expected: t,
                            value: r[0]
                        }), r = r.slice(1)
                    }
                    let i = [],
                        o = [],
                        s = [];
                    e.inputs.forEach((e, t) => {
                        e.indexed ? "string" === e.type || "bytes" === e.type || "tuple" === e.baseType || "array" === e.baseType ? (i.push(U.fromObject({
                            type: "bytes32",
                            name: e.name
                        })), s.push(!0)) : (i.push(e), s.push(!1)) : (o.push(e), s.push(!1))
                    });
                    let u = null != r ? this._abiCoder.decode(i, (0, n.zo)(r)) : null,
                        c = this._abiCoder.decode(o, t, !0),
                        l = [],
                        d = 0,
                        f = 0;
                    e.inputs.forEach((e, t) => {
                        if (e.indexed) {
                            if (null == u) l[t] = new ec({
                                _isIndexed: !0,
                                hash: null
                            });
                            else if (s[t]) l[t] = new ec({
                                _isIndexed: !0,
                                hash: u[f++]
                            });
                            else try {
                                l[t] = u[f++]
                            } catch (e) {
                                l[t] = e
                            }
                        } else try {
                            l[t] = c[d++]
                        } catch (e) {
                            l[t] = e
                        }
                        if (e.name && null == l[e.name]) {
                            let r = l[t];
                            r instanceof Error ? Object.defineProperty(l, e.name, {
                                enumerable: !0,
                                get: () => {
                                    throw ed(`property ${JSON.stringify(e.name)}`, r)
                                }
                            }) : l[e.name] = r
                        }
                    });
                    for (let e = 0; e < l.length; e++) {
                        let t = l[e];
                        t instanceof Error && Object.defineProperty(l, e, {
                            enumerable: !0,
                            get: () => {
                                throw ed(`index ${e}`, t)
                            }
                        })
                    }
                    return Object.freeze(l)
                }
                parseTransaction(e) {
                    let t = this.getFunction(e.data.substring(0, 10).toLowerCase());
                    return t ? new es({
                        args: this._abiCoder.decode(t.inputs, "0x" + e.data.substring(10)),
                        functionFragment: t,
                        name: t.name,
                        signature: t.format(),
                        sighash: this.getSighash(t),
                        value: i.O$.from(e.value || "0")
                    }) : null
                }
                parseLog(e) {
                    let t = this.getEvent(e.topics[0]);
                    return !t || t.anonymous ? null : new ea({
                        eventFragment: t,
                        name: t.name,
                        signature: t.format(),
                        topic: this.getEventTopic(t),
                        args: this.decodeEventLog(t, e.data, e.topics)
                    })
                }
                parseError(e) {
                    let t = (0, n.Dv)(e),
                        r = this.getError(t.substring(0, 10).toLowerCase());
                    return r ? new eu({
                        args: this._abiCoder.decode(r.inputs, "0x" + t.substring(10)),
                        errorFragment: r,
                        name: r.name,
                        signature: r.format(),
                        sighash: this.getSighash(r)
                    }) : null
                }
                static isInterface(e) {
                    return !!(e && e._isInterface)
                }
            }
            var eh = r(59035),
                ep = r(37637),
                em = r(2149),
                eg = function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function u(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(a, s)
                        }
                        u((n = n.apply(e, t || [])).next())
                    })
                };
            let eb = new a.Yd("contracts/5.7.0");

            function ey(e, t) {
                return eg(this, void 0, void 0, function*() {
                    let r = yield t;
                    "string" != typeof r && eb.throwArgumentError("invalid address or ENS name", "name", r);
                    try {
                        return (0, f.Kn)(r)
                    } catch (e) {}
                    e || eb.throwError("a provider or signer is needed to resolve ENS names", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName"
                    });
                    let n = yield e.resolveName(r);
                    return null == n && eb.throwArgumentError("resolver or addr is not configured for ENS name", "name", r), n
                })
            }

            function ev(e, t, r) {
                return eg(this, void 0, void 0, function*() {
                    let s = {};
                    r.length === t.inputs.length + 1 && "object" == typeof r[r.length - 1] && (s = (0, o.DC)(r.pop())), eb.checkArgumentCount(r.length, t.inputs.length, "passed to contract"), e.signer ? s.from ? s.from = (0, o.mE)({
                        override: ey(e.signer, s.from),
                        signer: e.signer.getAddress()
                    }).then(e => eg(this, void 0, void 0, function*() {
                        return (0, f.Kn)(e.signer) !== e.override && eb.throwError("Contract with a Signer cannot override from", a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.from"
                        }), e.override
                    })) : s.from = e.signer.getAddress() : s.from && (s.from = ey(e.provider, s.from));
                    let u = yield(0, o.mE)({
                        args: function e(t, r, n) {
                            return eg(this, void 0, void 0, function*() {
                                return Array.isArray(n) ? yield Promise.all(n.map((n, i) => e(t, Array.isArray(r) ? r[i] : r[n.name], n))): "address" === n.type ? yield ey(t, r): "tuple" === n.type ? yield e(t, r, n.components): "array" === n.baseType ? Array.isArray(r) ? yield Promise.all(r.map(r => e(t, r, n.arrayChildren))): Promise.reject(eb.makeError("invalid value for array", a.Yd.errors.INVALID_ARGUMENT, {
                                    argument: "value",
                                    value: r
                                })): r
                            })
                        }(e.signer || e.provider, r, t.inputs),
                        address: e.resolvedAddress,
                        overrides: (0, o.mE)(s) || {}
                    }), c = e.interface.encodeFunctionData(t, u.args), l = {
                        data: c,
                        to: u.address
                    }, d = u.overrides;
                    if (null != d.nonce && (l.nonce = i.O$.from(d.nonce).toNumber()), null != d.gasLimit && (l.gasLimit = i.O$.from(d.gasLimit)), null != d.gasPrice && (l.gasPrice = i.O$.from(d.gasPrice)), null != d.maxFeePerGas && (l.maxFeePerGas = i.O$.from(d.maxFeePerGas)), null != d.maxPriorityFeePerGas && (l.maxPriorityFeePerGas = i.O$.from(d.maxPriorityFeePerGas)), null != d.from && (l.from = d.from), null != d.type && (l.type = d.type), null != d.accessList && (l.accessList = (0, em.z7)(d.accessList)), null == l.gasLimit && null != t.gas) {
                        let e = 21e3,
                            r = (0, n.lE)(c);
                        for (let t = 0; t < r.length; t++) e += 4, r[t] && (e += 64);
                        l.gasLimit = i.O$.from(t.gas).add(e)
                    }
                    if (d.value) {
                        let e = i.O$.from(d.value);
                        e.isZero() || t.payable || eb.throwError("non-payable method cannot override value", a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.value",
                            value: s.value
                        }), l.value = e
                    }
                    d.customData && (l.customData = (0, o.DC)(d.customData)), d.ccipReadEnabled && (l.ccipReadEnabled = !!d.ccipReadEnabled), delete s.nonce, delete s.gasLimit, delete s.gasPrice, delete s.from, delete s.value, delete s.type, delete s.accessList, delete s.maxFeePerGas, delete s.maxPriorityFeePerGas, delete s.customData, delete s.ccipReadEnabled;
                    let h = Object.keys(s).filter(e => null != s[e]);
                    return h.length && eb.throwError(`cannot override ${h.map(e=>JSON.stringify(e)).join(",")}`, a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides",
                        overrides: h
                    }), l
                })
            }

            function ew(e, t, r) {
                let n = e.signer || e.provider;
                return function(...i) {
                    return eg(this, void 0, void 0, function*() {
                        let s;
                        if (i.length === t.inputs.length + 1 && "object" == typeof i[i.length - 1]) {
                            let e = (0, o.DC)(i.pop());
                            null != e.blockTag && (s = yield e.blockTag), delete e.blockTag, i.push(e)
                        }
                        null != e.deployTransaction && (yield e._deployed(s));
                        let u = yield ev(e, t, i), c = yield n.call(u, s);
                        try {
                            let n = e.interface.decodeFunctionResult(t, c);
                            return r && 1 === t.outputs.length && (n = n[0]), n
                        } catch (t) {
                            throw t.code === a.Yd.errors.CALL_EXCEPTION && (t.address = e.address, t.args = i, t.transaction = u), t
                        }
                    })
                }
            }

            function eE(e, t, r) {
                return t.constant ? ew(e, t, r) : function(...r) {
                    return eg(this, void 0, void 0, function*() {
                        e.signer || eb.throwError("sending a transaction requires a signer", a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "sendTransaction"
                        }), null != e.deployTransaction && (yield e._deployed());
                        let n = yield ev(e, t, r), i = yield e.signer.sendTransaction(n);
                        return function(e, t) {
                            let r = t.wait.bind(t);
                            t.wait = t => r(t).then(t => (t.events = t.logs.map(r => {
                                let n = (0, o.p$)(r),
                                    i = null;
                                try {
                                    i = e.interface.parseLog(r)
                                } catch (e) {}
                                return i && (n.args = i.args, n.decode = (t, r) => e.interface.decodeEventLog(i.eventFragment, t, r), n.event = i.name, n.eventSignature = i.signature), n.removeListener = () => e.provider, n.getBlock = () => e.provider.getBlock(t.blockHash), n.getTransaction = () => e.provider.getTransaction(t.transactionHash), n.getTransactionReceipt = () => Promise.resolve(t), n
                            }), t))
                        }(e, i), i
                    })
                }
            }

            function eA(e) {
                return e.address && (null == e.topics || 0 === e.topics.length) ? "*" : (e.address || "*") + "@" + (e.topics ? e.topics.map(e => Array.isArray(e) ? e.join("|") : e).join(":") : "")
            }
            class eP {
                constructor(e, t) {
                    (0, o.zG)(this, "tag", e), (0, o.zG)(this, "filter", t), this._listeners = []
                }
                addListener(e, t) {
                    this._listeners.push({
                        listener: e,
                        once: t
                    })
                }
                removeListener(e) {
                    let t = !1;
                    this._listeners = this._listeners.filter(r => !!t || r.listener !== e || (t = !0, !1))
                }
                removeAllListeners() {
                    this._listeners = []
                }
                listeners() {
                    return this._listeners.map(e => e.listener)
                }
                listenerCount() {
                    return this._listeners.length
                }
                run(e) {
                    let t = this.listenerCount();
                    return this._listeners = this._listeners.filter(t => {
                        let r = e.slice();
                        return setTimeout(() => {
                            t.listener.apply(this, r)
                        }, 0), !t.once
                    }), t
                }
                prepareEvent(e) {}
                getEmit(e) {
                    return [e]
                }
            }
            class ex extends eP {
                constructor() {
                    super("error", null)
                }
            }
            class eO extends eP {
                constructor(e, t, r, n) {
                    let i = {
                            address: e
                        },
                        a = t.getEventTopic(r);
                    n ? (a !== n[0] && eb.throwArgumentError("topic mismatch", "topics", n), i.topics = n.slice()) : i.topics = [a], super(eA(i), i), (0, o.zG)(this, "address", e), (0, o.zG)(this, "interface", t), (0, o.zG)(this, "fragment", r)
                }
                prepareEvent(e) {
                    super.prepareEvent(e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = (e, t) => this.interface.decodeEventLog(this.fragment, e, t);
                    try {
                        e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics)
                    } catch (t) {
                        e.args = null, e.decodeError = t
                    }
                }
                getEmit(e) {
                    let t = function(e) {
                        let t = [],
                            r = function(e, n) {
                                if (Array.isArray(n))
                                    for (let i in n) {
                                        let o = e.slice();
                                        o.push(i);
                                        try {
                                            r(o, n[i])
                                        } catch (e) {
                                            t.push({
                                                path: o,
                                                error: e
                                            })
                                        }
                                    }
                            };
                        return r([], e), t
                    }(e.args);
                    if (t.length) throw t[0].error;
                    let r = (e.args || []).slice();
                    return r.push(e), r
                }
            }
            class e_ extends eP {
                constructor(e, t) {
                    super("*", {
                        address: e
                    }), (0, o.zG)(this, "address", e), (0, o.zG)(this, "interface", t)
                }
                prepareEvent(e) {
                    super.prepareEvent(e);
                    try {
                        let t = this.interface.parseLog(e);
                        e.event = t.name, e.eventSignature = t.signature, e.decode = (e, r) => this.interface.decodeEventLog(t.eventFragment, e, r), e.args = t.args
                    } catch (e) {}
                }
            }
            class eI {
                constructor(e, t, r) {
                    (0, o.zG)(this, "interface", (0, o.tu)(new.target, "getInterface")(t)), null == r ? ((0, o.zG)(this, "provider", null), (0, o.zG)(this, "signer", null)) : ep.E.isSigner(r) ? ((0, o.zG)(this, "provider", r.provider || null), (0, o.zG)(this, "signer", r)) : eh.zt.isProvider(r) ? ((0, o.zG)(this, "provider", r), (0, o.zG)(this, "signer", null)) : eb.throwArgumentError("invalid signer or provider", "signerOrProvider", r), (0, o.zG)(this, "callStatic", {}), (0, o.zG)(this, "estimateGas", {}), (0, o.zG)(this, "functions", {}), (0, o.zG)(this, "populateTransaction", {}), (0, o.zG)(this, "filters", {}); {
                        let e = {};
                        Object.keys(this.interface.events).forEach(t => {
                            let r = this.interface.events[t];
                            (0, o.zG)(this.filters, t, (...e) => ({
                                address: this.address,
                                topics: this.interface.encodeFilterTopics(r, e)
                            })), e[r.name] || (e[r.name] = []), e[r.name].push(t)
                        }), Object.keys(e).forEach(t => {
                            let r = e[t];
                            1 === r.length ? (0, o.zG)(this.filters, t, this.filters[r[0]]) : eb.warn(`Duplicate definition of ${t} (${r.join(", ")})`)
                        })
                    }
                    if ((0, o.zG)(this, "_runningEvents", {}), (0, o.zG)(this, "_wrappedEmits", {}), null == e && eb.throwArgumentError("invalid contract address or ENS name", "addressOrName", e), (0, o.zG)(this, "address", e), this.provider)(0, o.zG)(this, "resolvedAddress", ey(this.provider, e));
                    else try {
                        (0, o.zG)(this, "resolvedAddress", Promise.resolve((0, f.Kn)(e)))
                    } catch (e) {
                        eb.throwError("provider is required to use ENS name as contract address", a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new Contract"
                        })
                    }
                    this.resolvedAddress.catch(e => {});
                    let n = {},
                        i = {};
                    Object.keys(this.interface.functions).forEach(e => {
                        let t = this.interface.functions[e];
                        if (i[e]) {
                            eb.warn(`Duplicate ABI entry for ${JSON.stringify(e)}`);
                            return
                        }
                        i[e] = !0; {
                            let r = t.name;
                            n[`%${r}`] || (n[`%${r}`] = []), n[`%${r}`].push(e)
                        }
                        if (null == this[e] && (0, o.zG)(this, e, eE(this, t, !0)), null == this.functions[e] && (0, o.zG)(this.functions, e, eE(this, t, !1)), null == this.callStatic[e] && (0, o.zG)(this.callStatic, e, ew(this, t, !0)), null == this.populateTransaction[e]) {
                            var r;
                            (0, o.zG)(this.populateTransaction, e, (r = this, function(...e) {
                                return ev(r, t, e)
                            }))
                        }
                        null == this.estimateGas[e] && (0, o.zG)(this.estimateGas, e, function(e, t) {
                            let r = e.signer || e.provider;
                            return function(...n) {
                                return eg(this, void 0, void 0, function*() {
                                    r || eb.throwError("estimate require a provider or signer", a.Yd.errors.UNSUPPORTED_OPERATION, {
                                        operation: "estimateGas"
                                    });
                                    let i = yield ev(e, t, n);
                                    return yield r.estimateGas(i)
                                })
                            }
                        }(this, t))
                    }), Object.keys(n).forEach(e => {
                        let t = n[e];
                        if (t.length > 1) return;
                        e = e.substring(1);
                        let r = t[0];
                        try {
                            null == this[e] && (0, o.zG)(this, e, this[r])
                        } catch (e) {}
                        null == this.functions[e] && (0, o.zG)(this.functions, e, this.functions[r]), null == this.callStatic[e] && (0, o.zG)(this.callStatic, e, this.callStatic[r]), null == this.populateTransaction[e] && (0, o.zG)(this.populateTransaction, e, this.populateTransaction[r]), null == this.estimateGas[e] && (0, o.zG)(this.estimateGas, e, this.estimateGas[r])
                    })
                }
                static getContractAddress(e) {
                    return (0, f.CR)(e)
                }
                static getInterface(e) {
                    return ef.isInterface(e) ? e : new ef(e)
                }
                deployed() {
                    return this._deployed()
                }
                _deployed(e) {
                    return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, e).then(e => ("0x" === e && eb.throwError("contract not deployed", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        contractAddress: this.address,
                        operation: "getDeployed"
                    }), this))), this._deployedPromise
                }
                fallback(e) {
                    this.signer || eb.throwError("sending a transactions require a signer", a.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "sendTransaction(fallback)"
                    });
                    let t = (0, o.DC)(e || {});
                    return ["from", "to"].forEach(function(e) {
                        null != t[e] && eb.throwError("cannot override " + e, a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: e
                        })
                    }), t.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(t))
                }
                connect(e) {
                    "string" == typeof e && (e = new ep.b(e, this.provider));
                    let t = new this.constructor(this.address, this.interface, e);
                    return this.deployTransaction && (0, o.zG)(t, "deployTransaction", this.deployTransaction), t
                }
                attach(e) {
                    return new this.constructor(e, this.interface, this.signer || this.provider)
                }
                static isIndexed(e) {
                    return ec.isIndexed(e)
                }
                _normalizeRunningEvent(e) {
                    return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e
                }
                _getRunningEvent(e) {
                    if ("string" == typeof e) {
                        if ("error" === e) return this._normalizeRunningEvent(new ex);
                        if ("event" === e) return this._normalizeRunningEvent(new eP("event", null));
                        if ("*" === e) return this._normalizeRunningEvent(new e_(this.address, this.interface));
                        let t = this.interface.getEvent(e);
                        return this._normalizeRunningEvent(new eO(this.address, this.interface, t))
                    }
                    if (e.topics && e.topics.length > 0) {
                        try {
                            let t = e.topics[0];
                            if ("string" != typeof t) throw Error("invalid topic");
                            let r = this.interface.getEvent(t);
                            return this._normalizeRunningEvent(new eO(this.address, this.interface, r, e.topics))
                        } catch (e) {}
                        let t = {
                            address: this.address,
                            topics: e.topics
                        };
                        return this._normalizeRunningEvent(new eP(eA(t), t))
                    }
                    return this._normalizeRunningEvent(new e_(this.address, this.interface))
                }
                _checkRunningEvents(e) {
                    if (0 === e.listenerCount()) {
                        delete this._runningEvents[e.tag];
                        let t = this._wrappedEmits[e.tag];
                        t && e.filter && (this.provider.off(e.filter, t), delete this._wrappedEmits[e.tag])
                    }
                }
                _wrapEvent(e, t, r) {
                    let n = (0, o.p$)(t);
                    return n.removeListener = () => {
                        r && (e.removeListener(r), this._checkRunningEvents(e))
                    }, n.getBlock = () => this.provider.getBlock(t.blockHash), n.getTransaction = () => this.provider.getTransaction(t.transactionHash), n.getTransactionReceipt = () => this.provider.getTransactionReceipt(t.transactionHash), e.prepareEvent(n), n
                }
                _addEventListener(e, t, r) {
                    if (this.provider || eb.throwError("events require a provider or a signer with a provider", a.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "once"
                        }), e.addListener(t, r), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
                        let r = r => {
                            let n = this._wrapEvent(e, r, t);
                            if (null == n.decodeError) try {
                                let t = e.getEmit(n);
                                this.emit(e.filter, ...t)
                            } catch (e) {
                                n.decodeError = e.error
                            }
                            null != e.filter && this.emit("event", n), null != n.decodeError && this.emit("error", n.decodeError, n)
                        };
                        this._wrappedEmits[e.tag] = r, null != e.filter && this.provider.on(e.filter, r)
                    }
                }
                queryFilter(e, t, r) {
                    let i = this._getRunningEvent(e),
                        a = (0, o.DC)(i.filter);
                    return "string" == typeof t && (0, n.A7)(t, 32) ? (null != r && eb.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r), a.blockHash = t) : (a.fromBlock = null != t ? t : 0, a.toBlock = null != r ? r : "latest"), this.provider.getLogs(a).then(e => e.map(e => this._wrapEvent(i, e, null)))
                }
                on(e, t) {
                    return this._addEventListener(this._getRunningEvent(e), t, !1), this
                }
                once(e, t) {
                    return this._addEventListener(this._getRunningEvent(e), t, !0), this
                }
                emit(e, ...t) {
                    if (!this.provider) return !1;
                    let r = this._getRunningEvent(e),
                        n = r.run(t) > 0;
                    return this._checkRunningEvents(r), n
                }
                listenerCount(e) {
                    return this.provider ? null == e ? Object.keys(this._runningEvents).reduce((e, t) => e + this._runningEvents[t].listenerCount(), 0) : this._getRunningEvent(e).listenerCount() : 0
                }
                listeners(e) {
                    if (!this.provider) return [];
                    if (null == e) {
                        let e = [];
                        for (let t in this._runningEvents) this._runningEvents[t].listeners().forEach(t => {
                            e.push(t)
                        });
                        return e
                    }
                    return this._getRunningEvent(e).listeners()
                }
                removeAllListeners(e) {
                    if (!this.provider) return this;
                    if (null == e) {
                        for (let e in this._runningEvents) {
                            let t = this._runningEvents[e];
                            t.removeAllListeners(), this._checkRunningEvents(t)
                        }
                        return this
                    }
                    let t = this._getRunningEvent(e);
                    return t.removeAllListeners(), this._checkRunningEvents(t), this
                }
                off(e, t) {
                    if (!this.provider) return this;
                    let r = this._getRunningEvent(e);
                    return r.removeListener(t), this._checkRunningEvents(r), this
                }
                removeListener(e, t) {
                    return this.off(e, t)
                }
            }
            class eT extends eI {}
        },
        99554: function(e, t, r) {
            "use strict";
            r.d(t, {
                id: function() {
                    return o
                }
            });
            var n = r(43481),
                i = r(28257);

            function o(e) {
                return (0, n.w)((0, i.Y0)(e))
            }
        },
        43481: function(e, t, r) {
            "use strict";
            r.d(t, {
                w: function() {
                    return a
                }
            });
            var n = r(83524),
                i = r.n(n),
                o = r(9784);

            function a(e) {
                return "0x" + i().keccak_256((0, o.lE)(e))
            }
        },
        13421: function(e, t, r) {
            "use strict";
            var n, i, o, a;
            r.d(t, {
                Yd: function() {
                    return p
                }
            });
            let s = !1,
                u = !1,
                c = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                l = c.default,
                d = null,
                f = function() {
                    try {
                        let e = [];
                        if (["NFD", "NFC", "NFKD", "NFKC"].forEach(t => {
                                try {
                                    if ("test" !== "test".normalize(t)) throw Error("bad normalize")
                                } catch (r) {
                                    e.push(t)
                                }
                            }), e.length) throw Error("missing " + e.join(", "));
                        if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw Error("broken implementation")
                    } catch (e) {
                        return e.message
                    }
                    return null
                }();
            (o = n || (n = {})).DEBUG = "DEBUG", o.INFO = "INFO", o.WARNING = "WARNING", o.ERROR = "ERROR", o.OFF = "OFF", (a = i || (i = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR", a.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", a.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", a.NETWORK_ERROR = "NETWORK_ERROR", a.SERVER_ERROR = "SERVER_ERROR", a.TIMEOUT = "TIMEOUT", a.BUFFER_OVERRUN = "BUFFER_OVERRUN", a.NUMERIC_FAULT = "NUMERIC_FAULT", a.MISSING_NEW = "MISSING_NEW", a.INVALID_ARGUMENT = "INVALID_ARGUMENT", a.MISSING_ARGUMENT = "MISSING_ARGUMENT", a.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", a.CALL_EXCEPTION = "CALL_EXCEPTION", a.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", a.NONCE_EXPIRED = "NONCE_EXPIRED", a.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", a.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", a.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", a.ACTION_REJECTED = "ACTION_REJECTED";
            let h = "0123456789abcdef";
            class p {
                constructor(e) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: e,
                        writable: !1
                    })
                }
                _log(e, t) {
                    let r = e.toLowerCase();
                    null == c[r] && this.throwArgumentError("invalid log level name", "logLevel", e), l > c[r] || console.log.apply(console, t)
                }
                debug(...e) {
                    this._log(p.levels.DEBUG, e)
                }
                info(...e) {
                    this._log(p.levels.INFO, e)
                }
                warn(...e) {
                    this._log(p.levels.WARNING, e)
                }
                makeError(e, t, r) {
                    if (u) return this.makeError("censored error", t, {});
                    t || (t = p.errors.UNKNOWN_ERROR), r || (r = {});
                    let n = [];
                    Object.keys(r).forEach(e => {
                        let t = r[e];
                        try {
                            if (t instanceof Uint8Array) {
                                let r = "";
                                for (let e = 0; e < t.length; e++) r += h[t[e] >> 4] + h[15 & t[e]];
                                n.push(e + "=Uint8Array(0x" + r + ")")
                            } else n.push(e + "=" + JSON.stringify(t))
                        } catch (t) {
                            n.push(e + "=" + JSON.stringify(r[e].toString()))
                        }
                    }), n.push(`code=${t}`), n.push(`version=${this.version}`);
                    let o = e,
                        a = "";
                    switch (t) {
                        case i.NUMERIC_FAULT:
                            {
                                a = "NUMERIC_FAULT";
                                let t = e;
                                switch (t) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        a += "-" + t;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        a += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        a += "-unbound-result"
                                }
                                break
                            }
                        case i.CALL_EXCEPTION:
                        case i.INSUFFICIENT_FUNDS:
                        case i.MISSING_NEW:
                        case i.NONCE_EXPIRED:
                        case i.REPLACEMENT_UNDERPRICED:
                        case i.TRANSACTION_REPLACED:
                        case i.UNPREDICTABLE_GAS_LIMIT:
                            a = t
                    }
                    a && (e += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), n.length && (e += " (" + n.join(", ") + ")");
                    let s = Error(e);
                    return s.reason = o, s.code = t, Object.keys(r).forEach(function(e) {
                        s[e] = r[e]
                    }), s
                }
                throwError(e, t, r) {
                    throw this.makeError(e, t, r)
                }
                throwArgumentError(e, t, r) {
                    return this.throwError(e, p.errors.INVALID_ARGUMENT, {
                        argument: t,
                        value: r
                    })
                }
                assert(e, t, r, n) {
                    e || this.throwError(t, r, n)
                }
                assertArgument(e, t, r, n) {
                    e || this.throwArgumentError(t, r, n)
                }
                checkNormalize(e) {
                    null == e && (e = "platform missing String.prototype.normalize"), f && this.throwError("platform missing String.prototype.normalize", p.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: f
                    })
                }
                checkSafeUint53(e, t) {
                    "number" == typeof e && (null == t && (t = "value not safe"), (e < 0 || e >= 9007199254740991) && this.throwError(t, p.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: e
                    }), e % 1 && this.throwError(t, p.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: e
                    }))
                }
                checkArgumentCount(e, t, r) {
                    r = r ? ": " + r : "", e < t && this.throwError("missing argument" + r, p.errors.MISSING_ARGUMENT, {
                        count: e,
                        expectedCount: t
                    }), e > t && this.throwError("too many arguments" + r, p.errors.UNEXPECTED_ARGUMENT, {
                        count: e,
                        expectedCount: t
                    })
                }
                checkNew(e, t) {
                    (e === Object || null == e) && this.throwError("missing new", p.errors.MISSING_NEW, {
                        name: t.name
                    })
                }
                checkAbstract(e, t) {
                    e === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", p.errors.UNSUPPORTED_OPERATION, {
                        name: e.name,
                        operation: "new"
                    }) : (e === Object || null == e) && this.throwError("missing new", p.errors.MISSING_NEW, {
                        name: t.name
                    })
                }
                static globalLogger() {
                    return d || (d = new p("logger/5.7.0")), d
                }
                static setCensorship(e, t) {
                    if (!e && t && this.globalLogger().throwError("cannot permanently disable censorship", p.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), s) {
                        if (!e) return;
                        this.globalLogger().throwError("error censorship permanent", p.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    u = !!e, s = !!t
                }
                static setLogLevel(e) {
                    let t = c[e.toLowerCase()];
                    if (null == t) {
                        p.globalLogger().warn("invalid log level - " + e);
                        return
                    }
                    l = t
                }
                static from(e) {
                    return new p(e)
                }
            }
            p.errors = i, p.levels = n
        },
        36173: function(e, t, r) {
            "use strict";
            r.d(t, {
                dk: function() {
                    return d
                },
                uj: function() {
                    return s
                },
                p$: function() {
                    return l
                },
                zG: function() {
                    return i
                },
                tu: function() {
                    return o
                },
                mE: function() {
                    return a
                },
                DC: function() {
                    return u
                }
            });
            let n = new(r(13421)).Yd("properties/5.7.0");

            function i(e, t, r) {
                Object.defineProperty(e, t, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }

            function o(e, t) {
                for (let r = 0; r < 32; r++) {
                    if (e[t]) return e[t];
                    if (!e.prototype || "object" != typeof e.prototype) break;
                    e = Object.getPrototypeOf(e.prototype).constructor
                }
                return null
            }

            function a(e) {
                var t, r, n, i;
                return t = this, r = void 0, n = void 0, i = function*() {
                    let t = Object.keys(e).map(t => Promise.resolve(e[t]).then(e => ({
                        key: t,
                        value: e
                    })));
                    return (yield Promise.all(t)).reduce((e, t) => (e[t.key] = t.value, e), {})
                }, new(n || (n = Promise))(function(e, o) {
                    function a(e) {
                        try {
                            u(i.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(i.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        var r;
                        t.done ? e(t.value) : ((r = t.value) instanceof n ? r : new n(function(e) {
                            e(r)
                        })).then(a, s)
                    }
                    u((i = i.apply(t, r || [])).next())
                })
            }

            function s(e, t) {
                e && "object" == typeof e || n.throwArgumentError("invalid object", "object", e), Object.keys(e).forEach(r => {
                    t[r] || n.throwArgumentError("invalid object key - " + r, "transaction:" + r, e)
                })
            }

            function u(e) {
                let t = {};
                for (let r in e) t[r] = e[r];
                return t
            }
            let c = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function l(e) {
                return function(e) {
                    if (function e(t) {
                            if (null == t || c[typeof t]) return !0;
                            if (Array.isArray(t) || "object" == typeof t) {
                                if (!Object.isFrozen(t)) return !1;
                                let r = Object.keys(t);
                                for (let n = 0; n < r.length; n++) {
                                    let i = null;
                                    try {
                                        i = t[r[n]]
                                    } catch (e) {
                                        continue
                                    }
                                    if (!e(i)) return !1
                                }
                                return !0
                            }
                            return n.throwArgumentError(`Cannot deepCopy ${typeof t}`, "object", t)
                        }(e)) return e;
                    if (Array.isArray(e)) return Object.freeze(e.map(e => l(e)));
                    if ("object" == typeof e) {
                        let t = {};
                        for (let r in e) {
                            let n = e[r];
                            void 0 !== n && i(t, r, l(n))
                        }
                        return t
                    }
                    return n.throwArgumentError(`Cannot deepCopy ${typeof e}`, "object", e)
                }(e)
            }
            class d {
                constructor(e) {
                    for (let t in e) this[t] = l(e[t])
                }
            }
        },
        87807: function(e, t, r) {
            "use strict";
            let n, i;
            r.d(t, {
                Q: function() {
                    return e3
                }
            });
            var o, a = r(36173),
                s = r(13421);
            let u = "providers/5.7.2";
            var c = r(37637),
                l = r(93310),
                d = r(9784),
                f = r(89005),
                h = r(43481);
            let p = "hash/5.7.0";
            var m = r(99554);
            let g = new s.Yd(p),
                b = new Uint8Array(32);
            b.fill(0);
            let y = l.O$.from(-1),
                v = l.O$.from(0),
                w = l.O$.from(1),
                E = l.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                A = (0, d.$m)(w.toHexString(), 32),
                P = (0, d.$m)(v.toHexString(), 32),
                x = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                O = ["name", "version", "chainId", "verifyingContract", "salt"];

            function _(e) {
                return function(t) {
                    return "string" != typeof t && g.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`, `domain.${e}`, t), t
                }
            }
            let I = {
                name: _("name"),
                version: _("version"),
                chainId: function(e) {
                    try {
                        return l.O$.from(e).toString()
                    } catch (e) {}
                    return g.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
                },
                verifyingContract: function(e) {
                    try {
                        return (0, f.Kn)(e).toLowerCase()
                    } catch (e) {}
                    return g.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    try {
                        let t = (0, d.lE)(e);
                        if (32 !== t.length) throw Error("bad length");
                        return (0, d.Dv)(t)
                    } catch (e) {}
                    return g.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
                }
            };

            function T(e) {
                {
                    let t = e.match(/^(u?)int(\d*)$/);
                    if (t) {
                        let r = "" === t[1],
                            n = parseInt(t[2] || "256");
                        (n % 8 != 0 || n > 256 || t[2] && t[2] !== String(n)) && g.throwArgumentError("invalid numeric width", "type", e);
                        let i = E.mask(r ? n - 1 : n),
                            o = r ? i.add(w).mul(y) : v;
                        return function(t) {
                            let r = l.O$.from(t);
                            return (r.lt(o) || r.gt(i)) && g.throwArgumentError(`value out-of-bounds for ${e}`, "value", t), (0, d.$m)(r.toTwos(256).toHexString(), 32)
                        }
                    }
                } {
                    let t = e.match(/^bytes(\d+)$/);
                    if (t) {
                        let r = parseInt(t[1]);
                        return (0 === r || r > 32 || t[1] !== String(r)) && g.throwArgumentError("invalid bytes width", "type", e),
                            function(t) {
                                return (0, d.lE)(t).length !== r && g.throwArgumentError(`invalid length for ${e}`, "value", t),
                                    function(e) {
                                        let t = (0, d.lE)(e),
                                            r = t.length % 32;
                                        return r ? (0, d.xs)([t, b.slice(r)]) : (0, d.Dv)(t)
                                    }(t)
                            }
                    }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return (0, d.$m)((0, f.Kn)(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? A : P
                        };
                    case "bytes":
                        return function(e) {
                            return (0, h.w)(e)
                        };
                    case "string":
                        return function(e) {
                            return (0, m.id)(e)
                        }
                }
                return null
            }

            function C(e, t) {
                return `${e}(${t.map(({name:e,type:t})=>t+" "+e).join(",")})`
            }
            class S {
                constructor(e) {
                    (0, a.zG)(this, "types", Object.freeze((0, a.p$)(e))), (0, a.zG)(this, "_encoderCache", {}), (0, a.zG)(this, "_types", {});
                    let t = {},
                        r = {},
                        n = {};
                    for (let i in Object.keys(e).forEach(e => {
                            t[e] = {}, r[e] = [], n[e] = {}
                        }), e) {
                        let n = {};
                        e[i].forEach(o => {
                            n[o.name] && g.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(i)}`, "types", e), n[o.name] = !0;
                            let a = o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            a === i && g.throwArgumentError(`circular type reference to ${JSON.stringify(a)}`, "types", e), T(a) || (r[a] || g.throwArgumentError(`unknown type ${JSON.stringify(a)}`, "types", e), r[a].push(i), t[i][a] = !0)
                        })
                    }
                    let i = Object.keys(r).filter(e => 0 === r[e].length);
                    for (let o in 0 === i.length ? g.throwArgumentError("missing primary type", "types", e) : i.length > 1 && g.throwArgumentError(`ambiguous primary types or unused types: ${i.map(e=>JSON.stringify(e)).join(", ")}`, "types", e), (0, a.zG)(this, "primaryType", i[0]), ! function i(o, a) {
                            a[o] && g.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`, "types", e), a[o] = !0, Object.keys(t[o]).forEach(e => {
                                r[e] && (i(e, a), Object.keys(a).forEach(t => {
                                    n[t][e] = !0
                                }))
                            }), delete a[o]
                        }(this.primaryType, {}), n) {
                        let t = Object.keys(n[o]);
                        t.sort(), this._types[o] = C(o, e[o]) + t.map(t => C(t, e[t])).join("")
                    }
                }
                getEncoder(e) {
                    let t = this._encoderCache[e];
                    return t || (t = this._encoderCache[e] = this._getEncoder(e)), t
                }
                _getEncoder(e) {
                    {
                        let t = T(e);
                        if (t) return t
                    }
                    let t = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (t) {
                        let e = t[1],
                            r = this.getEncoder(e),
                            n = parseInt(t[3]);
                        return t => {
                            n >= 0 && t.length !== n && g.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t);
                            let i = t.map(r);
                            return this._types[e] && (i = i.map(h.w)), (0, h.w)((0, d.xs)(i))
                        }
                    }
                    let r = this.types[e];
                    if (r) {
                        let t = (0, m.id)(this._types[e]);
                        return e => {
                            let n = r.map(({
                                name: t,
                                type: r
                            }) => {
                                let n = this.getEncoder(r)(e[t]);
                                return this._types[r] ? (0, h.w)(n) : n
                            });
                            return n.unshift(t), (0, d.xs)(n)
                        }
                    }
                    return g.throwArgumentError(`unknown type: ${e}`, "type", e)
                }
                encodeType(e) {
                    let t = this._types[e];
                    return t || g.throwArgumentError(`unknown type: ${JSON.stringify(e)}`, "name", e), t
                }
                encodeData(e, t) {
                    return this.getEncoder(e)(t)
                }
                hashStruct(e, t) {
                    return (0, h.w)(this.encodeData(e, t))
                }
                encode(e) {
                    return this.encodeData(this.primaryType, e)
                }
                hash(e) {
                    return this.hashStruct(this.primaryType, e)
                }
                _visit(e, t, r) {
                    if (T(e)) return r(e, t);
                    let n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (n) {
                        let e = n[1],
                            i = parseInt(n[3]);
                        return i >= 0 && t.length !== i && g.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t), t.map(t => this._visit(e, t, r))
                    }
                    let i = this.types[e];
                    return i ? i.reduce((e, {
                        name: n,
                        type: i
                    }) => (e[n] = this._visit(i, t[n], r), e), {}) : g.throwArgumentError(`unknown type: ${e}`, "type", e)
                }
                visit(e, t) {
                    return this._visit(this.primaryType, e, t)
                }
                static from(e) {
                    return new S(e)
                }
                static getPrimaryType(e) {
                    return S.from(e).primaryType
                }
                static hashStruct(e, t, r) {
                    return S.from(t).hashStruct(e, r)
                }
                static hashDomain(e) {
                    let t = [];
                    for (let r in e) {
                        let n = x[r];
                        n || g.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), t.push({
                            name: r,
                            type: n
                        })
                    }
                    return t.sort((e, t) => O.indexOf(e.name) - O.indexOf(t.name)), S.hashStruct("EIP712Domain", {
                        EIP712Domain: t
                    }, e)
                }
                static encode(e, t, r) {
                    return (0, d.xs)(["0x1901", S.hashDomain(e), S.from(t).hash(r)])
                }
                static hash(e, t, r) {
                    return (0, h.w)(S.encode(e, t, r))
                }
                static resolveNames(e, t, r, n) {
                    var i, o, s, u;
                    return i = this, o = void 0, s = void 0, u = function*() {
                        e = (0, a.DC)(e);
                        let i = {};
                        e.verifyingContract && !(0, d.A7)(e.verifyingContract, 20) && (i[e.verifyingContract] = "0x");
                        let o = S.from(t);
                        for (let e in o.visit(r, (e, t) => ("address" !== e || (0, d.A7)(t, 20) || (i[t] = "0x"), t)), i) i[e] = yield n(e);
                        return e.verifyingContract && i[e.verifyingContract] && (e.verifyingContract = i[e.verifyingContract]), r = o.visit(r, (e, t) => "address" === e && i[t] ? i[t] : t), {
                            domain: e,
                            value: r
                        }
                    }, new(s || (s = Promise))(function(e, t) {
                        function r(e) {
                            try {
                                a(u.next(e))
                            } catch (e) {
                                t(e)
                            }
                        }

                        function n(e) {
                            try {
                                a(u.throw(e))
                            } catch (e) {
                                t(e)
                            }
                        }

                        function a(t) {
                            var i;
                            t.done ? e(t.value) : ((i = t.value) instanceof s ? i : new s(function(e) {
                                e(i)
                            })).then(r, n)
                        }
                        a((u = u.apply(i, o || [])).next())
                    })
                }
                static getPayload(e, t, r) {
                    S.hashDomain(e);
                    let n = {},
                        i = [];
                    O.forEach(t => {
                        let r = e[t];
                        null != r && (n[t] = I[t](r), i.push({
                            name: t,
                            type: x[t]
                        }))
                    });
                    let o = S.from(t),
                        s = (0, a.DC)(t);
                    return s.EIP712Domain ? g.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : s.EIP712Domain = i, o.encode(r), {
                        types: s,
                        domain: n,
                        primaryType: o.primaryType,
                        message: o.visit(r, (e, t) => {
                            if (e.match(/^bytes(\d*)/)) return (0, d.Dv)((0, d.lE)(t));
                            if (e.match(/^u?int/)) return l.O$.from(t).toString();
                            switch (e) {
                                case "address":
                                    return t.toLowerCase();
                                case "bool":
                                    return !!t;
                                case "string":
                                    return "string" != typeof t && g.throwArgumentError("invalid string", "value", t), t
                            }
                            return g.throwArgumentError("unsupported type", "type", e)
                        })
                    }
                }
            }
            var k = r(28257),
                M = r(2149);

            function B(e) {
                e = atob(e);
                let t = [];
                for (let r = 0; r < e.length; r++) t.push(e.charCodeAt(r));
                return (0, d.lE)(t)
            }

            function N(e) {
                e = (0, d.lE)(e);
                let t = "";
                for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
                return btoa(t)
            }
            let R = new s.Yd("web/5.7.1");

            function D(e) {
                return new Promise(t => {
                    setTimeout(t, e)
                })
            }

            function j(e, t) {
                if (null == e) return null;
                if ("string" == typeof e) return e;
                if ((0, d.Zq)(e)) {
                    if (t && ("text" === t.split("/")[0] || "application/json" === t.split(";")[0].trim())) try {
                        return (0, k.ZN)(e)
                    } catch (e) {}
                    return (0, d.Dv)(e)
                }
                return e
            }

            function F(e, t, r) {
                let n = null;
                if (null != t) {
                    n = (0, k.Y0)(t);
                    let r = "string" == typeof e ? {
                        url: e
                    } : (0, a.DC)(e);
                    r.headers ? 0 !== Object.keys(r.headers).filter(e => "content-type" === e.toLowerCase()).length || (r.headers = (0, a.DC)(r.headers), r.headers["content-type"] = "application/json") : r.headers = {
                        "content-type": "application/json"
                    }, e = r
                }
                return function(e, t, r) {
                    let n;
                    let i = "object" == typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
                    R.assertArgument(i > 0 && i % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", i);
                    let o = "object" == typeof e ? e.throttleCallback : null,
                        u = "object" == typeof e && "number" == typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
                    R.assertArgument(u > 0 && u % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", u);
                    let c = "object" == typeof e && !!e.errorPassThrough,
                        l = {},
                        f = null,
                        h = {
                            method: "GET"
                        },
                        p = !1,
                        m = 12e4;
                    if ("string" == typeof e) f = e;
                    else if ("object" == typeof e) {
                        if ((null == e || null == e.url) && R.throwArgumentError("missing URL", "connection.url", e), f = e.url, "number" == typeof e.timeout && e.timeout > 0 && (m = e.timeout), e.headers)
                            for (let t in e.headers) l[t.toLowerCase()] = {
                                key: t,
                                value: String(e.headers[t])
                            }, ["if-none-match", "if-modified-since"].indexOf(t.toLowerCase()) >= 0 && (p = !0);
                        if (h.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                            "https:" !== f.substring(0, 6) && !0 !== e.allowInsecureAuthentication && R.throwError("basic authentication requires a secure https url", s.Yd.errors.INVALID_ARGUMENT, {
                                argument: "url",
                                url: f,
                                user: e.user,
                                password: "[REDACTED]"
                            });
                            let t = e.user + ":" + e.password;
                            l.authorization = {
                                key: "Authorization",
                                value: "Basic " + N((0, k.Y0)(t))
                            }
                        }
                        null != e.skipFetchSetup && (h.skipFetchSetup = !!e.skipFetchSetup), null != e.fetchOptions && (h.fetchOptions = (0, a.DC)(e.fetchOptions))
                    }
                    let g = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                        b = f ? f.match(g) : null;
                    if (b) try {
                        var y;
                        let e = {
                                statusCode: 200,
                                statusMessage: "OK",
                                headers: {
                                    "content-type": b[1] || "text/plain"
                                },
                                body: b[2] ? B(b[3]) : (y = b[3], (0, k.Y0)(y.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) => String.fromCharCode(parseInt(t, 16)))))
                            },
                            t = e.body;
                        return r && (t = r(e.body, e)), Promise.resolve(t)
                    } catch (e) {
                        R.throwError("processing response error", s.Yd.errors.SERVER_ERROR, {
                            body: j(b[1], b[2]),
                            error: e,
                            requestBody: null,
                            requestMethod: "GET",
                            url: f
                        })
                    }
                    t && (h.method = "POST", h.body = t, null == l["content-type"] && (l["content-type"] = {
                        key: "Content-Type",
                        value: "application/octet-stream"
                    }), null == l["content-length"] && (l["content-length"] = {
                        key: "Content-Length",
                        value: String(t.length)
                    }));
                    let v = {};
                    Object.keys(l).forEach(e => {
                        let t = l[e];
                        v[t.key] = t.value
                    }), h.headers = v;
                    let w = (n = null, {
                            promise: new Promise(function(e, t) {
                                m && (n = setTimeout(() => {
                                    null != n && (n = null, t(R.makeError("timeout", s.Yd.errors.TIMEOUT, {
                                        requestBody: j(h.body, v["content-type"]),
                                        requestMethod: h.method,
                                        timeout: m,
                                        url: f
                                    })))
                                }, m))
                            }),
                            cancel: function() {
                                null != n && (clearTimeout(n), n = null)
                            }
                        }),
                        E = function() {
                            var e, t, n, a;
                            return e = this, t = void 0, n = void 0, a = function*() {
                                for (let e = 0; e < i; e++) {
                                    let t = null;
                                    try {
                                        if (t = yield function(e, t) {
                                                var r, n, i, o;
                                                return r = this, n = void 0, i = void 0, o = function*() {
                                                    null == t && (t = {});
                                                    let r = {
                                                        method: t.method || "GET",
                                                        headers: t.headers || {},
                                                        body: t.body || void 0
                                                    };
                                                    if (!0 !== t.skipFetchSetup && (r.mode = "cors", r.cache = "no-cache", r.credentials = "same-origin", r.redirect = "follow", r.referrer = "client"), null != t.fetchOptions) {
                                                        let e = t.fetchOptions;
                                                        e.mode && (r.mode = e.mode), e.cache && (r.cache = e.cache), e.credentials && (r.credentials = e.credentials), e.redirect && (r.redirect = e.redirect), e.referrer && (r.referrer = e.referrer)
                                                    }
                                                    let n = yield fetch(e, r), i = yield n.arrayBuffer(), o = {};
                                                    return n.headers.forEach ? n.headers.forEach((e, t) => {
                                                        o[t.toLowerCase()] = e
                                                    }) : n.headers.keys().forEach(e => {
                                                        o[e.toLowerCase()] = n.headers.get(e)
                                                    }), {
                                                        headers: o,
                                                        statusCode: n.status,
                                                        statusMessage: n.statusText,
                                                        body: (0, d.lE)(new Uint8Array(i))
                                                    }
                                                }, new(i || (i = Promise))(function(e, t) {
                                                    function a(e) {
                                                        try {
                                                            u(o.next(e))
                                                        } catch (e) {
                                                            t(e)
                                                        }
                                                    }

                                                    function s(e) {
                                                        try {
                                                            u(o.throw(e))
                                                        } catch (e) {
                                                            t(e)
                                                        }
                                                    }

                                                    function u(t) {
                                                        var r;
                                                        t.done ? e(t.value) : ((r = t.value) instanceof i ? r : new i(function(e) {
                                                            e(r)
                                                        })).then(a, s)
                                                    }
                                                    u((o = o.apply(r, n || [])).next())
                                                })
                                            }(f, h), e < i) {
                                            if (301 === t.statusCode || 302 === t.statusCode) {
                                                let e = t.headers.location || "";
                                                if ("GET" === h.method && e.match(/^https:/)) {
                                                    f = t.headers.location;
                                                    continue
                                                }
                                            } else if (429 === t.statusCode) {
                                                let r = !0;
                                                if (o && (r = yield o(e, f)), r) {
                                                    let r = 0,
                                                        n = t.headers["retry-after"];
                                                    r = "string" == typeof n && n.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n) : u * parseInt(String(Math.random() * Math.pow(2, e))), yield D(r);
                                                    continue
                                                }
                                            }
                                        }
                                    } catch (e) {
                                        null == (t = e.response) && (w.cancel(), R.throwError("missing response", s.Yd.errors.SERVER_ERROR, {
                                            requestBody: j(h.body, v["content-type"]),
                                            requestMethod: h.method,
                                            serverError: e,
                                            url: f
                                        }))
                                    }
                                    let n = t.body;
                                    if (p && 304 === t.statusCode ? n = null : !c && (t.statusCode < 200 || t.statusCode >= 300) && (w.cancel(), R.throwError("bad response", s.Yd.errors.SERVER_ERROR, {
                                            status: t.statusCode,
                                            headers: t.headers,
                                            body: j(n, t.headers ? t.headers["content-type"] : null),
                                            requestBody: j(h.body, v["content-type"]),
                                            requestMethod: h.method,
                                            url: f
                                        })), r) try {
                                        let e = yield r(n, t);
                                        return w.cancel(), e
                                    } catch (r) {
                                        if (r.throttleRetry && e < i) {
                                            let t = !0;
                                            if (o && (t = yield o(e, f)), t) {
                                                let t = u * parseInt(String(Math.random() * Math.pow(2, e)));
                                                yield D(t);
                                                continue
                                            }
                                        }
                                        w.cancel(), R.throwError("processing response error", s.Yd.errors.SERVER_ERROR, {
                                            body: j(n, t.headers ? t.headers["content-type"] : null),
                                            error: r,
                                            requestBody: j(h.body, v["content-type"]),
                                            requestMethod: h.method,
                                            url: f
                                        })
                                    }
                                    return w.cancel(), n
                                }
                                return R.throwError("failed response", s.Yd.errors.SERVER_ERROR, {
                                    requestBody: j(h.body, v["content-type"]),
                                    requestMethod: h.method,
                                    url: f
                                })
                            }, new(n || (n = Promise))(function(r, i) {
                                function o(e) {
                                    try {
                                        u(a.next(e))
                                    } catch (e) {
                                        i(e)
                                    }
                                }

                                function s(e) {
                                    try {
                                        u(a.throw(e))
                                    } catch (e) {
                                        i(e)
                                    }
                                }

                                function u(e) {
                                    var t;
                                    e.done ? r(e.value) : ((t = e.value) instanceof n ? t : new n(function(e) {
                                        e(t)
                                    })).then(o, s)
                                }
                                u((a = a.apply(e, t || [])).next())
                            })
                        }();
                    return Promise.race([w.promise, E])
                }(e, n, (e, t) => {
                    let n = null;
                    if (null != e) try {
                        n = JSON.parse((0, k.ZN)(e))
                    } catch (t) {
                        R.throwError("invalid JSON", s.Yd.errors.SERVER_ERROR, {
                            body: e,
                            error: t
                        })
                    }
                    return r && (n = r(n, t)), n
                })
            }

            function U(e, t) {
                return t || (t = {}), null == (t = (0, a.DC)(t)).floor && (t.floor = 0), null == t.ceiling && (t.ceiling = 1e4), null == t.interval && (t.interval = 250), new Promise(function(r, n) {
                    let i = null,
                        o = !1,
                        a = () => !o && (o = !0, i && clearTimeout(i), !0);
                    t.timeout && (i = setTimeout(() => {
                        a() && n(Error("timeout"))
                    }, t.timeout));
                    let s = t.retryLimit,
                        u = 0;
                    ! function i() {
                        return e().then(function(e) {
                            if (void 0 !== e) a() && r(e);
                            else if (t.oncePoll) t.oncePoll.once("poll", i);
                            else if (t.onceBlock) t.onceBlock.once("block", i);
                            else if (!o) {
                                if (++u > s) {
                                    a() && n(Error("retry limit reached"));
                                    return
                                }
                                let e = t.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                e < t.floor && (e = t.floor), e > t.ceiling && (e = t.ceiling), setTimeout(i, e)
                            }
                            return null
                        }, function(e) {
                            a() && n(e)
                        })
                    }()
                })
            }
            var L = r(59035);
            class q {
                constructor(e) {
                    (0, a.zG)(this, "alphabet", e), (0, a.zG)(this, "base", e.length), (0, a.zG)(this, "_alphabetMap", {}), (0, a.zG)(this, "_leader", e.charAt(0));
                    for (let t = 0; t < e.length; t++) this._alphabetMap[e.charAt(t)] = t
                }
                encode(e) {
                    let t = (0, d.lE)(e);
                    if (0 === t.length) return "";
                    let r = [0];
                    for (let e = 0; e < t.length; ++e) {
                        let n = t[e];
                        for (let e = 0; e < r.length; ++e) n += r[e] << 8, r[e] = n % this.base, n = n / this.base | 0;
                        for (; n > 0;) r.push(n % this.base), n = n / this.base | 0
                    }
                    let n = "";
                    for (let e = 0; 0 === t[e] && e < t.length - 1; ++e) n += this._leader;
                    for (let e = r.length - 1; e >= 0; --e) n += this.alphabet[r[e]];
                    return n
                }
                decode(e) {
                    if ("string" != typeof e) throw TypeError("Expected String");
                    let t = [];
                    if (0 === e.length) return new Uint8Array(t);
                    t.push(0);
                    for (let r = 0; r < e.length; r++) {
                        let n = this._alphabetMap[e[r]];
                        if (void 0 === n) throw Error("Non-base" + this.base + " character");
                        let i = n;
                        for (let e = 0; e < t.length; ++e) i += t[e] * this.base, t[e] = 255 & i, i >>= 8;
                        for (; i > 0;) t.push(255 & i), i >>= 8
                    }
                    for (let r = 0; e[r] === this._leader && r < e.length - 1; ++r) t.push(0);
                    return (0, d.lE)(new Uint8Array(t.reverse()))
                }
            }
            new q("abcdefghijklmnopqrstuvwxyz234567");
            let z = new q("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");

            function $(e, t) {
                null == t && (t = 1);
                let r = [],
                    n = r.forEach,
                    i = function(e, t) {
                        n.call(e, function(e) {
                            t > 0 && Array.isArray(e) ? i(e, t - 1) : r.push(e)
                        })
                    };
                return i(e, t), r
            }

            function H(e, t) {
                let r = Array(e);
                for (let n = 0, i = -1; n < e; n++) r[n] = i += 1 + t();
                return r
            }

            function G(e, t) {
                let r = H(e(), e),
                    n = e(),
                    i = H(n, e),
                    o = function(e, t) {
                        let r = Array(e);
                        for (let n = 0; n < e; n++) r[n] = 1 + t();
                        return r
                    }(n, e);
                for (let e = 0; e < n; e++)
                    for (let t = 0; t < o[e]; t++) r.push(i[e] + t);
                return t ? r.map(e => t[e]) : r
            }

            function W(e, t, r) {
                let n = Array(e).fill(void 0).map(() => []);
                for (let i = 0; i < t; i++)(function(e, t) {
                    let r = Array(e);
                    for (let i = 0, o = 0; i < e; i++) {
                        var n;
                        r[i] = o += 1 & (n = t()) ? ~n >> 1 : n >> 1
                    }
                    return r
                })(e, r).forEach((e, t) => n[t].push(e));
                return n
            }
            let K = (o = function(e) {
                    let t = 0;

                    function r() {
                        return e[t++] << 8 | e[t++]
                    }
                    let n = r(),
                        i = 1,
                        o = [0, 1];
                    for (let e = 1; e < n; e++) o.push(i += r());
                    let a = r(),
                        s = t;
                    t += a;
                    let u = 0,
                        c = 0;

                    function l() {
                        return 0 == u && (c = c << 8 | e[t++], u = 8), c >> --u & 1
                    }
                    let d = 0;
                    for (let e = 0; e < 31; e++) d = d << 1 | l();
                    let f = [],
                        h = 0,
                        p = 2147483648;
                    for (;;) {
                        let e = Math.floor(((d - h + 1) * i - 1) / p),
                            t = 0,
                            r = n;
                        for (; r - t > 1;) {
                            let n = t + r >>> 1;
                            e < o[n] ? r = n : t = n
                        }
                        if (0 == t) break;
                        f.push(t);
                        let a = h + Math.floor(p * o[t] / i),
                            s = h + Math.floor(p * o[t + 1] / i) - 1;
                        for (;
                            ((a ^ s) & 1073741824) == 0;) d = d << 1 & 2147483647 | l(), a = a << 1 & 2147483647, s = s << 1 & 2147483647 | 1;
                        for (; a & ~s & 536870912;) d = 1073741824 & d | d << 1 & 1073741823 | l(), a = a << 1 ^ 1073741824, s = (1073741824 ^ s) << 1 | 1073741825;
                        h = a, p = 1 + s - a
                    }
                    let m = n - 4;
                    return f.map(t => {
                        switch (t - m) {
                            case 3:
                                return m + 65792 + (e[s++] << 16 | e[s++] << 8 | e[s++]);
                            case 2:
                                return m + 256 + (e[s++] << 8 | e[s++]);
                            case 1:
                                return m + e[s++];
                            default:
                                return t - 1
                        }
                    })
                }(B("AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA==")), i = 0, () => o[i++]),
                Y = new Set(G(K)),
                V = new Set(G(K)),
                Q = function(e) {
                    let t = [];
                    for (;;) {
                        let r = e();
                        if (0 == r) break;
                        t.push(function(e, t) {
                            let r = 1 + t(),
                                n = t(),
                                i = function(e) {
                                    let t = [];
                                    for (;;) {
                                        let r = e();
                                        if (0 == r) break;
                                        t.push(r)
                                    }
                                    return t
                                }(t);
                            return $(W(i.length, 1 + e, t).map((e, t) => {
                                let o = e[0],
                                    a = e.slice(1);
                                return Array(i[t]).fill(void 0).map((e, t) => {
                                    let i = t * n;
                                    return [o + t * r, a.map(e => e + i)]
                                })
                            }))
                        }(r, e))
                    }
                    for (;;) {
                        let r = e() - 1;
                        if (r < 0) break;
                        t.push(W(1 + e(), 1 + r, e).map(e => [e[0], e.slice(1)]))
                    }
                    return function(e) {
                        let t = {};
                        for (let r = 0; r < e.length; r++) {
                            let n = e[r];
                            t[n[0]] = n[1]
                        }
                        return t
                    }($(t))
                }(K),
                J = (n = G(K).sort((e, t) => e - t), function e() {
                    let t = [];
                    for (;;) {
                        let r = G(K, n);
                        if (0 == r.length) break;
                        t.push({
                            set: new Set(r),
                            node: e()
                        })
                    }
                    t.sort((e, t) => t.set.size - e.set.size);
                    let r = K();
                    return {
                        branches: t,
                        valid: r % 3,
                        fe0f: !!(1 & (r = r / 3 | 0)),
                        save: 1 == (r >>= 1),
                        check: 2 == r
                    }
                }());

            function Z(e) {
                return e.filter(e => 65039 != e)
            }

            function X(e) {
                for (let t of e.split(".")) {
                    let e = (0, k.XL)(t);
                    try {
                        for (let t = e.lastIndexOf(95) - 1; t >= 0; t--)
                            if (95 !== e[t]) throw Error("underscore only allowed at start");
                        if (e.length >= 4 && e.every(e => e < 128) && 45 === e[2] && 45 === e[3]) throw Error("invalid label extension")
                    } catch (e) {
                        throw Error(`Invalid label "${t}": ${e.message}`)
                    }
                }
                return e
            }
            let ee = new s.Yd(p),
                et = new Uint8Array(32);

            function er(e) {
                if (0 === e.length) throw Error("invalid ENS name; empty component");
                return e
            }

            function en(e) {
                let t = (0, k.Y0)(X(function(e, t) {
                        let r = (0, k.XL)(e).reverse(),
                            n = [];
                        for (; r.length;) {
                            let e = function(e, t) {
                                var r;
                                let n, i;
                                let o = J,
                                    a = [],
                                    s = e.length;
                                for (; s;) {
                                    let t = e[--s];
                                    if (!(o = null === (r = o.branches.find(e => e.set.has(t))) || void 0 === r ? void 0 : r.node)) break;
                                    if (o.save) i = t;
                                    else if (o.check && t === i) break;
                                    a.push(t), o.fe0f && (a.push(65039), s > 0 && 65039 == e[s - 1] && s--), o.valid && (n = a.slice(), 2 == o.valid && n.splice(1, 1), e.length = s)
                                }
                                return n
                            }(r);
                            if (e) {
                                n.push(...t(e));
                                continue
                            }
                            let i = r.pop();
                            if (Y.has(i)) {
                                n.push(i);
                                continue
                            }
                            if (V.has(i)) continue;
                            let o = Q[i];
                            if (o) {
                                n.push(...o);
                                continue
                            }
                            throw Error(`Disallowed codepoint: 0x${i.toString(16).toUpperCase()}`)
                        }
                        return X(String.fromCodePoint(...n).normalize("NFC"))
                    }(e, Z))),
                    r = [];
                if (0 === e.length) return r;
                let n = 0;
                for (let e = 0; e < t.length; e++) 46 === t[e] && (r.push(er(t.slice(n, e))), n = e + 1);
                if (n >= t.length) throw Error("invalid ENS name; empty component");
                return r.push(er(t.slice(n))), r
            }

            function ei(e) {
                "string" != typeof e && ee.throwArgumentError("invalid ENS name; not a string", "name", e);
                let t = et,
                    r = en(e);
                for (; r.length;) t = (0, h.w)((0, d.zo)([t, (0, h.w)(r.pop())]));
                return (0, d.Dv)(t)
            }
            et.fill(0);
            let eo = new s.Yd("networks/5.7.1");

            function ea(e) {
                let t = function(t, r) {
                    null == r && (r = {});
                    let n = [];
                    if (t.InfuraProvider && "-" !== r.infura) try {
                        n.push(new t.InfuraProvider(e, r.infura))
                    } catch (e) {}
                    if (t.EtherscanProvider && "-" !== r.etherscan) try {
                        n.push(new t.EtherscanProvider(e, r.etherscan))
                    } catch (e) {}
                    if (t.AlchemyProvider && "-" !== r.alchemy) try {
                        n.push(new t.AlchemyProvider(e, r.alchemy))
                    } catch (e) {}
                    if (t.PocketProvider && "-" !== r.pocket) try {
                        let i = new t.PocketProvider(e, r.pocket);
                        i.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(i.network.name) && n.push(i)
                    } catch (e) {}
                    if (t.CloudflareProvider && "-" !== r.cloudflare) try {
                        n.push(new t.CloudflareProvider(e))
                    } catch (e) {}
                    if (t.AnkrProvider && "-" !== r.ankr) try {
                        let i = new t.AnkrProvider(e, r.ankr);
                        i.network && -1 === ["ropsten"].indexOf(i.network.name) && n.push(i)
                    } catch (e) {}
                    if (0 === n.length) return null;
                    if (t.FallbackProvider) {
                        let i = 1;
                        return null != r.quorum ? i = r.quorum : "homestead" === e && (i = 2), new t.FallbackProvider(n, i)
                    }
                    return n[0]
                };
                return t.renetwork = function(e) {
                    return ea(e)
                }, t
            }

            function es(e, t) {
                let r = function(r, n) {
                    return r.JsonRpcProvider ? new r.JsonRpcProvider(e, t) : null
                };
                return r.renetwork = function(t) {
                    return es(e, t)
                }, r
            }
            let eu = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: ea("homestead")
                },
                ec = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: ea("ropsten")
                },
                el = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: es("https://www.ethercluster.com/mordor", "classicMordor")
                },
                ed = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: eu,
                    mainnet: eu,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: ec,
                    testnet: ec,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: ea("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: ea("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: ea("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    sepolia: {
                        chainId: 11155111,
                        name: "sepolia",
                        _defaultProvider: ea("sepolia")
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: es("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: el,
                    classicTestnet: el,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: es("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic",
                        _defaultProvider: ea("matic")
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism",
                        _defaultProvider: ea("optimism")
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    "arbitrum-goerli": {
                        chainId: 421613,
                        name: "arbitrum-goerli"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };
            var ef = r(83699),
                eh = r.n(ef);

            function ep(e) {
                return "0x" + eh().sha256().update((0, d.lE)(e)).digest("hex")
            }
            new s.Yd("sha2/5.7.0");
            var em = r(1192),
                eg = r.n(em);
            let eb = new s.Yd(u);
            class ey {
                constructor() {
                    this.formats = this.getDefaultFormats()
                }
                getDefaultFormats() {
                    let e = {},
                        t = this.address.bind(this),
                        r = this.bigNumber.bind(this),
                        n = this.blockTag.bind(this),
                        i = this.data.bind(this),
                        o = this.hash.bind(this),
                        s = this.hex.bind(this),
                        u = this.number.bind(this),
                        c = this.type.bind(this);
                    return e.transaction = {
                        hash: o,
                        type: c,
                        accessList: ey.allowNull(this.accessList.bind(this), null),
                        blockHash: ey.allowNull(o, null),
                        blockNumber: ey.allowNull(u, null),
                        transactionIndex: ey.allowNull(u, null),
                        confirmations: ey.allowNull(u, null),
                        from: t,
                        gasPrice: ey.allowNull(r),
                        maxPriorityFeePerGas: ey.allowNull(r),
                        maxFeePerGas: ey.allowNull(r),
                        gasLimit: r,
                        to: ey.allowNull(t, null),
                        value: r,
                        nonce: u,
                        data: i,
                        r: ey.allowNull(this.uint256),
                        s: ey.allowNull(this.uint256),
                        v: ey.allowNull(u),
                        creates: ey.allowNull(t, null),
                        raw: ey.allowNull(i)
                    }, e.transactionRequest = {
                        from: ey.allowNull(t),
                        nonce: ey.allowNull(u),
                        gasLimit: ey.allowNull(r),
                        gasPrice: ey.allowNull(r),
                        maxPriorityFeePerGas: ey.allowNull(r),
                        maxFeePerGas: ey.allowNull(r),
                        to: ey.allowNull(t),
                        value: ey.allowNull(r),
                        data: ey.allowNull(e => this.data(e, !0)),
                        type: ey.allowNull(u),
                        accessList: ey.allowNull(this.accessList.bind(this), null)
                    }, e.receiptLog = {
                        transactionIndex: u,
                        blockNumber: u,
                        transactionHash: o,
                        address: t,
                        topics: ey.arrayOf(o),
                        data: i,
                        logIndex: u,
                        blockHash: o
                    }, e.receipt = {
                        to: ey.allowNull(this.address, null),
                        from: ey.allowNull(this.address, null),
                        contractAddress: ey.allowNull(t, null),
                        transactionIndex: u,
                        root: ey.allowNull(s),
                        gasUsed: r,
                        logsBloom: ey.allowNull(i),
                        blockHash: o,
                        transactionHash: o,
                        logs: ey.arrayOf(this.receiptLog.bind(this)),
                        blockNumber: u,
                        confirmations: ey.allowNull(u, null),
                        cumulativeGasUsed: r,
                        effectiveGasPrice: ey.allowNull(r),
                        status: ey.allowNull(u),
                        type: c
                    }, e.block = {
                        hash: ey.allowNull(o),
                        parentHash: o,
                        number: u,
                        timestamp: u,
                        nonce: ey.allowNull(s),
                        difficulty: this.difficulty.bind(this),
                        gasLimit: r,
                        gasUsed: r,
                        miner: ey.allowNull(t),
                        extraData: i,
                        transactions: ey.allowNull(ey.arrayOf(o)),
                        baseFeePerGas: ey.allowNull(r)
                    }, e.blockWithTransactions = (0, a.DC)(e.block), e.blockWithTransactions.transactions = ey.allowNull(ey.arrayOf(this.transactionResponse.bind(this))), e.filter = {
                        fromBlock: ey.allowNull(n, void 0),
                        toBlock: ey.allowNull(n, void 0),
                        blockHash: ey.allowNull(o, void 0),
                        address: ey.allowNull(t, void 0),
                        topics: ey.allowNull(this.topics.bind(this), void 0)
                    }, e.filterLog = {
                        blockNumber: ey.allowNull(u),
                        blockHash: ey.allowNull(o),
                        transactionIndex: u,
                        removed: ey.allowNull(this.boolean.bind(this)),
                        address: t,
                        data: ey.allowFalsish(i, "0x"),
                        topics: ey.arrayOf(o),
                        transactionHash: o,
                        logIndex: u
                    }, e
                }
                accessList(e) {
                    return (0, M.z7)(e || [])
                }
                number(e) {
                    return "0x" === e ? 0 : l.O$.from(e).toNumber()
                }
                type(e) {
                    return "0x" === e || null == e ? 0 : l.O$.from(e).toNumber()
                }
                bigNumber(e) {
                    return l.O$.from(e)
                }
                boolean(e) {
                    if ("boolean" == typeof e) return e;
                    if ("string" == typeof e) {
                        if ("true" === (e = e.toLowerCase())) return !0;
                        if ("false" === e) return !1
                    }
                    throw Error("invalid boolean - " + e)
                }
                hex(e, t) {
                    return "string" == typeof e && (t || "0x" === e.substring(0, 2) || (e = "0x" + e), (0, d.A7)(e)) ? e.toLowerCase() : eb.throwArgumentError("invalid hash", "value", e)
                }
                data(e, t) {
                    let r = this.hex(e, t);
                    if (r.length % 2 != 0) throw Error("invalid data; odd-length - " + e);
                    return r
                }
                address(e) {
                    return (0, f.Kn)(e)
                }
                callAddress(e) {
                    if (!(0, d.A7)(e, 32)) return null;
                    let t = (0, f.Kn)((0, d.p3)(e, 12));
                    return "0x0000000000000000000000000000000000000000" === t ? null : t
                }
                contractAddress(e) {
                    return (0, f.CR)(e)
                }
                blockTag(e) {
                    if (null == e) return "latest";
                    if ("earliest" === e) return "0x0";
                    switch (e) {
                        case "earliest":
                            return "0x0";
                        case "latest":
                        case "pending":
                        case "safe":
                        case "finalized":
                            return e
                    }
                    if ("number" == typeof e || (0, d.A7)(e)) return (0, d.$P)(e);
                    throw Error("invalid blockTag")
                }
                hash(e, t) {
                    let r = this.hex(e, t);
                    return 32 !== (0, d.E1)(r) ? eb.throwArgumentError("invalid hash", "value", e) : r
                }
                difficulty(e) {
                    if (null == e) return null;
                    let t = l.O$.from(e);
                    try {
                        return t.toNumber()
                    } catch (e) {}
                    return null
                }
                uint256(e) {
                    if (!(0, d.A7)(e)) throw Error("invalid uint256");
                    return (0, d.$m)(e, 32)
                }
                _block(e, t) {
                    null != e.author && null == e.miner && (e.miner = e.author);
                    let r = null != e._difficulty ? e._difficulty : e.difficulty,
                        n = ey.check(t, e);
                    return n._difficulty = null == r ? null : l.O$.from(r), n
                }
                block(e) {
                    return this._block(e, this.formats.block)
                }
                blockWithTransactions(e) {
                    return this._block(e, this.formats.blockWithTransactions)
                }
                transactionRequest(e) {
                    return ey.check(this.formats.transactionRequest, e)
                }
                transactionResponse(e) {
                    null != e.gas && null == e.gasLimit && (e.gasLimit = e.gas), e.to && l.O$.from(e.to).isZero() && (e.to = "0x0000000000000000000000000000000000000000"), null != e.input && null == e.data && (e.data = e.input), null == e.to && null == e.creates && (e.creates = this.contractAddress(e)), (1 === e.type || 2 === e.type) && null == e.accessList && (e.accessList = []);
                    let t = ey.check(this.formats.transaction, e);
                    if (null != e.chainId) {
                        let r = e.chainId;
                        (0, d.A7)(r) && (r = l.O$.from(r).toNumber()), t.chainId = r
                    } else {
                        let r = e.networkId;
                        null == r && null == t.v && (r = e.chainId), (0, d.A7)(r) && (r = l.O$.from(r).toNumber()), "number" != typeof r && null != t.v && ((r = (t.v - 35) / 2) < 0 && (r = 0), r = parseInt(r)), "number" != typeof r && (r = 0), t.chainId = r
                    }
                    return t.blockHash && "x" === t.blockHash.replace(/0/g, "") && (t.blockHash = null), t
                }
                transaction(e) {
                    return (0, M.Qc)(e)
                }
                receiptLog(e) {
                    return ey.check(this.formats.receiptLog, e)
                }
                receipt(e) {
                    let t = ey.check(this.formats.receipt, e);
                    if (null != t.root) {
                        if (t.root.length <= 4) {
                            let e = l.O$.from(t.root).toNumber();
                            0 === e || 1 === e ? (null != t.status && t.status !== e && eb.throwArgumentError("alt-root-status/status mismatch", "value", {
                                root: t.root,
                                status: t.status
                            }), t.status = e, delete t.root) : eb.throwArgumentError("invalid alt-root-status", "value.root", t.root)
                        } else 66 !== t.root.length && eb.throwArgumentError("invalid root hash", "value.root", t.root)
                    }
                    return null != t.status && (t.byzantium = !0), t
                }
                topics(e) {
                    return Array.isArray(e) ? e.map(e => this.topics(e)) : null != e ? this.hash(e, !0) : null
                }
                filter(e) {
                    return ey.check(this.formats.filter, e)
                }
                filterLog(e) {
                    return ey.check(this.formats.filterLog, e)
                }
                static check(e, t) {
                    let r = {};
                    for (let n in e) try {
                        let i = e[n](t[n]);
                        void 0 !== i && (r[n] = i)
                    } catch (e) {
                        throw e.checkKey = n, e.checkValue = t[n], e
                    }
                    return r
                }
                static allowNull(e, t) {
                    return function(r) {
                        return null == r ? t : e(r)
                    }
                }
                static allowFalsish(e, t) {
                    return function(r) {
                        return r ? e(r) : t
                    }
                }
                static arrayOf(e) {
                    return function(t) {
                        if (!Array.isArray(t)) throw Error("not an array");
                        let r = [];
                        return t.forEach(function(t) {
                            r.push(e(t))
                        }), r
                    }
                }
            }
            var ev = function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(a, s)
                    }
                    u((n = n.apply(e, t || [])).next())
                })
            };
            let ew = new s.Yd(u);

            function eE(e) {
                return null == e ? "null" : (32 !== (0, d.E1)(e) && ew.throwArgumentError("invalid topic", "topic", e), e.toLowerCase())
            }

            function eA(e) {
                for (e = e.slice(); e.length > 0 && null == e[e.length - 1];) e.pop();
                return e.map(e => {
                    if (!Array.isArray(e)) return eE(e); {
                        let t = {};
                        e.forEach(e => {
                            t[eE(e)] = !0
                        });
                        let r = Object.keys(t);
                        return r.sort(), r.join("|")
                    }
                }).join("&")
            }

            function eP(e) {
                if ("string" == typeof e) {
                    if (e = e.toLowerCase(), 32 === (0, d.E1)(e)) return "tx:" + e;
                    if (-1 === e.indexOf(":")) return e
                } else if (Array.isArray(e)) return "filter:*:" + eA(e);
                else if (L.Sg.isForkEvent(e)) throw ew.warn("not implemented"), Error("not implemented");
                else if (e && "object" == typeof e) return "filter:" + (e.address || "*") + ":" + eA(e.topics || []);
                throw Error("invalid event - " + e)
            }

            function ex() {
                return new Date().getTime()
            }

            function eO(e) {
                return new Promise(t => {
                    setTimeout(t, e)
                })
            }
            let e_ = ["block", "network", "pending", "poll"];
            class eI {
                constructor(e, t, r) {
                    (0, a.zG)(this, "tag", e), (0, a.zG)(this, "listener", t), (0, a.zG)(this, "once", r), this._lastBlockNumber = -2, this._inflight = !1
                }
                get event() {
                    switch (this.type) {
                        case "tx":
                            return this.hash;
                        case "filter":
                            return this.filter
                    }
                    return this.tag
                }
                get type() {
                    return this.tag.split(":")[0]
                }
                get hash() {
                    let e = this.tag.split(":");
                    return "tx" !== e[0] ? null : e[1]
                }
                get filter() {
                    var e;
                    let t = this.tag.split(":");
                    if ("filter" !== t[0]) return null;
                    let r = t[1],
                        n = "" === (e = t[2]) ? [] : e.split(/&/g).map(e => {
                            if ("" === e) return [];
                            let t = e.split("|").map(e => "null" === e ? null : e);
                            return 1 === t.length ? t[0] : t
                        }),
                        i = {};
                    return n.length > 0 && (i.topics = n), r && "*" !== r && (i.address = r), i
                }
                pollable() {
                    return this.tag.indexOf(":") >= 0 || e_.indexOf(this.tag) >= 0
                }
            }
            let eT = {
                0: {
                    symbol: "btc",
                    p2pkh: 0,
                    p2sh: 5,
                    prefix: "bc"
                },
                2: {
                    symbol: "ltc",
                    p2pkh: 48,
                    p2sh: 50,
                    prefix: "ltc"
                },
                3: {
                    symbol: "doge",
                    p2pkh: 30,
                    p2sh: 22
                },
                60: {
                    symbol: "eth",
                    ilk: "eth"
                },
                61: {
                    symbol: "etc",
                    ilk: "eth"
                },
                700: {
                    symbol: "xdai",
                    ilk: "eth"
                }
            };

            function eC(e) {
                return (0, d.$m)(l.O$.from(e).toHexString(), 32)
            }

            function eS(e) {
                return z.encode((0, d.zo)([e, (0, d.p3)(ep(ep(e)), 0, 4)]))
            }
            let ek = RegExp("^(ipfs)://(.*)$", "i"),
                eM = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), ek, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

            function eB(e, t) {
                try {
                    return (0, k.ZN)(eN(e, t))
                } catch (e) {}
                return null
            }

            function eN(e, t) {
                if ("0x" === e) return null;
                let r = l.O$.from((0, d.p3)(e, t, t + 32)).toNumber(),
                    n = l.O$.from((0, d.p3)(e, r, r + 32)).toNumber();
                return (0, d.p3)(e, r + 32, r + 32 + n)
            }

            function eR(e) {
                return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : ew.throwArgumentError("unsupported IPFS format", "link", e), `https://gateway.ipfs.io/ipfs/${e}`
            }

            function eD(e) {
                let t = (0, d.lE)(e);
                if (t.length > 32) throw Error("internal; should not happen");
                let r = new Uint8Array(32);
                return r.set(t, 32 - t.length), r
            }

            function ej(e) {
                let t = [],
                    r = 0;
                for (let n = 0; n < e.length; n++) t.push(null), r += 32;
                for (let n = 0; n < e.length; n++) {
                    let i = (0, d.lE)(e[n]);
                    t[n] = eD(r), t.push(eD(i.length)), t.push(function(e) {
                        if (e.length % 32 == 0) return e;
                        let t = new Uint8Array(32 * Math.ceil(e.length / 32));
                        return t.set(e), t
                    }(i)), r += 32 + 32 * Math.ceil(i.length / 32)
                }
                return (0, d.xs)(t)
            }
            class eF {
                constructor(e, t, r, n) {
                    (0, a.zG)(this, "provider", e), (0, a.zG)(this, "name", r), (0, a.zG)(this, "address", e.formatter.address(t)), (0, a.zG)(this, "_resolvedAddress", n)
                }
                supportsWildcard() {
                    return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                        to: this.address,
                        data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                    }).then(e => l.O$.from(e).eq(1)).catch(e => {
                        if (e.code === s.Yd.errors.CALL_EXCEPTION) return !1;
                        throw this._supportsEip2544 = null, e
                    })), this._supportsEip2544
                }
                _fetch(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        let r = {
                                to: this.address,
                                ccipReadEnabled: !0,
                                data: (0, d.xs)([e, ei(this.name), t || "0x"])
                            },
                            n = !1;
                        if (yield this.supportsWildcard()) {
                            var i;
                            n = !0, r.data = (0, d.xs)(["0x9061b923", ej([(i = this.name, (0, d.Dv)((0, d.zo)(en(i).map(e => {
                                if (e.length > 63) throw Error("invalid DNS encoded entry; length exceeds 63 bytes");
                                let t = new Uint8Array(e.length + 1);
                                return t.set(e, 1), t[0] = t.length - 1, t
                            }))) + "00"), r.data])])
                        }
                        try {
                            let e = yield this.provider.call(r);
                            return (0, d.lE)(e).length % 32 == 4 && ew.throwError("resolver threw error", s.Yd.errors.CALL_EXCEPTION, {
                                transaction: r,
                                data: e
                            }), n && (e = eN(e, 0)), e
                        } catch (e) {
                            if (e.code === s.Yd.errors.CALL_EXCEPTION) return null;
                            throw e
                        }
                    })
                }
                _fetchBytes(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        let r = yield this._fetch(e, t);
                        return null != r ? eN(r, 0) : null
                    })
                }
                _getAddress(e, t) {
                    let r = eT[String(e)];
                    if (null == r && ew.throwError(`unsupported coin type: ${e}`, s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${e})`
                        }), "eth" === r.ilk) return this.provider.formatter.address(t);
                    let n = (0, d.lE)(t);
                    if (null != r.p2pkh) {
                        let e = t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                        if (e) {
                            let t = parseInt(e[1], 16);
                            if (e[2].length === 2 * t && t >= 1 && t <= 75) return eS((0, d.zo)([
                                [r.p2pkh], "0x" + e[2]
                            ]))
                        }
                    }
                    if (null != r.p2sh) {
                        let e = t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                        if (e) {
                            let t = parseInt(e[1], 16);
                            if (e[2].length === 2 * t && t >= 1 && t <= 75) return eS((0, d.zo)([
                                [r.p2sh], "0x" + e[2]
                            ]))
                        }
                    }
                    if (null != r.prefix) {
                        let e = n[1],
                            t = n[0];
                        if (0 === t ? 20 !== e && 32 !== e && (t = -1) : t = -1, t >= 0 && n.length === 2 + e && e >= 1 && e <= 75) {
                            let e = eg().toWords(n.slice(2));
                            return e.unshift(t), eg().encode(r.prefix, e)
                        }
                    }
                    return null
                }
                getAddress(e) {
                    return ev(this, void 0, void 0, function*() {
                        if (null == e && (e = 60), 60 === e) try {
                            let e = yield this._fetch("0x3b3b57de");
                            if ("0x" === e || "0x0000000000000000000000000000000000000000000000000000000000000000" === e) return null;
                            return this.provider.formatter.callAddress(e)
                        } catch (e) {
                            if (e.code === s.Yd.errors.CALL_EXCEPTION) return null;
                            throw e
                        }
                        let t = yield this._fetchBytes("0xf1cb7e06", eC(e));
                        if (null == t || "0x" === t) return null;
                        let r = this._getAddress(e, t);
                        return null == r && ew.throwError("invalid or unsupported coin data", s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${e})`,
                            coinType: e,
                            data: t
                        }), r
                    })
                }
                getAvatar() {
                    return ev(this, void 0, void 0, function*() {
                        let e = [{
                            type: "name",
                            content: this.name
                        }];
                        try {
                            let t = yield this.getText("avatar");
                            if (null == t) return null;
                            for (let r = 0; r < eM.length; r++) {
                                let n = t.match(eM[r]);
                                if (null == n) continue;
                                let i = n[1].toLowerCase();
                                switch (i) {
                                    case "https":
                                        return e.push({
                                            type: "url",
                                            content: t
                                        }), {
                                            linkage: e,
                                            url: t
                                        };
                                    case "data":
                                        return e.push({
                                            type: "data",
                                            content: t
                                        }), {
                                            linkage: e,
                                            url: t
                                        };
                                    case "ipfs":
                                        return e.push({
                                            type: "ipfs",
                                            content: t
                                        }), {
                                            linkage: e,
                                            url: eR(t)
                                        };
                                    case "erc721":
                                    case "erc1155":
                                        {
                                            let r = "erc721" === i ? "0xc87b56dd" : "0x0e89341c";e.push({
                                                type: i,
                                                content: t
                                            });
                                            let o = this._resolvedAddress || (yield this.getAddress()),
                                                a = (n[2] || "").split("/");
                                            if (2 !== a.length) return null;
                                            let s = yield this.provider.formatter.address(a[0]), u = (0, d.$m)(l.O$.from(a[1]).toHexString(), 32);
                                            if ("erc721" === i) {
                                                let t = this.provider.formatter.callAddress((yield this.provider.call({
                                                    to: s,
                                                    data: (0, d.xs)(["0x6352211e", u])
                                                })));
                                                if (o !== t) return null;
                                                e.push({
                                                    type: "owner",
                                                    content: t
                                                })
                                            } else if ("erc1155" === i) {
                                                let t = l.O$.from((yield this.provider.call({
                                                    to: s,
                                                    data: (0, d.xs)(["0x00fdd58e", (0, d.$m)(o, 32), u])
                                                })));
                                                if (t.isZero()) return null;
                                                e.push({
                                                    type: "balance",
                                                    content: t.toString()
                                                })
                                            }
                                            let c = {
                                                    to: this.provider.formatter.address(a[0]),
                                                    data: (0, d.xs)([r, u])
                                                },
                                                f = eB((yield this.provider.call(c)), 0);
                                            if (null == f) return null;e.push({
                                                type: "metadata-url-base",
                                                content: f
                                            }),
                                            "erc1155" === i && (f = f.replace("{id}", u.substring(2)), e.push({
                                                type: "metadata-url-expanded",
                                                content: f
                                            })),
                                            f.match(/^ipfs:/i) && (f = eR(f)),
                                            e.push({
                                                type: "metadata-url",
                                                content: f
                                            });
                                            let h = yield F(f);
                                            if (!h) return null;e.push({
                                                type: "metadata",
                                                content: JSON.stringify(h)
                                            });
                                            let p = h.image;
                                            if ("string" != typeof p) return null;
                                            if (p.match(/^(https:\/\/|data:)/i));
                                            else {
                                                let t = p.match(ek);
                                                if (null == t) return null;
                                                e.push({
                                                    type: "url-ipfs",
                                                    content: p
                                                }), p = eR(p)
                                            }
                                            return e.push({
                                                type: "url",
                                                content: p
                                            }),
                                            {
                                                linkage: e,
                                                url: p
                                            }
                                        }
                                }
                            }
                        } catch (e) {}
                        return null
                    })
                }
                getContentHash() {
                    return ev(this, void 0, void 0, function*() {
                        let e = yield this._fetchBytes("0xbc1c58d1");
                        if (null == e || "0x" === e) return null;
                        let t = e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (t) {
                            let e = parseInt(t[3], 16);
                            if (t[4].length === 2 * e) return "ipfs://" + z.encode("0x" + t[1])
                        }
                        let r = e.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (r) {
                            let e = parseInt(r[3], 16);
                            if (r[4].length === 2 * e) return "ipns://" + z.encode("0x" + r[1])
                        }
                        let n = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                        if (n && 64 === n[1].length) return "bzz://" + n[1];
                        let i = e.match(/^0x90b2c605([0-9a-f]*)$/);
                        if (i && 68 === i[1].length) {
                            let e = {
                                "=": "",
                                "+": "-",
                                "/": "_"
                            };
                            return "sia://" + N("0x" + i[1]).replace(/[=+\/]/g, t => e[t])
                        }
                        return ew.throwError("invalid or unsupported content hash data", s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "getContentHash()",
                            data: e
                        })
                    })
                }
                getText(e) {
                    return ev(this, void 0, void 0, function*() {
                        let t = (0, k.Y0)(e);
                        (t = (0, d.zo)([eC(64), eC(t.length), t])).length % 32 != 0 && (t = (0, d.zo)([t, (0, d.$m)("0x", 32 - e.length % 32)]));
                        let r = yield this._fetchBytes("0x59d1d43c", (0, d.Dv)(t));
                        return null == r || "0x" === r ? null : (0, k.ZN)(r)
                    })
                }
            }
            let eU = null,
                eL = 1;
            class eq extends L.zt {
                constructor(e) {
                    if (super(), this._events = [], this._emitted = {
                            block: -2
                        }, this.disableCcipRead = !1, this.formatter = new.target.getFormatter(), (0, a.zG)(this, "anyNetwork", "any" === e), this.anyNetwork && (e = this.detectNetwork()), e instanceof Promise) this._networkPromise = e, e.catch(e => {}), this._ready().catch(e => {});
                    else {
                        let t = (0, a.tu)(new.target, "getNetwork")(e);
                        t ? ((0, a.zG)(this, "_network", t), this.emit("network", t, null)) : ew.throwArgumentError("invalid network", "network", e)
                    }
                    this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0
                }
                _ready() {
                    return ev(this, void 0, void 0, function*() {
                        if (null == this._network) {
                            let e = null;
                            if (this._networkPromise) try {
                                e = yield this._networkPromise
                            } catch (e) {}
                            null == e && (e = yield this.detectNetwork()), e || ew.throwError("no network detected", s.Yd.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = e : (0, a.zG)(this, "_network", e), this.emit("network", e, null))
                        }
                        return this._network
                    })
                }
                get ready() {
                    return U(() => this._ready().then(e => e, e => {
                        if (e.code !== s.Yd.errors.NETWORK_ERROR || "noNetwork" !== e.event) throw e
                    }))
                }
                static getFormatter() {
                    return null == eU && (eU = new ey), eU
                }
                static getNetwork(e) {
                    return function(e) {
                        if (null == e) return null;
                        if ("number" == typeof e) {
                            for (let t in ed) {
                                let r = ed[t];
                                if (r.chainId === e) return {
                                    name: r.name,
                                    chainId: r.chainId,
                                    ensAddress: r.ensAddress || null,
                                    _defaultProvider: r._defaultProvider || null
                                }
                            }
                            return {
                                chainId: e,
                                name: "unknown"
                            }
                        }
                        if ("string" == typeof e) {
                            let t = ed[e];
                            return null == t ? null : {
                                name: t.name,
                                chainId: t.chainId,
                                ensAddress: t.ensAddress,
                                _defaultProvider: t._defaultProvider || null
                            }
                        }
                        let t = ed[e.name];
                        if (!t) return "number" != typeof e.chainId && eo.throwArgumentError("invalid network chainId", "network", e), e;
                        0 !== e.chainId && e.chainId !== t.chainId && eo.throwArgumentError("network chainId mismatch", "network", e);
                        let r = e._defaultProvider || null;
                        if (null == r && t._defaultProvider) {
                            var n;
                            r = (n = t._defaultProvider) && "function" == typeof n.renetwork ? t._defaultProvider.renetwork(e) : t._defaultProvider
                        }
                        return {
                            name: e.name,
                            chainId: t.chainId,
                            ensAddress: e.ensAddress || t.ensAddress || null,
                            _defaultProvider: r
                        }
                    }(null == e ? "homestead" : e)
                }
                ccipReadFetch(e, t, r) {
                    return ev(this, void 0, void 0, function*() {
                        if (this.disableCcipRead || 0 === r.length) return null;
                        let n = e.to.toLowerCase(),
                            i = t.toLowerCase(),
                            o = [];
                        for (let e = 0; e < r.length; e++) {
                            let t = r[e],
                                a = t.replace("{sender}", n).replace("{data}", i),
                                u = t.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                    data: i,
                                    sender: n
                                }),
                                c = yield F({
                                    url: a,
                                    errorPassThrough: !0
                                }, u, (e, t) => (e.status = t.statusCode, e));
                            if (c.data) return c.data;
                            let l = c.message || "unknown error";
                            if (c.status >= 400 && c.status < 500) return ew.throwError(`response not found during CCIP fetch: ${l}`, s.Yd.errors.SERVER_ERROR, {
                                url: t,
                                errorMessage: l
                            });
                            o.push(l)
                        }
                        return ew.throwError(`error encountered during CCIP fetch: ${o.map(e=>JSON.stringify(e)).join(", ")}`, s.Yd.errors.SERVER_ERROR, {
                            urls: r,
                            errorMessages: o
                        })
                    })
                }
                _getInternalBlockNumber(e) {
                    return ev(this, void 0, void 0, function*() {
                        if (yield this._ready(), e > 0)
                            for (; this._internalBlockNumber;) {
                                let t = this._internalBlockNumber;
                                try {
                                    let r = yield t;
                                    if (ex() - r.respTime <= e) return r.blockNumber;
                                    break
                                } catch (e) {
                                    if (this._internalBlockNumber === t) break
                                }
                            }
                        let t = ex(),
                            r = (0, a.mE)({
                                blockNumber: this.perform("getBlockNumber", {}),
                                networkError: this.getNetwork().then(e => null, e => e)
                            }).then(({
                                blockNumber: e,
                                networkError: n
                            }) => {
                                if (n) throw this._internalBlockNumber === r && (this._internalBlockNumber = null), n;
                                let i = ex();
                                return (e = l.O$.from(e).toNumber()) < this._maxInternalBlockNumber && (e = this._maxInternalBlockNumber), this._maxInternalBlockNumber = e, this._setFastBlockNumber(e), {
                                    blockNumber: e,
                                    reqTime: t,
                                    respTime: i
                                }
                            });
                        return this._internalBlockNumber = r, r.catch(e => {
                            this._internalBlockNumber === r && (this._internalBlockNumber = null)
                        }), (yield r).blockNumber
                    })
                }
                poll() {
                    return ev(this, void 0, void 0, function*() {
                        let e = eL++,
                            t = [],
                            r = null;
                        try {
                            r = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2)
                        } catch (e) {
                            this.emit("error", e);
                            return
                        }
                        if (this._setFastBlockNumber(r), this.emit("poll", e, r), r === this._lastBlockNumber) {
                            this.emit("didPoll", e);
                            return
                        }
                        if (-2 === this._emitted.block && (this._emitted.block = r - 1), Math.abs(this._emitted.block - r) > 1e3) ew.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`), this.emit("error", ew.makeError("network block skew detected", s.Yd.errors.NETWORK_ERROR, {
                            blockNumber: r,
                            event: "blockSkew",
                            previousBlockNumber: this._emitted.block
                        })), this.emit("block", r);
                        else
                            for (let e = this._emitted.block + 1; e <= r; e++) this.emit("block", e);
                        this._emitted.block !== r && (this._emitted.block = r, Object.keys(this._emitted).forEach(e => {
                            if ("block" === e) return;
                            let t = this._emitted[e];
                            "pending" !== t && r - t > 12 && delete this._emitted[e]
                        })), -2 === this._lastBlockNumber && (this._lastBlockNumber = r - 1), this._events.forEach(e => {
                            switch (e.type) {
                                case "tx":
                                    {
                                        let r = e.hash,
                                            n = this.getTransactionReceipt(r).then(e => (e && null != e.blockNumber && (this._emitted["t:" + r] = e.blockNumber, this.emit(r, e)), null)).catch(e => {
                                                this.emit("error", e)
                                            });t.push(n);
                                        break
                                    }
                                case "filter":
                                    if (!e._inflight) {
                                        e._inflight = !0, -2 === e._lastBlockNumber && (e._lastBlockNumber = r - 1);
                                        let n = e.filter;
                                        n.fromBlock = e._lastBlockNumber + 1, n.toBlock = r;
                                        let i = n.toBlock - this._maxFilterBlockRange;
                                        i > n.fromBlock && (n.fromBlock = i), n.fromBlock < 0 && (n.fromBlock = 0);
                                        let o = this.getLogs(n).then(t => {
                                            e._inflight = !1, 0 !== t.length && t.forEach(t => {
                                                t.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = t.blockNumber), this._emitted["b:" + t.blockHash] = t.blockNumber, this._emitted["t:" + t.transactionHash] = t.blockNumber, this.emit(n, t)
                                            })
                                        }).catch(t => {
                                            this.emit("error", t), e._inflight = !1
                                        });
                                        t.push(o)
                                    }
                            }
                        }), this._lastBlockNumber = r, Promise.all(t).then(() => {
                            this.emit("didPoll", e)
                        }).catch(e => {
                            this.emit("error", e)
                        })
                    })
                }
                resetEventsBlock(e) {
                    this._lastBlockNumber = e - 1, this.polling && this.poll()
                }
                get network() {
                    return this._network
                }
                detectNetwork() {
                    return ev(this, void 0, void 0, function*() {
                        return ew.throwError("provider does not support network detection", s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "provider.detectNetwork"
                        })
                    })
                }
                getNetwork() {
                    return ev(this, void 0, void 0, function*() {
                        let e = yield this._ready(), t = yield this.detectNetwork();
                        if (e.chainId !== t.chainId) {
                            if (this.anyNetwork) return this._network = t, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", t, e), yield eO(0), this._network;
                            let r = ew.makeError("underlying network changed", s.Yd.errors.NETWORK_ERROR, {
                                event: "changed",
                                network: e,
                                detectedNetwork: t
                            });
                            throw this.emit("error", r), r
                        }
                        return e
                    })
                }
                get blockNumber() {
                    return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(e => {
                        this._setFastBlockNumber(e)
                    }, e => {}), null != this._fastBlockNumber ? this._fastBlockNumber : -1
                }
                get polling() {
                    return null != this._poller
                }
                set polling(e) {
                    e && !this._poller ? (this._poller = setInterval(() => {
                        this.poll()
                    }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
                        this.poll(), this._bootstrapPoll = setTimeout(() => {
                            this._poller || this.poll(), this._bootstrapPoll = null
                        }, this.pollingInterval)
                    }, 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null)
                }
                get pollingInterval() {
                    return this._pollingInterval
                }
                set pollingInterval(e) {
                    if ("number" != typeof e || e <= 0 || parseInt(String(e)) != e) throw Error("invalid polling interval");
                    this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
                        this.poll()
                    }, this._pollingInterval))
                }
                _getFastBlockNumber() {
                    let e = ex();
                    return e - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = e, this._fastBlockNumberPromise = this.getBlockNumber().then(e => ((null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e), this._fastBlockNumber))), this._fastBlockNumberPromise
                }
                _setFastBlockNumber(e) {
                    (null == this._fastBlockNumber || !(e < this._fastBlockNumber)) && (this._fastQueryDate = ex(), (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)))
                }
                waitForTransaction(e, t, r) {
                    return ev(this, void 0, void 0, function*() {
                        return this._waitForTransaction(e, null == t ? 1 : t, r || 0, null)
                    })
                }
                _waitForTransaction(e, t, r, n) {
                    return ev(this, void 0, void 0, function*() {
                        let i = yield this.getTransactionReceipt(e);
                        return (i ? i.confirmations : 0) >= t ? i : new Promise((i, o) => {
                            let a = [],
                                u = !1,
                                c = function() {
                                    return !!u || (u = !0, a.forEach(e => {
                                        e()
                                    }), !1)
                                },
                                l = e => {
                                    e.confirmations < t || c() || i(e)
                                };
                            if (this.on(e, l), a.push(() => {
                                    this.removeListener(e, l)
                                }), n) {
                                let r = n.startBlock,
                                    i = null,
                                    l = a => ev(this, void 0, void 0, function*() {
                                        u || (yield eO(1e3), this.getTransactionCount(n.from).then(d => ev(this, void 0, void 0, function*() {
                                            if (!u) {
                                                if (d <= n.nonce) r = a;
                                                else {
                                                    {
                                                        let t = yield this.getTransaction(e);
                                                        if (t && null != t.blockNumber) return
                                                    }
                                                    for (null == i && (i = r - 3) < n.startBlock && (i = n.startBlock); i <= a;) {
                                                        if (u) return;
                                                        let r = yield this.getBlockWithTransactions(i);
                                                        for (let i = 0; i < r.transactions.length; i++) {
                                                            let a = r.transactions[i];
                                                            if (a.hash === e) return;
                                                            if (a.from === n.from && a.nonce === n.nonce) {
                                                                if (u) return;
                                                                let r = yield this.waitForTransaction(a.hash, t);
                                                                if (c()) return;
                                                                let i = "replaced";
                                                                a.data === n.data && a.to === n.to && a.value.eq(n.value) ? i = "repriced" : "0x" === a.data && a.from === a.to && a.value.isZero() && (i = "cancelled"), o(ew.makeError("transaction was replaced", s.Yd.errors.TRANSACTION_REPLACED, {
                                                                    cancelled: "replaced" === i || "cancelled" === i,
                                                                    reason: i,
                                                                    replacement: this._wrapTransaction(a),
                                                                    hash: e,
                                                                    receipt: r
                                                                }));
                                                                return
                                                            }
                                                        }
                                                        i++
                                                    }
                                                }
                                                u || this.once("block", l)
                                            }
                                        }), e => {
                                            u || this.once("block", l)
                                        }))
                                    });
                                if (u) return;
                                this.once("block", l), a.push(() => {
                                    this.removeListener("block", l)
                                })
                            }
                            if ("number" == typeof r && r > 0) {
                                let e = setTimeout(() => {
                                    c() || o(ew.makeError("timeout exceeded", s.Yd.errors.TIMEOUT, {
                                        timeout: r
                                    }))
                                }, r);
                                e.unref && e.unref(), a.push(() => {
                                    clearTimeout(e)
                                })
                            }
                        })
                    })
                }
                getBlockNumber() {
                    return ev(this, void 0, void 0, function*() {
                        return this._getInternalBlockNumber(0)
                    })
                }
                getGasPrice() {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let e = yield this.perform("getGasPrice", {});
                        try {
                            return l.O$.from(e)
                        } catch (t) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "getGasPrice",
                                result: e,
                                error: t
                            })
                        }
                    })
                }
                getBalance(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, a.mE)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(t)
                        }), n = yield this.perform("getBalance", r);
                        try {
                            return l.O$.from(n)
                        } catch (e) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "getBalance",
                                params: r,
                                result: n,
                                error: e
                            })
                        }
                    })
                }
                getTransactionCount(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, a.mE)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(t)
                        }), n = yield this.perform("getTransactionCount", r);
                        try {
                            return l.O$.from(n).toNumber()
                        } catch (e) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "getTransactionCount",
                                params: r,
                                result: n,
                                error: e
                            })
                        }
                    })
                }
                getCode(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, a.mE)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(t)
                        }), n = yield this.perform("getCode", r);
                        try {
                            return (0, d.Dv)(n)
                        } catch (e) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "getCode",
                                params: r,
                                result: n,
                                error: e
                            })
                        }
                    })
                }
                getStorageAt(e, t, r) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let n = yield(0, a.mE)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(r),
                            position: Promise.resolve(t).then(e => (0, d.$P)(e))
                        }), i = yield this.perform("getStorageAt", n);
                        try {
                            return (0, d.Dv)(i)
                        } catch (e) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "getStorageAt",
                                params: n,
                                result: i,
                                error: e
                            })
                        }
                    })
                }
                _wrapTransaction(e, t, r) {
                    if (null != t && 32 !== (0, d.E1)(t)) throw Error("invalid response - sendTransaction");
                    return null != t && e.hash !== t && ew.throwError("Transaction hash mismatch from Provider.sendTransaction.", s.Yd.errors.UNKNOWN_ERROR, {
                        expectedHash: e.hash,
                        returnedHash: t
                    }), e.wait = (t, n) => ev(this, void 0, void 0, function*() {
                        let i;
                        null == t && (t = 1), null == n && (n = 0), 0 !== t && null != r && (i = {
                            data: e.data,
                            from: e.from,
                            nonce: e.nonce,
                            to: e.to,
                            value: e.value,
                            startBlock: r
                        });
                        let o = yield this._waitForTransaction(e.hash, t, n, i);
                        return null == o && 0 === t ? null : (this._emitted["t:" + e.hash] = o.blockNumber, 0 === o.status && ew.throwError("transaction failed", s.Yd.errors.CALL_EXCEPTION, {
                            transactionHash: e.hash,
                            transaction: e,
                            receipt: o
                        }), o)
                    }), e
                }
                sendTransaction(e) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let t = yield Promise.resolve(e).then(e => (0, d.Dv)(e)), r = this.formatter.transaction(e);
                        null == r.confirmations && (r.confirmations = 0);
                        let n = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        try {
                            let e = yield this.perform("sendTransaction", {
                                signedTransaction: t
                            });
                            return this._wrapTransaction(r, e, n)
                        } catch (e) {
                            throw e.transaction = r, e.transactionHash = r.hash, e
                        }
                    })
                }
                _getTransactionRequest(e) {
                    return ev(this, void 0, void 0, function*() {
                        let t = yield e, r = {};
                        return ["from", "to"].forEach(e => {
                            null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? this._getAddress(e) : null))
                        }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(e => {
                            null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? l.O$.from(e) : null))
                        }), ["type"].forEach(e => {
                            null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => null != e ? e : null))
                        }), t.accessList && (r.accessList = this.formatter.accessList(t.accessList)), ["data"].forEach(e => {
                            null != t[e] && (r[e] = Promise.resolve(t[e]).then(e => e ? (0, d.Dv)(e) : null))
                        }), this.formatter.transactionRequest((yield(0, a.mE)(r)))
                    })
                }
                _getFilter(e) {
                    return ev(this, void 0, void 0, function*() {
                        e = yield e;
                        let t = {};
                        return null != e.address && (t.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach(r => {
                            null != e[r] && (t[r] = e[r])
                        }), ["fromBlock", "toBlock"].forEach(r => {
                            null != e[r] && (t[r] = this._getBlockTag(e[r]))
                        }), this.formatter.filter((yield(0, a.mE)(t)))
                    })
                }
                _call(e, t, r) {
                    return ev(this, void 0, void 0, function*() {
                        r >= 10 && ew.throwError("CCIP read exceeded maximum redirections", s.Yd.errors.SERVER_ERROR, {
                            redirects: r,
                            transaction: e
                        });
                        let n = e.to,
                            i = yield this.perform("call", {
                                transaction: e,
                                blockTag: t
                            });
                        if (r >= 0 && "latest" === t && null != n && "0x556f1830" === i.substring(0, 10) && (0, d.E1)(i) % 32 == 4) try {
                            let o = (0, d.p3)(i, 4),
                                a = (0, d.p3)(o, 0, 32);
                            l.O$.from(a).eq(n) || ew.throwError("CCIP Read sender did not match", s.Yd.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: i
                            });
                            let u = [],
                                c = l.O$.from((0, d.p3)(o, 32, 64)).toNumber(),
                                f = l.O$.from((0, d.p3)(o, c, c + 32)).toNumber(),
                                h = (0, d.p3)(o, c + 32);
                            for (let t = 0; t < f; t++) {
                                let r = eB(h, 32 * t);
                                null == r && ew.throwError("CCIP Read contained corrupt URL string", s.Yd.errors.CALL_EXCEPTION, {
                                    name: "OffchainLookup",
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    transaction: e,
                                    data: i
                                }), u.push(r)
                            }
                            let p = eN(o, 64);
                            l.O$.from((0, d.p3)(o, 100, 128)).isZero() || ew.throwError("CCIP Read callback selector included junk", s.Yd.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: i
                            });
                            let m = (0, d.p3)(o, 96, 100),
                                g = eN(o, 128),
                                b = yield this.ccipReadFetch(e, p, u);
                            null == b && ew.throwError("CCIP Read disabled or provided no URLs", s.Yd.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: i
                            });
                            let y = {
                                to: n,
                                data: (0, d.xs)([m, ej([b, g])])
                            };
                            return this._call(y, t, r + 1)
                        } catch (e) {
                            if (e.code === s.Yd.errors.SERVER_ERROR) throw e
                        }
                        try {
                            return (0, d.Dv)(i)
                        } catch (r) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "call",
                                params: {
                                    transaction: e,
                                    blockTag: t
                                },
                                result: i,
                                error: r
                            })
                        }
                    })
                }
                call(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, a.mE)({
                            transaction: this._getTransactionRequest(e),
                            blockTag: this._getBlockTag(t),
                            ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                        });
                        return this._call(r.transaction, r.blockTag, r.ccipReadEnabled ? 0 : -1)
                    })
                }
                estimateGas(e) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let t = yield(0, a.mE)({
                            transaction: this._getTransactionRequest(e)
                        }), r = yield this.perform("estimateGas", t);
                        try {
                            return l.O$.from(r)
                        } catch (e) {
                            return ew.throwError("bad result from backend", s.Yd.errors.SERVER_ERROR, {
                                method: "estimateGas",
                                params: t,
                                result: r,
                                error: e
                            })
                        }
                    })
                }
                _getAddress(e) {
                    return ev(this, void 0, void 0, function*() {
                        "string" != typeof(e = yield e) && ew.throwArgumentError("invalid address or ENS name", "name", e);
                        let t = yield this.resolveName(e);
                        return null == t && ew.throwError("ENS name not configured", s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: `resolveName(${JSON.stringify(e)})`
                        }), t
                    })
                }
                _getBlock(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let r = -128,
                            n = {
                                includeTransactions: !!t
                            };
                        if ((0, d.A7)(e, 32)) n.blockHash = e;
                        else try {
                            n.blockTag = yield this._getBlockTag(e), (0, d.A7)(n.blockTag) && (r = parseInt(n.blockTag.substring(2), 16))
                        } catch (t) {
                            ew.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e)
                        }
                        return U(() => ev(this, void 0, void 0, function*() {
                            let e = yield this.perform("getBlock", n);
                            if (null == e) return null != n.blockHash && null == this._emitted["b:" + n.blockHash] || null != n.blockTag && r > this._emitted.block ? null : void 0;
                            if (t) {
                                let t = null;
                                for (let r = 0; r < e.transactions.length; r++) {
                                    let n = e.transactions[r];
                                    if (null == n.blockNumber) n.confirmations = 0;
                                    else if (null == n.confirmations) {
                                        null == t && (t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                        let e = t - n.blockNumber + 1;
                                        e <= 0 && (e = 1), n.confirmations = e
                                    }
                                }
                                let r = this.formatter.blockWithTransactions(e);
                                return r.transactions = r.transactions.map(e => this._wrapTransaction(e)), r
                            }
                            return this.formatter.block(e)
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getBlock(e) {
                    return this._getBlock(e, !1)
                }
                getBlockWithTransactions(e) {
                    return this._getBlock(e, !0)
                }
                getTransaction(e) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let t = {
                            transactionHash: this.formatter.hash(e, !0)
                        };
                        return U(() => ev(this, void 0, void 0, function*() {
                            let r = yield this.perform("getTransaction", t);
                            if (null == r) return null == this._emitted["t:" + e] ? null : void 0;
                            let n = this.formatter.transactionResponse(r);
                            if (null == n.blockNumber) n.confirmations = 0;
                            else if (null == n.confirmations) {
                                let e = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                                e <= 0 && (e = 1), n.confirmations = e
                            }
                            return this._wrapTransaction(n)
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getTransactionReceipt(e) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let t = {
                            transactionHash: this.formatter.hash(e, !0)
                        };
                        return U(() => ev(this, void 0, void 0, function*() {
                            let r = yield this.perform("getTransactionReceipt", t);
                            if (null == r) return null == this._emitted["t:" + e] ? null : void 0;
                            if (null == r.blockHash) return;
                            let n = this.formatter.receipt(r);
                            if (null == n.blockNumber) n.confirmations = 0;
                            else if (null == n.confirmations) {
                                let e = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                                e <= 0 && (e = 1), n.confirmations = e
                            }
                            return n
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getLogs(e) {
                    return ev(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let t = yield(0, a.mE)({
                            filter: this._getFilter(e)
                        }), r = yield this.perform("getLogs", t);
                        return r.forEach(e => {
                            null == e.removed && (e.removed = !1)
                        }), ey.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)
                    })
                }
                getEtherPrice() {
                    return ev(this, void 0, void 0, function*() {
                        return yield this.getNetwork(), this.perform("getEtherPrice", {})
                    })
                }
                _getBlockTag(e) {
                    return ev(this, void 0, void 0, function*() {
                        if ("number" == typeof(e = yield e) && e < 0) {
                            e % 1 && ew.throwArgumentError("invalid BlockTag", "blockTag", e);
                            let t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            return (t += e) < 0 && (t = 0), this.formatter.blockTag(t)
                        }
                        return this.formatter.blockTag(e)
                    })
                }
                getResolver(e) {
                    return ev(this, void 0, void 0, function*() {
                        let t = e;
                        for (;;) {
                            if ("" === t || "." === t || "eth" !== e && "eth" === t) return null;
                            let r = yield this._getResolver(t, "getResolver");
                            if (null != r) {
                                let n = new eF(this, r, e);
                                if (t !== e && !(yield n.supportsWildcard())) return null;
                                return n
                            }
                            t = t.split(".").slice(1).join(".")
                        }
                    })
                }
                _getResolver(e, t) {
                    return ev(this, void 0, void 0, function*() {
                        null == t && (t = "ENS");
                        let r = yield this.getNetwork();
                        r.ensAddress || ew.throwError("network does not support ENS", s.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: t,
                            network: r.name
                        });
                        try {
                            let t = yield this.call({
                                to: r.ensAddress,
                                data: "0x0178b8bf" + ei(e).substring(2)
                            });
                            return this.formatter.callAddress(t)
                        } catch (e) {}
                        return null
                    })
                }
                resolveName(e) {
                    return ev(this, void 0, void 0, function*() {
                        e = yield e;
                        try {
                            return Promise.resolve(this.formatter.address(e))
                        } catch (t) {
                            if ((0, d.A7)(e)) throw t
                        }
                        "string" != typeof e && ew.throwArgumentError("invalid ENS name", "name", e);
                        let t = yield this.getResolver(e);
                        return t ? yield t.getAddress(): null
                    })
                }
                lookupAddress(e) {
                    return ev(this, void 0, void 0, function*() {
                        e = yield e;
                        let t = (e = this.formatter.address(e)).substring(2).toLowerCase() + ".addr.reverse",
                            r = yield this._getResolver(t, "lookupAddress");
                        if (null == r) return null;
                        let n = eB((yield this.call({
                            to: r,
                            data: "0x691f3431" + ei(t).substring(2)
                        })), 0);
                        return (yield this.resolveName(n)) != e ? null : n
                    })
                }
                getAvatar(e) {
                    return ev(this, void 0, void 0, function*() {
                        let t = null;
                        if ((0, d.A7)(e)) {
                            let r = this.formatter.address(e).substring(2).toLowerCase() + ".addr.reverse",
                                n = yield this._getResolver(r, "getAvatar");
                            if (!n) return null;
                            t = new eF(this, n, r);
                            try {
                                let e = yield t.getAvatar();
                                if (e) return e.url
                            } catch (e) {
                                if (e.code !== s.Yd.errors.CALL_EXCEPTION) throw e
                            }
                            try {
                                let e = eB((yield this.call({
                                    to: n,
                                    data: "0x691f3431" + ei(r).substring(2)
                                })), 0);
                                t = yield this.getResolver(e)
                            } catch (e) {
                                if (e.code !== s.Yd.errors.CALL_EXCEPTION) throw e;
                                return null
                            }
                        } else if (!(t = yield this.getResolver(e))) return null;
                        let r = yield t.getAvatar();
                        return null == r ? null : r.url
                    })
                }
                perform(e, t) {
                    return ew.throwError(e + " not implemented", s.Yd.errors.NOT_IMPLEMENTED, {
                        operation: e
                    })
                }
                _startEvent(e) {
                    this.polling = this._events.filter(e => e.pollable()).length > 0
                }
                _stopEvent(e) {
                    this.polling = this._events.filter(e => e.pollable()).length > 0
                }
                _addEventListener(e, t, r) {
                    let n = new eI(eP(e), t, r);
                    return this._events.push(n), this._startEvent(n), this
                }
                on(e, t) {
                    return this._addEventListener(e, t, !1)
                }
                once(e, t) {
                    return this._addEventListener(e, t, !0)
                }
                emit(e, ...t) {
                    let r = !1,
                        n = [],
                        i = eP(e);
                    return this._events = this._events.filter(e => e.tag !== i || (setTimeout(() => {
                        e.listener.apply(this, t)
                    }, 0), r = !0, !e.once || (n.push(e), !1))), n.forEach(e => {
                        this._stopEvent(e)
                    }), r
                }
                listenerCount(e) {
                    if (!e) return this._events.length;
                    let t = eP(e);
                    return this._events.filter(e => e.tag === t).length
                }
                listeners(e) {
                    if (null == e) return this._events.map(e => e.listener);
                    let t = eP(e);
                    return this._events.filter(e => e.tag === t).map(e => e.listener)
                }
                off(e, t) {
                    if (null == t) return this.removeAllListeners(e);
                    let r = [],
                        n = !1,
                        i = eP(e);
                    return this._events = this._events.filter(e => e.tag !== i || e.listener != t || !!n || (n = !0, r.push(e), !1)), r.forEach(e => {
                        this._stopEvent(e)
                    }), this
                }
                removeAllListeners(e) {
                    let t = [];
                    if (null == e) t = this._events, this._events = [];
                    else {
                        let r = eP(e);
                        this._events = this._events.filter(e => e.tag !== r || (t.push(e), !1))
                    }
                    return t.forEach(e => {
                        this._stopEvent(e)
                    }), this
                }
            }
            var ez = function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(a, s)
                    }
                    u((n = n.apply(e, t || [])).next())
                })
            };
            let e$ = new s.Yd(u),
                eH = ["call", "estimateGas"];

            function eG(e, t) {
                if (null == e) return null;
                if ("string" == typeof e.message && e.message.match("reverted")) {
                    let r = (0, d.A7)(e.data) ? e.data : null;
                    if (!t || r) return {
                        message: e.message,
                        data: r
                    }
                }
                if ("object" == typeof e) {
                    for (let r in e) {
                        let n = eG(e[r], t);
                        if (n) return n
                    }
                    return null
                }
                if ("string" == typeof e) try {
                    return eG(JSON.parse(e), t)
                } catch (e) {}
                return null
            }

            function eW(e, t, r) {
                let n = r.transaction || r.signedTransaction;
                if ("call" === e) {
                    let e = eG(t, !0);
                    if (e) return e.data;
                    e$.throwError("missing revert data in call exception; Transaction reverted without a reason string", s.Yd.errors.CALL_EXCEPTION, {
                        data: "0x",
                        transaction: n,
                        error: t
                    })
                }
                if ("estimateGas" === e) {
                    let r = eG(t.body, !1);
                    null == r && (r = eG(t, !1)), r && e$.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", s.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                        reason: r.message,
                        method: e,
                        transaction: n,
                        error: t
                    })
                }
                let i = t.message;
                throw t.code === s.Yd.errors.SERVER_ERROR && t.error && "string" == typeof t.error.message ? i = t.error.message : "string" == typeof t.body ? i = t.body : "string" == typeof t.responseText && (i = t.responseText), (i = (i || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && e$.throwError("insufficient funds for intrinsic transaction cost", s.Yd.errors.INSUFFICIENT_FUNDS, {
                    error: t,
                    method: e,
                    transaction: n
                }), i.match(/nonce (is )?too low/i) && e$.throwError("nonce has already been used", s.Yd.errors.NONCE_EXPIRED, {
                    error: t,
                    method: e,
                    transaction: n
                }), i.match(/replacement transaction underpriced|transaction gas price.*too low/i) && e$.throwError("replacement fee too low", s.Yd.errors.REPLACEMENT_UNDERPRICED, {
                    error: t,
                    method: e,
                    transaction: n
                }), i.match(/only replay-protected/i) && e$.throwError("legacy pre-eip-155 transactions not supported", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    error: t,
                    method: e,
                    transaction: n
                }), eH.indexOf(e) >= 0 && i.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && e$.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", s.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: t,
                    method: e,
                    transaction: n
                }), t
            }

            function eK(e) {
                return new Promise(function(t) {
                    setTimeout(t, e)
                })
            }

            function eY(e) {
                if (e.error) {
                    let t = Error(e.error.message);
                    throw t.code = e.error.code, t.data = e.error.data, t
                }
                return e.result
            }

            function eV(e) {
                return e ? e.toLowerCase() : e
            }
            let eQ = {};
            class eJ extends c.E {
                constructor(e, t, r) {
                    if (super(), e !== eQ) throw Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                    (0, a.zG)(this, "provider", t), null == r && (r = 0), "string" == typeof r ? ((0, a.zG)(this, "_address", this.provider.formatter.address(r)), (0, a.zG)(this, "_index", null)) : "number" == typeof r ? ((0, a.zG)(this, "_index", r), (0, a.zG)(this, "_address", null)) : e$.throwArgumentError("invalid address or index", "addressOrIndex", r)
                }
                connect(e) {
                    return e$.throwError("cannot alter JSON-RPC Signer connection", s.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "connect"
                    })
                }
                connectUnchecked() {
                    return new eZ(eQ, this.provider, this._address || this._index)
                }
                getAddress() {
                    return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then(e => (e.length <= this._index && e$.throwError("unknown account #" + this._index, s.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "getAddress"
                    }), this.provider.formatter.address(e[this._index])))
                }
                sendUncheckedTransaction(e) {
                    e = (0, a.DC)(e);
                    let t = this.getAddress().then(e => (e && (e = e.toLowerCase()), e));
                    if (null == e.gasLimit) {
                        let r = (0, a.DC)(e);
                        r.from = t, e.gasLimit = this.provider.estimateGas(r)
                    }
                    return null != e.to && (e.to = Promise.resolve(e.to).then(e => ez(this, void 0, void 0, function*() {
                        if (null == e) return null;
                        let t = yield this.provider.resolveName(e);
                        return null == t && e$.throwArgumentError("provided ENS name resolves to null", "tx.to", e), t
                    }))), (0, a.mE)({
                        tx: (0, a.mE)(e),
                        sender: t
                    }).then(({
                        tx: t,
                        sender: r
                    }) => {
                        null != t.from ? t.from.toLowerCase() !== r && e$.throwArgumentError("from address mismatch", "transaction", e) : t.from = r;
                        let n = this.provider.constructor.hexlifyTransaction(t, {
                            from: !0
                        });
                        return this.provider.send("eth_sendTransaction", [n]).then(e => e, e => ("string" == typeof e.message && e.message.match(/user denied/i) && e$.throwError("user rejected transaction", s.Yd.errors.ACTION_REJECTED, {
                            action: "sendTransaction",
                            transaction: t
                        }), eW("sendTransaction", e, n)))
                    })
                }
                signTransaction(e) {
                    return e$.throwError("signing transactions is unsupported", s.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "signTransaction"
                    })
                }
                sendTransaction(e) {
                    return ez(this, void 0, void 0, function*() {
                        let t = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), r = yield this.sendUncheckedTransaction(e);
                        try {
                            return yield U(() => ez(this, void 0, void 0, function*() {
                                let e = yield this.provider.getTransaction(r);
                                if (null !== e) return this.provider._wrapTransaction(e, r, t)
                            }), {
                                oncePoll: this.provider
                            })
                        } catch (e) {
                            throw e.transactionHash = r, e
                        }
                    })
                }
                signMessage(e) {
                    return ez(this, void 0, void 0, function*() {
                        let t = "string" == typeof e ? (0, k.Y0)(e) : e,
                            r = yield this.getAddress();
                        try {
                            return yield this.provider.send("personal_sign", [(0, d.Dv)(t), r.toLowerCase()])
                        } catch (t) {
                            throw "string" == typeof t.message && t.message.match(/user denied/i) && e$.throwError("user rejected signing", s.Yd.errors.ACTION_REJECTED, {
                                action: "signMessage",
                                from: r,
                                messageData: e
                            }), t
                        }
                    })
                }
                _legacySignMessage(e) {
                    return ez(this, void 0, void 0, function*() {
                        let t = "string" == typeof e ? (0, k.Y0)(e) : e,
                            r = yield this.getAddress();
                        try {
                            return yield this.provider.send("eth_sign", [r.toLowerCase(), (0, d.Dv)(t)])
                        } catch (t) {
                            throw "string" == typeof t.message && t.message.match(/user denied/i) && e$.throwError("user rejected signing", s.Yd.errors.ACTION_REJECTED, {
                                action: "_legacySignMessage",
                                from: r,
                                messageData: e
                            }), t
                        }
                    })
                }
                _signTypedData(e, t, r) {
                    return ez(this, void 0, void 0, function*() {
                        let n = yield S.resolveNames(e, t, r, e => this.provider.resolveName(e)), i = yield this.getAddress();
                        try {
                            return yield this.provider.send("eth_signTypedData_v4", [i.toLowerCase(), JSON.stringify(S.getPayload(n.domain, t, n.value))])
                        } catch (e) {
                            throw "string" == typeof e.message && e.message.match(/user denied/i) && e$.throwError("user rejected signing", s.Yd.errors.ACTION_REJECTED, {
                                action: "_signTypedData",
                                from: i,
                                messageData: {
                                    domain: n.domain,
                                    types: t,
                                    value: n.value
                                }
                            }), e
                        }
                    })
                }
                unlock(e) {
                    return ez(this, void 0, void 0, function*() {
                        let t = this.provider,
                            r = yield this.getAddress();
                        return t.send("personal_unlockAccount", [r.toLowerCase(), e, null])
                    })
                }
            }
            class eZ extends eJ {
                sendTransaction(e) {
                    return this.sendUncheckedTransaction(e).then(e => ({
                        hash: e,
                        nonce: null,
                        gasLimit: null,
                        gasPrice: null,
                        data: null,
                        value: null,
                        chainId: null,
                        confirmations: 0,
                        from: null,
                        wait: t => this.provider.waitForTransaction(e, t)
                    }))
                }
            }
            let eX = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0,
                type: !0,
                accessList: !0,
                maxFeePerGas: !0,
                maxPriorityFeePerGas: !0
            };
            class e0 extends eq {
                constructor(e, t) {
                    let r = t;
                    null == r && (r = new Promise((e, t) => {
                        setTimeout(() => {
                            this.detectNetwork().then(t => {
                                e(t)
                            }, e => {
                                t(e)
                            })
                        }, 0)
                    })), super(r), e || (e = (0, a.tu)(this.constructor, "defaultUrl")()), "string" == typeof e ? (0, a.zG)(this, "connection", Object.freeze({
                        url: e
                    })) : (0, a.zG)(this, "connection", Object.freeze((0, a.DC)(e))), this._nextId = 42
                }
                get _cache() {
                    return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
                }
                static defaultUrl() {
                    return "http://localhost:8545"
                }
                detectNetwork() {
                    return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout(() => {
                        this._cache.detectNetwork = null
                    }, 0)), this._cache.detectNetwork
                }
                _uncachedDetectNetwork() {
                    return ez(this, void 0, void 0, function*() {
                        yield eK(0);
                        let e = null;
                        try {
                            e = yield this.send("eth_chainId", [])
                        } catch (t) {
                            try {
                                e = yield this.send("net_version", [])
                            } catch (e) {}
                        }
                        if (null != e) {
                            let t = (0, a.tu)(this.constructor, "getNetwork");
                            try {
                                return t(l.O$.from(e).toNumber())
                            } catch (t) {
                                return e$.throwError("could not detect network", s.Yd.errors.NETWORK_ERROR, {
                                    chainId: e,
                                    event: "invalidNetwork",
                                    serverError: t
                                })
                            }
                        }
                        return e$.throwError("could not detect network", s.Yd.errors.NETWORK_ERROR, {
                            event: "noNetwork"
                        })
                    })
                }
                getSigner(e) {
                    return new eJ(eQ, this, e)
                }
                getUncheckedSigner(e) {
                    return this.getSigner(e).connectUnchecked()
                }
                listAccounts() {
                    return this.send("eth_accounts", []).then(e => e.map(e => this.formatter.address(e)))
                }
                send(e, t) {
                    let r = {
                        method: e,
                        params: t,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    this.emit("debug", {
                        action: "request",
                        request: (0, a.p$)(r),
                        provider: this
                    });
                    let n = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                    if (n && this._cache[e]) return this._cache[e];
                    let i = F(this.connection, JSON.stringify(r), eY).then(e => (this.emit("debug", {
                        action: "response",
                        request: r,
                        response: e,
                        provider: this
                    }), e), e => {
                        throw this.emit("debug", {
                            action: "response",
                            error: e,
                            request: r,
                            provider: this
                        }), e
                    });
                    return n && (this._cache[e] = i, setTimeout(() => {
                        this._cache[e] = null
                    }, 0)), i
                }
                prepareRequest(e, t) {
                    switch (e) {
                        case "getBlockNumber":
                            return ["eth_blockNumber", []];
                        case "getGasPrice":
                            return ["eth_gasPrice", []];
                        case "getBalance":
                            return ["eth_getBalance", [eV(t.address), t.blockTag]];
                        case "getTransactionCount":
                            return ["eth_getTransactionCount", [eV(t.address), t.blockTag]];
                        case "getCode":
                            return ["eth_getCode", [eV(t.address), t.blockTag]];
                        case "getStorageAt":
                            return ["eth_getStorageAt", [eV(t.address), (0, d.$m)(t.position, 32), t.blockTag]];
                        case "sendTransaction":
                            return ["eth_sendRawTransaction", [t.signedTransaction]];
                        case "getBlock":
                            if (t.blockTag) return ["eth_getBlockByNumber", [t.blockTag, !!t.includeTransactions]];
                            if (t.blockHash) return ["eth_getBlockByHash", [t.blockHash, !!t.includeTransactions]];
                            break;
                        case "getTransaction":
                            return ["eth_getTransactionByHash", [t.transactionHash]];
                        case "getTransactionReceipt":
                            return ["eth_getTransactionReceipt", [t.transactionHash]];
                        case "call":
                            return ["eth_call", [(0, a.tu)(this.constructor, "hexlifyTransaction")(t.transaction, {
                                from: !0
                            }), t.blockTag]];
                        case "estimateGas":
                            return ["eth_estimateGas", [(0, a.tu)(this.constructor, "hexlifyTransaction")(t.transaction, {
                                from: !0
                            })]];
                        case "getLogs":
                            return t.filter && null != t.filter.address && (t.filter.address = eV(t.filter.address)), ["eth_getLogs", [t.filter]]
                    }
                    return null
                }
                perform(e, t) {
                    return ez(this, void 0, void 0, function*() {
                        if ("call" === e || "estimateGas" === e) {
                            let e = t.transaction;
                            if (e && null != e.type && l.O$.from(e.type).isZero() && null == e.maxFeePerGas && null == e.maxPriorityFeePerGas) {
                                let r = yield this.getFeeData();
                                null == r.maxFeePerGas && null == r.maxPriorityFeePerGas && ((t = (0, a.DC)(t)).transaction = (0, a.DC)(e), delete t.transaction.type)
                            }
                        }
                        let r = this.prepareRequest(e, t);
                        null == r && e$.throwError(e + " not implemented", s.Yd.errors.NOT_IMPLEMENTED, {
                            operation: e
                        });
                        try {
                            return yield this.send(r[0], r[1])
                        } catch (r) {
                            return eW(e, r, t)
                        }
                    })
                }
                _startEvent(e) {
                    "pending" === e.tag && this._startPending(), super._startEvent(e)
                }
                _startPending() {
                    if (null != this._pendingFilter) return;
                    let e = this,
                        t = this.send("eth_newPendingTransactionFilter", []);
                    this._pendingFilter = t, t.then(function(r) {
                        return function n() {
                            e.send("eth_getFilterChanges", [r]).then(function(r) {
                                if (e._pendingFilter != t) return null;
                                let n = Promise.resolve();
                                return r.forEach(function(t) {
                                    e._emitted["t:" + t.toLowerCase()] = "pending", n = n.then(function() {
                                        return e.getTransaction(t).then(function(t) {
                                            return e.emit("pending", t), null
                                        })
                                    })
                                }), n.then(function() {
                                    return eK(1e3)
                                })
                            }).then(function() {
                                if (e._pendingFilter != t) {
                                    e.send("eth_uninstallFilter", [r]);
                                    return
                                }
                                return setTimeout(function() {
                                    n()
                                }, 0), null
                            }).catch(e => {})
                        }(), r
                    }).catch(e => {})
                }
                _stopEvent(e) {
                    "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(e)
                }
                static hexlifyTransaction(e, t) {
                    let r = (0, a.DC)(eX);
                    if (t)
                        for (let e in t) t[e] && (r[e] = !0);
                    (0, a.uj)(e, r);
                    let n = {};
                    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(t) {
                        if (null == e[t]) return;
                        let r = (0, d.$P)(l.O$.from(e[t]));
                        "gasLimit" === t && (t = "gas"), n[t] = r
                    }), ["from", "to", "data"].forEach(function(t) {
                        null != e[t] && (n[t] = (0, d.Dv)(e[t]))
                    }), e.accessList && (n.accessList = (0, M.z7)(e.accessList)), n
                }
            }
            let e1 = new s.Yd(u),
                e2 = 1;

            function e6(e, t) {
                let r = "Web3LegacyFetcher";
                return function(e, n) {
                    let i = {
                        method: e,
                        params: n,
                        id: e2++,
                        jsonrpc: "2.0"
                    };
                    return new Promise((e, n) => {
                        this.emit("debug", {
                            action: "request",
                            fetcher: r,
                            request: (0, a.p$)(i),
                            provider: this
                        }), t(i, (t, o) => {
                            if (t) return this.emit("debug", {
                                action: "response",
                                fetcher: r,
                                error: t,
                                request: i,
                                provider: this
                            }), n(t);
                            if (this.emit("debug", {
                                    action: "response",
                                    fetcher: r,
                                    request: i,
                                    response: o,
                                    provider: this
                                }), o.error) {
                                let e = Error(o.error.message);
                                return e.code = o.error.code, e.data = o.error.data, n(e)
                            }
                            e(o.result)
                        })
                    })
                }
            }
            class e3 extends e0 {
                constructor(e, t) {
                    null == e && e1.throwArgumentError("missing provider", "provider", e);
                    let r = null,
                        n = null,
                        i = null;
                    "function" == typeof e ? (r = "unknown:", n = e) : (((r = e.host || e.path || "") || !e.isMetaMask || (r = "metamask"), i = e, e.request) ? ("" === r && (r = "eip-1193:"), n = function(t, r) {
                        null == r && (r = []);
                        let n = {
                            method: t,
                            params: r
                        };
                        return this.emit("debug", {
                            action: "request",
                            fetcher: "Eip1193Fetcher",
                            request: (0, a.p$)(n),
                            provider: this
                        }), e.request(n).then(e => (this.emit("debug", {
                            action: "response",
                            fetcher: "Eip1193Fetcher",
                            request: n,
                            response: e,
                            provider: this
                        }), e), e => {
                            throw this.emit("debug", {
                                action: "response",
                                fetcher: "Eip1193Fetcher",
                                request: n,
                                error: e,
                                provider: this
                            }), e
                        })
                    }) : e.sendAsync ? n = e6(e, e.sendAsync.bind(e)) : e.send ? n = e6(e, e.send.bind(e)) : e1.throwArgumentError("unsupported provider", "provider", e), r || (r = "unknown:")), super(r, t), (0, a.zG)(this, "jsonRpcFetchFunc", n), (0, a.zG)(this, "provider", i)
                }
                send(e, t) {
                    return this.jsonRpcFetchFunc(e, t)
                }
            }
        },
        18162: function(e, t, r) {
            "use strict";
            r.d(t, {
                J: function() {
                    return d
                },
                c: function() {
                    return u
                }
            });
            var n = r(9784),
                i = r(13421);
            let o = new i.Yd("rlp/5.7.0");

            function a(e) {
                let t = [];
                for (; e;) t.unshift(255 & e), e >>= 8;
                return t
            }

            function s(e, t, r) {
                let n = 0;
                for (let i = 0; i < r; i++) n = 256 * n + e[t + i];
                return n
            }

            function u(e) {
                return (0, n.Dv)(function e(t) {
                    if (Array.isArray(t)) {
                        let r = [];
                        if (t.forEach(function(t) {
                                r = r.concat(e(t))
                            }), r.length <= 55) return r.unshift(192 + r.length), r;
                        let n = a(r.length);
                        return n.unshift(247 + n.length), n.concat(r)
                    }(0, n.Zq)(t) || o.throwArgumentError("RLP object must be BytesLike", "object", t);
                    let r = Array.prototype.slice.call((0, n.lE)(t));
                    if (1 === r.length && r[0] <= 127) return r;
                    if (r.length <= 55) return r.unshift(128 + r.length), r;
                    let i = a(r.length);
                    return i.unshift(183 + i.length), i.concat(r)
                }(e))
            }

            function c(e, t, r, n) {
                let a = [];
                for (; r < t + 1 + n;) {
                    let s = l(e, r);
                    a.push(s.result), (r += s.consumed) > t + 1 + n && o.throwError("child data too short", i.Yd.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: a
                }
            }

            function l(e, t) {
                if (0 === e.length && o.throwError("data too short", i.Yd.errors.BUFFER_OVERRUN, {}), e[t] >= 248) {
                    let r = e[t] - 247;
                    t + 1 + r > e.length && o.throwError("data short segment too short", i.Yd.errors.BUFFER_OVERRUN, {});
                    let n = s(e, t + 1, r);
                    return t + 1 + r + n > e.length && o.throwError("data long segment too short", i.Yd.errors.BUFFER_OVERRUN, {}), c(e, t, t + 1 + r, r + n)
                }
                if (e[t] >= 192) {
                    let r = e[t] - 192;
                    return t + 1 + r > e.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {}), c(e, t, t + 1, r)
                }
                if (e[t] >= 184) {
                    let r = e[t] - 183;
                    t + 1 + r > e.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {});
                    let a = s(e, t + 1, r);
                    t + 1 + r + a > e.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {});
                    let u = (0, n.Dv)(e.slice(t + 1 + r, t + 1 + r + a));
                    return {
                        consumed: 1 + r + a,
                        result: u
                    }
                }
                if (e[t] >= 128) {
                    let r = e[t] - 128;
                    t + 1 + r > e.length && o.throwError("data too short", i.Yd.errors.BUFFER_OVERRUN, {});
                    let a = (0, n.Dv)(e.slice(t + 1, t + 1 + r));
                    return {
                        consumed: 1 + r,
                        result: a
                    }
                }
                return {
                    consumed: 1,
                    result: (0, n.Dv)(e[t])
                }
            }

            function d(e) {
                let t = (0, n.lE)(e),
                    r = l(t, 0);
                return r.consumed !== t.length && o.throwArgumentError("invalid rlp data", "data", e), r.result
            }
        },
        28257: function(e, t, r) {
            "use strict";
            r.d(t, {
                Y0: function() {
                    return f
                },
                XL: function() {
                    return p
                },
                ZN: function() {
                    return h
                }
            });
            var n, i, o, a, s = r(9784);
            let u = new(r(13421)).Yd("strings/5.7.0");

            function c(e, t, r, n, i) {
                if (e === a.BAD_PREFIX || e === a.UNEXPECTED_CONTINUE) {
                    let e = 0;
                    for (let n = t + 1; n < r.length && r[n] >> 6 == 2; n++) e++;
                    return e
                }
                return e === a.OVERRUN ? r.length - t - 1 : 0
            }(n = o || (o = {})).current = "", n.NFC = "NFC", n.NFD = "NFD", n.NFKC = "NFKC", n.NFKD = "NFKD", (i = a || (a = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte", i.BAD_PREFIX = "bad codepoint prefix", i.OVERRUN = "string overrun", i.MISSING_CONTINUE = "missing continuation byte", i.OUT_OF_RANGE = "out of UTF-8 range", i.UTF16_SURROGATE = "UTF-16 surrogate", i.OVERLONG = "overlong representation";
            let l = Object.freeze({
                error: function(e, t, r, n, i) {
                    return u.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, "bytes", r)
                },
                ignore: c,
                replace: function(e, t, r, n, i) {
                    return e === a.OVERLONG ? (n.push(i), 0) : (n.push(65533), c(e, t, r, n, i))
                }
            });

            function d(e, t) {
                null == t && (t = l.error), e = (0, s.lE)(e);
                let r = [],
                    n = 0;
                for (; n < e.length;) {
                    let i = e[n++];
                    if (i >> 7 == 0) {
                        r.push(i);
                        continue
                    }
                    let o = null,
                        s = null;
                    if ((224 & i) == 192) o = 1, s = 127;
                    else if ((240 & i) == 224) o = 2, s = 2047;
                    else if ((248 & i) == 240) o = 3, s = 65535;
                    else {
                        (192 & i) == 128 ? n += t(a.UNEXPECTED_CONTINUE, n - 1, e, r) : n += t(a.BAD_PREFIX, n - 1, e, r);
                        continue
                    }
                    if (n - 1 + o >= e.length) {
                        n += t(a.OVERRUN, n - 1, e, r);
                        continue
                    }
                    let u = i & (1 << 8 - o - 1) - 1;
                    for (let i = 0; i < o; i++) {
                        let i = e[n];
                        if ((192 & i) != 128) {
                            n += t(a.MISSING_CONTINUE, n, e, r), u = null;
                            break
                        }
                        u = u << 6 | 63 & i, n++
                    }
                    if (null !== u) {
                        if (u > 1114111) {
                            n += t(a.OUT_OF_RANGE, n - 1 - o, e, r, u);
                            continue
                        }
                        if (u >= 55296 && u <= 57343) {
                            n += t(a.UTF16_SURROGATE, n - 1 - o, e, r, u);
                            continue
                        }
                        if (u <= s) {
                            n += t(a.OVERLONG, n - 1 - o, e, r, u);
                            continue
                        }
                        r.push(u)
                    }
                }
                return r
            }

            function f(e, t = o.current) {
                t != o.current && (u.checkNormalize(), e = e.normalize(t));
                let r = [];
                for (let t = 0; t < e.length; t++) {
                    let n = e.charCodeAt(t);
                    if (n < 128) r.push(n);
                    else if (n < 2048) r.push(n >> 6 | 192), r.push(63 & n | 128);
                    else if ((64512 & n) == 55296) {
                        t++;
                        let i = e.charCodeAt(t);
                        if (t >= e.length || (64512 & i) != 56320) throw Error("invalid utf-8 string");
                        let o = 65536 + ((1023 & n) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(63 & n | 128)
                }
                return (0, s.lE)(r)
            }

            function h(e, t) {
                return d(e, t).map(e => e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(((e -= 65536) >> 10 & 1023) + 55296, (1023 & e) + 56320)).join("")
            }

            function p(e, t = o.current) {
                return d(f(e, t))
            }
        },
        2149: function(e, t, r) {
            "use strict";
            r.d(t, {
                z7: function() {
                    return ei
                },
                Qc: function() {
                    return ec
                }
            });
            var n, i, o = r(89005),
                a = r(93310),
                s = r(9784),
                u = r(75986),
                c = r(43481),
                l = r(18162),
                d = r(58171),
                f = r.n(d),
                h = r(83699),
                p = r.n(h);

            function m(e, t, r) {
                return e(r = {
                    path: t,
                    exports: {},
                    require: function(e, t) {
                        return function() {
                            throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }(e, null == t ? r.path : t)
                    }
                }, r.exports), r.exports
            }
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== r.g ? r.g : "undefined" != typeof self && self;
            var g = b;

            function b(e, t) {
                if (!e) throw Error(t || "Assertion failed")
            }
            b.equal = function(e, t, r) {
                if (e != t) throw Error(r || "Assertion failed: " + e + " != " + t)
            };
            var y = m(function(e, t) {
                    function r(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function n(e) {
                        for (var t = "", n = 0; n < e.length; n++) t += r(e[n].toString(16));
                        return t
                    }
                    t.toArray = function(e, t) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var r = [];
                        if ("string" != typeof e) {
                            for (var n = 0; n < e.length; n++) r[n] = 0 | e[n];
                            return r
                        }
                        if ("hex" === t) {
                            (e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e);
                            for (var n = 0; n < e.length; n += 2) r.push(parseInt(e[n] + e[n + 1], 16))
                        } else
                            for (var n = 0; n < e.length; n++) {
                                var i = e.charCodeAt(n),
                                    o = i >> 8,
                                    a = 255 & i;
                                o ? r.push(o, a) : r.push(a)
                            }
                        return r
                    }, t.zero2 = r, t.toHex = n, t.encode = function(e, t) {
                        return "hex" === t ? n(e) : e
                    }
                }),
                v = m(function(e, t) {
                    t.assert = g, t.toArray = y.toArray, t.zero2 = y.zero2, t.toHex = y.toHex, t.encode = y.encode, t.getNAF = function(e, t, r) {
                        var n = Array(Math.max(e.bitLength(), r) + 1);
                        n.fill(0);
                        for (var i = 1 << t + 1, o = e.clone(), a = 0; a < n.length; a++) {
                            var s, u = o.andln(i - 1);
                            o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
                        }
                        return n
                    }, t.getJSF = function(e, t) {
                        var r = [
                            [],
                            []
                        ];
                        e = e.clone(), t = t.clone();
                        for (var n = 0, i = 0; e.cmpn(-n) > 0 || t.cmpn(-i) > 0;) {
                            var o, a, s, u = e.andln(3) + n & 3,
                                c = t.andln(3) + i & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), a = (1 & u) == 0 ? 0 : (3 == (o = e.andln(7) + n & 7) || 5 === o) && 2 === c ? -u : u, r[0].push(a), s = (1 & c) == 0 ? 0 : (3 == (o = t.andln(7) + i & 7) || 5 === o) && 2 === u ? -c : c, r[1].push(s), 2 * n === a + 1 && (n = 1 - n), 2 * i === s + 1 && (i = 1 - i), e.iushrn(1), t.iushrn(1)
                        }
                        return r
                    }, t.cachedProperty = function(e, t, r) {
                        var n = "_" + t;
                        e.prototype[t] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                        }
                    }, t.parseBytes = function(e) {
                        return "string" == typeof e ? t.toArray(e, "hex") : e
                    }, t.intFromLE = function(e) {
                        return new(f())(e, "hex", "le")
                    }
                }),
                w = v.getNAF,
                E = v.getJSF,
                A = v.assert;

            function P(e, t) {
                this.type = e, this.p = new(f())(t.p, 16), this.red = t.prime ? f().red(t.prime) : f().mont(this.p), this.zero = new(f())(0).toRed(this.red), this.one = new(f())(1).toRed(this.red), this.two = new(f())(2).toRed(this.red), this.n = t.n && new(f())(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = [, , , , ], this._wnafT2 = [, , , , ], this._wnafT3 = [, , , , ], this._wnafT4 = [, , , , ], this._bitLength = this.n ? this.n.bitLength() : 0;
                var r = this.n && this.p.div(this.n);
                !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }

            function x(e, t) {
                this.curve = e, this.type = t, this.precomputed = null
            }
            P.prototype.point = function() {
                throw Error("Not implemented")
            }, P.prototype.validate = function() {
                throw Error("Not implemented")
            }, P.prototype._fixedNafMul = function(e, t) {
                A(e.precomputed);
                var r, n, i = e._getDoubles(),
                    o = w(t, 1, this._bitLength),
                    a = (1 << i.step + 1) - (i.step % 2 == 0 ? 2 : 1);
                a /= 3;
                var s = [];
                for (r = 0; r < o.length; r += i.step) {
                    n = 0;
                    for (var u = r + i.step - 1; u >= r; u--) n = (n << 1) + o[u];
                    s.push(n)
                }
                for (var c = this.jpoint(null, null, null), l = this.jpoint(null, null, null), d = a; d > 0; d--) {
                    for (r = 0; r < s.length; r++)(n = s[r]) === d ? l = l.mixedAdd(i.points[r]) : n === -d && (l = l.mixedAdd(i.points[r].neg()));
                    c = c.add(l)
                }
                return c.toP()
            }, P.prototype._wnafMul = function(e, t) {
                var r = 4,
                    n = e._getNAFPoints(r);
                r = n.wnd;
                for (var i = n.points, o = w(t, r, this._bitLength), a = this.jpoint(null, null, null), s = o.length - 1; s >= 0; s--) {
                    for (var u = 0; s >= 0 && 0 === o[s]; s--) u++;
                    if (s >= 0 && u++, a = a.dblp(u), s < 0) break;
                    var c = o[s];
                    A(0 !== c), a = "affine" === e.type ? c > 0 ? a.mixedAdd(i[c - 1 >> 1]) : a.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? a.add(i[c - 1 >> 1]) : a.add(i[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? a.toP() : a
            }, P.prototype._wnafMulAdd = function(e, t, r, n, i) {
                var o, a, s, u = this._wnafT1,
                    c = this._wnafT2,
                    l = this._wnafT3,
                    d = 0;
                for (o = 0; o < n; o++) {
                    var f = (s = t[o])._getNAFPoints(e);
                    u[o] = f.wnd, c[o] = f.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var h = o - 1,
                        p = o;
                    if (1 !== u[h] || 1 !== u[p]) {
                        l[h] = w(r[h], u[h], this._bitLength), l[p] = w(r[p], u[p], this._bitLength), d = Math.max(l[h].length, d), d = Math.max(l[p].length, d);
                        continue
                    }
                    var m = [t[h], null, null, t[p]];
                    0 === t[h].y.cmp(t[p].y) ? (m[1] = t[h].add(t[p]), m[2] = t[h].toJ().mixedAdd(t[p].neg())) : 0 === t[h].y.cmp(t[p].y.redNeg()) ? (m[1] = t[h].toJ().mixedAdd(t[p]), m[2] = t[h].add(t[p].neg())) : (m[1] = t[h].toJ().mixedAdd(t[p]), m[2] = t[h].toJ().mixedAdd(t[p].neg()));
                    var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                        b = E(r[h], r[p]);
                    for (a = 0, d = Math.max(b[0].length, d), l[h] = Array(d), l[p] = Array(d); a < d; a++) {
                        var y = 0 | b[0][a],
                            v = 0 | b[1][a];
                        l[h][a] = g[(y + 1) * 3 + (v + 1)], l[p][a] = 0, c[h] = m
                    }
                }
                var A = this.jpoint(null, null, null),
                    P = this._wnafT4;
                for (o = d; o >= 0; o--) {
                    for (var x = 0; o >= 0;) {
                        var O = !0;
                        for (a = 0; a < n; a++) P[a] = 0 | l[a][o], 0 !== P[a] && (O = !1);
                        if (!O) break;
                        x++, o--
                    }
                    if (o >= 0 && x++, A = A.dblp(x), o < 0) break;
                    for (a = 0; a < n; a++) {
                        var _ = P[a];
                        0 !== _ && (_ > 0 ? s = c[a][_ - 1 >> 1] : _ < 0 && (s = c[a][-_ - 1 >> 1].neg()), A = "affine" === s.type ? A.mixedAdd(s) : A.add(s))
                    }
                }
                for (o = 0; o < n; o++) c[o] = null;
                return i ? A : A.toP()
            }, P.BasePoint = x, x.prototype.eq = function() {
                throw Error("Not implemented")
            }, x.prototype.validate = function() {
                return this.curve.validate(this)
            }, P.prototype.decodePoint = function(e, t) {
                e = v.toArray(e, t);
                var r = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r) return 6 === e[0] ? A(e[e.length - 1] % 2 == 0) : 7 === e[0] && A(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r) return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                throw Error("Unknown point format")
            }, x.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, x.prototype._encode = function(e) {
                var t = this.curve.p.byteLength(),
                    r = this.getX().toArray("be", t);
                return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t))
            }, x.prototype.encode = function(e, t) {
                return v.encode(this._encode(t), e)
            }, x.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var t = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this
            }, x.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var t = this.precomputed.doubles;
                return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step)
            }, x.prototype._getDoubles = function(e, t) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var r = [this], n = this, i = 0; i < t; i += e) {
                    for (var o = 0; o < e; o++) n = n.dbl();
                    r.push(n)
                }
                return {
                    step: e,
                    points: r
                }
            }, x.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var t = [this], r = (1 << e) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) t[i] = t[i - 1].add(n);
                return {
                    wnd: e,
                    points: t
                }
            }, x.prototype._getBeta = function() {
                return null
            }, x.prototype.dblp = function(e) {
                for (var t = this, r = 0; r < e; r++) t = t.dbl();
                return t
            };
            var O = m(function(e) {
                    "function" == typeof Object.create ? e.exports = function(e, t) {
                        t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, t) {
                        if (t) {
                            e.super_ = t;
                            var r = function() {};
                            r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
                        }
                    }
                }),
                _ = v.assert;

            function I(e) {
                P.call(this, "short", e), this.a = new(f())(e.a, 16).toRed(this.red), this.b = new(f())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = [, , , , ], this._endoWnafT2 = [, , , , ]
            }

            function T(e, t, r, n) {
                P.BasePoint.call(this, e, "affine"), null === t && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(f())(t, 16), this.y = new(f())(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function C(e, t, r, n) {
                P.BasePoint.call(this, e, "jacobian"), null === t && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(f())(0)) : (this.x = new(f())(t, 16), this.y = new(f())(r, 16), this.z = new(f())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            O(I, P), I.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    if (e.beta) t = new(f())(e.beta, 16).toRed(this.red);
                    else {
                        var t, r, n, i = this._getEndoRoots(this.p);
                        t = (t = 0 > i[0].cmp(i[1]) ? i[0] : i[1]).toRed(this.red)
                    }
                    if (e.lambda) r = new(f())(e.lambda, 16);
                    else {
                        var o = this._getEndoRoots(this.n);
                        0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(t)) ? r = o[0] : (r = o[1], _(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))))
                    }
                    return n = e.basis ? e.basis.map(function(e) {
                        return {
                            a: new(f())(e.a, 16),
                            b: new(f())(e.b, 16)
                        }
                    }) : this._getEndoBasis(r), {
                        beta: t,
                        lambda: r,
                        basis: n
                    }
                }
            }, I.prototype._getEndoRoots = function(e) {
                var t = e === this.p ? this.red : f().mont(e),
                    r = new(f())(2).toRed(t).redInvm(),
                    n = r.redNeg(),
                    i = new(f())(3).toRed(t).redNeg().redSqrt().redMul(r);
                return [n.redAdd(i).fromRed(), n.redSub(i).fromRed()]
            }, I.prototype._getEndoBasis = function(e) {
                for (var t, r, n, i, o, a, s, u, c, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = e, h = this.n.clone(), p = new(f())(1), m = new(f())(0), g = new(f())(0), b = new(f())(1), y = 0; 0 !== d.cmpn(0);) {
                    var v = h.div(d);
                    u = h.sub(v.mul(d)), c = g.sub(v.mul(p));
                    var w = b.sub(v.mul(m));
                    if (!n && 0 > u.cmp(l)) t = s.neg(), r = p, n = u.neg(), i = c;
                    else if (n && 2 == ++y) break;
                    s = u, h = d, d = u, g = p, p = c, b = m, m = w
                }
                o = u.neg(), a = c;
                var E = n.sqr().add(i.sqr());
                return o.sqr().add(a.sqr()).cmp(E) >= 0 && (o = t, a = r), n.negative && (n = n.neg(), i = i.neg()), o.negative && (o = o.neg(), a = a.neg()), [{
                    a: n,
                    b: i
                }, {
                    a: o,
                    b: a
                }]
            }, I.prototype._endoSplit = function(e) {
                var t = this.endo.basis,
                    r = t[0],
                    n = t[1],
                    i = n.b.mul(e).divRound(this.n),
                    o = r.b.neg().mul(e).divRound(this.n),
                    a = i.mul(r.a),
                    s = o.mul(n.a),
                    u = i.mul(r.b),
                    c = o.mul(n.b);
                return {
                    k1: e.sub(a).sub(s),
                    k2: u.add(c).neg()
                }
            }, I.prototype.pointFromX = function(e, t) {
                (e = new(f())(e, 16)).red || (e = e.toRed(this.red));
                var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    n = r.redSqrt();
                if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw Error("invalid point");
                var i = n.fromRed().isOdd();
                return (t && !i || !t && i) && (n = n.redNeg()), this.point(e, n)
            }, I.prototype.validate = function(e) {
                if (e.inf) return !0;
                var t = e.x,
                    r = e.y,
                    n = this.a.redMul(t),
                    i = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
                return 0 === r.redSqr().redISub(i).cmpn(0)
            }, I.prototype._endoWnafMulAdd = function(e, t, r) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < e.length; o++) {
                    var a = this._endoSplit(t[o]),
                        s = e[o],
                        u = s._getBeta();
                    a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
                }
                for (var c = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
                return c
            }, O(T, P.BasePoint), I.prototype.point = function(e, t, r) {
                return new T(this, e, t, r)
            }, I.prototype.pointFromJSON = function(e, t) {
                return T.fromJSON(this, e, t)
            }, T.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var r = this.curve,
                            n = function(e) {
                                return r.point(e.x.redMul(r.endo.beta), e.y)
                            };
                        e.beta = t, t.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(n)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(n)
                            }
                        }
                    }
                    return t
                }
            }, T.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, T.fromJSON = function(e, t, r) {
                "string" == typeof t && (t = JSON.parse(t));
                var n = e.point(t[0], t[1], r);
                if (!t[2]) return n;

                function i(t) {
                    return e.point(t[0], t[1], r)
                }
                var o = t[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                }, n
            }, T.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, T.prototype.isInfinity = function() {
                return this.inf
            }, T.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e) || 0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var t = this.y.redSub(e.y);
                0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
                var r = t.redSqr().redISub(this.x).redISub(e.x),
                    n = t.redMul(this.x.redSub(r)).redISub(this.y);
                return this.curve.point(r, n)
            }, T.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var t = this.curve.a,
                    r = this.x.redSqr(),
                    n = e.redInvm(),
                    i = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),
                    o = i.redSqr().redISub(this.x.redAdd(this.x)),
                    a = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, a)
            }, T.prototype.getX = function() {
                return this.x.fromRed()
            }, T.prototype.getY = function() {
                return this.y.fromRed()
            }, T.prototype.mul = function(e) {
                return (e = new(f())(e, 16), this.isInfinity()) ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, T.prototype.mulAdd = function(e, t, r) {
                var n = [this, t],
                    i = [e, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }, T.prototype.jmulAdd = function(e, t, r) {
                var n = [this, t],
                    i = [e, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }, T.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, T.prototype.neg = function(e) {
                if (this.inf) return this;
                var t = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var r = this.precomputed,
                        n = function(e) {
                            return e.neg()
                        };
                    t.precomputed = {
                        naf: r.naf && {
                            wnd: r.naf.wnd,
                            points: r.naf.points.map(n)
                        },
                        doubles: r.doubles && {
                            step: r.doubles.step,
                            points: r.doubles.points.map(n)
                        }
                    }
                }
                return t
            }, T.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, O(C, P.BasePoint), I.prototype.jpoint = function(e, t, r) {
                return new C(this, e, t, r)
            }, C.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    t = e.redSqr(),
                    r = this.x.redMul(t),
                    n = this.y.redMul(t).redMul(e);
                return this.curve.point(r, n)
            }, C.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, C.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var t = e.z.redSqr(),
                    r = this.z.redSqr(),
                    n = this.x.redMul(t),
                    i = e.x.redMul(r),
                    o = this.y.redMul(t.redMul(e.z)),
                    a = e.y.redMul(r.redMul(this.z)),
                    s = n.redSub(i),
                    u = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = s.redSqr(),
                    l = c.redMul(s),
                    d = n.redMul(c),
                    f = u.redSqr().redIAdd(l).redISub(d).redISub(d),
                    h = u.redMul(d.redISub(f)).redISub(o.redMul(l)),
                    p = this.z.redMul(e.z).redMul(s);
                return this.curve.jpoint(f, h, p)
            }, C.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var t = this.z.redSqr(),
                    r = this.x,
                    n = e.x.redMul(t),
                    i = this.y,
                    o = e.y.redMul(t).redMul(this.z),
                    a = r.redSub(n),
                    s = i.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr(),
                    c = u.redMul(a),
                    l = r.redMul(u),
                    d = s.redSqr().redIAdd(c).redISub(l).redISub(l),
                    f = s.redMul(l.redISub(d)).redISub(i.redMul(c)),
                    h = this.z.redMul(a);
                return this.curve.jpoint(d, f, h)
            }, C.prototype.dblp = function(e) {
                if (0 === e || this.isInfinity()) return this;
                if (!e) return this.dbl();
                if (this.curve.zeroA || this.curve.threeA) {
                    var t, r = this;
                    for (t = 0; t < e; t++) r = r.dbl();
                    return r
                }
                var n = this.curve.a,
                    i = this.curve.tinv,
                    o = this.x,
                    a = this.y,
                    s = this.z,
                    u = s.redSqr().redSqr(),
                    c = a.redAdd(a);
                for (t = 0; t < e; t++) {
                    var l = o.redSqr(),
                        d = c.redSqr(),
                        f = d.redSqr(),
                        h = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                        p = o.redMul(d),
                        m = h.redSqr().redISub(p.redAdd(p)),
                        g = p.redISub(m),
                        b = h.redMul(g);
                    b = b.redIAdd(b).redISub(f);
                    var y = c.redMul(s);
                    t + 1 < e && (u = u.redMul(f)), o = m, s = y, c = b
                }
                return this.curve.jpoint(o, c.redMul(i), s)
            }, C.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, C.prototype._zeroDbl = function() {
                if (this.zOne) {
                    var e, t, r, n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n),
                        u = s.redSqr().redISub(a).redISub(a),
                        c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, t = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
                } else {
                    var l = this.x.redSqr(),
                        d = this.y.redSqr(),
                        f = d.redSqr(),
                        h = this.x.redAdd(d).redSqr().redISub(l).redISub(f);
                    h = h.redIAdd(h);
                    var p = l.redAdd(l).redIAdd(l),
                        m = p.redSqr(),
                        g = f.redIAdd(f);
                    g = (g = g.redIAdd(g)).redIAdd(g), e = m.redISub(h).redISub(h), t = p.redMul(h.redISub(e)).redISub(g), r = (r = this.y.redMul(this.z)).redIAdd(r)
                }
                return this.curve.jpoint(e, t, r)
            }, C.prototype._threeDbl = function() {
                if (this.zOne) {
                    var e, t, r, n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                        u = s.redSqr().redISub(a).redISub(a);
                    e = u;
                    var c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), t = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
                } else {
                    var l = this.z.redSqr(),
                        d = this.y.redSqr(),
                        f = this.x.redMul(d),
                        h = this.x.redSub(l).redMul(this.x.redAdd(l));
                    h = h.redAdd(h).redIAdd(h);
                    var p = f.redIAdd(f),
                        m = (p = p.redIAdd(p)).redAdd(p);
                    e = h.redSqr().redISub(m), r = this.y.redAdd(this.z).redSqr().redISub(d).redISub(l);
                    var g = d.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), t = h.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, t, r)
            }, C.prototype._dbl = function() {
                var e = this.curve.a,
                    t = this.x,
                    r = this.y,
                    n = this.z,
                    i = n.redSqr().redSqr(),
                    o = t.redSqr(),
                    a = r.redSqr(),
                    s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
                    u = t.redAdd(t),
                    c = (u = u.redIAdd(u)).redMul(a),
                    l = s.redSqr().redISub(c.redAdd(c)),
                    d = c.redISub(l),
                    f = a.redSqr();
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var h = s.redMul(d).redISub(f),
                    p = r.redAdd(r).redMul(n);
                return this.curve.jpoint(l, h, p)
            }, C.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    t = this.y.redSqr(),
                    r = this.z.redSqr(),
                    n = t.redSqr(),
                    i = e.redAdd(e).redIAdd(e),
                    o = i.redSqr(),
                    a = this.x.redAdd(t).redSqr().redISub(e).redISub(n),
                    s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                    u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                    l = t.redMul(c);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var d = this.x.redMul(s).redISub(l);
                d = (d = d.redIAdd(d)).redIAdd(d);
                var f = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var h = this.z.redAdd(a).redSqr().redISub(r).redISub(s);
                return this.curve.jpoint(d, f, h)
            }, C.prototype.mul = function(e, t) {
                return e = new(f())(e, t), this.curve._wnafMul(this, e)
            }, C.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var t = this.z.redSqr(),
                    r = e.z.redSqr();
                if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
                var n = t.redMul(this.z),
                    i = r.redMul(e.z);
                return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)
            }, C.prototype.eqXToP = function(e) {
                var t = this.z.redSqr(),
                    r = e.toRed(this.curve.red).redMul(t);
                if (0 === this.x.cmp(r)) return !0;
                for (var n = e.clone(), i = this.curve.redN.redMul(t);;) {
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
                }
            }, C.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, C.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var S = m(function(e, t) {
                    t.base = P, t.short = I, t.mont = null, t.edwards = null
                }),
                k = m(function(e, t) {
                    var r, n = v.assert;

                    function i(e) {
                        "short" === e.type ? this.curve = new S.short(e) : "edwards" === e.type ? this.curve = new S.edwards(e) : this.curve = new S.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, n(this.g.validate(), "Invalid curve"), n(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function o(e, r) {
                        Object.defineProperty(t, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var n = new i(r);
                                return Object.defineProperty(t, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: n
                                }), n
                            }
                        })
                    }
                    t.PresetCurve = i, o("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: p().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), o("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: p().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), o("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: p().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), o("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: p().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), o("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: p().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), o("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: p().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), o("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: p().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        r = null.crash()
                    } catch (e) {
                        r = void 0
                    }
                    o("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: p().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                    })
                });

            function M(e) {
                if (!(this instanceof M)) return new M(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var t = y.toArray(e.entropy, e.entropyEnc || "hex"),
                    r = y.toArray(e.nonce, e.nonceEnc || "hex"),
                    n = y.toArray(e.pers, e.persEnc || "hex");
                g(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, n)
            }
            M.prototype._init = function(e, t, r) {
                var n = e.concat(t).concat(r);
                this.K = Array(this.outLen / 8), this.V = Array(this.outLen / 8);
                for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
            }, M.prototype._hmac = function() {
                return new(p()).hmac(this.hash, this.K)
            }, M.prototype._update = function(e) {
                var t = this._hmac().update(this.V).update([0]);
                e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, M.prototype.reseed = function(e, t, r, n) {
                "string" != typeof t && (n = r, r = t, t = null), e = y.toArray(e, t), r = y.toArray(r, n), g(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(r || [])), this._reseed = 1
            }, M.prototype.generate = function(e, t, r, n) {
                if (this._reseed > this.reseedInterval) throw Error("Reseed is required");
                "string" != typeof t && (n = r, r = t, t = null), r && (r = y.toArray(r, n || "hex"), this._update(r));
                for (var i = []; i.length < e;) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                var o = i.slice(0, e);
                return this._update(r), this._reseed++, y.encode(o, t)
            };
            var B = v.assert;

            function N(e, t) {
                this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc)
            }
            N.fromPublic = function(e, t, r) {
                return t instanceof N ? t : new N(e, {
                    pub: t,
                    pubEnc: r
                })
            }, N.fromPrivate = function(e, t, r) {
                return t instanceof N ? t : new N(e, {
                    priv: t,
                    privEnc: r
                })
            }, N.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, N.prototype.getPublic = function(e, t) {
                return ("string" == typeof e && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t) ? this.pub.encode(t, e) : this.pub
            }, N.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, N.prototype._importPrivate = function(e, t) {
                this.priv = new(f())(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, N.prototype._importPublic = function(e, t) {
                if (e.x || e.y) {
                    "mont" === this.ec.curve.type ? B(e.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && B(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
                    return
                }
                this.pub = this.ec.curve.decodePoint(e, t)
            }, N.prototype.derive = function(e) {
                return e.validate() || B(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, N.prototype.sign = function(e, t, r) {
                return this.ec.sign(e, this, t, r)
            }, N.prototype.verify = function(e, t) {
                return this.ec.verify(e, t, this)
            }, N.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var R = v.assert;

            function D(e, t) {
                if (e instanceof D) return e;
                this._importDER(e, t) || (R(e.r && e.s, "Signature without r or s"), this.r = new(f())(e.r, 16), this.s = new(f())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }

            function j() {
                this.place = 0
            }

            function F(e, t) {
                var r = e[t.place++];
                if (!(128 & r)) return r;
                var n = 15 & r;
                if (0 === n || n > 4) return !1;
                for (var i = 0, o = 0, a = t.place; o < n; o++, a++) i <<= 8, i |= e[a], i >>>= 0;
                return !(i <= 127) && (t.place = a, i)
            }

            function U(e) {
                for (var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r;) t++;
                return 0 === t ? e : e.slice(t)
            }

            function L(e, t) {
                if (t < 128) {
                    e.push(t);
                    return
                }
                var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                for (e.push(128 | r); --r;) e.push(t >>> (r << 3) & 255);
                e.push(t)
            }
            D.prototype._importDER = function(e, t) {
                e = v.toArray(e, t);
                var r = new j;
                if (48 !== e[r.place++]) return !1;
                var n = F(e, r);
                if (!1 === n || n + r.place !== e.length || 2 !== e[r.place++]) return !1;
                var i = F(e, r);
                if (!1 === i) return !1;
                var o = e.slice(r.place, i + r.place);
                if (r.place += i, 2 !== e[r.place++]) return !1;
                var a = F(e, r);
                if (!1 === a || e.length !== a + r.place) return !1;
                var s = e.slice(r.place, a + r.place);
                if (0 === o[0]) {
                    if (!(128 & o[1])) return !1;
                    o = o.slice(1)
                }
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1)
                }
                return this.r = new(f())(o), this.s = new(f())(s), this.recoveryParam = null, !0
            }, D.prototype.toDER = function(e) {
                var t = this.r.toArray(),
                    r = this.s.toArray();
                for (128 & t[0] && (t = [0].concat(t)), 128 & r[0] && (r = [0].concat(r)), t = U(t), r = U(r); !r[0] && !(128 & r[1]);) r = r.slice(1);
                var n = [2];
                L(n, t.length), (n = n.concat(t)).push(2), L(n, r.length);
                var i = n.concat(r),
                    o = [48];
                return L(o, i.length), o = o.concat(i), v.encode(o, e)
            };
            var q = function() {
                    throw Error("unsupported")
                },
                z = v.assert;

            function $(e) {
                if (!(this instanceof $)) return new $(e);
                "string" == typeof e && (z(Object.prototype.hasOwnProperty.call(k, e), "Unknown curve " + e), e = k[e]), e instanceof k.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            $.prototype.keyPair = function(e) {
                return new N(this, e)
            }, $.prototype.keyFromPrivate = function(e, t) {
                return N.fromPrivate(this, e, t)
            }, $.prototype.keyFromPublic = function(e, t) {
                return N.fromPublic(this, e, t)
            }, $.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var t = new M({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || q(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), r = this.n.byteLength(), n = this.n.sub(new(f())(2));;) {
                    var i = new(f())(t.generate(r));
                    if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i)
                }
            }, $.prototype._truncateToN = function(e, t) {
                var r = 8 * e.byteLength() - this.n.bitLength();
                return (r > 0 && (e = e.ushrn(r)), !t && e.cmp(this.n) >= 0) ? e.sub(this.n) : e
            }, $.prototype.sign = function(e, t, r, n) {
                "object" == typeof r && (n = r, r = null), n || (n = {}), t = this.keyFromPrivate(t, r), e = this._truncateToN(new(f())(e, 16));
                for (var i = this.n.byteLength(), o = t.getPrivate().toArray("be", i), a = e.toArray("be", i), s = new M({
                        hash: this.hash,
                        entropy: o,
                        nonce: a,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), u = this.n.sub(new(f())(1)), c = 0;; c++) {
                    var l = n.k ? n.k(c) : new(f())(s.generate(this.n.byteLength()));
                    if (!(0 >= (l = this._truncateToN(l, !0)).cmpn(1) || l.cmp(u) >= 0)) {
                        var d = this.g.mul(l);
                        if (!d.isInfinity()) {
                            var h = d.getX(),
                                p = h.umod(this.n);
                            if (0 !== p.cmpn(0)) {
                                var m = l.invm(this.n).mul(p.mul(t.getPrivate()).iadd(e));
                                if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                                    var g = (d.getY().isOdd() ? 1 : 0) | (0 !== h.cmp(p) ? 2 : 0);
                                    return n.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m), g ^= 1), new D({
                                        r: p,
                                        s: m,
                                        recoveryParam: g
                                    })
                                }
                            }
                        }
                    }
                }
            }, $.prototype.verify = function(e, t, r, n) {
                e = this._truncateToN(new(f())(e, 16)), r = this.keyFromPublic(r, n);
                var i, o = (t = new D(t, "hex")).r,
                    a = t.s;
                if (0 > o.cmpn(1) || o.cmp(this.n) >= 0 || 0 > a.cmpn(1) || a.cmp(this.n) >= 0) return !1;
                var s = a.invm(this.n),
                    u = s.mul(e).umod(this.n),
                    c = s.mul(o).umod(this.n);
                return this.curve._maxwellTrick ? !(i = this.g.jmulAdd(u, r.getPublic(), c)).isInfinity() && i.eqXToP(o) : !(i = this.g.mulAdd(u, r.getPublic(), c)).isInfinity() && 0 === i.getX().umod(this.n).cmp(o)
            }, $.prototype.recoverPubKey = function(e, t, r, n) {
                z((3 & r) === r, "The recovery param is more than two bits"), t = new D(t, n);
                var i = this.n,
                    o = new(f())(e),
                    a = t.r,
                    s = t.s,
                    u = 1 & r,
                    c = r >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && c) throw Error("Unable to find sencond key candinate");
                a = c ? this.curve.pointFromX(a.add(this.curve.n), u) : this.curve.pointFromX(a, u);
                var l = t.r.invm(i),
                    d = i.sub(o).mul(l).umod(i),
                    h = s.mul(l).umod(i);
                return this.g.mulAdd(d, a, h)
            }, $.prototype.getKeyRecoveryParam = function(e, t, r, n) {
                if (null !== (t = new D(t, n)).recoveryParam) return t.recoveryParam;
                for (var i, o = 0; o < 4; o++) {
                    try {
                        i = this.recoverPubKey(e, t, o)
                    } catch (e) {
                        continue
                    }
                    if (i.eq(r)) return o
                }
                throw Error("Unable to find valid recovery factor")
            };
            var H = m(function(e, t) {
                    t.version = "6.5.4", t.utils = v, t.rand = function() {
                        throw Error("unsupported")
                    }, t.curve = S, t.curves = k, t.ec = $, t.eddsa = null
                }).ec,
                G = r(36173),
                W = r(13421);
            let K = new W.Yd("signing-key/5.7.0"),
                Y = null;

            function V() {
                return Y || (Y = new H("secp256k1")), Y
            }
            class Q {
                constructor(e) {
                    (0, G.zG)(this, "curve", "secp256k1"), (0, G.zG)(this, "privateKey", (0, s.Dv)(e)), 32 !== (0, s.E1)(this.privateKey) && K.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    let t = V().keyFromPrivate((0, s.lE)(this.privateKey));
                    (0, G.zG)(this, "publicKey", "0x" + t.getPublic(!1, "hex")), (0, G.zG)(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), (0, G.zG)(this, "_isSigningKey", !0)
                }
                _addPoint(e) {
                    let t = V().keyFromPublic((0, s.lE)(this.publicKey)),
                        r = V().keyFromPublic((0, s.lE)(e));
                    return "0x" + t.pub.add(r.pub).encodeCompressed("hex")
                }
                signDigest(e) {
                    let t = V().keyFromPrivate((0, s.lE)(this.privateKey)),
                        r = (0, s.lE)(e);
                    32 !== r.length && K.throwArgumentError("bad digest length", "digest", e);
                    let n = t.sign(r, {
                        canonical: !0
                    });
                    return (0, s.N)({
                        recoveryParam: n.recoveryParam,
                        r: (0, s.$m)("0x" + n.r.toString(16), 32),
                        s: (0, s.$m)("0x" + n.s.toString(16), 32)
                    })
                }
                computeSharedSecret(e) {
                    let t = V().keyFromPrivate((0, s.lE)(this.privateKey)),
                        r = V().keyFromPublic((0, s.lE)(J(e)));
                    return (0, s.$m)("0x" + t.derive(r.getPublic()).toString(16), 32)
                }
                static isSigningKey(e) {
                    return !!(e && e._isSigningKey)
                }
            }

            function J(e, t) {
                let r = (0, s.lE)(e);
                if (32 === r.length) {
                    let e = new Q(r);
                    return t ? "0x" + V().keyFromPrivate(r).getPublic(!0, "hex") : e.publicKey
                }
                return 33 === r.length ? t ? (0, s.Dv)(r) : "0x" + V().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? t ? "0x" + V().keyFromPublic(r).getPublic(!0, "hex") : (0, s.Dv)(r) : K.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            let Z = new W.Yd("transactions/5.7.0");

            function X(e) {
                return "0x" === e ? null : (0, o.Kn)(e)
            }

            function ee(e) {
                return "0x" === e ? u._Y : a.O$.from(e)
            }

            function et(e, t) {
                return function(e) {
                    let t = J(e);
                    return (0, o.Kn)((0, s.p3)((0, c.w)((0, s.p3)(t, 1)), 12))
                }(function(e, t) {
                    let r = (0, s.N)(t),
                        n = {
                            r: (0, s.lE)(r.r),
                            s: (0, s.lE)(r.s)
                        };
                    return "0x" + V().recoverPubKey((0, s.lE)(e), n, r.recoveryParam).encode("hex", !1)
                }((0, s.lE)(e), t))
            }

            function er(e, t) {
                let r = (0, s.G1)(a.O$.from(e).toHexString());
                return r.length > 32 && Z.throwArgumentError("invalid length for " + t, "transaction:" + t, e), r
            }

            function en(e, t) {
                return {
                    address: (0, o.Kn)(e),
                    storageKeys: (t || []).map((t, r) => (32 !== (0, s.E1)(t) && Z.throwArgumentError("invalid access list storageKey", `accessList[${e}:${r}]`, t), t.toLowerCase()))
                }
            }

            function ei(e) {
                if (Array.isArray(e)) return e.map((e, t) => Array.isArray(e) ? (e.length > 2 && Z.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${t}]`, e), en(e[0], e[1])) : en(e.address, e.storageKeys));
                let t = Object.keys(e).map(t => {
                    let r = e[t].reduce((e, t) => (e[t] = !0, e), {});
                    return en(t, Object.keys(r).sort())
                });
                return t.sort((e, t) => e.address.localeCompare(t.address)), t
            }

            function eo(e) {
                return ei(e).map(e => [e.address, e.storageKeys])
            }

            function ea(e, t) {
                if (null != e.gasPrice) {
                    let t = a.O$.from(e.gasPrice),
                        r = a.O$.from(e.maxFeePerGas || 0);
                    t.eq(r) || Z.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: t,
                        maxFeePerGas: r
                    })
                }
                let r = [er(e.chainId || 0, "chainId"), er(e.nonce || 0, "nonce"), er(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), er(e.maxFeePerGas || 0, "maxFeePerGas"), er(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, o.Kn)(e.to) : "0x", er(e.value || 0, "value"), e.data || "0x", eo(e.accessList || [])];
                if (t) {
                    let e = (0, s.N)(t);
                    r.push(er(e.recoveryParam, "recoveryParam")), r.push((0, s.G1)(e.r)), r.push((0, s.G1)(e.s))
                }
                return (0, s.xs)(["0x02", l.c(r)])
            }

            function es(e, t) {
                let r = [er(e.chainId || 0, "chainId"), er(e.nonce || 0, "nonce"), er(e.gasPrice || 0, "gasPrice"), er(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, o.Kn)(e.to) : "0x", er(e.value || 0, "value"), e.data || "0x", eo(e.accessList || [])];
                if (t) {
                    let e = (0, s.N)(t);
                    r.push(er(e.recoveryParam, "recoveryParam")), r.push((0, s.G1)(e.r)), r.push((0, s.G1)(e.s))
                }
                return (0, s.xs)(["0x01", l.c(r)])
            }

            function eu(e, t, r) {
                try {
                    let r = ee(t[0]).toNumber();
                    if (0 !== r && 1 !== r) throw Error("bad recid");
                    e.v = r
                } catch (e) {
                    Z.throwArgumentError("invalid v for transaction type: 1", "v", t[0])
                }
                e.r = (0, s.$m)(t[1], 32), e.s = (0, s.$m)(t[2], 32);
                try {
                    let t = (0, c.w)(r(e));
                    e.from = et(t, {
                        r: e.r,
                        s: e.s,
                        recoveryParam: e.v
                    })
                } catch (e) {}
            }

            function ec(e) {
                let t = (0, s.lE)(e);
                if (t[0] > 127) return function(e) {
                    let t = l.J(e);
                    9 !== t.length && 6 !== t.length && Z.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                    let r = {
                        nonce: ee(t[0]).toNumber(),
                        gasPrice: ee(t[1]),
                        gasLimit: ee(t[2]),
                        to: X(t[3]),
                        value: ee(t[4]),
                        data: t[5],
                        chainId: 0
                    };
                    if (6 === t.length) return r;
                    try {
                        r.v = a.O$.from(t[6]).toNumber()
                    } catch (e) {
                        return r
                    }
                    if (r.r = (0, s.$m)(t[7], 32), r.s = (0, s.$m)(t[8], 32), a.O$.from(r.r).isZero() && a.O$.from(r.s).isZero()) r.chainId = r.v, r.v = 0;
                    else {
                        r.chainId = Math.floor((r.v - 35) / 2), r.chainId < 0 && (r.chainId = 0);
                        let n = r.v - 27,
                            i = t.slice(0, 6);
                        0 !== r.chainId && (i.push((0, s.Dv)(r.chainId)), i.push("0x"), i.push("0x"), n -= 2 * r.chainId + 8);
                        let o = (0, c.w)(l.c(i));
                        try {
                            r.from = et(o, {
                                r: (0, s.Dv)(r.r),
                                s: (0, s.Dv)(r.s),
                                recoveryParam: n
                            })
                        } catch (e) {}
                        r.hash = (0, c.w)(e)
                    }
                    return r.type = null, r
                }(t);
                switch (t[0]) {
                    case 1:
                        return function(e) {
                            let t = l.J(e.slice(1));
                            8 !== t.length && 11 !== t.length && Z.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, s.Dv)(e));
                            let r = {
                                type: 1,
                                chainId: ee(t[0]).toNumber(),
                                nonce: ee(t[1]).toNumber(),
                                gasPrice: ee(t[2]),
                                gasLimit: ee(t[3]),
                                to: X(t[4]),
                                value: ee(t[5]),
                                data: t[6],
                                accessList: ei(t[7])
                            };
                            return 8 === t.length || (r.hash = (0, c.w)(e), eu(r, t.slice(8), es)), r
                        }(t);
                    case 2:
                        return function(e) {
                            let t = l.J(e.slice(1));
                            9 !== t.length && 12 !== t.length && Z.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, s.Dv)(e));
                            let r = ee(t[2]),
                                n = ee(t[3]),
                                i = {
                                    type: 2,
                                    chainId: ee(t[0]).toNumber(),
                                    nonce: ee(t[1]).toNumber(),
                                    maxPriorityFeePerGas: r,
                                    maxFeePerGas: n,
                                    gasPrice: null,
                                    gasLimit: ee(t[4]),
                                    to: X(t[5]),
                                    value: ee(t[6]),
                                    data: t[7],
                                    accessList: ei(t[8])
                                };
                            return 9 === t.length || (i.hash = (0, c.w)(e), eu(i, t.slice(9), ea)), i
                        }(t)
                }
                return Z.throwError(`unsupported transaction type: ${t[0]}`, W.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: t[0]
                })
            }(n = i || (i = {}))[n.legacy = 0] = "legacy", n[n.eip2930 = 1] = "eip2930", n[n.eip1559 = 2] = "eip1559"
        },
        54421: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCurve = t.getHash = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(90950),
                i = r(85758),
                o = r(39140);

            function a(e) {
                return {
                    hash: e,
                    hmac: (t, ...r) => (0, n.hmac)(e, t, (0, i.concatBytes)(...r)),
                    randomBytes: i.randomBytes
                }
            }
            t.getHash = a, t.createCurve = function(e, t) {
                let r = t => (0, o.weierstrass)({ ...e,
                    ...a(t)
                });
                return Object.freeze({ ...r(t),
                    create: r
                })
            }
        },
        81924: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateBasic = t.wNAF = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(45758),
                i = r(28153),
                o = BigInt(0),
                a = BigInt(1);
            t.wNAF = function(e, t) {
                let r = (e, t) => {
                        let r = t.negate();
                        return e ? r : t
                    },
                    n = e => ({
                        windows: Math.ceil(t / e) + 1,
                        windowSize: 2 ** (e - 1)
                    });
                return {
                    constTimeNegate: r,
                    unsafeLadder(t, r) {
                        let n = e.ZERO,
                            i = t;
                        for (; r > o;) r & a && (n = n.add(i)), i = i.double(), r >>= a;
                        return n
                    },
                    precomputeWindow(e, t) {
                        let {
                            windows: r,
                            windowSize: i
                        } = n(t), o = [], a = e, s = a;
                        for (let e = 0; e < r; e++) {
                            s = a, o.push(s);
                            for (let e = 1; e < i; e++) s = s.add(a), o.push(s);
                            a = s.double()
                        }
                        return o
                    },
                    wNAF(t, i, o) {
                        let {
                            windows: s,
                            windowSize: u
                        } = n(t), c = e.ZERO, l = e.BASE, d = BigInt(2 ** t - 1), f = 2 ** t, h = BigInt(t);
                        for (let e = 0; e < s; e++) {
                            let t = e * u,
                                n = Number(o & d);
                            o >>= h, n > u && (n -= f, o += a);
                            let s = t + Math.abs(n) - 1,
                                p = e % 2 != 0,
                                m = n < 0;
                            0 === n ? l = l.add(r(p, i[t])) : c = c.add(r(m, i[s]))
                        }
                        return {
                            p: c,
                            f: l
                        }
                    },
                    wNAFCached(e, t, r, n) {
                        let i = e._WINDOW_SIZE || 1,
                            o = t.get(e);
                        return o || (o = this.precomputeWindow(e, i), 1 !== i && t.set(e, n(o))), this.wNAF(i, o, r)
                    }
                }
            }, t.validateBasic = function(e) {
                return (0, n.validateField)(e.Fp), (0, i.validateObject)(e, {
                    n: "bigint",
                    h: "bigint",
                    Gx: "field",
                    Gy: "field"
                }, {
                    nBitLength: "isSafeInteger",
                    nByteLength: "isSafeInteger"
                }), Object.freeze({ ...(0, n.nLength)(e.n, e.nBitLength),
                    ...e,
                    p: e.Fp.ORDER
                })
            }
        },
        10452: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createHasher = t.isogenyMap = t.hash_to_field = t.expand_message_xof = t.expand_message_xmd = void 0;
            let n = r(45758),
                i = r(28153),
                o = i.bytesToNumberBE;

            function a(e, t) {
                if (e < 0 || e >= 1 << 8 * t) throw Error(`bad I2OSP call: value=${e} length=${t}`);
                let r = Array.from({
                    length: t
                }).fill(0);
                for (let n = t - 1; n >= 0; n--) r[n] = 255 & e, e >>>= 8;
                return new Uint8Array(r)
            }

            function s(e) {
                if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected")
            }

            function u(e) {
                if (!Number.isSafeInteger(e)) throw Error("number expected")
            }

            function c(e, t, r, n) {
                s(e), s(t), u(r), t.length > 255 && (t = n((0, i.concatBytes)((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"), t)));
                let {
                    outputLen: o,
                    blockLen: c
                } = n, l = Math.ceil(r / o);
                if (l > 255) throw Error("Invalid xmd length");
                let d = (0, i.concatBytes)(t, a(t.length, 1)),
                    f = a(0, c),
                    h = a(r, 2),
                    p = Array(l),
                    m = n((0, i.concatBytes)(f, e, h, a(0, 1), d));
                p[0] = n((0, i.concatBytes)(m, a(1, 1), d));
                for (let e = 1; e <= l; e++) {
                    let t = [function(e, t) {
                        let r = new Uint8Array(e.length);
                        for (let n = 0; n < e.length; n++) r[n] = e[n] ^ t[n];
                        return r
                    }(m, p[e - 1]), a(e + 1, 1), d];
                    p[e] = n((0, i.concatBytes)(...t))
                }
                return (0, i.concatBytes)(...p).slice(0, r)
            }

            function l(e, t, r, n, o) {
                if (s(e), s(t), u(r), t.length > 255 && (t = o.create({
                        dkLen: Math.ceil(2 * n / 8)
                    }).update((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()), r > 65535 || t.length > 255) throw Error("expand_message_xof: invalid lenInBytes");
                return o.create({
                    dkLen: r
                }).update(e).update(a(r, 2)).update(t).update(a(t.length, 1)).digest()
            }

            function d(e, t, r) {
                let a;
                (0, i.validateObject)(r, {
                    DST: "stringOrUint8Array",
                    p: "bigint",
                    m: "isSafeInteger",
                    k: "isSafeInteger",
                    hash: "hash"
                });
                let {
                    p: d,
                    k: f,
                    m: h,
                    hash: p,
                    expand: m,
                    DST: g
                } = r;
                s(e), u(t);
                let b = function(e) {
                        if (e instanceof Uint8Array) return e;
                        if ("string" == typeof e) return (0, i.utf8ToBytes)(e);
                        throw Error("DST must be Uint8Array or string")
                    }(g),
                    y = Math.ceil((d.toString(2).length + f) / 8),
                    v = t * h * y;
                if ("xmd" === m) a = c(e, b, v, p);
                else if ("xof" === m) a = l(e, b, v, f, p);
                else if ("_internal_pass" === m) a = e;
                else throw Error('expand must be "xmd" or "xof"');
                let w = Array(t);
                for (let e = 0; e < t; e++) {
                    let t = Array(h);
                    for (let r = 0; r < h; r++) {
                        let i = y * (r + e * h),
                            s = a.subarray(i, i + y);
                        t[r] = (0, n.mod)(o(s), d)
                    }
                    w[e] = t
                }
                return w
            }
            t.expand_message_xmd = c, t.expand_message_xof = l, t.hash_to_field = d, t.isogenyMap = function(e, t) {
                let r = t.map(e => Array.from(e).reverse());
                return (t, n) => {
                    let [i, o, a, s] = r.map(r => r.reduce((r, n) => e.add(e.mul(r, t), n)));
                    return t = e.div(i, o), n = e.mul(n, e.div(a, s)), {
                        x: t,
                        y: n
                    }
                }
            }, t.createHasher = function(e, t, r) {
                if ("function" != typeof t) throw Error("mapToCurve() must be defined");
                return {
                    hashToCurve(n, i) {
                        let o = d(n, 2, { ...r,
                                DST: r.DST,
                                ...i
                            }),
                            a = e.fromAffine(t(o[0])),
                            s = e.fromAffine(t(o[1])),
                            u = a.add(s).clearCofactor();
                        return u.assertValidity(), u
                    },
                    encodeToCurve(n, i) {
                        let o = d(n, 1, { ...r,
                                DST: r.encodeDST,
                                ...i
                            }),
                            a = e.fromAffine(t(o[0])).clearCofactor();
                        return a.assertValidity(), a
                    }
                }
            }
        },
        45758: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapHashToField = t.getMinHashLength = t.getFieldBytesLength = t.hashToPrivateScalar = t.FpSqrtEven = t.FpSqrtOdd = t.Field = t.nLength = t.FpIsSquare = t.FpDiv = t.FpInvertBatch = t.FpPow = t.validateField = t.isNegativeLE = t.FpSqrt = t.tonelliShanks = t.invert = t.pow2 = t.pow = t.mod = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(28153),
                i = BigInt(0),
                o = BigInt(1),
                a = BigInt(2),
                s = BigInt(3),
                u = BigInt(4),
                c = BigInt(5),
                l = BigInt(8);

            function d(e, t) {
                let r = e % t;
                return r >= i ? r : t + r
            }

            function f(e, t, r) {
                if (r <= i || t < i) throw Error("Expected power/modulo > 0");
                if (r === o) return i;
                let n = o;
                for (; t > i;) t & o && (n = n * e % r), e = e * e % r, t >>= o;
                return n
            }

            function h(e, t) {
                if (e === i || t <= i) throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                let r = d(e, t),
                    n = t,
                    a = i,
                    s = o,
                    u = o,
                    c = i;
                for (; r !== i;) {
                    let e = n / r,
                        t = n % r,
                        i = a - u * e,
                        o = s - c * e;
                    n = r, r = t, a = u, s = c, u = i, c = o
                }
                if (n !== o) throw Error("invert: does not exist");
                return d(a, t)
            }

            function p(e) {
                let t, r, n;
                let s = (e - o) / a;
                for (t = e - o, r = 0; t % a === i; t /= a, r++);
                for (n = a; n < e && f(n, s, e) !== e - o; n++);
                if (1 === r) {
                    let t = (e + o) / u;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                let c = (t + o) / a;
                return function(e, i) {
                    if (e.pow(i, s) === e.neg(e.ONE)) throw Error("Cannot find square root");
                    let a = r,
                        u = e.pow(e.mul(e.ONE, n), t),
                        l = e.pow(i, c),
                        d = e.pow(i, t);
                    for (; !e.eql(d, e.ONE);) {
                        if (e.eql(d, e.ZERO)) return e.ZERO;
                        let t = 1;
                        for (let r = e.sqr(d); t < a && !e.eql(r, e.ONE); t++) r = e.sqr(r);
                        let r = e.pow(u, o << BigInt(a - t - 1));
                        u = e.sqr(r), l = e.mul(l, r), d = e.mul(d, u), a = t
                    }
                    return l
                }
            }

            function m(e) {
                if (e % u === s) {
                    let t = (e + o) / u;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                if (e % l === c) {
                    let t = (e - c) / l;
                    return function(e, r) {
                        let n = e.mul(r, a),
                            i = e.pow(n, t),
                            o = e.mul(r, i),
                            s = e.mul(e.mul(o, a), i),
                            u = e.mul(o, e.sub(s, e.ONE));
                        if (!e.eql(e.sqr(u), r)) throw Error("Cannot find square root");
                        return u
                    }
                }
                return p(e)
            }
            BigInt(9), BigInt(16), t.mod = d, t.pow = f, t.pow2 = function(e, t, r) {
                let n = e;
                for (; t-- > i;) n *= n, n %= r;
                return n
            }, t.invert = h, t.tonelliShanks = p, t.FpSqrt = m, t.isNegativeLE = (e, t) => (d(e, t) & o) === o;
            let g = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];

            function b(e, t, r) {
                if (r < i) throw Error("Expected power > 0");
                if (r === i) return e.ONE;
                if (r === o) return t;
                let n = e.ONE,
                    a = t;
                for (; r > i;) r & o && (n = e.mul(n, a)), a = e.sqr(a), r >>= o;
                return n
            }

            function y(e, t) {
                let r = Array(t.length),
                    n = t.reduce((t, n, i) => e.is0(n) ? t : (r[i] = t, e.mul(t, n)), e.ONE),
                    i = e.inv(n);
                return t.reduceRight((t, n, i) => e.is0(n) ? t : (r[i] = e.mul(t, r[i]), e.mul(t, n)), i), r
            }

            function v(e, t) {
                let r = void 0 !== t ? t : e.toString(2).length;
                return {
                    nBitLength: r,
                    nByteLength: Math.ceil(r / 8)
                }
            }

            function w(e) {
                if ("bigint" != typeof e) throw Error("field order must be bigint");
                return Math.ceil(e.toString(2).length / 8)
            }

            function E(e) {
                let t = w(e);
                return t + Math.ceil(t / 2)
            }
            t.validateField = function(e) {
                let t = g.reduce((e, t) => (e[t] = "function", e), {
                    ORDER: "bigint",
                    MASK: "bigint",
                    BYTES: "isSafeInteger",
                    BITS: "isSafeInteger"
                });
                return (0, n.validateObject)(e, t)
            }, t.FpPow = b, t.FpInvertBatch = y, t.FpDiv = function(e, t, r) {
                return e.mul(t, "bigint" == typeof r ? h(r, e.ORDER) : e.inv(r))
            }, t.FpIsSquare = function(e) {
                let t = (e.ORDER - o) / a;
                return r => {
                    let n = e.pow(r, t);
                    return e.eql(n, e.ZERO) || e.eql(n, e.ONE)
                }
            }, t.nLength = v, t.Field = function(e, t, r = !1, a = {}) {
                if (e <= i) throw Error(`Expected Field ORDER > 0, got ${e}`);
                let {
                    nBitLength: s,
                    nByteLength: u
                } = v(e, t);
                if (u > 2048) throw Error("Field lengths over 2048 bytes are not supported");
                let c = m(e),
                    l = Object.freeze({
                        ORDER: e,
                        BITS: s,
                        BYTES: u,
                        MASK: (0, n.bitMask)(s),
                        ZERO: i,
                        ONE: o,
                        create: t => d(t, e),
                        isValid: t => {
                            if ("bigint" != typeof t) throw Error(`Invalid field element: expected bigint, got ${typeof t}`);
                            return i <= t && t < e
                        },
                        is0: e => e === i,
                        isOdd: e => (e & o) === o,
                        neg: t => d(-t, e),
                        eql: (e, t) => e === t,
                        sqr: t => d(t * t, e),
                        add: (t, r) => d(t + r, e),
                        sub: (t, r) => d(t - r, e),
                        mul: (t, r) => d(t * r, e),
                        pow: (e, t) => b(l, e, t),
                        div: (t, r) => d(t * h(r, e), e),
                        sqrN: e => e * e,
                        addN: (e, t) => e + t,
                        subN: (e, t) => e - t,
                        mulN: (e, t) => e * t,
                        inv: t => h(t, e),
                        sqrt: a.sqrt || (e => c(l, e)),
                        invertBatch: e => y(l, e),
                        cmov: (e, t, r) => r ? t : e,
                        toBytes: e => r ? (0, n.numberToBytesLE)(e, u) : (0, n.numberToBytesBE)(e, u),
                        fromBytes: e => {
                            if (e.length !== u) throw Error(`Fp.fromBytes: expected ${u}, got ${e.length}`);
                            return r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e)
                        }
                    });
                return Object.freeze(l)
            }, t.FpSqrtOdd = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? r : e.neg(r)
            }, t.FpSqrtEven = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? e.neg(r) : r
            }, t.hashToPrivateScalar = function(e, t, r = !1) {
                let i = (e = (0, n.ensureBytes)("privateHash", e)).length,
                    a = v(t).nByteLength + 8;
                if (a < 24 || i < a || i > 1024) throw Error(`hashToPrivateScalar: expected ${a}-1024 bytes of input, got ${i}`);
                return d(r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e), t - o) + o
            }, t.getFieldBytesLength = w, t.getMinHashLength = E, t.mapHashToField = function(e, t, r = !1) {
                let i = e.length,
                    a = w(t),
                    s = E(t);
                if (i < 16 || i < s || i > 1024) throw Error(`expected ${s}-1024 bytes of input, got ${i}`);
                let u = d(r ? (0, n.bytesToNumberBE)(e) : (0, n.bytesToNumberLE)(e), t - o) + o;
                return r ? (0, n.numberToBytesLE)(u, a) : (0, n.numberToBytesBE)(u, a)
            }
        },
        28153: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateObject = t.createHmacDrbg = t.bitMask = t.bitSet = t.bitGet = t.bitLen = t.utf8ToBytes = t.equalBytes = t.concatBytes = t.ensureBytes = t.numberToVarBytesBE = t.numberToBytesLE = t.numberToBytesBE = t.bytesToNumberLE = t.bytesToNumberBE = t.hexToBytes = t.hexToNumber = t.numberToHexUnpadded = t.bytesToHex = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let r = BigInt(0),
                n = BigInt(1),
                i = BigInt(2),
                o = e => e instanceof Uint8Array,
                a = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function s(e) {
                if (!o(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += a[e[r]];
                return t
            }

            function u(e) {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t
            }

            function c(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                return BigInt("" === e ? "0" : `0x${e}`)
            }

            function l(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = Number.parseInt(e.slice(n, n + 2), 16);
                    if (Number.isNaN(i) || i < 0) throw Error("Invalid byte sequence");
                    r[t] = i
                }
                return r
            }

            function d(e, t) {
                return l(e.toString(16).padStart(2 * t, "0"))
            }

            function f(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!o(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }
            t.bytesToHex = s, t.numberToHexUnpadded = u, t.hexToNumber = c, t.hexToBytes = l, t.bytesToNumberBE = function(e) {
                return c(s(e))
            }, t.bytesToNumberLE = function(e) {
                if (!o(e)) throw Error("Uint8Array expected");
                return c(s(Uint8Array.from(e).reverse()))
            }, t.numberToBytesBE = d, t.numberToBytesLE = function(e, t) {
                return d(e, t).reverse()
            }, t.numberToVarBytesBE = function(e) {
                return l(u(e))
            }, t.ensureBytes = function(e, t, r) {
                let n;
                if ("string" == typeof t) try {
                        n = l(t)
                    } catch (r) {
                        throw Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)
                    } else if (o(t)) n = Uint8Array.from(t);
                    else throw Error(`${e} must be hex string or Uint8Array`);
                let i = n.length;
                if ("number" == typeof r && i !== r) throw Error(`${e} expected ${r} bytes, got ${i}`);
                return n
            }, t.concatBytes = f, t.equalBytes = function(e, t) {
                if (e.length !== t.length) return !1;
                for (let r = 0; r < e.length; r++)
                    if (e[r] !== t[r]) return !1;
                return !0
            }, t.utf8ToBytes = function(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }, t.bitLen = function(e) {
                let t;
                for (t = 0; e > r; e >>= n, t += 1);
                return t
            }, t.bitGet = function(e, t) {
                return e >> BigInt(t) & n
            }, t.bitSet = (e, t, i) => e | (i ? n : r) << BigInt(t), t.bitMask = e => (i << BigInt(e - 1)) - n;
            let h = e => new Uint8Array(e),
                p = e => Uint8Array.from(e);
            t.createHmacDrbg = function(e, t, r) {
                if ("number" != typeof e || e < 2) throw Error("hashLen must be a number");
                if ("number" != typeof t || t < 2) throw Error("qByteLen must be a number");
                if ("function" != typeof r) throw Error("hmacFn must be a function");
                let n = h(e),
                    i = h(e),
                    o = 0,
                    a = () => {
                        n.fill(1), i.fill(0), o = 0
                    },
                    s = (...e) => r(i, n, ...e),
                    u = (e = h()) => {
                        i = s(p([0]), e), n = s(), 0 !== e.length && (i = s(p([1]), e), n = s())
                    },
                    c = () => {
                        if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
                        let e = 0,
                            r = [];
                        for (; e < t;) {
                            let t = (n = s()).slice();
                            r.push(t), e += n.length
                        }
                        return f(...r)
                    };
                return (e, t) => {
                    let r;
                    for (a(), u(e); !(r = t(c()));) u();
                    return a(), r
                }
            };
            let m = {
                bigint: e => "bigint" == typeof e,
                function: e => "function" == typeof e,
                boolean: e => "boolean" == typeof e,
                string: e => "string" == typeof e,
                stringOrUint8Array: e => "string" == typeof e || e instanceof Uint8Array,
                isSafeInteger: e => Number.isSafeInteger(e),
                array: e => Array.isArray(e),
                field: (e, t) => t.Fp.isValid(e),
                hash: e => "function" == typeof e && Number.isSafeInteger(e.outputLen)
            };
            t.validateObject = function(e, t, r = {}) {
                let n = (t, r, n) => {
                    let i = m[r];
                    if ("function" != typeof i) throw Error(`Invalid validator "${r}", expected function`);
                    let o = e[t];
                    if ((!n || void 0 !== o) && !i(o, e)) throw Error(`Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`)
                };
                for (let [e, r] of Object.entries(t)) n(e, r, !1);
                for (let [e, t] of Object.entries(r)) n(e, t, !0);
                return e
            }
        },
        39140: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapToCurveSimpleSWU = t.SWUFpSqrtRatio = t.weierstrass = t.weierstrassPoints = t.DER = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(45758),
                i = r(28153),
                o = r(28153),
                a = r(81924),
                {
                    bytesToNumberBE: s,
                    hexToBytes: u
                } = i;
            t.DER = {
                Err: class extends Error {
                    constructor(e = "") {
                        super(e)
                    }
                },
                _parseInt(e) {
                    let {
                        Err: r
                    } = t.DER;
                    if (e.length < 2 || 2 !== e[0]) throw new r("Invalid signature integer tag");
                    let n = e[1],
                        i = e.subarray(2, n + 2);
                    if (!n || i.length !== n) throw new r("Invalid signature integer: wrong length");
                    if (128 & i[0]) throw new r("Invalid signature integer: negative");
                    if (0 === i[0] && !(128 & i[1])) throw new r("Invalid signature integer: unnecessary leading zero");
                    return {
                        d: s(i),
                        l: e.subarray(n + 2)
                    }
                },
                toSig(e) {
                    let {
                        Err: r
                    } = t.DER, n = "string" == typeof e ? u(e) : e;
                    if (!(n instanceof Uint8Array)) throw Error("ui8a expected");
                    let i = n.length;
                    if (i < 2 || 48 != n[0]) throw new r("Invalid signature tag");
                    if (n[1] !== i - 2) throw new r("Invalid signature: incorrect length");
                    let {
                        d: o,
                        l: a
                    } = t.DER._parseInt(n.subarray(2)), {
                        d: s,
                        l: c
                    } = t.DER._parseInt(a);
                    if (c.length) throw new r("Invalid signature: left bytes after parsing");
                    return {
                        r: o,
                        s
                    }
                },
                hexFromSig(e) {
                    let t = e => 8 & Number.parseInt(e[0], 16) ? "00" + e : e,
                        r = e => {
                            let t = e.toString(16);
                            return 1 & t.length ? `0${t}` : t
                        },
                        n = t(r(e.s)),
                        i = t(r(e.r)),
                        o = n.length / 2,
                        a = i.length / 2,
                        s = r(o),
                        u = r(a);
                    return `30${r(a+o+4)}02${u}${i}02${s}${n}`
                }
            };
            let c = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                f = BigInt(3),
                h = BigInt(4);

            function p(e) {
                let t = function(e) {
                        let t = (0, a.validateBasic)(e);
                        i.validateObject(t, {
                            a: "field",
                            b: "field"
                        }, {
                            allowedPrivateKeyLengths: "array",
                            wrapPrivateKey: "boolean",
                            isTorsionFree: "function",
                            clearCofactor: "function",
                            allowInfinityPoint: "boolean",
                            fromBytes: "function",
                            toBytes: "function"
                        });
                        let {
                            endo: r,
                            Fp: n,
                            a: o
                        } = t;
                        if (r) {
                            if (!n.eql(o, n.ZERO)) throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");
                            if ("object" != typeof r || "bigint" != typeof r.beta || "function" != typeof r.splitScalar) throw Error("Expected endomorphism with beta: bigint and splitScalar: function")
                        }
                        return Object.freeze({ ...t
                        })
                    }(e),
                    {
                        Fp: r
                    } = t,
                    s = t.toBytes || ((e, t, n) => {
                        let o = t.toAffine();
                        return i.concatBytes(Uint8Array.from([4]), r.toBytes(o.x), r.toBytes(o.y))
                    }),
                    u = t.fromBytes || (e => {
                        let t = e.subarray(1);
                        return {
                            x: r.fromBytes(t.subarray(0, r.BYTES)),
                            y: r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES))
                        }
                    });

                function d(e) {
                    let {
                        a: n,
                        b: i
                    } = t, o = r.sqr(e), a = r.mul(o, e);
                    return r.add(r.add(a, r.mul(e, n)), i)
                }
                if (!r.eql(r.sqr(t.Gy), d(t.Gx))) throw Error("bad generator point: equation left != right");

                function h(e) {
                    return "bigint" == typeof e && c < e && e < t.n
                }

                function p(e) {
                    if (!h(e)) throw Error("Expected valid bigint: 0 < bigint < curve.n")
                }

                function m(e) {
                    let r;
                    let {
                        allowedPrivateKeyLengths: a,
                        nByteLength: s,
                        wrapPrivateKey: u,
                        n: c
                    } = t;
                    if (a && "bigint" != typeof e) {
                        if (e instanceof Uint8Array && (e = i.bytesToHex(e)), "string" != typeof e || !a.includes(e.length)) throw Error("Invalid key");
                        e = e.padStart(2 * s, "0")
                    }
                    try {
                        r = "bigint" == typeof e ? e : i.bytesToNumberBE((0, o.ensureBytes)("private key", e, s))
                    } catch (t) {
                        throw Error(`private key must be ${s} bytes, hex or bigint, not ${typeof e}`)
                    }
                    return u && (r = n.mod(r, c)), p(r), r
                }
                let g = new Map;

                function b(e) {
                    if (!(e instanceof y)) throw Error("ProjectivePoint expected")
                }
                class y {
                    constructor(e, t, n) {
                        if (this.px = e, this.py = t, this.pz = n, null == e || !r.isValid(e)) throw Error("x required");
                        if (null == t || !r.isValid(t)) throw Error("y required");
                        if (null == n || !r.isValid(n)) throw Error("z required")
                    }
                    static fromAffine(e) {
                        let {
                            x: t,
                            y: n
                        } = e || {};
                        if (!e || !r.isValid(t) || !r.isValid(n)) throw Error("invalid affine point");
                        if (e instanceof y) throw Error("projective point not allowed");
                        let i = e => r.eql(e, r.ZERO);
                        return i(t) && i(n) ? y.ZERO : new y(t, n, r.ONE)
                    }
                    get x() {
                        return this.toAffine().x
                    }
                    get y() {
                        return this.toAffine().y
                    }
                    static normalizeZ(e) {
                        let t = r.invertBatch(e.map(e => e.pz));
                        return e.map((e, r) => e.toAffine(t[r])).map(y.fromAffine)
                    }
                    static fromHex(e) {
                        let t = y.fromAffine(u((0, o.ensureBytes)("pointHex", e)));
                        return t.assertValidity(), t
                    }
                    static fromPrivateKey(e) {
                        return y.BASE.multiply(m(e))
                    }
                    _setWindowSize(e) {
                        this._WINDOW_SIZE = e, g.delete(this)
                    }
                    assertValidity() {
                        if (this.is0()) {
                            if (t.allowInfinityPoint && !r.is0(this.py)) return;
                            throw Error("bad point: ZERO")
                        }
                        let {
                            x: e,
                            y: n
                        } = this.toAffine();
                        if (!r.isValid(e) || !r.isValid(n)) throw Error("bad point: x or y not FE");
                        let i = r.sqr(n),
                            o = d(e);
                        if (!r.eql(i, o)) throw Error("bad point: equation left != right");
                        if (!this.isTorsionFree()) throw Error("bad point: not in prime-order subgroup")
                    }
                    hasEvenY() {
                        let {
                            y: e
                        } = this.toAffine();
                        if (r.isOdd) return !r.isOdd(e);
                        throw Error("Field doesn't support isOdd")
                    }
                    equals(e) {
                        b(e);
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, {
                            px: o,
                            py: a,
                            pz: s
                        } = e, u = r.eql(r.mul(t, s), r.mul(o, i)), c = r.eql(r.mul(n, s), r.mul(a, i));
                        return u && c
                    }
                    negate() {
                        return new y(this.px, r.neg(this.py), this.pz)
                    }
                    double() {
                        let {
                            a: e,
                            b: n
                        } = t, i = r.mul(n, f), {
                            px: o,
                            py: a,
                            pz: s
                        } = this, u = r.ZERO, c = r.ZERO, l = r.ZERO, d = r.mul(o, o), h = r.mul(a, a), p = r.mul(s, s), m = r.mul(o, a);
                        return m = r.add(m, m), l = r.mul(o, s), l = r.add(l, l), u = r.mul(e, l), c = r.mul(i, p), c = r.add(u, c), u = r.sub(h, c), c = r.add(h, c), c = r.mul(u, c), u = r.mul(m, u), l = r.mul(i, l), p = r.mul(e, p), m = r.sub(d, p), m = r.mul(e, m), m = r.add(m, l), l = r.add(d, d), d = r.add(l, d), d = r.add(d, p), d = r.mul(d, m), c = r.add(c, d), p = r.mul(a, s), p = r.add(p, p), d = r.mul(p, m), u = r.sub(u, d), l = r.mul(p, h), l = r.add(l, l), new y(u, c, l = r.add(l, l))
                    }
                    add(e) {
                        b(e);
                        let {
                            px: n,
                            py: i,
                            pz: o
                        } = this, {
                            px: a,
                            py: s,
                            pz: u
                        } = e, c = r.ZERO, l = r.ZERO, d = r.ZERO, h = t.a, p = r.mul(t.b, f), m = r.mul(n, a), g = r.mul(i, s), v = r.mul(o, u), w = r.add(n, i), E = r.add(a, s);
                        w = r.mul(w, E), E = r.add(m, g), w = r.sub(w, E), E = r.add(n, o);
                        let A = r.add(a, u);
                        return E = r.mul(E, A), A = r.add(m, v), E = r.sub(E, A), A = r.add(i, o), c = r.add(s, u), A = r.mul(A, c), c = r.add(g, v), A = r.sub(A, c), d = r.mul(h, E), c = r.mul(p, v), d = r.add(c, d), c = r.sub(g, d), d = r.add(g, d), l = r.mul(c, d), g = r.add(m, m), g = r.add(g, m), v = r.mul(h, v), E = r.mul(p, E), g = r.add(g, v), v = r.sub(m, v), v = r.mul(h, v), E = r.add(E, v), m = r.mul(g, E), l = r.add(l, m), m = r.mul(A, E), c = r.mul(w, c), c = r.sub(c, m), m = r.mul(w, g), d = r.mul(A, d), new y(c, l, d = r.add(d, m))
                    }
                    subtract(e) {
                        return this.add(e.negate())
                    }
                    is0() {
                        return this.equals(y.ZERO)
                    }
                    wNAF(e) {
                        return w.wNAFCached(this, g, e, e => {
                            let t = r.invertBatch(e.map(e => e.pz));
                            return e.map((e, r) => e.toAffine(t[r])).map(y.fromAffine)
                        })
                    }
                    multiplyUnsafe(e) {
                        let n = y.ZERO;
                        if (e === c) return n;
                        if (p(e), e === l) return this;
                        let {
                            endo: i
                        } = t;
                        if (!i) return w.unsafeLadder(this, e);
                        let {
                            k1neg: o,
                            k1: a,
                            k2neg: s,
                            k2: u
                        } = i.splitScalar(e), d = n, f = n, h = this;
                        for (; a > c || u > c;) a & l && (d = d.add(h)), u & l && (f = f.add(h)), h = h.double(), a >>= l, u >>= l;
                        return o && (d = d.negate()), s && (f = f.negate()), f = new y(r.mul(f.px, i.beta), f.py, f.pz), d.add(f)
                    }
                    multiply(e) {
                        let n, i;
                        p(e);
                        let {
                            endo: o
                        } = t;
                        if (o) {
                            let {
                                k1neg: t,
                                k1: a,
                                k2neg: s,
                                k2: u
                            } = o.splitScalar(e), {
                                p: c,
                                f: l
                            } = this.wNAF(a), {
                                p: d,
                                f: f
                            } = this.wNAF(u);
                            c = w.constTimeNegate(t, c), d = w.constTimeNegate(s, d), d = new y(r.mul(d.px, o.beta), d.py, d.pz), n = c.add(d), i = l.add(f)
                        } else {
                            let {
                                p: t,
                                f: r
                            } = this.wNAF(e);
                            n = t, i = r
                        }
                        return y.normalizeZ([n, i])[0]
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                        let n = y.BASE,
                            i = (e, t) => t !== c && t !== l && e.equals(n) ? e.multiply(t) : e.multiplyUnsafe(t),
                            o = i(this, t).add(i(e, r));
                        return o.is0() ? void 0 : o
                    }
                    toAffine(e) {
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, o = this.is0();
                        null == e && (e = o ? r.ONE : r.inv(i));
                        let a = r.mul(t, e),
                            s = r.mul(n, e),
                            u = r.mul(i, e);
                        if (o) return {
                            x: r.ZERO,
                            y: r.ZERO
                        };
                        if (!r.eql(u, r.ONE)) throw Error("invZ was invalid");
                        return {
                            x: a,
                            y: s
                        }
                    }
                    isTorsionFree() {
                        let {
                            h: e,
                            isTorsionFree: r
                        } = t;
                        if (e === l) return !0;
                        if (r) return r(y, this);
                        throw Error("isTorsionFree() has not been declared for the elliptic curve")
                    }
                    clearCofactor() {
                        let {
                            h: e,
                            clearCofactor: r
                        } = t;
                        return e === l ? this : r ? r(y, this) : this.multiplyUnsafe(t.h)
                    }
                    toRawBytes(e = !0) {
                        return this.assertValidity(), s(y, this, e)
                    }
                    toHex(e = !0) {
                        return i.bytesToHex(this.toRawBytes(e))
                    }
                }
                y.BASE = new y(t.Gx, t.Gy, r.ONE), y.ZERO = new y(r.ZERO, r.ONE, r.ZERO);
                let v = t.nBitLength,
                    w = (0, a.wNAF)(y, t.endo ? Math.ceil(v / 2) : v);
                return {
                    CURVE: t,
                    ProjectivePoint: y,
                    normPrivateKeyToScalar: m,
                    weierstrassEquation: d,
                    isWithinCurveOrder: h
                }
            }

            function m(e, t) {
                let r = e.ORDER,
                    n = c;
                for (let e = r - l; e % d === c; e /= d) n += l;
                let i = n,
                    o = d << i - l - l,
                    a = o * d,
                    s = (r - l) / a,
                    u = (s - l) / d,
                    p = a - l,
                    m = e.pow(t, s),
                    g = e.pow(t, (s + l) / d),
                    b = (t, r) => {
                        let n = m,
                            a = e.pow(r, p),
                            s = e.sqr(a);
                        s = e.mul(s, r);
                        let c = e.mul(t, s);
                        c = e.pow(c, u), c = e.mul(c, a), a = e.mul(c, r), s = e.mul(c, t);
                        let f = e.mul(s, a);
                        c = e.pow(f, o);
                        let h = e.eql(c, e.ONE);
                        a = e.mul(s, g), c = e.mul(f, n), s = e.cmov(a, s, h), f = e.cmov(c, f, h);
                        for (let t = i; t > l; t--) {
                            let r = t - d;
                            r = d << r - l;
                            let i = e.pow(f, r),
                                o = e.eql(i, e.ONE);
                            a = e.mul(s, n), n = e.mul(n, n), i = e.mul(f, n), s = e.cmov(a, s, o), f = e.cmov(i, f, o)
                        }
                        return {
                            isValid: h,
                            value: s
                        }
                    };
                if (e.ORDER % h === f) {
                    let r = (e.ORDER - f) / h,
                        n = e.sqrt(e.neg(t));
                    b = (t, i) => {
                        let o = e.sqr(i),
                            a = e.mul(t, i);
                        o = e.mul(o, a);
                        let s = e.pow(o, r);
                        s = e.mul(s, a);
                        let u = e.mul(s, n),
                            c = e.mul(e.sqr(s), i),
                            l = e.eql(c, t),
                            d = e.cmov(u, s, l);
                        return {
                            isValid: l,
                            value: d
                        }
                    }
                }
                return b
            }
            t.weierstrassPoints = p, t.weierstrass = function(e) {
                let r = function(e) {
                        let t = (0, a.validateBasic)(e);
                        return i.validateObject(t, {
                            hash: "hash",
                            hmac: "function",
                            randomBytes: "function"
                        }, {
                            bits2int: "function",
                            bits2int_modN: "function",
                            lowS: "boolean"
                        }), Object.freeze({
                            lowS: !0,
                            ...t
                        })
                    }(e),
                    {
                        Fp: s,
                        n: u
                    } = r,
                    d = s.BYTES + 1,
                    f = 2 * s.BYTES + 1;

                function h(e) {
                    return n.mod(e, u)
                }

                function m(e) {
                    return n.invert(e, u)
                }
                let {
                    ProjectivePoint: g,
                    normPrivateKeyToScalar: b,
                    weierstrassEquation: y,
                    isWithinCurveOrder: v
                } = p({ ...r,
                    toBytes(e, t, r) {
                        let n = t.toAffine(),
                            o = s.toBytes(n.x),
                            a = i.concatBytes;
                        return r ? a(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o) : a(Uint8Array.from([4]), o, s.toBytes(n.y))
                    },
                    fromBytes(e) {
                        let t = e.length,
                            r = e[0],
                            n = e.subarray(1);
                        if (t === d && (2 === r || 3 === r)) {
                            let e = i.bytesToNumberBE(n);
                            if (!(c < e && e < s.ORDER)) throw Error("Point is not on curve");
                            let t = y(e),
                                o = s.sqrt(t);
                            return (1 & r) == 1 != ((o & l) === l) && (o = s.neg(o)), {
                                x: e,
                                y: o
                            }
                        }
                        if (t === f && 4 === r) return {
                            x: s.fromBytes(n.subarray(0, s.BYTES)),
                            y: s.fromBytes(n.subarray(s.BYTES, 2 * s.BYTES))
                        };
                        throw Error(`Point of length ${t} was invalid. Expected ${d} compressed bytes or ${f} uncompressed bytes`)
                    }
                }), w = e => i.bytesToHex(i.numberToBytesBE(e, r.nByteLength)), E = (e, t, r) => i.bytesToNumberBE(e.slice(t, r));
                class A {
                    constructor(e, t, r) {
                        this.r = e, this.s = t, this.recovery = r, this.assertValidity()
                    }
                    static fromCompact(e) {
                        let t = r.nByteLength;
                        return new A(E(e = (0, o.ensureBytes)("compactSignature", e, 2 * t), 0, t), E(e, t, 2 * t))
                    }
                    static fromDER(e) {
                        let {
                            r,
                            s: n
                        } = t.DER.toSig((0, o.ensureBytes)("DER", e));
                        return new A(r, n)
                    }
                    assertValidity() {
                        if (!v(this.r)) throw Error("r must be 0 < r < CURVE.n");
                        if (!v(this.s)) throw Error("s must be 0 < s < CURVE.n")
                    }
                    addRecoveryBit(e) {
                        return new A(this.r, this.s, e)
                    }
                    recoverPublicKey(e) {
                        let {
                            r: t,
                            s: n,
                            recovery: i
                        } = this, a = O((0, o.ensureBytes)("msgHash", e));
                        if (null == i || ![0, 1, 2, 3].includes(i)) throw Error("recovery id invalid");
                        let u = 2 === i || 3 === i ? t + r.n : t;
                        if (u >= s.ORDER) throw Error("recovery id 2 or 3 invalid");
                        let c = (1 & i) == 0 ? "02" : "03",
                            l = g.fromHex(c + w(u)),
                            d = m(u),
                            f = h(-a * d),
                            p = h(n * d),
                            b = g.BASE.multiplyAndAddUnsafe(l, f, p);
                        if (!b) throw Error("point at infinify");
                        return b.assertValidity(), b
                    }
                    hasHighS() {
                        return this.s > u >> l
                    }
                    normalizeS() {
                        return this.hasHighS() ? new A(this.r, h(-this.s), this.recovery) : this
                    }
                    toDERRawBytes() {
                        return i.hexToBytes(this.toDERHex())
                    }
                    toDERHex() {
                        return t.DER.hexFromSig({
                            r: this.r,
                            s: this.s
                        })
                    }
                    toCompactRawBytes() {
                        return i.hexToBytes(this.toCompactHex())
                    }
                    toCompactHex() {
                        return w(this.r) + w(this.s)
                    }
                }

                function P(e) {
                    let t = e instanceof Uint8Array,
                        r = "string" == typeof e,
                        n = (t || r) && e.length;
                    return t ? n === d || n === f : r ? n === 2 * d || n === 2 * f : e instanceof g
                }
                let x = r.bits2int || function(e) {
                        let t = i.bytesToNumberBE(e),
                            n = 8 * e.length - r.nBitLength;
                        return n > 0 ? t >> BigInt(n) : t
                    },
                    O = r.bits2int_modN || function(e) {
                        return h(x(e))
                    },
                    _ = i.bitMask(r.nBitLength);

                function I(e) {
                    if ("bigint" != typeof e) throw Error("bigint expected");
                    if (!(c <= e && e < _)) throw Error(`bigint expected < 2^${r.nBitLength}`);
                    return i.numberToBytesBE(e, r.nByteLength)
                }
                let T = {
                        lowS: r.lowS,
                        prehash: !1
                    },
                    C = {
                        lowS: r.lowS,
                        prehash: !1
                    };
                return g.BASE._setWindowSize(8), {
                    CURVE: r,
                    getPublicKey: function(e, t = !0) {
                        return g.fromPrivateKey(e).toRawBytes(t)
                    },
                    getSharedSecret: function(e, t, r = !0) {
                        if (P(e)) throw Error("first arg must be private key");
                        if (!P(t)) throw Error("second arg must be public key");
                        return g.fromHex(t).multiply(b(e)).toRawBytes(r)
                    },
                    sign: function(e, t, n = T) {
                        let {
                            seed: a,
                            k2sig: d
                        } = function(e, t, n = T) {
                            if (["recovered", "canonical"].some(e => e in n)) throw Error("sign() legacy options not supported");
                            let {
                                hash: a,
                                randomBytes: d
                            } = r, {
                                lowS: f,
                                prehash: p,
                                extraEntropy: y
                            } = n;
                            null == f && (f = !0), e = (0, o.ensureBytes)("msgHash", e), p && (e = (0, o.ensureBytes)("prehashed msgHash", a(e)));
                            let w = O(e),
                                E = b(t),
                                P = [I(E), I(w)];
                            if (null != y) {
                                let e = !0 === y ? d(s.BYTES) : y;
                                P.push((0, o.ensureBytes)("extraEntropy", e))
                            }
                            return {
                                seed: i.concatBytes(...P),
                                k2sig: function(e) {
                                    let t = x(e);
                                    if (!v(t)) return;
                                    let r = m(t),
                                        n = g.BASE.multiply(t).toAffine(),
                                        i = h(n.x);
                                    if (i === c) return;
                                    let o = h(r * h(w + i * E));
                                    if (o === c) return;
                                    let a = (n.x === i ? 0 : 2) | Number(n.y & l),
                                        s = o;
                                    if (f && o > u >> l) s = o > u >> l ? h(-o) : o, a ^= 1;
                                    return new A(i, s, a)
                                }
                            }
                        }(e, t, n);
                        return i.createHmacDrbg(r.hash.outputLen, r.nByteLength, r.hmac)(a, d)
                    },
                    verify: function(e, n, i, a = C) {
                        let s, u;
                        if (n = (0, o.ensureBytes)("msgHash", n), i = (0, o.ensureBytes)("publicKey", i), "strict" in a) throw Error("options.strict was renamed to lowS");
                        let {
                            lowS: c,
                            prehash: l
                        } = a;
                        try {
                            if ("string" == typeof e || e instanceof Uint8Array) try {
                                u = A.fromDER(e)
                            } catch (r) {
                                if (!(r instanceof t.DER.Err)) throw r;
                                u = A.fromCompact(e)
                            } else if ("object" == typeof e && "bigint" == typeof e.r && "bigint" == typeof e.s) {
                                let {
                                    r: t,
                                    s: r
                                } = e;
                                u = new A(t, r)
                            } else throw Error("PARSE");
                            s = g.fromHex(i)
                        } catch (e) {
                            if ("PARSE" === e.message) throw Error("signature must be Signature instance, Uint8Array or hex string");
                            return !1
                        }
                        if (c && u.hasHighS()) return !1;
                        l && (n = r.hash(n));
                        let {
                            r: d,
                            s: f
                        } = u, p = O(n), b = m(f), y = h(p * b), v = h(d * b), w = g.BASE.multiplyAndAddUnsafe(s, y, v) ? .toAffine();
                        return !!w && h(w.x) === d
                    },
                    ProjectivePoint: g,
                    Signature: A,
                    utils: {
                        isValidPrivateKey(e) {
                            try {
                                return b(e), !0
                            } catch (e) {
                                return !1
                            }
                        },
                        normPrivateKeyToScalar: b,
                        randomPrivateKey: () => {
                            let e = n.getMinHashLength(r.n);
                            return n.mapHashToField(r.randomBytes(e), r.n)
                        },
                        precompute: (e = 8, t = g.BASE) => (t._setWindowSize(e), t.multiply(BigInt(3)), t)
                    }
                }
            }, t.SWUFpSqrtRatio = m, t.mapToCurveSimpleSWU = function(e, t) {
                if (n.validateField(e), !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z)) throw Error("mapToCurveSimpleSWU: invalid opts");
                let r = m(e, t.Z);
                if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
                return n => {
                    let i, o, a, s, u, c, l, d;
                    i = e.sqr(n), i = e.mul(i, t.Z), o = e.sqr(i), o = e.add(o, i), a = e.add(o, e.ONE), a = e.mul(a, t.B), s = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO)), s = e.mul(s, t.A), o = e.sqr(a), c = e.sqr(s), u = e.mul(c, t.A), o = e.add(o, u), o = e.mul(o, a), c = e.mul(c, s), u = e.mul(c, t.B), o = e.add(o, u), l = e.mul(i, a);
                    let {
                        isValid: f,
                        value: h
                    } = r(o, c);
                    d = e.mul(i, n), d = e.mul(d, h), l = e.cmov(l, a, f), d = e.cmov(d, h, f);
                    let p = e.isOdd(n) === e.isOdd(d);
                    return d = e.cmov(e.neg(d), d, p), {
                        x: l = e.div(l, s),
                        y: d
                    }
                }
            }
        },
        46701: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeToCurve = t.hashToCurve = t.schnorr = t.secp256k1 = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(44212),
                i = r(85758),
                o = r(45758),
                a = r(39140),
                s = r(28153),
                u = r(10452),
                c = r(54421),
                l = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                d = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                f = BigInt(1),
                h = BigInt(2),
                p = (e, t) => (e + t / h) / t;

            function m(e) {
                let t = BigInt(3),
                    r = BigInt(6),
                    n = BigInt(11),
                    i = BigInt(22),
                    a = BigInt(23),
                    s = BigInt(44),
                    u = BigInt(88),
                    c = e * e * e % l,
                    d = c * c * e % l,
                    f = (0, o.pow2)(d, t, l) * d % l,
                    p = (0, o.pow2)(f, t, l) * d % l,
                    m = (0, o.pow2)(p, h, l) * c % l,
                    b = (0, o.pow2)(m, n, l) * m % l,
                    y = (0, o.pow2)(b, i, l) * b % l,
                    v = (0, o.pow2)(y, s, l) * y % l,
                    w = (0, o.pow2)(v, u, l) * v % l,
                    E = (0, o.pow2)(w, s, l) * y % l,
                    A = (0, o.pow2)(E, t, l) * d % l,
                    P = (0, o.pow2)(A, a, l) * b % l,
                    x = (0, o.pow2)(P, r, l) * c % l,
                    O = (0, o.pow2)(x, h, l);
                if (!g.eql(g.sqr(O), e)) throw Error("Cannot find square root");
                return O
            }
            let g = (0, o.Field)(l, void 0, void 0, {
                sqrt: m
            });
            t.secp256k1 = (0, c.createCurve)({
                a: BigInt(0),
                b: BigInt(7),
                Fp: g,
                n: d,
                Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                h: BigInt(1),
                lowS: !0,
                endo: {
                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                    splitScalar: e => {
                        let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                            r = -f * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                            n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                            i = BigInt("0x100000000000000000000000000000000"),
                            a = p(t * e, d),
                            s = p(-r * e, d),
                            u = (0, o.mod)(e - a * t - s * n, d),
                            c = (0, o.mod)(-a * r - s * t, d),
                            l = u > i,
                            h = c > i;
                        if (l && (u = d - u), h && (c = d - c), u > i || c > i) throw Error("splitScalar: Endomorphism failed, k=" + e);
                        return {
                            k1neg: l,
                            k1: u,
                            k2neg: h,
                            k2: c
                        }
                    }
                }
            }, n.sha256);
            let b = BigInt(0),
                y = e => "bigint" == typeof e && b < e && e < l,
                v = e => "bigint" == typeof e && b < e && e < d,
                w = {};

            function E(e, ...t) {
                let r = w[e];
                if (void 0 === r) {
                    let t = (0, n.sha256)(Uint8Array.from(e, e => e.charCodeAt(0)));
                    r = (0, s.concatBytes)(t, t), w[e] = r
                }
                return (0, n.sha256)((0, s.concatBytes)(r, ...t))
            }
            let A = e => e.toRawBytes(!0).slice(1),
                P = e => (0, s.numberToBytesBE)(e, 32),
                x = e => (0, o.mod)(e, l),
                O = e => (0, o.mod)(e, d),
                _ = t.secp256k1.ProjectivePoint,
                I = (e, t, r) => _.BASE.multiplyAndAddUnsafe(e, t, r);

            function T(e) {
                let r = t.secp256k1.utils.normPrivateKeyToScalar(e),
                    n = _.fromPrivateKey(r);
                return {
                    scalar: n.hasEvenY() ? r : O(-r),
                    bytes: A(n)
                }
            }

            function C(e) {
                if (!y(e)) throw Error("bad x: need 0 < x < p");
                let t = x(e * e),
                    r = m(x(t * e + BigInt(7)));
                r % h !== b && (r = x(-r));
                let n = new _(e, r, f);
                return n.assertValidity(), n
            }

            function S(...e) {
                return O((0, s.bytesToNumberBE)(E("BIP0340/challenge", ...e)))
            }

            function k(e, t, r) {
                let n = (0, s.ensureBytes)("signature", e, 64),
                    i = (0, s.ensureBytes)("message", t),
                    o = (0, s.ensureBytes)("publicKey", r, 32);
                try {
                    let e = C((0, s.bytesToNumberBE)(o)),
                        t = (0, s.bytesToNumberBE)(n.subarray(0, 32));
                    if (!y(t)) return !1;
                    let r = (0, s.bytesToNumberBE)(n.subarray(32, 64));
                    if (!v(r)) return !1;
                    let a = S(P(t), A(e), i),
                        u = I(e, r, O(-a));
                    if (!u || !u.hasEvenY() || u.toAffine().x !== t) return !1;
                    return !0
                } catch (e) {
                    return !1
                }
            }
            t.schnorr = {
                getPublicKey: function(e) {
                    return T(e).bytes
                },
                sign: function(e, t, r = (0, i.randomBytes)(32)) {
                    let n = (0, s.ensureBytes)("message", e),
                        {
                            bytes: o,
                            scalar: a
                        } = T(t),
                        u = (0, s.ensureBytes)("auxRand", r, 32),
                        c = P(a ^ (0, s.bytesToNumberBE)(E("BIP0340/aux", u))),
                        l = E("BIP0340/nonce", c, o, n),
                        d = O((0, s.bytesToNumberBE)(l));
                    if (d === b) throw Error("sign failed: k is zero");
                    let {
                        bytes: f,
                        scalar: h
                    } = T(d), p = S(f, o, n), m = new Uint8Array(64);
                    if (m.set(f, 0), m.set(P(O(h + p * a)), 32), !k(m, n, o)) throw Error("sign: Invalid signature produced");
                    return m
                },
                verify: k,
                utils: {
                    randomPrivateKey: t.secp256k1.utils.randomPrivateKey,
                    lift_x: C,
                    pointToBytes: A,
                    numberToBytesBE: s.numberToBytesBE,
                    bytesToNumberBE: s.bytesToNumberBE,
                    taggedHash: E,
                    mod: o.mod
                }
            };
            let M = (0, u.isogenyMap)(g, [
                    ["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7", "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581", "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262", "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],
                    ["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b", "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14", "0x0000000000000000000000000000000000000000000000000000000000000001"],
                    ["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c", "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3", "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931", "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],
                    ["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b", "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573", "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f", "0x0000000000000000000000000000000000000000000000000000000000000001"]
                ].map(e => e.map(e => BigInt(e)))),
                B = (0, a.mapToCurveSimpleSWU)(g, {
                    A: BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),
                    B: BigInt("1771"),
                    Z: g.create(BigInt("-11"))
                }),
                N = (0, u.createHasher)(t.secp256k1.ProjectivePoint, e => {
                    let {
                        x: t,
                        y: r
                    } = B(g.create(e[0]));
                    return M(t, r)
                }, {
                    DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
                    encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
                    p: g.ORDER,
                    m: 1,
                    k: 128,
                    expand: "xmd",
                    hash: n.sha256
                });
            t.hashToCurve = N.hashToCurve, t.encodeToCurve = N.encodeToCurve
        },
        67021: function(e, t) {
            "use strict";

            function r(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function n(e) {
                if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`)
            }

            function i(e, ...t) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function o(e) {
                if ("function" != typeof e || "function" != typeof e.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                r(e.outputLen), r(e.blockLen)
            }

            function a(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }

            function s(e, t) {
                i(e);
                let r = t.outputLen;
                if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0, t.number = r, t.bool = n, t.bytes = i, t.hash = o, t.exists = a, t.output = s, t.default = {
                number: r,
                bool: n,
                bytes: i,
                hash: o,
                exists: a,
                output: s
            }
        },
        77961: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SHA2 = void 0;
            let n = r(67021),
                i = r(85758);
            class o extends i.Hash {
                constructor(e, t, r, n) {
                    super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = n, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = (0, i.createView)(this.buffer)
                }
                update(e) {
                    (0, n.exists)(this);
                    let {
                        view: t,
                        buffer: r,
                        blockLen: o
                    } = this, a = (e = (0, i.toBytes)(e)).length;
                    for (let n = 0; n < a;) {
                        let s = Math.min(o - this.pos, a - n);
                        if (s === o) {
                            let t = (0, i.createView)(e);
                            for (; o <= a - n; n += o) this.process(t, n);
                            continue
                        }
                        r.set(e.subarray(n, n + s), this.pos), this.pos += s, n += s, this.pos === o && (this.process(t, 0), this.pos = 0)
                    }
                    return this.length += e.length, this.roundClean(), this
                }
                digestInto(e) {
                    (0, n.exists)(this), (0, n.output)(e, this), this.finished = !0;
                    let {
                        buffer: t,
                        view: r,
                        blockLen: o,
                        isLE: a
                    } = this, {
                        pos: s
                    } = this;
                    t[s++] = 128, this.buffer.subarray(s).fill(0), this.padOffset > o - s && (this.process(r, 0), s = 0);
                    for (let e = s; e < o; e++) t[e] = 0;
                    ! function(e, t, r, n) {
                        if ("function" == typeof e.setBigUint64) return e.setBigUint64(t, r, n);
                        let i = BigInt(32),
                            o = BigInt(4294967295),
                            a = Number(r >> i & o),
                            s = Number(r & o),
                            u = n ? 4 : 0,
                            c = n ? 0 : 4;
                        e.setUint32(t + u, a, n), e.setUint32(t + c, s, n)
                    }(r, o - 8, BigInt(8 * this.length), a), this.process(r, 0);
                    let u = (0, i.createView)(e),
                        c = this.outputLen;
                    if (c % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
                    let l = c / 4,
                        d = this.get();
                    if (l > d.length) throw Error("_sha2: outputLen bigger than state");
                    for (let e = 0; e < l; e++) u.setUint32(4 * e, d[e], a)
                }
                digest() {
                    let {
                        buffer: e,
                        outputLen: t
                    } = this;
                    this.digestInto(e);
                    let r = e.slice(0, t);
                    return this.destroy(), r
                }
                _cloneInto(e) {
                    e || (e = new this.constructor), e.set(...this.get());
                    let {
                        blockLen: t,
                        buffer: r,
                        length: n,
                        finished: i,
                        destroyed: o,
                        pos: a
                    } = this;
                    return e.length = n, e.pos = a, e.finished = i, e.destroyed = o, n % t && e.buffer.set(r), e
                }
            }
            t.SHA2 = o
        },
        30455: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.add5L = t.add5H = t.add4H = t.add4L = t.add3H = t.add3L = t.add = t.rotlBL = t.rotlBH = t.rotlSL = t.rotlSH = t.rotr32L = t.rotr32H = t.rotrBL = t.rotrBH = t.rotrSL = t.rotrSH = t.shrSL = t.shrSH = t.toBig = t.split = t.fromBig = void 0;
            let r = BigInt(4294967296 - 1),
                n = BigInt(32);

            function i(e, t = !1) {
                return t ? {
                    h: Number(e & r),
                    l: Number(e >> n & r)
                } : {
                    h: 0 | Number(e >> n & r),
                    l: 0 | Number(e & r)
                }
            }

            function o(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let o = 0; o < e.length; o++) {
                    let {
                        h: a,
                        l: s
                    } = i(e[o], t);
                    [r[o], n[o]] = [a, s]
                }
                return [r, n]
            }
            t.fromBig = i, t.split = o;
            let a = (e, t) => BigInt(e >>> 0) << n | BigInt(t >>> 0);
            t.toBig = a;
            let s = (e, t, r) => e >>> r;
            t.shrSH = s;
            let u = (e, t, r) => e << 32 - r | t >>> r;
            t.shrSL = u;
            let c = (e, t, r) => e >>> r | t << 32 - r;
            t.rotrSH = c;
            let l = (e, t, r) => e << 32 - r | t >>> r;
            t.rotrSL = l;
            let d = (e, t, r) => e << 64 - r | t >>> r - 32;
            t.rotrBH = d;
            let f = (e, t, r) => e >>> r - 32 | t << 64 - r;
            t.rotrBL = f;
            let h = (e, t) => t;
            t.rotr32H = h;
            let p = (e, t) => e;
            t.rotr32L = p;
            let m = (e, t, r) => e << r | t >>> 32 - r;
            t.rotlSH = m;
            let g = (e, t, r) => t << r | e >>> 32 - r;
            t.rotlSL = g;
            let b = (e, t, r) => t << r - 32 | e >>> 64 - r;
            t.rotlBH = b;
            let y = (e, t, r) => e << r - 32 | t >>> 64 - r;

            function v(e, t, r, n) {
                let i = (t >>> 0) + (n >>> 0);
                return {
                    h: e + r + (i / 4294967296 | 0) | 0,
                    l: 0 | i
                }
            }
            t.rotlBL = y, t.add = v;
            let w = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0);
            t.add3L = w;
            let E = (e, t, r, n) => t + r + n + (e / 4294967296 | 0) | 0;
            t.add3H = E;
            let A = (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0);
            t.add4L = A;
            let P = (e, t, r, n, i) => t + r + n + i + (e / 4294967296 | 0) | 0;
            t.add4H = P;
            let x = (e, t, r, n, i) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0);
            t.add5L = x;
            let O = (e, t, r, n, i, o) => t + r + n + i + o + (e / 4294967296 | 0) | 0;
            t.add5H = O, t.default = {
                fromBig: i,
                split: o,
                toBig: a,
                shrSH: s,
                shrSL: u,
                rotrSH: c,
                rotrSL: l,
                rotrBH: d,
                rotrBL: f,
                rotr32H: h,
                rotr32L: p,
                rotlSH: m,
                rotlSL: g,
                rotlBH: b,
                rotlBL: y,
                add: v,
                add3L: w,
                add3H: E,
                add4L: A,
                add4H: P,
                add5H: O,
                add5L: x
            }
        },
        4319: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crypto = void 0, t.crypto = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0
        },
        90950: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hmac = t.HMAC = void 0;
            let n = r(67021),
                i = r(85758);
            class o extends i.Hash {
                constructor(e, t) {
                    super(), this.finished = !1, this.destroyed = !1, (0, n.hash)(e);
                    let r = (0, i.toBytes)(t);
                    if (this.iHash = e.create(), "function" != typeof this.iHash.update) throw Error("Expected instance of class which extends utils.Hash");
                    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
                    let o = this.blockLen,
                        a = new Uint8Array(o);
                    a.set(r.length > o ? e.create().update(r).digest() : r);
                    for (let e = 0; e < a.length; e++) a[e] ^= 54;
                    this.iHash.update(a), this.oHash = e.create();
                    for (let e = 0; e < a.length; e++) a[e] ^= 106;
                    this.oHash.update(a), a.fill(0)
                }
                update(e) {
                    return (0, n.exists)(this), this.iHash.update(e), this
                }
                digestInto(e) {
                    (0, n.exists)(this), (0, n.bytes)(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy()
                }
                digest() {
                    let e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e
                }
                _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    let {
                        oHash: t,
                        iHash: r,
                        finished: n,
                        destroyed: i,
                        blockLen: o,
                        outputLen: a
                    } = this;
                    return e.finished = n, e.destroyed = i, e.blockLen = o, e.outputLen = a, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e
                }
                destroy() {
                    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
                }
            }
            t.HMAC = o, t.hmac = (e, t, r) => new o(e, t).update(r).digest(), t.hmac.create = (e, t) => new o(e, t)
        },
        57430: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = t.RIPEMD160 = void 0;
            let n = r(77961),
                i = r(85758),
                o = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
                a = Uint8Array.from({
                    length: 16
                }, (e, t) => t),
                s = a.map(e => (9 * e + 5) % 16),
                u = [a],
                c = [s];
            for (let e = 0; e < 4; e++)
                for (let t of [u, c]) t.push(t[e].map(e => o[e]));
            let l = [
                    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
                    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
                    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
                    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
                    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
                ].map(e => new Uint8Array(e)),
                d = u.map((e, t) => e.map(e => l[t][e])),
                f = c.map((e, t) => e.map(e => l[t][e])),
                h = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                p = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                m = (e, t) => e << t | e >>> 32 - t;

            function g(e, t, r, n) {
                return 0 === e ? t ^ r ^ n : 1 === e ? t & r | ~t & n : 2 === e ? (t | ~r) ^ n : 3 === e ? t & n | r & ~n : t ^ (r | ~n)
            }
            let b = new Uint32Array(16);
            class y extends n.SHA2 {
                constructor() {
                    super(64, 20, 8, !0), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776
                }
                get() {
                    let {
                        h0: e,
                        h1: t,
                        h2: r,
                        h3: n,
                        h4: i
                    } = this;
                    return [e, t, r, n, i]
                }
                set(e, t, r, n, i) {
                    this.h0 = 0 | e, this.h1 = 0 | t, this.h2 = 0 | r, this.h3 = 0 | n, this.h4 = 0 | i
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) b[r] = e.getUint32(t, !0);
                    let r = 0 | this.h0,
                        n = r,
                        i = 0 | this.h1,
                        o = i,
                        a = 0 | this.h2,
                        s = a,
                        l = 0 | this.h3,
                        y = l,
                        v = 0 | this.h4,
                        w = v;
                    for (let e = 0; e < 5; e++) {
                        let t = 4 - e,
                            E = h[e],
                            A = p[e],
                            P = u[e],
                            x = c[e],
                            O = d[e],
                            _ = f[e];
                        for (let t = 0; t < 16; t++) {
                            let n = m(r + g(e, i, a, l) + b[P[t]] + E, O[t]) + v | 0;
                            r = v, v = l, l = 0 | m(a, 10), a = i, i = n
                        }
                        for (let e = 0; e < 16; e++) {
                            let r = m(n + g(t, o, s, y) + b[x[e]] + A, _[e]) + w | 0;
                            n = w, w = y, y = 0 | m(s, 10), s = o, o = r
                        }
                    }
                    this.set(this.h1 + a + y | 0, this.h2 + l + w | 0, this.h3 + v + n | 0, this.h4 + r + o | 0, this.h0 + i + s | 0)
                }
                roundClean() {
                    b.fill(0)
                }
                destroy() {
                    this.destroyed = !0, this.buffer.fill(0), this.set(0, 0, 0, 0, 0)
                }
            }
            t.RIPEMD160 = y, t.ripemd160 = (0, i.wrapConstructor)(() => new y)
        },
        44212: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha224 = t.sha256 = void 0;
            let n = r(77961),
                i = r(85758),
                o = (e, t, r) => e & t ^ ~e & r,
                a = (e, t, r) => e & t ^ e & r ^ t & r,
                s = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                u = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
                c = new Uint32Array(64);
            class l extends n.SHA2 {
                constructor() {
                    super(64, 32, 8, !1), this.A = 0 | u[0], this.B = 0 | u[1], this.C = 0 | u[2], this.D = 0 | u[3], this.E = 0 | u[4], this.F = 0 | u[5], this.G = 0 | u[6], this.H = 0 | u[7]
                }
                get() {
                    let {
                        A: e,
                        B: t,
                        C: r,
                        D: n,
                        E: i,
                        F: o,
                        G: a,
                        H: s
                    } = this;
                    return [e, t, r, n, i, o, a, s]
                }
                set(e, t, r, n, i, o, a, s) {
                    this.A = 0 | e, this.B = 0 | t, this.C = 0 | r, this.D = 0 | n, this.E = 0 | i, this.F = 0 | o, this.G = 0 | a, this.H = 0 | s
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) c[r] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                        let t = c[e - 15],
                            r = c[e - 2],
                            n = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ t >>> 3,
                            o = (0, i.rotr)(r, 17) ^ (0, i.rotr)(r, 19) ^ r >>> 10;
                        c[e] = o + c[e - 7] + n + c[e - 16] | 0
                    }
                    let {
                        A: r,
                        B: n,
                        C: u,
                        D: l,
                        E: d,
                        F: f,
                        G: h,
                        H: p
                    } = this;
                    for (let e = 0; e < 64; e++) {
                        let t = p + ((0, i.rotr)(d, 6) ^ (0, i.rotr)(d, 11) ^ (0, i.rotr)(d, 25)) + o(d, f, h) + s[e] + c[e] | 0,
                            m = ((0, i.rotr)(r, 2) ^ (0, i.rotr)(r, 13) ^ (0, i.rotr)(r, 22)) + a(r, n, u) | 0;
                        p = h, h = f, f = d, d = l + t | 0, l = u, u = n, n = r, r = t + m | 0
                    }
                    r = r + this.A | 0, n = n + this.B | 0, u = u + this.C | 0, l = l + this.D | 0, d = d + this.E | 0, f = f + this.F | 0, h = h + this.G | 0, p = p + this.H | 0, this.set(r, n, u, l, d, f, h, p)
                }
                roundClean() {
                    c.fill(0)
                }
                destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
                }
            }
            class d extends l {
                constructor() {
                    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28
                }
            }
            t.sha256 = (0, i.wrapConstructor)(() => new l), t.sha224 = (0, i.wrapConstructor)(() => new d)
        },
        52975: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shake256 = t.shake128 = t.keccak_512 = t.keccak_384 = t.keccak_256 = t.keccak_224 = t.sha3_512 = t.sha3_384 = t.sha3_256 = t.sha3_224 = t.Keccak = t.keccakP = void 0;
            let n = r(67021),
                i = r(30455),
                o = r(85758),
                [a, s, u] = [
                    [],
                    [],
                    []
                ],
                c = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                f = BigInt(7),
                h = BigInt(256),
                p = BigInt(113);
            for (let e = 0, t = l, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], a.push(2 * (5 * n + r)), s.push((e + 1) * (e + 2) / 2 % 64);
                let i = c;
                for (let e = 0; e < 7; e++)(t = (t << l ^ (t >> f) * p) % h) & d && (i ^= l << (l << BigInt(e)) - l);
                u.push(i)
            }
            let [m, g] = (0, i.split)(u, !0), b = (e, t, r) => r > 32 ? (0, i.rotlBH)(e, t, r) : (0, i.rotlSH)(e, t, r), y = (e, t, r) => r > 32 ? (0, i.rotlBL)(e, t, r) : (0, i.rotlSL)(e, t, r);

            function v(e, t = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - t; n < 24; n++) {
                    for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                        let n = (t + 8) % 10,
                            i = (t + 2) % 10,
                            o = r[i],
                            a = r[i + 1],
                            s = b(o, a, 1) ^ r[n],
                            u = y(o, a, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) e[t + r] ^= s, e[t + r + 1] ^= u
                    }
                    let t = e[2],
                        i = e[3];
                    for (let r = 0; r < 24; r++) {
                        let n = s[r],
                            o = b(t, i, n),
                            u = y(t, i, n),
                            c = a[r];
                        t = e[c], i = e[c + 1], e[c] = o, e[c + 1] = u
                    }
                    for (let t = 0; t < 50; t += 10) {
                        for (let n = 0; n < 10; n++) r[n] = e[t + n];
                        for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    e[0] ^= m[n], e[1] ^= g[n]
                }
                r.fill(0)
            }
            t.keccakP = v;
            class w extends o.Hash {
                constructor(e, t, r, i = !1, a = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = a, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, n.number)(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, o.u32)(this.state)
                }
                keccak() {
                    v(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    (0, n.exists)(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this, i = (e = (0, o.toBytes)(e)).length;
                    for (let n = 0; n < i;) {
                        let o = Math.min(t - this.pos, i - n);
                        for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    (0, n.exists)(this, !1), (0, n.bytes)(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return (0, n.number)(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if ((0, n.output)(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(e) {
                    let {
                        blockLen: t,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: o
                    } = this;
                    return e || (e = new w(t, r, n, o, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = n, e.enableXOF = o, e.destroyed = this.destroyed, e
                }
            }
            t.Keccak = w;
            let E = (e, t, r) => (0, o.wrapConstructor)(() => new w(t, e, r));
            t.sha3_224 = E(6, 144, 28), t.sha3_256 = E(6, 136, 32), t.sha3_384 = E(6, 104, 48), t.sha3_512 = E(6, 72, 64), t.keccak_224 = E(1, 144, 28), t.keccak_256 = E(1, 136, 32), t.keccak_384 = E(1, 104, 48), t.keccak_512 = E(1, 72, 64);
            let A = (e, t, r) => (0, o.wrapXOFConstructorWithOpts)((n = {}) => new w(t, e, void 0 === n.dkLen ? r : n.dkLen, !0));
            t.shake128 = A(31, 168, 16), t.shake256 = A(31, 136, 32)
        },
        85758: function(e, t, r) {
            "use strict"; /*!noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.wrapXOFConstructorWithOpts = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
            let n = r(4319),
                i = e => e instanceof Uint8Array;
            if (t.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), t.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength), t.rotr = (e, t) => e << 32 - t | e >>> t, t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0], !t.isLE) throw Error("Non little-endian hardware is not supported");
            let o = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));
            t.bytesToHex = function(e) {
                if (!i(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += o[e[r]];
                return t
            }, t.hexToBytes = function(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = Number.parseInt(e.slice(n, n + 2), 16);
                    if (Number.isNaN(i) || i < 0) throw Error("Invalid byte sequence");
                    r[t] = i
                }
                return r
            };
            let a = async () => {};
            async function s(e, r, n) {
                let i = Date.now();
                for (let o = 0; o < e; o++) {
                    n(o);
                    let e = Date.now() - i;
                    e >= 0 && e < r || (await (0, t.nextTick)(), i += e)
                }
            }

            function u(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }

            function c(e) {
                if ("string" == typeof e && (e = u(e)), !i(e)) throw Error(`expected Uint8Array, got ${typeof e}`);
                return e
            }
            t.nextTick = a, t.asyncLoop = s, t.utf8ToBytes = u, t.toBytes = c, t.concatBytes = function(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!i(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            };
            class l {
                clone() {
                    return this._cloneInto()
                }
            }
            t.Hash = l;
            let d = {}.toString;
            t.checkOpts = function(e, t) {
                if (void 0 !== t && "[object Object]" !== d.call(t)) throw Error("Options should be object or undefined");
                return Object.assign(e, t)
            }, t.wrapConstructor = function(e) {
                let t = t => e().update(c(t)).digest(),
                    r = e();
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = () => e(), t
            }, t.wrapConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(c(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.wrapXOFConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(c(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.randomBytes = function(e = 32) {
                if (n.crypto && "function" == typeof n.crypto.getRandomValues) return n.crypto.getRandomValues(new Uint8Array(e));
                throw Error("crypto.getRandomValues must be defined")
            }
        },
        64022: function(e, t, r) {
            "use strict";
            t.N = void 0;
            var n = r(31592);
            Object.defineProperty(t, "N", {
                enumerable: !0,
                get: function() {
                    return n.SafeAppProvider
                }
            })
        },
        31592: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeAppProvider = void 0;
            let n = r(68885),
                i = r(53875);
            class o extends n.EventEmitter {
                constructor(e, t) {
                    super(), this.submittedTxs = new Map, this.safe = e, this.sdk = t
                }
                async connect() {
                    this.emit("connect", {
                        chainId: this.chainId
                    })
                }
                async disconnect() {}
                get chainId() {
                    return this.safe.chainId
                }
                async request(e) {
                    let {
                        method: t,
                        params: r = []
                    } = e;
                    switch (t) {
                        case "eth_accounts":
                            return [this.safe.safeAddress];
                        case "net_version":
                        case "eth_chainId":
                            return `0x${this.chainId.toString(16)}`;
                        case "personal_sign":
                            {
                                let [e, t] = r;
                                if (this.safe.safeAddress.toLowerCase() !== t.toLowerCase()) throw Error("The address or message hash is invalid");
                                let n = await this.sdk.txs.signMessage(e);
                                return ("signature" in n ? n.signature : void 0) || "0x"
                            }
                        case "eth_sign":
                            {
                                let [e, t] = r;
                                if (this.safe.safeAddress.toLowerCase() !== e.toLowerCase() || !t.startsWith("0x")) throw Error("The address or message hash is invalid");
                                let n = await this.sdk.txs.signMessage(t);
                                return ("signature" in n ? n.signature : void 0) || "0x"
                            }
                        case "eth_signTypedData":
                        case "eth_signTypedData_v4":
                            {
                                let [e, t] = r,
                                n = "string" == typeof t ? JSON.parse(t) : t;
                                if (this.safe.safeAddress.toLowerCase() !== e.toLowerCase()) throw Error("The address is invalid");
                                let i = await this.sdk.txs.signTypedMessage(n);
                                return ("signature" in i ? i.signature : void 0) || "0x"
                            }
                        case "eth_sendTransaction":
                            let n = { ...r[0],
                                value: r[0].value || "0",
                                data: r[0].data || "0x"
                            };
                            "string" == typeof n.gas && n.gas.startsWith("0x") && (n.gas = parseInt(n.gas, 16));
                            let o = await this.sdk.txs.send({
                                txs: [n],
                                params: {
                                    safeTxGas: n.gas
                                }
                            });
                            return this.submittedTxs.set(o.safeTxHash, {
                                from: this.safe.safeAddress,
                                hash: o.safeTxHash,
                                gas: 0,
                                gasPrice: "0x00",
                                nonce: 0,
                                input: n.data,
                                value: n.value,
                                to: n.to,
                                blockHash: null,
                                blockNumber: null,
                                transactionIndex: null
                            }), o.safeTxHash;
                        case "eth_blockNumber":
                            return (await this.sdk.eth.getBlockByNumber(["latest"])).number;
                        case "eth_getBalance":
                            return this.sdk.eth.getBalance([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getCode":
                            return this.sdk.eth.getCode([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getTransactionCount":
                            return this.sdk.eth.getTransactionCount([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getStorageAt":
                            return this.sdk.eth.getStorageAt([(0, i.getLowerCase)(r[0]), r[1], r[2]]);
                        case "eth_getBlockByNumber":
                            return this.sdk.eth.getBlockByNumber([r[0], r[1]]);
                        case "eth_getBlockByHash":
                            return this.sdk.eth.getBlockByHash([r[0], r[1]]);
                        case "eth_getTransactionByHash":
                            let a = r[0];
                            try {
                                a = (await this.sdk.txs.getBySafeTxHash(a)).txHash || a
                            } catch (e) {}
                            if (this.submittedTxs.has(a)) return this.submittedTxs.get(a);
                            return this.sdk.eth.getTransactionByHash([a]).then(e => (e && (e.hash = r[0]), e));
                        case "eth_getTransactionReceipt":
                            {
                                let e = r[0];
                                try {
                                    e = (await this.sdk.txs.getBySafeTxHash(e)).txHash || e
                                } catch (e) {}
                                return this.sdk.eth.getTransactionReceipt([e]).then(e => (e && (e.transactionHash = r[0]), e))
                            }
                        case "eth_estimateGas":
                            return this.sdk.eth.getEstimateGas(r[0]);
                        case "eth_call":
                            return this.sdk.eth.call([r[0], r[1]]);
                        case "eth_getLogs":
                            return this.sdk.eth.getPastLogs([r[0]]);
                        case "eth_gasPrice":
                            return this.sdk.eth.getGasPrice();
                        case "wallet_getPermissions":
                            return this.sdk.wallet.getPermissions();
                        case "wallet_requestPermissions":
                            return this.sdk.wallet.requestPermissions(r[0]);
                        case "safe_setSettings":
                            return this.sdk.eth.setSafeSettings([r[0]]);
                        default:
                            throw Error(`"${e.method}" not implemented`)
                    }
                }
                send(e, t) {
                    e || t("Undefined request"), this.request(e).then(r => t(null, {
                        jsonrpc: "2.0",
                        id: e.id,
                        result: r
                    })).catch(e => t(e, null))
                }
            }
            t.SafeAppProvider = o
        },
        53875: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLowerCase = void 0, t.getLowerCase = function(e) {
                return e ? e.toLowerCase() : e
            }
        },
        93331: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let o = r(58189);
            class a {
                constructor(e = null, t = !1) {
                    this.allowedOrigins = null, this.callbacks = new Map, this.debugMode = !1, this.isServer = "undefined" == typeof window, this.isValidMessage = ({
                        origin: e,
                        data: t,
                        source: r
                    }) => {
                        let n = !this.isServer && r === window.parent,
                            i = void 0 !== t.version && parseInt(t.version.split(".")[0]),
                            o = !0;
                        return Array.isArray(this.allowedOrigins) && (o = void 0 !== this.allowedOrigins.find(t => t.test(e))), !!t && n && i >= 1 && o
                    }, this.logIncomingMessage = e => {
                        console.info(`Safe Apps SDK v1: A message was received from origin ${e.origin}. `, e.data)
                    }, this.onParentMessage = e => {
                        this.isValidMessage(e) && (this.debugMode && this.logIncomingMessage(e), this.handleIncomingMessage(e.data))
                    }, this.handleIncomingMessage = e => {
                        let {
                            id: t
                        } = e, r = this.callbacks.get(t);
                        r && (r(e), this.callbacks.delete(t))
                    }, this.send = (e, t) => {
                        let r = o.MessageFormatter.makeRequest(e, t);
                        if (this.isServer) throw Error("Window doesn't exist");
                        return window.parent.postMessage(r, "*"), new Promise((e, t) => {
                            this.callbacks.set(r.id, r => {
                                if (!r.success) {
                                    t(Error(r.error));
                                    return
                                }
                                e(r)
                            })
                        })
                    }, this.allowedOrigins = e, this.debugMode = t, this.isServer || window.addEventListener("message", this.onParentMessage)
                }
            }
            t.default = a, i(r(32186), t)
        },
        58189: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MessageFormatter = void 0;
            let n = r(1581),
                i = r(35687);
            class o {}
            t.MessageFormatter = o, o.makeRequest = (e, t) => ({
                id: (0, i.generateRequestId)(),
                method: e,
                params: t,
                env: {
                    sdkVersion: (0, n.getSDKVersion)()
                }
            }), o.makeResponse = (e, t, r) => ({
                id: e,
                success: !0,
                version: r,
                data: t
            }), o.makeErrorResponse = (e, t, r) => ({
                id: e,
                success: !1,
                error: t,
                version: r
            })
        },
        32186: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RestrictedMethods = t.Methods = void 0, (r = t.Methods || (t.Methods = {})).sendTransactions = "sendTransactions", r.rpcCall = "rpcCall", r.getChainInfo = "getChainInfo", r.getSafeInfo = "getSafeInfo", r.getTxBySafeTxHash = "getTxBySafeTxHash", r.getSafeBalances = "getSafeBalances", r.signMessage = "signMessage", r.signTypedMessage = "signTypedMessage", r.getEnvironmentInfo = "getEnvironmentInfo", r.getOffChainSignature = "getOffChainSignature", r.requestAddressBook = "requestAddressBook", r.wallet_getPermissions = "wallet_getPermissions", r.wallet_requestPermissions = "wallet_requestPermissions", (t.RestrictedMethods || (t.RestrictedMethods = {})).requestAddressBook = "requestAddressBook"
        },
        35687: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.generateRequestId = void 0;
            let r = e => e.toString(16).padStart(2, "0"),
                n = e => {
                    let t = new Uint8Array((e || 40) / 2);
                    return window.crypto.getRandomValues(t), Array.from(t, r).join("")
                };
            t.generateRequestId = () => "undefined" != typeof window ? n(10) : new Date().getTime().toString(36)
        },
        28531: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(17271),
                i = r(62580),
                o = (e, t) => t.some(t => t.parentCapability === e);
            t.default = () => (e, t, r) => {
                let a = r.value;
                return r.value = async function() {
                    let e = new n.Wallet(this.communicator),
                        r = await e.getPermissions();
                    if (o(t, r) || (r = await e.requestPermissions([{
                            [t]: {}
                        }])), !o(t, r)) throw new i.PermissionsError("Permissions rejected", i.PERMISSIONS_REQUEST_REJECTED);
                    return a.apply(this)
                }, r
            }
        },
        78567: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RPC_CALLS = void 0, t.RPC_CALLS = {
                eth_call: "eth_call",
                eth_gasPrice: "eth_gasPrice",
                eth_getLogs: "eth_getLogs",
                eth_getBalance: "eth_getBalance",
                eth_getCode: "eth_getCode",
                eth_getBlockByHash: "eth_getBlockByHash",
                eth_getBlockByNumber: "eth_getBlockByNumber",
                eth_getStorageAt: "eth_getStorageAt",
                eth_getTransactionByHash: "eth_getTransactionByHash",
                eth_getTransactionReceipt: "eth_getTransactionReceipt",
                eth_getTransactionCount: "eth_getTransactionCount",
                eth_estimateGas: "eth_estimateGas",
                safe_setSettings: "safe_setSettings"
            }
        },
        43500: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Eth = void 0;
            let n = r(78567),
                i = r(32186),
                o = (e = "latest") => e,
                a = (e = !1) => e,
                s = e => Number.isInteger(e) ? `0x${e.toString(16)}` : e;
            class u {
                constructor(e) {
                    this.communicator = e, this.call = this.buildRequest({
                        call: n.RPC_CALLS.eth_call,
                        formatters: [null, o]
                    }), this.getBalance = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBalance,
                        formatters: [null, o]
                    }), this.getCode = this.buildRequest({
                        call: n.RPC_CALLS.eth_getCode,
                        formatters: [null, o]
                    }), this.getStorageAt = this.buildRequest({
                        call: n.RPC_CALLS.eth_getStorageAt,
                        formatters: [null, s, o]
                    }), this.getPastLogs = this.buildRequest({
                        call: n.RPC_CALLS.eth_getLogs
                    }), this.getBlockByHash = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBlockByHash,
                        formatters: [null, a]
                    }), this.getBlockByNumber = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBlockByNumber,
                        formatters: [s, a]
                    }), this.getTransactionByHash = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionByHash
                    }), this.getTransactionReceipt = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionReceipt
                    }), this.getTransactionCount = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionCount,
                        formatters: [null, o]
                    }), this.getGasPrice = this.buildRequest({
                        call: n.RPC_CALLS.eth_gasPrice
                    }), this.getEstimateGas = e => this.buildRequest({
                        call: n.RPC_CALLS.eth_estimateGas
                    })([e]), this.setSafeSettings = this.buildRequest({
                        call: n.RPC_CALLS.safe_setSettings
                    })
                }
                buildRequest(e) {
                    let {
                        call: t,
                        formatters: r
                    } = e;
                    return async e => (r && Array.isArray(e) && r.forEach((t, r) => {
                        t && (e[r] = t(e[r]))
                    }), (await this.communicator.send(i.Methods.rpcCall, {
                        call: t,
                        params: e || []
                    })).data)
                }
            }
            t.Eth = u
        },
        86325: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                },
                o = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSDKVersion = void 0;
            let a = o(r(89415));
            t.default = a.default, i(r(89415), t), i(r(63911), t), i(r(32186), t), i(r(58189), t);
            var s = r(1581);
            Object.defineProperty(t, "getSDKVersion", {
                enumerable: !0,
                get: function() {
                    return s.getSDKVersion
                }
            })
        },
        31348: function(e, t, r) {
            "use strict";
            var n = this && this.__decorate || function(e, t, r, n) {
                    var i, o = arguments.length,
                        a = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);
                    else
                        for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
                    return o > 3 && a && Object.defineProperty(t, r, a), a
                },
                i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Safe = void 0;
            let o = r(84496),
                a = r(33853),
                s = r(32186),
                u = r(78567),
                c = r(63911),
                l = i(r(28531));
            class d {
                constructor(e) {
                    this.communicator = e
                }
                async getChainInfo() {
                    return (await this.communicator.send(s.Methods.getChainInfo, void 0)).data
                }
                async getInfo() {
                    return (await this.communicator.send(s.Methods.getSafeInfo, void 0)).data
                }
                async experimental_getBalances({
                    currency: e = "usd"
                } = {}) {
                    return (await this.communicator.send(s.Methods.getSafeBalances, {
                        currency: e
                    })).data
                }
                async check1271Signature(e, t = "0x") {
                    let r = await this.getInfo(),
                        n = (0, o.encodeFunctionData)({
                            abi: [{
                                constant: !1,
                                inputs: [{
                                    name: "_dataHash",
                                    type: "bytes32"
                                }, {
                                    name: "_signature",
                                    type: "bytes"
                                }],
                                name: "isValidSignature",
                                outputs: [{
                                    name: "",
                                    type: "bytes4"
                                }],
                                payable: !1,
                                stateMutability: "nonpayable",
                                type: "function"
                            }],
                            functionName: "isValidSignature",
                            args: [e, t]
                        }),
                        i = {
                            call: u.RPC_CALLS.eth_call,
                            params: [{
                                to: r.safeAddress,
                                data: n
                            }, "latest"]
                        };
                    try {
                        return (await this.communicator.send(s.Methods.rpcCall, i)).data.slice(0, 10).toLowerCase() === a.MAGIC_VALUE
                    } catch (e) {
                        return !1
                    }
                }
                async check1271SignatureBytes(e, t = "0x") {
                    let r = await this.getInfo(),
                        n = (0, o.encodeFunctionData)({
                            abi: [{
                                constant: !1,
                                inputs: [{
                                    name: "_data",
                                    type: "bytes"
                                }, {
                                    name: "_signature",
                                    type: "bytes"
                                }],
                                name: "isValidSignature",
                                outputs: [{
                                    name: "",
                                    type: "bytes4"
                                }],
                                payable: !1,
                                stateMutability: "nonpayable",
                                type: "function"
                            }],
                            functionName: "isValidSignature",
                            args: [e, t]
                        }),
                        i = {
                            call: u.RPC_CALLS.eth_call,
                            params: [{
                                to: r.safeAddress,
                                data: n
                            }, "latest"]
                        };
                    try {
                        return (await this.communicator.send(s.Methods.rpcCall, i)).data.slice(0, 10).toLowerCase() === a.MAGIC_VALUE_BYTES
                    } catch (e) {
                        return !1
                    }
                }
                calculateMessageHash(e) {
                    return (0, o.hashMessage)(e)
                }
                calculateTypedMessageHash(e) {
                    let t = "object" == typeof e.domain.chainId ? e.domain.chainId.toNumber() : Number(e.domain.chainId),
                        r = e.primaryType;
                    if (!r) {
                        let t = Object.values(e.types),
                            n = Object.keys(e.types).filter(e => t.every(t => t.every(({
                                type: t
                            }) => t.replace("[", "").replace("]", "") !== e)));
                        if (0 === n.length || n.length > 1) throw Error("Please specify primaryType");
                        r = n[0]
                    }
                    return (0, o.hashTypedData)({
                        message: e.message,
                        domain: Object.assign(Object.assign({}, e.domain), {
                            chainId: t,
                            verifyingContract: e.domain.verifyingContract,
                            salt: e.domain.salt
                        }),
                        types: e.types,
                        primaryType: r
                    })
                }
                async getOffChainSignature(e) {
                    return (await this.communicator.send(s.Methods.getOffChainSignature, e)).data
                }
                async isMessageSigned(e, t = "0x") {
                    let r;
                    if ("string" == typeof e && (r = async () => {
                            let r = this.calculateMessageHash(e);
                            return await this.isMessageHashSigned(r, t)
                        }), (0, c.isObjectEIP712TypedData)(e) && (r = async () => {
                            let r = this.calculateTypedMessageHash(e);
                            return await this.isMessageHashSigned(r, t)
                        }), r) return await r();
                    throw Error("Invalid message type")
                }
                async isMessageHashSigned(e, t = "0x") {
                    for (let r of [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)])
                        if (await r(e, t)) return !0;
                    return !1
                }
                async getEnvironmentInfo() {
                    return (await this.communicator.send(s.Methods.getEnvironmentInfo, void 0)).data
                }
                async requestAddressBook() {
                    return (await this.communicator.send(s.Methods.requestAddressBook, void 0)).data
                }
            }
            n([(0, l.default)()], d.prototype, "requestAddressBook", null), t.Safe = d
        },
        33853: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MAGIC_VALUE_BYTES = t.MAGIC_VALUE = void 0, t.MAGIC_VALUE = "0x1626ba7e", t.MAGIC_VALUE_BYTES = "0x20c13b0b"
        },
        89415: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let i = n(r(93331)),
                o = r(58703),
                a = r(43500),
                s = r(31348),
                u = r(17271);
            class c {
                constructor(e = {}) {
                    let {
                        allowedDomains: t = null,
                        debug: r = !1
                    } = e;
                    this.communicator = new i.default(t, r), this.eth = new a.Eth(this.communicator), this.txs = new o.TXs(this.communicator), this.safe = new s.Safe(this.communicator), this.wallet = new u.Wallet(this.communicator)
                }
            }
            t.default = c
        },
        58703: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TXs = void 0;
            let n = r(32186),
                i = r(63911);
            class o {
                constructor(e) {
                    this.communicator = e
                }
                async getBySafeTxHash(e) {
                    if (!e) throw Error("Invalid safeTxHash");
                    return (await this.communicator.send(n.Methods.getTxBySafeTxHash, {
                        safeTxHash: e
                    })).data
                }
                async signMessage(e) {
                    return (await this.communicator.send(n.Methods.signMessage, {
                        message: e
                    })).data
                }
                async signTypedMessage(e) {
                    if (!(0, i.isObjectEIP712TypedData)(e)) throw Error("Invalid typed data");
                    return (await this.communicator.send(n.Methods.signTypedMessage, {
                        typedData: e
                    })).data
                }
                async send({
                    txs: e,
                    params: t
                }) {
                    if (!e || !e.length) throw Error("No transactions were passed");
                    return (await this.communicator.send(n.Methods.sendTransactions, {
                        txs: e,
                        params: t
                    })).data
                }
            }
            t.TXs = o
        },
        60971: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TransferDirection = t.TransactionStatus = t.TokenType = t.Operation = void 0;
            var n = r(10441);
            Object.defineProperty(t, "Operation", {
                enumerable: !0,
                get: function() {
                    return n.Operation
                }
            }), Object.defineProperty(t, "TokenType", {
                enumerable: !0,
                get: function() {
                    return n.TokenType
                }
            }), Object.defineProperty(t, "TransactionStatus", {
                enumerable: !0,
                get: function() {
                    return n.TransactionStatus
                }
            }), Object.defineProperty(t, "TransferDirection", {
                enumerable: !0,
                get: function() {
                    return n.TransferDirection
                }
            })
        },
        63911: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), i(r(69852), t), i(r(42579), t), i(r(60971), t), i(r(64329), t)
        },
        64329: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(32186)
        },
        62580: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PermissionsError = t.PERMISSIONS_REQUEST_REJECTED = void 0, t.PERMISSIONS_REQUEST_REJECTED = 4001;
            class r extends Error {
                constructor(e, t, n) {
                    super(e), this.code = t, this.data = n, Object.setPrototypeOf(this, r.prototype)
                }
            }
            t.PermissionsError = r
        },
        42579: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        69852: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isObjectEIP712TypedData = void 0, t.isObjectEIP712TypedData = e => "object" == typeof e && null != e && "domain" in e && "types" in e && "message" in e
        },
        1581: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSDKVersion = void 0;
            let i = n(r(69292));
            t.getSDKVersion = () => i.default.version.split("-")[0]
        },
        17271: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Wallet = void 0;
            let n = r(32186),
                i = r(62580);
            class o {
                constructor(e) {
                    this.communicator = e
                }
                async getPermissions() {
                    return (await this.communicator.send(n.Methods.wallet_getPermissions, void 0)).data
                }
                async requestPermissions(e) {
                    if (!this.isPermissionRequestValid(e)) throw new i.PermissionsError("Permissions request is invalid", i.PERMISSIONS_REQUEST_REJECTED);
                    try {
                        return (await this.communicator.send(n.Methods.wallet_requestPermissions, e)).data
                    } catch (e) {
                        throw new i.PermissionsError("Permissions rejected", i.PERMISSIONS_REQUEST_REJECTED)
                    }
                }
                isPermissionRequestValid(e) {
                    return e.every(e => "object" == typeof e && Object.keys(e).every(e => !!Object.values(n.RestrictedMethods).includes(e)))
                }
            }
            t.Wallet = o
        },
        78633: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DEFAULT_BASE_URL = void 0, t.DEFAULT_BASE_URL = "https://safe-client.safe.global"
        },
        62742: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEndpoint = t.deleteEndpoint = t.putEndpoint = t.postEndpoint = void 0;
            let n = r(99185);

            function i(e, t, r, i) {
                let o = (0, n.insertParams)(t, r),
                    a = (0, n.stringifyQuery)(i);
                return `${e}${o}${a}`
            }
            t.postEndpoint = function(e, t, r) {
                let o = i(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.fetchData)(o, "POST", null == r ? void 0 : r.body, null == r ? void 0 : r.headers)
            }, t.putEndpoint = function(e, t, r) {
                let o = i(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.fetchData)(o, "PUT", null == r ? void 0 : r.body, null == r ? void 0 : r.headers)
            }, t.deleteEndpoint = function(e, t, r) {
                let o = i(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.fetchData)(o, "DELETE", null == r ? void 0 : r.body, null == r ? void 0 : r.headers)
            }, t.getEndpoint = function(e, t, r, o) {
                if (o) return (0, n.getData)(o);
                let a = i(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.getData)(a, null == r ? void 0 : r.headers)
            }
        },
        10441: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContract = t.getSafeOverviews = t.unsubscribeAll = t.unsubscribeSingle = t.registerRecoveryModule = t.deleteRegisteredEmail = t.getRegisteredEmail = t.verifyEmail = t.resendEmailVerificationCode = t.changeEmail = t.registerEmail = t.unregisterDevice = t.unregisterSafe = t.registerDevice = t.getDelegates = t.confirmSafeMessage = t.proposeSafeMessage = t.getSafeMessage = t.getSafeMessages = t.getDecodedData = t.getMasterCopies = t.getSafeApps = t.getChainConfig = t.getChainsConfig = t.getConfirmationView = t.proposeTransaction = t.getNonces = t.postSafeGasEstimation = t.deleteTransaction = t.getTransactionDetails = t.getTransactionQueue = t.getTransactionHistory = t.getCollectiblesPage = t.getCollectibles = t.getAllOwnedSafes = t.getOwnedSafes = t.getFiatCurrencies = t.getBalances = t.getMultisigTransactions = t.getModuleTransactions = t.getIncomingTransfers = t.getSafeInfo = t.getRelayCount = t.relayTransaction = t.setBaseUrl = void 0;
            let o = r(62742),
                a = r(78633);
            i(r(61964), t), i(r(16261), t), i(r(31069), t), i(r(38558), t), i(r(44256), t), i(r(54948), t), i(r(76238), t), i(r(93134), t), i(r(60559), t), i(r(64618), t);
            let s = a.DEFAULT_BASE_URL;
            t.setBaseUrl = e => {
                s = e
            }, t.relayTransaction = function(e, t) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/relay", {
                    path: {
                        chainId: e
                    },
                    body: t
                })
            }, t.getRelayCount = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/relay/{address}", {
                    path: {
                        chainId: e,
                        address: t
                    }
                })
            }, t.getSafeInfo = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}", {
                    path: {
                        chainId: e,
                        address: t
                    }
                })
            }, t.getIncomingTransfers = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/incoming-transfers/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getModuleTransactions = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/module-transactions/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getMultisigTransactions = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/multisig-transactions/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getBalances = function(e, t, r = "usd", n = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/balances/{currency}", {
                    path: {
                        chainId: e,
                        address: t,
                        currency: r
                    },
                    query: n
                })
            }, t.getFiatCurrencies = function() {
                return (0, o.getEndpoint)(s, "/v1/balances/supported-fiat-codes")
            }, t.getOwnedSafes = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/owners/{address}/safes", {
                    path: {
                        chainId: e,
                        address: t
                    }
                })
            }, t.getAllOwnedSafes = function(e) {
                return (0, o.getEndpoint)(s, "/v1/owners/{address}/safes", {
                    path: {
                        address: e
                    }
                })
            }, t.getCollectibles = function(e, t, r = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/collectibles", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                })
            }, t.getCollectiblesPage = function(e, t, r = {}, n) {
                return (0, o.getEndpoint)(s, "/v2/chains/{chainId}/safes/{address}/collectibles", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getTransactionHistory = function(e, t, r = {}, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/transactions/history", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: r
                }, n)
            }, t.getTransactionQueue = function(e, t, r = {}, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/transactions/queued", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: r
                }, n)
            }, t.getTransactionDetails = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/transactions/{transactionId}", {
                    path: {
                        chainId: e,
                        transactionId: t
                    }
                })
            }, t.deleteTransaction = function(e, t, r) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/transactions/{safeTxHash}", {
                    path: {
                        chainId: e,
                        safeTxHash: t
                    },
                    body: {
                        signature: r
                    }
                })
            }, t.postSafeGasEstimation = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.getNonces = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/nonces", {
                    path: {
                        chainId: e,
                        safe_address: t
                    }
                })
            }, t.proposeTransaction = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/transactions/{safe_address}/propose", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.getConfirmationView = function(e, t, r, n) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/views/transaction-confirmation", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: {
                        data: r,
                        to: n
                    }
                })
            }, t.getChainsConfig = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains", {
                    query: e
                })
            }, t.getChainConfig = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}", {
                    path: {
                        chainId: e
                    }
                })
            }, t.getSafeApps = function(e, t = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safe-apps", {
                    path: {
                        chainId: e
                    },
                    query: t
                })
            }, t.getMasterCopies = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/about/master-copies", {
                    path: {
                        chainId: e
                    }
                })
            }, t.getDecodedData = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/data-decoder", {
                    path: {
                        chainId: e
                    },
                    body: {
                        data: t,
                        to: r
                    }
                })
            }, t.getSafeMessages = function(e, t, r) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/messages", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: {}
                }, r)
            }, t.getSafeMessage = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/messages/{message_hash}", {
                    path: {
                        chainId: e,
                        message_hash: t
                    }
                })
            }, t.proposeSafeMessage = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/messages", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.confirmSafeMessage = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/messages/{message_hash}/signatures", {
                    path: {
                        chainId: e,
                        message_hash: t
                    },
                    body: r
                })
            }, t.getDelegates = function(e, t = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/delegates", {
                    path: {
                        chainId: e
                    },
                    query: t
                })
            }, t.registerDevice = function(e) {
                return (0, o.postEndpoint)(s, "/v1/register/notifications", {
                    body: e
                })
            }, t.unregisterSafe = function(e, t, r) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/notifications/devices/{uuid}/safes/{safe_address}", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        uuid: r
                    }
                })
            }, t.unregisterDevice = function(e, t) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/notifications/devices/{uuid}", {
                    path: {
                        chainId: e,
                        uuid: t
                    }
                })
            }, t.registerEmail = function(e, t, r, n) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r,
                    headers: n
                })
            }, t.changeEmail = function(e, t, r, n, i) {
                return (0, o.putEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        signer: r
                    },
                    body: n,
                    headers: i
                })
            }, t.resendEmailVerificationCode = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}/verify-resend", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        signer: r
                    },
                    body: ""
                })
            }, t.verifyEmail = function(e, t, r, n) {
                return (0, o.putEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}/verify", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        signer: r
                    },
                    body: n
                })
            }, t.getRegisteredEmail = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        signer: r
                    },
                    headers: n
                })
            }, t.deleteRegisteredEmail = function(e, t, r, n) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        signer: r
                    },
                    headers: n
                })
            }, t.registerRecoveryModule = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/recovery", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.unsubscribeSingle = function(e) {
                return (0, o.deleteEndpoint)(s, "/v1/subscriptions", {
                    query: e
                })
            }, t.unsubscribeAll = function(e) {
                return (0, o.deleteEndpoint)(s, "/v1/subscriptions/all", {
                    query: e
                })
            }, t.getSafeOverviews = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/safes", {
                    query: Object.assign(Object.assign({}, t), {
                        safes: e.join(",")
                    })
                })
            }, t.getContract = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/contracts/{contractAddress}", {
                    path: {
                        chainId: e,
                        contractAddress: t
                    }
                })
            }
        },
        38558: function(e, t) {
            "use strict";
            var r, n, i;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FEATURES = t.GAS_PRICE_TYPE = t.RPC_AUTHENTICATION = void 0, (r = t.RPC_AUTHENTICATION || (t.RPC_AUTHENTICATION = {})).API_KEY_PATH = "API_KEY_PATH", r.NO_AUTHENTICATION = "NO_AUTHENTICATION", r.UNKNOWN = "UNKNOWN", (n = t.GAS_PRICE_TYPE || (t.GAS_PRICE_TYPE = {})).ORACLE = "ORACLE", n.FIXED = "FIXED", n.FIXED_1559 = "FIXED1559", n.UNKNOWN = "UNKNOWN", (i = t.FEATURES || (t.FEATURES = {})).ERC721 = "ERC721", i.SAFE_APPS = "SAFE_APPS", i.CONTRACT_INTERACTION = "CONTRACT_INTERACTION", i.DOMAIN_LOOKUP = "DOMAIN_LOOKUP", i.SPENDING_LIMIT = "SPENDING_LIMIT", i.EIP1559 = "EIP1559", i.SAFE_TX_GAS_OPTIONAL = "SAFE_TX_GAS_OPTIONAL", i.TX_SIMULATION = "TX_SIMULATION", i.EIP1271 = "EIP1271"
        },
        44256: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TokenType = void 0, (r = t.TokenType || (t.TokenType = {})).ERC20 = "ERC20", r.ERC721 = "ERC721", r.NATIVE_TOKEN = "NATIVE_TOKEN"
        },
        76238: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        54948: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        60559: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DeviceType = void 0, (r = t.DeviceType || (t.DeviceType = {})).ANDROID = "ANDROID", r.IOS = "IOS", r.WEB = "WEB"
        },
        64618: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        16261: function(e, t) {
            "use strict";
            var r, n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeAppSocialPlatforms = t.SafeAppFeatures = t.SafeAppAccessPolicyTypes = void 0, (r = t.SafeAppAccessPolicyTypes || (t.SafeAppAccessPolicyTypes = {})).NoRestrictions = "NO_RESTRICTIONS", r.DomainAllowlist = "DOMAIN_ALLOWLIST", (t.SafeAppFeatures || (t.SafeAppFeatures = {})).BATCHED_TRANSACTIONS = "BATCHED_TRANSACTIONS", (n = t.SafeAppSocialPlatforms || (t.SafeAppSocialPlatforms = {})).TWITTER = "TWITTER", n.GITHUB = "GITHUB", n.DISCORD = "DISCORD"
        },
        61964: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ImplementationVersionState = void 0, (r = t.ImplementationVersionState || (t.ImplementationVersionState = {})).UP_TO_DATE = "UP_TO_DATE", r.OUTDATED = "OUTDATED", r.UNKNOWN = "UNKNOWN"
        },
        93134: function(e, t) {
            "use strict";
            var r, n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeMessageStatus = t.SafeMessageListItemType = void 0, (r = t.SafeMessageListItemType || (t.SafeMessageListItemType = {})).DATE_LABEL = "DATE_LABEL", r.MESSAGE = "MESSAGE", (n = t.SafeMessageStatus || (t.SafeMessageStatus = {})).NEEDS_CONFIRMATION = "NEEDS_CONFIRMATION", n.CONFIRMED = "CONFIRMED"
        },
        31069: function(e, t) {
            "use strict";
            var r, n, i, o, a, s, u, c, l, d;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.LabelValue = t.DetailedExecutionInfoType = t.TransactionListItemType = t.ConflictType = t.TransactionInfoType = t.SettingsInfoType = t.TransactionTokenType = t.TransferDirection = t.TransactionStatus = t.Operation = void 0, (r = t.Operation || (t.Operation = {}))[r.CALL = 0] = "CALL", r[r.DELEGATE = 1] = "DELEGATE", (n = t.TransactionStatus || (t.TransactionStatus = {})).AWAITING_CONFIRMATIONS = "AWAITING_CONFIRMATIONS", n.AWAITING_EXECUTION = "AWAITING_EXECUTION", n.CANCELLED = "CANCELLED", n.FAILED = "FAILED", n.SUCCESS = "SUCCESS", (i = t.TransferDirection || (t.TransferDirection = {})).INCOMING = "INCOMING", i.OUTGOING = "OUTGOING", i.UNKNOWN = "UNKNOWN", (o = t.TransactionTokenType || (t.TransactionTokenType = {})).ERC20 = "ERC20", o.ERC721 = "ERC721", o.NATIVE_COIN = "NATIVE_COIN", (a = t.SettingsInfoType || (t.SettingsInfoType = {})).SET_FALLBACK_HANDLER = "SET_FALLBACK_HANDLER", a.ADD_OWNER = "ADD_OWNER", a.REMOVE_OWNER = "REMOVE_OWNER", a.SWAP_OWNER = "SWAP_OWNER", a.CHANGE_THRESHOLD = "CHANGE_THRESHOLD", a.CHANGE_IMPLEMENTATION = "CHANGE_IMPLEMENTATION", a.ENABLE_MODULE = "ENABLE_MODULE", a.DISABLE_MODULE = "DISABLE_MODULE", a.SET_GUARD = "SET_GUARD", a.DELETE_GUARD = "DELETE_GUARD", (s = t.TransactionInfoType || (t.TransactionInfoType = {})).TRANSFER = "Transfer", s.SETTINGS_CHANGE = "SettingsChange", s.CUSTOM = "Custom", s.CREATION = "Creation", s.SWAP_ORDER = "SwapOrder", (u = t.ConflictType || (t.ConflictType = {})).NONE = "None", u.HAS_NEXT = "HasNext", u.END = "End", (c = t.TransactionListItemType || (t.TransactionListItemType = {})).TRANSACTION = "TRANSACTION", c.LABEL = "LABEL", c.CONFLICT_HEADER = "CONFLICT_HEADER", c.DATE_LABEL = "DATE_LABEL", (l = t.DetailedExecutionInfoType || (t.DetailedExecutionInfoType = {})).MULTISIG = "MULTISIG", l.MODULE = "MODULE", (d = t.LabelValue || (t.LabelValue = {})).Queued = "Queued", d.Next = "Next"
        },
        99185: function(e, t) {
            "use strict";
            var r = this && this.__awaiter || function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(a, s)
                    }
                    u((n = n.apply(e, t || [])).next())
                })
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getData = t.fetchData = t.stringifyQuery = t.insertParams = void 0;
            let n = e => "object" == typeof e && null !== e && "code" in e && "message" in e;

            function i(e) {
                return r(this, void 0, void 0, function*() {
                    let t;
                    try {
                        t = 204 === e.status ? {} : yield e.json()
                    } catch (t) {
                        if (e.headers && "0" !== e.headers.get("content-length")) throw Error(`Invalid response content: ${e.statusText}`)
                    }
                    if (!e.ok) throw Error(n(t) ? `${t.code}: ${t.message}` : e.statusText);
                    return t
                })
            }
            t.insertParams = function(e, t) {
                return t ? Object.keys(t).reduce((e, r) => {
                    var n;
                    return n = String(t[r]), e.replace(RegExp(`\\{${r}\\}`, "g"), n)
                }, e) : e
            }, t.stringifyQuery = function(e) {
                if (!e) return "";
                let t = new URLSearchParams;
                Object.keys(e).forEach(r => {
                    null != e[r] && t.append(r, String(e[r]))
                });
                let r = t.toString();
                return r ? `?${r}` : ""
            }, t.fetchData = function(e, t, n, o) {
                return r(this, void 0, void 0, function*() {
                    let r = {
                        method: null != t ? t : "POST",
                        headers: Object.assign({
                            "Content-Type": "application/json"
                        }, o)
                    };
                    return null != n && (r.body = "string" == typeof n ? n : JSON.stringify(n)), i((yield fetch(e, r)))
                })
            }, t.getData = function(e, t) {
                return r(this, void 0, void 0, function*() {
                    let r = {
                        method: "GET"
                    };
                    return t && (r.headers = Object.assign(Object.assign({}, t), {
                        "Content-Type": "application/json"
                    })), i((yield fetch(e, r)))
                })
            }
        },
        18615: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(24986);

            function i(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 8, t[r + 1] = e >>> 0, t
            }

            function o(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t
            }

            function a(e, t) {
                return void 0 === t && (t = 0), e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]
            }

            function s(e, t) {
                return void 0 === t && (t = 0), (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
            }

            function u(e, t) {
                return void 0 === t && (t = 0), e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]
            }

            function c(e, t) {
                return void 0 === t && (t = 0), (e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]) >>> 0
            }

            function l(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 24, t[r + 1] = e >>> 16, t[r + 2] = e >>> 8, t[r + 3] = e >>> 0, t
            }

            function d(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t[r + 2] = e >>> 16, t[r + 3] = e >>> 24, t
            }

            function f(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), l(e / 4294967296 >>> 0, t, r), l(e >>> 0, t, r + 4), t
            }

            function h(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), d(e >>> 0, t, r), d(e / 4294967296 >>> 0, t, r + 4), t
            }
            t.readInt16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) << 16 >> 16
            }, t.readUint16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) >>> 0
            }, t.readInt16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) << 16 >> 16
            }, t.readUint16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) >>> 0
            }, t.writeUint16BE = i, t.writeInt16BE = i, t.writeUint16LE = o, t.writeInt16LE = o, t.readInt32BE = a, t.readUint32BE = s, t.readInt32LE = u, t.readUint32LE = c, t.writeUint32BE = l, t.writeInt32BE = l, t.writeUint32LE = d, t.writeInt32LE = d, t.readInt64BE = function(e, t) {
                void 0 === t && (t = 0);
                var r = a(e, t),
                    n = a(e, t + 4);
                return 4294967296 * r + n - (n >> 31) * 4294967296
            }, t.readUint64BE = function(e, t) {
                return void 0 === t && (t = 0), 4294967296 * s(e, t) + s(e, t + 4)
            }, t.readInt64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = u(e, t);
                return 4294967296 * u(e, t + 4) + r - (r >> 31) * 4294967296
            }, t.readUint64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = c(e, t);
                return 4294967296 * c(e, t + 4) + r
            }, t.writeUint64BE = f, t.writeInt64BE = f, t.writeUint64LE = h, t.writeInt64LE = h, t.readUintBE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintBE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintBE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = e / 8 + r - 1; o >= r; o--) n += t[o] * i, i *= 256;
                return n
            }, t.readUintLE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintLE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintLE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = r; o < r + e / 8; o++) n += t[o] * i, i *= 256;
                return n
            }, t.writeUintBE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintBE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintBE value must be an integer");
                for (var o = 1, a = e / 8 + i - 1; a >= i; a--) r[a] = t / o & 255, o *= 256;
                return r
            }, t.writeUintLE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintLE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintLE value must be an integer");
                for (var o = 1, a = i; a < i + e / 8; a++) r[a] = t / o & 255, o *= 256;
                return r
            }, t.readFloat32BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t)
            }, t.readFloat32LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t, !0)
            }, t.readFloat64BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t)
            }, t.readFloat64LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t, !0)
            }, t.writeFloat32BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e), t
            }, t.writeFloat32LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e, !0), t
            }, t.writeFloat64BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e), t
            }, t.writeFloat64LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e, !0), t
            }
        },
        94168: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(18615),
                i = r(32583);

            function o(e, t, r, o, a) {
                if (void 0 === a && (a = 0), 32 !== e.length) throw Error("ChaCha: key size must be 32 bytes");
                if (o.length < r.length) throw Error("ChaCha: destination is shorter than source");
                if (0 === a) {
                    if (8 !== t.length && 12 !== t.length) throw Error("ChaCha nonce must be 8 or 12 bytes");
                    u = (s = new Uint8Array(16)).length - t.length, s.set(t, u)
                } else {
                    if (16 !== t.length) throw Error("ChaCha nonce with counter must be 16 bytes");
                    s = t, u = a
                }
                for (var s, u, c = new Uint8Array(64), l = 0; l < r.length; l += 64) {
                    ! function(e, t, r) {
                        for (var i = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], o = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], a = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], s = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], u = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], c = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], l = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], d = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], f = t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0], h = t[7] << 24 | t[6] << 16 | t[5] << 8 | t[4], p = t[11] << 24 | t[10] << 16 | t[9] << 8 | t[8], m = t[15] << 24 | t[14] << 16 | t[13] << 8 | t[12], g = 1634760805, b = 857760878, y = 2036477234, v = 1797285236, w = i, E = o, A = a, P = s, x = u, O = c, _ = l, I = d, T = f, C = h, S = p, k = m, M = 0; M < 20; M += 2) T ^= g = g + w | 0, w ^= x = x + (T = T >>> 16 | T << 16) | 0, w = w >>> 20 | w << 12, C ^= b = b + E | 0, E ^= O = O + (C = C >>> 16 | C << 16) | 0, E = E >>> 20 | E << 12, S ^= y = y + A | 0, A ^= _ = _ + (S = S >>> 16 | S << 16) | 0, A = A >>> 20 | A << 12, k ^= v = v + P | 0, P ^= I = I + (k = k >>> 16 | k << 16) | 0, P = P >>> 20 | P << 12, S ^= y = y + A | 0, A ^= _ = _ + (S = S >>> 24 | S << 8) | 0, A = A >>> 25 | A << 7, k ^= v = v + P | 0, P ^= I = I + (k = k >>> 24 | k << 8) | 0, P = P >>> 25 | P << 7, C ^= b = b + E | 0, E ^= O = O + (C = C >>> 24 | C << 8) | 0, E = E >>> 25 | E << 7, T ^= g = g + w | 0, w ^= x = x + (T = T >>> 24 | T << 8) | 0, w = w >>> 25 | w << 7, k ^= g = g + E | 0, E ^= _ = _ + (k = k >>> 16 | k << 16) | 0, E = E >>> 20 | E << 12, T ^= b = b + A | 0, A ^= I = I + (T = T >>> 16 | T << 16) | 0, A = A >>> 20 | A << 12, C ^= y = y + P | 0, P ^= x = x + (C = C >>> 16 | C << 16) | 0, P = P >>> 20 | P << 12, S ^= v = v + w | 0, w ^= O = O + (S = S >>> 16 | S << 16) | 0, w = w >>> 20 | w << 12, C ^= y = y + P | 0, P ^= x = x + (C = C >>> 24 | C << 8) | 0, P = P >>> 25 | P << 7, S ^= v = v + w | 0, w ^= O = O + (S = S >>> 24 | S << 8) | 0, w = w >>> 25 | w << 7, T ^= b = b + A | 0, A ^= I = I + (T = T >>> 24 | T << 8) | 0, A = A >>> 25 | A << 7, k ^= g = g + E | 0, E ^= _ = _ + (k = k >>> 24 | k << 8) | 0, E = E >>> 25 | E << 7;
                        n.writeUint32LE(g + 1634760805 | 0, e, 0), n.writeUint32LE(b + 857760878 | 0, e, 4), n.writeUint32LE(y + 2036477234 | 0, e, 8), n.writeUint32LE(v + 1797285236 | 0, e, 12), n.writeUint32LE(w + i | 0, e, 16), n.writeUint32LE(E + o | 0, e, 20), n.writeUint32LE(A + a | 0, e, 24), n.writeUint32LE(P + s | 0, e, 28), n.writeUint32LE(x + u | 0, e, 32), n.writeUint32LE(O + c | 0, e, 36), n.writeUint32LE(_ + l | 0, e, 40), n.writeUint32LE(I + d | 0, e, 44), n.writeUint32LE(T + f | 0, e, 48), n.writeUint32LE(C + h | 0, e, 52), n.writeUint32LE(S + p | 0, e, 56), n.writeUint32LE(k + m | 0, e, 60)
                    }(c, s, e);
                    for (var d = l; d < l + 64 && d < r.length; d++) o[d] = r[d] ^ c[d - l];
                    ! function(e, t, r) {
                        for (var n = 1; r--;) n = n + (255 & e[t]) | 0, e[t] = 255 & n, n >>>= 8, t++;
                        if (n > 0) throw Error("ChaCha: counter overflow")
                    }(s, 0, u)
                }
                return i.wipe(c), 0 === a && i.wipe(s), o
            }
            t.streamXOR = o, t.stream = function(e, t, r, n) {
                return void 0 === n && (n = 0), i.wipe(r), o(e, t, r, r, n)
            }
        },
        23518: function(e, t, r) {
            "use strict";
            var n = r(94168),
                i = r(14605),
                o = r(32583),
                a = r(18615),
                s = r(21346);
            t.Cv = 32, t.WH = 12, t.pg = 16;
            var u = new Uint8Array(16),
                c = function() {
                    function e(e) {
                        if (this.nonceLength = t.WH, this.tagLength = t.pg, e.length !== t.Cv) throw Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(e)
                    }
                    return e.prototype.seal = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        var a, s = new Uint8Array(16);
                        s.set(e, s.length - e.length);
                        var u = new Uint8Array(32);
                        n.stream(this._key, s, u, 4);
                        var c = t.length + this.tagLength;
                        if (i) {
                            if (i.length !== c) throw Error("ChaCha20Poly1305: incorrect destination length");
                            a = i
                        } else a = new Uint8Array(c);
                        return n.streamXOR(this._key, s, t, a, 4), this._authenticate(a.subarray(a.length - this.tagLength, a.length), u, a.subarray(0, a.length - this.tagLength), r), o.wipe(s), a
                    }, e.prototype.open = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        if (t.length < this.tagLength) return null;
                        var a, u = new Uint8Array(16);
                        u.set(e, u.length - e.length);
                        var c = new Uint8Array(32);
                        n.stream(this._key, u, c, 4);
                        var l = new Uint8Array(this.tagLength);
                        if (this._authenticate(l, c, t.subarray(0, t.length - this.tagLength), r), !s.equal(l, t.subarray(t.length - this.tagLength, t.length))) return null;
                        var d = t.length - this.tagLength;
                        if (i) {
                            if (i.length !== d) throw Error("ChaCha20Poly1305: incorrect destination length");
                            a = i
                        } else a = new Uint8Array(d);
                        return n.streamXOR(this._key, u, t.subarray(0, t.length - this.tagLength), a, 4), o.wipe(u), a
                    }, e.prototype.clean = function() {
                        return o.wipe(this._key), this
                    }, e.prototype._authenticate = function(e, t, r, n) {
                        var s = new i.Poly1305(t);
                        n && (s.update(n), n.length % 16 > 0 && s.update(u.subarray(n.length % 16))), s.update(r), r.length % 16 > 0 && s.update(u.subarray(r.length % 16));
                        var c = new Uint8Array(8);
                        n && a.writeUint64LE(n.length, c), s.update(c), a.writeUint64LE(r.length, c), s.update(c);
                        for (var l = s.digest(), d = 0; d < l.length; d++) e[d] = l[d];
                        s.clean(), o.wipe(l), o.wipe(c)
                    }, e
                }();
            t.OK = c
        },
        21346: function(e, t) {
            "use strict";

            function r(e, t) {
                if (e.length !== t.length) return 0;
                for (var r = 0, n = 0; n < e.length; n++) r |= e[n] ^ t[n];
                return 1 & r - 1 >>> 8
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.select = function(e, t, r) {
                return ~(e - 1) & t | e - 1 & r
            }, t.lessOrEqual = function(e, t) {
                return (0 | e) - (0 | t) - 1 >>> 31 & 1
            }, t.compare = r, t.equal = function(e, t) {
                return 0 !== e.length && 0 !== t.length && 0 !== r(e, t)
            }
        },
        86784: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isSerializableHash = function(e) {
                return void 0 !== e.saveState && void 0 !== e.restoreState && void 0 !== e.cleanSavedState
            }
        },
        67878: function(e, t, r) {
            "use strict";
            var n = r(4705),
                i = r(32583),
                o = function() {
                    function e(e, t, r, i) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = e, this._info = i;
                        var o = n.hmac(this._hash, r, t);
                        this._hmac = new n.HMAC(e, o), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return e.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var e = this._counter[0];
                        if (0 === e) throw Error("hkdf: cannot expand more");
                        this._hmac.reset(), e > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, e.prototype.expand = function(e) {
                        for (var t = new Uint8Array(e), r = 0; r < t.length; r++) this._bufpos === this._buffer.length && this._fillBuffer(), t[r] = this._buffer[this._bufpos++];
                        return t
                    }, e.prototype.clean = function() {
                        this._hmac.clean(), i.wipe(this._buffer), i.wipe(this._counter), this._bufpos = 0
                    }, e
                }();
            t.t = o
        },
        4705: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(86784),
                i = r(21346),
                o = r(32583),
                a = function() {
                    function e(e, t) {
                        this._finished = !1, this._inner = new e, this._outer = new e, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        t.length > this.blockSize ? this._inner.update(t).finish(r).clean() : r.set(t);
                        for (var i = 0; i < r.length; i++) r[i] ^= 54;
                        this._inner.update(r);
                        for (var i = 0; i < r.length; i++) r[i] ^= 106;
                        this._outer.update(r), n.isSerializableHash(this._inner) && n.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), o.wipe(r)
                    }
                    return e.prototype.reset = function() {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, e.prototype.clean = function() {
                        n.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), n.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, e.prototype.update = function(e) {
                        return this._inner.update(e), this
                    }, e.prototype.finish = function(e) {
                        return this._finished ? this._outer.finish(e) : (this._inner.finish(e), this._outer.update(e.subarray(0, this.digestLength)).finish(e), this._finished = !0), this
                    }, e.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e
                    }, e.prototype.saveState = function() {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, e.prototype.restoreState = function(e) {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(e), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, e.prototype.cleanSavedState = function(e) {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(e)
                    }, e
                }();
            t.HMAC = a, t.hmac = function(e, t, r) {
                var n = new a(e, t);
                n.update(r);
                var i = n.digest();
                return n.clean(), i
            }, t.equal = i.equal
        },
        24986: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mul = Math.imul || function(e, t) {
                var r = 65535 & e,
                    n = 65535 & t;
                return r * n + ((e >>> 16 & 65535) * n + r * (t >>> 16 & 65535) << 16 >>> 0) | 0
            }, t.add = function(e, t) {
                return e + t | 0
            }, t.sub = function(e, t) {
                return e - t | 0
            }, t.rotl = function(e, t) {
                return e << t | e >>> 32 - t
            }, t.rotr = function(e, t) {
                return e << 32 - t | e >>> t
            }, t.isInteger = Number.isInteger || function(e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }, t.MAX_SAFE_INTEGER = 9007199254740991, t.isSafeInteger = function(e) {
                return t.isInteger(e) && e >= -t.MAX_SAFE_INTEGER && e <= t.MAX_SAFE_INTEGER
            }
        },
        14605: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(21346),
                i = r(32583);
            t.DIGEST_LENGTH = 16;
            var o = function() {
                function e(e) {
                    this.digestLength = t.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var r = e[0] | e[1] << 8;
                    this._r[0] = 8191 & r;
                    var n = e[2] | e[3] << 8;
                    this._r[1] = (r >>> 13 | n << 3) & 8191;
                    var i = e[4] | e[5] << 8;
                    this._r[2] = (n >>> 10 | i << 6) & 7939;
                    var o = e[6] | e[7] << 8;
                    this._r[3] = (i >>> 7 | o << 9) & 8191;
                    var a = e[8] | e[9] << 8;
                    this._r[4] = (o >>> 4 | a << 12) & 255, this._r[5] = a >>> 1 & 8190;
                    var s = e[10] | e[11] << 8;
                    this._r[6] = (a >>> 14 | s << 2) & 8191;
                    var u = e[12] | e[13] << 8;
                    this._r[7] = (s >>> 11 | u << 5) & 8065;
                    var c = e[14] | e[15] << 8;
                    this._r[8] = (u >>> 8 | c << 8) & 8191, this._r[9] = c >>> 5 & 127, this._pad[0] = e[16] | e[17] << 8, this._pad[1] = e[18] | e[19] << 8, this._pad[2] = e[20] | e[21] << 8, this._pad[3] = e[22] | e[23] << 8, this._pad[4] = e[24] | e[25] << 8, this._pad[5] = e[26] | e[27] << 8, this._pad[6] = e[28] | e[29] << 8, this._pad[7] = e[30] | e[31] << 8
                }
                return e.prototype._blocks = function(e, t, r) {
                    for (var n = this._fin ? 0 : 2048, i = this._h[0], o = this._h[1], a = this._h[2], s = this._h[3], u = this._h[4], c = this._h[5], l = this._h[6], d = this._h[7], f = this._h[8], h = this._h[9], p = this._r[0], m = this._r[1], g = this._r[2], b = this._r[3], y = this._r[4], v = this._r[5], w = this._r[6], E = this._r[7], A = this._r[8], P = this._r[9]; r >= 16;) {
                        var x, O = e[t + 0] | e[t + 1] << 8;
                        i += 8191 & O;
                        var _ = e[t + 2] | e[t + 3] << 8;
                        o += (O >>> 13 | _ << 3) & 8191;
                        var I = e[t + 4] | e[t + 5] << 8;
                        a += (_ >>> 10 | I << 6) & 8191;
                        var T = e[t + 6] | e[t + 7] << 8;
                        s += (I >>> 7 | T << 9) & 8191;
                        var C = e[t + 8] | e[t + 9] << 8;
                        u += (T >>> 4 | C << 12) & 8191, c += C >>> 1 & 8191;
                        var S = e[t + 10] | e[t + 11] << 8;
                        l += (C >>> 14 | S << 2) & 8191;
                        var k = e[t + 12] | e[t + 13] << 8;
                        d += (S >>> 11 | k << 5) & 8191;
                        var M = e[t + 14] | e[t + 15] << 8;
                        f += (k >>> 8 | M << 8) & 8191, h += M >>> 5 | n;
                        var B = 0;
                        B = (x = 0 + i * p + 5 * P * o + 5 * A * a + 5 * E * s + 5 * w * u) >>> 13, x &= 8191, x += 5 * v * c + 5 * y * l + 5 * b * d + 5 * g * f + 5 * m * h, B += x >>> 13, x &= 8191;
                        var N = B;
                        N += i * m + o * p + 5 * P * a + 5 * A * s + 5 * E * u, B = N >>> 13, N &= 8191, N += 5 * w * c + 5 * v * l + 5 * y * d + 5 * b * f + 5 * g * h, B += N >>> 13, N &= 8191;
                        var R = B;
                        R += i * g + o * m + a * p + 5 * P * s + 5 * A * u, B = R >>> 13, R &= 8191, R += 5 * E * c + 5 * w * l + 5 * v * d + 5 * y * f + 5 * b * h, B += R >>> 13, R &= 8191;
                        var D = B;
                        D += i * b + o * g + a * m + s * p + 5 * P * u, B = D >>> 13, D &= 8191, D += 5 * A * c + 5 * E * l + 5 * w * d + 5 * v * f + 5 * y * h, B += D >>> 13, D &= 8191;
                        var j = B;
                        j += i * y + o * b + a * g + s * m + u * p, B = j >>> 13, j &= 8191, j += 5 * P * c + 5 * A * l + 5 * E * d + 5 * w * f + 5 * v * h, B += j >>> 13, j &= 8191;
                        var F = B;
                        F += i * v + o * y + a * b + s * g + u * m, B = F >>> 13, F &= 8191, F += c * p + 5 * P * l + 5 * A * d + 5 * E * f + 5 * w * h, B += F >>> 13, F &= 8191;
                        var U = B;
                        U += i * w + o * v + a * y + s * b + u * g, B = U >>> 13, U &= 8191, U += c * m + l * p + 5 * P * d + 5 * A * f + 5 * E * h, B += U >>> 13, U &= 8191;
                        var L = B;
                        L += i * E + o * w + a * v + s * y + u * b, B = L >>> 13, L &= 8191, L += c * g + l * m + d * p + 5 * P * f + 5 * A * h, B += L >>> 13, L &= 8191;
                        var q = B;
                        q += i * A + o * E + a * w + s * v + u * y, B = q >>> 13, q &= 8191, q += c * b + l * g + d * m + f * p + 5 * P * h, B += q >>> 13, q &= 8191;
                        var z = B;
                        z += i * P + o * A + a * E + s * w + u * v, B = z >>> 13, z &= 8191, z += c * y + l * b + d * g + f * m + h * p, B += z >>> 13, z &= 8191, x = 8191 & (B = (B = (B << 2) + B | 0) + x | 0), B >>>= 13, N += B, i = x, o = N, a = R, s = D, u = j, c = F, l = U, d = L, f = q, h = z, t += 16, r -= 16
                    }
                    this._h[0] = i, this._h[1] = o, this._h[2] = a, this._h[3] = s, this._h[4] = u, this._h[5] = c, this._h[6] = l, this._h[7] = d, this._h[8] = f, this._h[9] = h
                }, e.prototype.finish = function(e, t) {
                    void 0 === t && (t = 0);
                    var r, n, i, o, a = new Uint16Array(10);
                    if (this._leftover) {
                        for (o = this._leftover, this._buffer[o++] = 1; o < 16; o++) this._buffer[o] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (r = this._h[1] >>> 13, this._h[1] &= 8191, o = 2; o < 10; o++) this._h[o] += r, r = this._h[o] >>> 13, this._h[o] &= 8191;
                    for (this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, a[0] = this._h[0] + 5, r = a[0] >>> 13, a[0] &= 8191, o = 1; o < 10; o++) a[o] = this._h[o] + r, r = a[o] >>> 13, a[o] &= 8191;
                    for (a[9] -= 8192, n = (1 ^ r) - 1, o = 0; o < 10; o++) a[o] &= n;
                    for (o = 0, n = ~n; o < 10; o++) this._h[o] = this._h[o] & n | a[o];
                    for (o = 1, this._h[0] = (this._h[0] | this._h[1] << 13) & 65535, this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535, this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535, this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535, this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535, this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535, this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535, this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535, i = this._h[0] + this._pad[0], this._h[0] = 65535 & i; o < 8; o++) i = (this._h[o] + this._pad[o] | 0) + (i >>> 16) | 0, this._h[o] = 65535 & i;
                    return e[t + 0] = this._h[0] >>> 0, e[t + 1] = this._h[0] >>> 8, e[t + 2] = this._h[1] >>> 0, e[t + 3] = this._h[1] >>> 8, e[t + 4] = this._h[2] >>> 0, e[t + 5] = this._h[2] >>> 8, e[t + 6] = this._h[3] >>> 0, e[t + 7] = this._h[3] >>> 8, e[t + 8] = this._h[4] >>> 0, e[t + 9] = this._h[4] >>> 8, e[t + 10] = this._h[5] >>> 0, e[t + 11] = this._h[5] >>> 8, e[t + 12] = this._h[6] >>> 0, e[t + 13] = this._h[6] >>> 8, e[t + 14] = this._h[7] >>> 0, e[t + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, e.prototype.update = function(e) {
                    var t, r = 0,
                        n = e.length;
                    if (this._leftover) {
                        (t = 16 - this._leftover) > n && (t = n);
                        for (var i = 0; i < t; i++) this._buffer[this._leftover + i] = e[r + i];
                        if (n -= t, r += t, this._leftover += t, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (n >= 16 && (t = n - n % 16, this._blocks(e, r, t), r += t, n -= t), n) {
                        for (var i = 0; i < n; i++) this._buffer[this._leftover + i] = e[r + i];
                        this._leftover += n
                    }
                    return this
                }, e.prototype.digest = function() {
                    if (this._finished) throw Error("Poly1305 was finished");
                    var e = new Uint8Array(16);
                    return this.finish(e), e
                }, e.prototype.clean = function() {
                    return i.wipe(this._buffer), i.wipe(this._r), i.wipe(this._h), i.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, e
            }();
            t.Poly1305 = o, t.oneTimeAuth = function(e, t) {
                var r = new o(e);
                r.update(t);
                var n = r.digest();
                return r.clean(), n
            }, t.equal = function(e, r) {
                return e.length === t.DIGEST_LENGTH && r.length === t.DIGEST_LENGTH && n.equal(e, r)
            }
        },
        24861: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomStringForEntropy = t.randomString = t.randomUint32 = t.randomBytes = t.defaultRandomSource = void 0;
            let n = r(71722),
                i = r(18615),
                o = r(32583);

            function a(e, r = t.defaultRandomSource) {
                return r.randomBytes(e)
            }
            t.defaultRandomSource = new n.SystemRandomSource, t.randomBytes = a, t.randomUint32 = function(e = t.defaultRandomSource) {
                let r = a(4, e),
                    n = (0, i.readUint32LE)(r);
                return (0, o.wipe)(r), n
            };
            let s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function u(e, r = s, n = t.defaultRandomSource) {
                if (r.length < 2) throw Error("randomString charset is too short");
                if (r.length > 256) throw Error("randomString charset is too long");
                let i = "",
                    u = r.length,
                    c = 256 - 256 % u;
                for (; e > 0;) {
                    let t = a(Math.ceil(256 * e / c), n);
                    for (let n = 0; n < t.length && e > 0; n++) {
                        let o = t[n];
                        o < c && (i += r.charAt(o % u), e--)
                    }(0, o.wipe)(t)
                }
                return i
            }
            t.randomString = u, t.randomStringForEntropy = function(e, r = s, n = t.defaultRandomSource) {
                return u(Math.ceil(e / (Math.log(r.length) / Math.LN2)), r, n)
            }
        },
        3724: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BrowserRandomSource = void 0;
            class r {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    let e = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
                    e && void 0 !== e.getRandomValues && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Browser random byte generator is not available.");
                    let t = new Uint8Array(e);
                    for (let e = 0; e < t.length; e += 65536) this._crypto.getRandomValues(t.subarray(e, e + Math.min(t.length - e, 65536)));
                    return t
                }
            }
            t.BrowserRandomSource = r
        },
        39663: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NodeRandomSource = void 0;
            let n = r(32583);
            class i {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        let e = r(35883);
                        e && e.randomBytes && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Node.js random byte generator is not available.");
                    let t = this._crypto.randomBytes(e);
                    if (t.length !== e) throw Error("NodeRandomSource: got fewer bytes than requested");
                    let r = new Uint8Array(e);
                    for (let e = 0; e < r.length; e++) r[e] = t[e];
                    return (0, n.wipe)(t), r
                }
            }
            t.NodeRandomSource = i
        },
        71722: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SystemRandomSource = void 0;
            let n = r(3724),
                i = r(39663);
            class o {
                constructor() {
                    if (this.isAvailable = !1, this.name = "", this._source = new n.BrowserRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Browser";
                        return
                    }
                    if (this._source = new i.NodeRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Node";
                        return
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable) throw Error("System random byte generator is not available.");
                    return this._source.randomBytes(e)
                }
            }
            t.SystemRandomSource = o
        },
        67929: function(e, t, r) {
            "use strict";
            var n = r(18615),
                i = r(32583);
            t.k = 32, t.cn = 64;
            var o = function() {
                function e() {
                    this.digestLength = t.k, this.blockSize = t.cn, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return e.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, e.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, e.prototype.clean = function() {
                    i.wipe(this._buffer), i.wipe(this._temp), this.reset()
                }, e.prototype.update = function(e, t) {
                    if (void 0 === t && (t = e.length), this._finished) throw Error("SHA256: can't update because hash was finished.");
                    var r = 0;
                    if (this._bytesHashed += t, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                        this._bufferLength === this.blockSize && (s(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (t >= this.blockSize && (r = s(this._temp, this._state, e, r, t), t %= this.blockSize); t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                    return this
                }, e.prototype.finish = function(e) {
                    if (!this._finished) {
                        var t = this._bytesHashed,
                            r = this._bufferLength,
                            i = t % 64 < 56 ? 64 : 128;
                        this._buffer[r] = 128;
                        for (var o = r + 1; o < i - 8; o++) this._buffer[o] = 0;
                        n.writeUint32BE(t / 536870912 | 0, this._buffer, i - 8), n.writeUint32BE(t << 3, this._buffer, i - 4), s(this._temp, this._state, this._buffer, 0, i), this._finished = !0
                    }
                    for (var o = 0; o < this.digestLength / 4; o++) n.writeUint32BE(this._state[o], e, 4 * o);
                    return this
                }, e.prototype.digest = function() {
                    var e = new Uint8Array(this.digestLength);
                    return this.finish(e), e
                }, e.prototype.saveState = function() {
                    if (this._finished) throw Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, e.prototype.restoreState = function(e) {
                    return this._state.set(e.state), this._bufferLength = e.bufferLength, e.buffer && this._buffer.set(e.buffer), this._bytesHashed = e.bytesHashed, this._finished = !1, this
                }, e.prototype.cleanSavedState = function(e) {
                    i.wipe(e.state), e.buffer && i.wipe(e.buffer), e.bufferLength = 0, e.bytesHashed = 0
                }, e
            }();
            t.mE = o;
            var a = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function s(e, t, r, i, o) {
                for (; o >= 64;) {
                    for (var s = t[0], u = t[1], c = t[2], l = t[3], d = t[4], f = t[5], h = t[6], p = t[7], m = 0; m < 16; m++) {
                        var g = i + 4 * m;
                        e[m] = n.readUint32BE(r, g)
                    }
                    for (var m = 16; m < 64; m++) {
                        var b = e[m - 2],
                            y = (b >>> 17 | b << 15) ^ (b >>> 19 | b << 13) ^ b >>> 10,
                            v = ((b = e[m - 15]) >>> 7 | b << 25) ^ (b >>> 18 | b << 14) ^ b >>> 3;
                        e[m] = (y + e[m - 7] | 0) + (v + e[m - 16] | 0)
                    }
                    for (var m = 0; m < 64; m++) {
                        var y = (((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (d & f ^ ~d & h) | 0) + (p + (a[m] + e[m] | 0) | 0) | 0,
                            v = ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + (s & u ^ s & c ^ u & c) | 0;
                        p = h, h = f, f = d, d = l + y | 0, l = c, c = u, u = s, s = y + v | 0
                    }
                    t[0] += s, t[1] += u, t[2] += c, t[3] += l, t[4] += d, t[5] += f, t[6] += h, t[7] += p, i += 64, o -= 64
                }
                return i
            }
            t.vp = function(e) {
                var t = new o;
                t.update(e);
                var r = t.digest();
                return t.clean(), r
            }
        },
        32583: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wipe = function(e) {
                for (var t = 0; t < e.length; t++) e[t] = 0;
                return e
            }
        },
        89414: function(e, t, r) {
            "use strict";
            t.gi = t.Au = t.KS = t.kz = void 0;
            let n = r(24861),
                i = r(32583);

            function o(e) {
                let t = new Float64Array(16);
                if (e)
                    for (let r = 0; r < e.length; r++) t[r] = e[r];
                return t
            }
            t.kz = 32, t.KS = 32;
            let a = new Uint8Array(32);
            a[0] = 9;
            let s = o([56129, 1]);

            function u(e) {
                let t = 1;
                for (let r = 0; r < 16; r++) {
                    let n = e[r] + t + 65535;
                    t = Math.floor(n / 65536), e[r] = n - 65536 * t
                }
                e[0] += t - 1 + 37 * (t - 1)
            }

            function c(e, t, r) {
                let n = ~(r - 1);
                for (let r = 0; r < 16; r++) {
                    let i = n & (e[r] ^ t[r]);
                    e[r] ^= i, t[r] ^= i
                }
            }

            function l(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] + r[n]
            }

            function d(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] - r[n]
            }

            function f(e, t, r) {
                let n, i, o = 0,
                    a = 0,
                    s = 0,
                    u = 0,
                    c = 0,
                    l = 0,
                    d = 0,
                    f = 0,
                    h = 0,
                    p = 0,
                    m = 0,
                    g = 0,
                    b = 0,
                    y = 0,
                    v = 0,
                    w = 0,
                    E = 0,
                    A = 0,
                    P = 0,
                    x = 0,
                    O = 0,
                    _ = 0,
                    I = 0,
                    T = 0,
                    C = 0,
                    S = 0,
                    k = 0,
                    M = 0,
                    B = 0,
                    N = 0,
                    R = 0,
                    D = r[0],
                    j = r[1],
                    F = r[2],
                    U = r[3],
                    L = r[4],
                    q = r[5],
                    z = r[6],
                    $ = r[7],
                    H = r[8],
                    G = r[9],
                    W = r[10],
                    K = r[11],
                    Y = r[12],
                    V = r[13],
                    Q = r[14],
                    J = r[15];
                o += (n = t[0]) * D, a += n * j, s += n * F, u += n * U, c += n * L, l += n * q, d += n * z, f += n * $, h += n * H, p += n * G, m += n * W, g += n * K, b += n * Y, y += n * V, v += n * Q, w += n * J, a += (n = t[1]) * D, s += n * j, u += n * F, c += n * U, l += n * L, d += n * q, f += n * z, h += n * $, p += n * H, m += n * G, g += n * W, b += n * K, y += n * Y, v += n * V, w += n * Q, E += n * J, s += (n = t[2]) * D, u += n * j, c += n * F, l += n * U, d += n * L, f += n * q, h += n * z, p += n * $, m += n * H, g += n * G, b += n * W, y += n * K, v += n * Y, w += n * V, E += n * Q, A += n * J, u += (n = t[3]) * D, c += n * j, l += n * F, d += n * U, f += n * L, h += n * q, p += n * z, m += n * $, g += n * H, b += n * G, y += n * W, v += n * K, w += n * Y, E += n * V, A += n * Q, P += n * J, c += (n = t[4]) * D, l += n * j, d += n * F, f += n * U, h += n * L, p += n * q, m += n * z, g += n * $, b += n * H, y += n * G, v += n * W, w += n * K, E += n * Y, A += n * V, P += n * Q, x += n * J, l += (n = t[5]) * D, d += n * j, f += n * F, h += n * U, p += n * L, m += n * q, g += n * z, b += n * $, y += n * H, v += n * G, w += n * W, E += n * K, A += n * Y, P += n * V, x += n * Q, O += n * J, d += (n = t[6]) * D, f += n * j, h += n * F, p += n * U, m += n * L, g += n * q, b += n * z, y += n * $, v += n * H, w += n * G, E += n * W, A += n * K, P += n * Y, x += n * V, O += n * Q, _ += n * J, f += (n = t[7]) * D, h += n * j, p += n * F, m += n * U, g += n * L, b += n * q, y += n * z, v += n * $, w += n * H, E += n * G, A += n * W, P += n * K, x += n * Y, O += n * V, _ += n * Q, I += n * J, h += (n = t[8]) * D, p += n * j, m += n * F, g += n * U, b += n * L, y += n * q, v += n * z, w += n * $, E += n * H, A += n * G, P += n * W, x += n * K, O += n * Y, _ += n * V, I += n * Q, T += n * J, p += (n = t[9]) * D, m += n * j, g += n * F, b += n * U, y += n * L, v += n * q, w += n * z, E += n * $, A += n * H, P += n * G, x += n * W, O += n * K, _ += n * Y, I += n * V, T += n * Q, C += n * J, m += (n = t[10]) * D, g += n * j, b += n * F, y += n * U, v += n * L, w += n * q, E += n * z, A += n * $, P += n * H, x += n * G, O += n * W, _ += n * K, I += n * Y, T += n * V, C += n * Q, S += n * J, g += (n = t[11]) * D, b += n * j, y += n * F, v += n * U, w += n * L, E += n * q, A += n * z, P += n * $, x += n * H, O += n * G, _ += n * W, I += n * K, T += n * Y, C += n * V, S += n * Q, k += n * J, b += (n = t[12]) * D, y += n * j, v += n * F, w += n * U, E += n * L, A += n * q, P += n * z, x += n * $, O += n * H, _ += n * G, I += n * W, T += n * K, C += n * Y, S += n * V, k += n * Q, M += n * J, y += (n = t[13]) * D, v += n * j, w += n * F, E += n * U, A += n * L, P += n * q, x += n * z, O += n * $, _ += n * H, I += n * G, T += n * W, C += n * K, S += n * Y, k += n * V, M += n * Q, B += n * J, v += (n = t[14]) * D, w += n * j, E += n * F, A += n * U, P += n * L, x += n * q, O += n * z, _ += n * $, I += n * H, T += n * G, C += n * W, S += n * K, k += n * Y, M += n * V, B += n * Q, N += n * J, w += (n = t[15]) * D, E += n * j, A += n * F, P += n * U, x += n * L, O += n * q, _ += n * z, I += n * $, T += n * H, C += n * G, S += n * W, k += n * K, M += n * Y, B += n * V, N += n * Q, R += n * J, o += 38 * E, a += 38 * A, s += 38 * P, u += 38 * x, c += 38 * O, l += 38 * _, d += 38 * I, f += 38 * T, h += 38 * C, p += 38 * S, m += 38 * k, g += 38 * M, b += 38 * B, y += 38 * N, v += 38 * R, i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, o += i - 1 + 37 * (i - 1), i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, o += i - 1 + 37 * (i - 1), e[0] = o, e[1] = a, e[2] = s, e[3] = u, e[4] = c, e[5] = l, e[6] = d, e[7] = f, e[8] = h, e[9] = p, e[10] = m, e[11] = g, e[12] = b, e[13] = y, e[14] = v, e[15] = w
            }

            function h(e, t) {
                let r = new Uint8Array(32),
                    n = new Float64Array(80),
                    i = o(),
                    a = o(),
                    h = o(),
                    p = o(),
                    m = o(),
                    g = o();
                for (let t = 0; t < 31; t++) r[t] = e[t];
                r[31] = 127 & e[31] | 64, r[0] &= 248,
                    function(e, t) {
                        for (let r = 0; r < 16; r++) e[r] = t[2 * r] + (t[2 * r + 1] << 8);
                        e[15] &= 32767
                    }(n, t);
                for (let e = 0; e < 16; e++) a[e] = n[e];
                i[0] = p[0] = 1;
                for (let e = 254; e >= 0; --e) {
                    let t = r[e >>> 3] >>> (7 & e) & 1;
                    c(i, a, t), c(h, p, t), l(m, i, h), d(i, i, h), l(h, a, p), d(a, a, p), f(p, m, m), f(g, i, i), f(i, h, i), f(h, a, m), l(m, i, h), d(i, i, h), f(a, i, i), d(h, p, g), f(i, h, s), l(i, i, p), f(h, h, i), f(i, p, g), f(p, a, n), f(a, m, m), c(i, a, t), c(h, p, t)
                }
                for (let e = 0; e < 16; e++) n[e + 16] = i[e], n[e + 32] = h[e], n[e + 48] = a[e], n[e + 64] = p[e];
                let b = n.subarray(32),
                    y = n.subarray(16);
                ! function(e, t) {
                    let r = o();
                    for (let e = 0; e < 16; e++) r[e] = t[e];
                    for (let e = 253; e >= 0; e--) f(r, r, r), 2 !== e && 4 !== e && f(r, r, t);
                    for (let t = 0; t < 16; t++) e[t] = r[t]
                }(b, b), f(y, y, b);
                let v = new Uint8Array(32);
                return ! function(e, t) {
                    let r = o(),
                        n = o();
                    for (let e = 0; e < 16; e++) n[e] = t[e];
                    u(n), u(n), u(n);
                    for (let e = 0; e < 2; e++) {
                        r[0] = n[0] - 65517;
                        for (let e = 1; e < 15; e++) r[e] = n[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                        r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                        let e = r[15] >> 16 & 1;
                        r[14] &= 65535, c(n, r, 1 - e)
                    }
                    for (let t = 0; t < 16; t++) e[2 * t] = 255 & n[t], e[2 * t + 1] = n[t] >> 8
                }(v, y), v
            }
            t.Au = function(e) {
                let r = (0, n.randomBytes)(32, e),
                    o = function(e) {
                        if (e.length !== t.KS) throw Error(`x25519: seed must be ${t.KS} bytes`);
                        let r = new Uint8Array(e);
                        return {
                            publicKey: h(r, a),
                            secretKey: r
                        }
                    }(r);
                return (0, i.wipe)(r), o
            }, t.gi = function(e, r, n = !1) {
                if (e.length !== t.kz) throw Error("X25519: incorrect secret key length");
                if (r.length !== t.kz) throw Error("X25519: incorrect public key length");
                let i = h(e, r);
                if (n) {
                    let e = 0;
                    for (let t = 0; t < i.length; t++) e |= i[t];
                    if (0 === e) throw Error("X25519: invalid shared key")
                }
                return i
            }
        },
        88420: function(e, t, r) {
            "use strict";
            var n = r(2265),
                i = "function" == typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
                },
                o = n.useState,
                a = n.useEffect,
                s = n.useLayoutEffect,
                u = n.useDebugValue;

            function c(e) {
                var t = e.getSnapshot;
                e = e.value;
                try {
                    var r = t();
                    return !i(e, r)
                } catch (e) {
                    return !0
                }
            }
            var l = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? function(e, t) {
                return t()
            } : function(e, t) {
                var r = t(),
                    n = o({
                        inst: {
                            value: r,
                            getSnapshot: t
                        }
                    }),
                    i = n[0].inst,
                    l = n[1];
                return s(function() {
                    i.value = r, i.getSnapshot = t, c(i) && l({
                        inst: i
                    })
                }, [e, r, t]), a(function() {
                    return c(i) && l({
                        inst: i
                    }), e(function() {
                        c(i) && l({
                            inst: i
                        })
                    })
                }, [e]), u(r), r
            };
            t.useSyncExternalStore = void 0 !== n.useSyncExternalStore ? n.useSyncExternalStore : l
        },
        41547: function(e, t, r) {
            "use strict";
            e.exports = r(88420)
        },
        58412: function(e, t, r) {
            "use strict";

            function n(e) {
                var t = e.match(/^var\((.*)\)$/);
                return t ? t[1] : e
            }

            function i(e, t) {
                var r = {};
                if ("object" == typeof t) ! function e(t, r) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                        i = {};
                    for (var o in t) {
                        var a = t[o],
                            s = [...n, o];
                        "string" == typeof a || "number" == typeof a || null == a ? i[o] = r(a, s) : "object" != typeof a || Array.isArray(a) ? console.warn('Skipping invalid key "'.concat(s.join("."), '". Should be a string, number, null or object. Received: "').concat(Array.isArray(a) ? "Array" : typeof a, '"')) : i[o] = e(a, r, s)
                    }
                    return i
                }(t, (t, i) => {
                    null != t && (r[n(function(e, t) {
                        var r = e;
                        for (var n of t) {
                            if (!(n in r)) throw Error("Path ".concat(t.join(" -> "), " does not exist in object"));
                            r = r[n]
                        }
                        return r
                    }(e, i))] = String(t))
                });
                else
                    for (var i in e) {
                        var o = e[i];
                        null != o && (r[n(i)] = o)
                    }
                return Object.defineProperty(r, "toString", {
                    value: function() {
                        return Object.keys(this).map(e => "".concat(e, ":").concat(this[e])).join(";")
                    },
                    writable: !1
                }), r
            }
            r.d(t, {
                L: function() {
                    return i
                }
            })
        },
        35996: function(e, t, r) {
            "use strict";

            function n(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter(function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    })), r.push.apply(r, n)
                }
                return r
            }

            function i(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? n(Object(r), !0).forEach(function(t) {
                        ! function(e, t, r) {
                            var n;
                            (t = "symbol" == typeof(n = function(e, t) {
                                if ("object" != typeof e || null === e) return e;
                                var r = e[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var n = r.call(e, t || "default");
                                    if ("object" != typeof n) return n;
                                    throw TypeError("@@toPrimitive must return a primitive value.")
                                }
                                return ("string" === t ? String : Number)(e)
                            }(t, "string")) ? n : String(n)) in e ? Object.defineProperty(e, t, {
                                value: r,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : e[t] = r
                        }(e, t, r[t])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    })
                }
                return e
            }
            r.d(t, {
                $: function() {
                    return s
                }
            });
            var o = e => function() {
                    for (var t = arguments.length, r = Array(t), n = 0; n < t; n++) r[n] = arguments[n];
                    var o = Object.assign({}, ...r.map(e => e.styles)),
                        a = Object.keys(o),
                        s = a.filter(e => "mappings" in o[e]);
                    return Object.assign(t => {
                        var r = [],
                            n = {},
                            a = i({}, t),
                            u = !1;
                        for (var c of s) {
                            var l = t[c];
                            if (null != l)
                                for (var d of (u = !0, o[c].mappings)) n[d] = l, null == a[d] && delete a[d]
                        }
                        var f = u ? i(i({}, n), a) : t;
                        for (var h in f)
                            if ("continue" === function() {
                                    var e = f[h],
                                        t = o[h];
                                    try {
                                        if (t.mappings) return "continue";
                                        if ("string" == typeof e || "number" == typeof e) r.push(t.values[e].defaultClass);
                                        else if (Array.isArray(e))
                                            for (var n = 0; n < e.length; n++) {
                                                var i = e[n];
                                                if (null != i) {
                                                    var a = t.responsiveArray[n];
                                                    r.push(t.values[i].conditions[a])
                                                }
                                            } else
                                                for (var s in e) {
                                                    var u = e[s];
                                                    null != u && r.push(t.values[u].conditions[s])
                                                }
                                    } catch (e) {
                                        throw e
                                    }
                                }()) continue;
                        return e(r.join(" "))
                    }, {
                        properties: new Set(a)
                    })
                },
                a = e => e,
                s = function() {
                    return o(a)(...arguments)
                }
        },
        42337: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return o
                },
                M: function() {
                    return i
                }
            });
            var n = function(e, t) {
                return Object.defineProperty(e, "__recipe__", {
                    value: t,
                    writable: !1
                }), e
            };

            function i(e) {
                var {
                    conditions: t
                } = e;
                if (!t) throw Error("Styles have no conditions");
                return n(function(e) {
                    if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                        if (!t.defaultCondition) throw Error("No default condition");
                        return {
                            [t.defaultCondition]: e
                        }
                    }
                    if (Array.isArray(e)) {
                        if (!("responsiveArray" in t)) throw Error("Responsive arrays are not supported");
                        var r = {};
                        for (var n in t.responsiveArray) null != e[n] && (r[t.responsiveArray[n]] = e[n]);
                        return r
                    }
                    return e
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createNormalizeValueFn",
                    args: [{
                        conditions: e.conditions
                    }]
                })
            }

            function o(e) {
                var {
                    conditions: t
                } = e;
                if (!t) throw Error("Styles have no conditions");
                var r = i(e);
                return n(function(e, n) {
                    if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                        if (!t.defaultCondition) throw Error("No default condition");
                        return n(e, t.defaultCondition)
                    }
                    var i = Array.isArray(e) ? r(e) : e,
                        o = {};
                    for (var a in i) null != i[a] && (o[a] = n(i[a], a));
                    return o
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createMapValueFn",
                    args: [{
                        conditions: e.conditions
                    }]
                })
            }
        },
        43872: function(e) {
            "use strict";
            var t = Object.prototype.hasOwnProperty,
                r = "~";

            function n() {}

            function i(e, t, r) {
                this.fn = e, this.context = t, this.once = r || !1
            }

            function o(e, t, n, o, a) {
                if ("function" != typeof n) throw TypeError("The listener must be a function");
                var s = new i(n, o || e, a),
                    u = r ? r + t : t;
                return e._events[u] ? e._events[u].fn ? e._events[u] = [e._events[u], s] : e._events[u].push(s) : (e._events[u] = s, e._eventsCount++), e
            }

            function a(e, t) {
                0 == --e._eventsCount ? e._events = new n : delete e._events[t]
            }

            function s() {
                this._events = new n, this._eventsCount = 0
            }
            Object.create && (n.prototype = Object.create(null), new n().__proto__ || (r = !1)), s.prototype.eventNames = function() {
                var e, n, i = [];
                if (0 === this._eventsCount) return i;
                for (n in e = this._events) t.call(e, n) && i.push(r ? n.slice(1) : n);
                return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i
            }, s.prototype.listeners = function(e) {
                var t = r ? r + e : e,
                    n = this._events[t];
                if (!n) return [];
                if (n.fn) return [n.fn];
                for (var i = 0, o = n.length, a = Array(o); i < o; i++) a[i] = n[i].fn;
                return a
            }, s.prototype.listenerCount = function(e) {
                var t = r ? r + e : e,
                    n = this._events[t];
                return n ? n.fn ? 1 : n.length : 0
            }, s.prototype.emit = function(e, t, n, i, o, a) {
                var s = r ? r + e : e;
                if (!this._events[s]) return !1;
                var u, c, l = this._events[s],
                    d = arguments.length;
                if (l.fn) {
                    switch (l.once && this.removeListener(e, l.fn, void 0, !0), d) {
                        case 1:
                            return l.fn.call(l.context), !0;
                        case 2:
                            return l.fn.call(l.context, t), !0;
                        case 3:
                            return l.fn.call(l.context, t, n), !0;
                        case 4:
                            return l.fn.call(l.context, t, n, i), !0;
                        case 5:
                            return l.fn.call(l.context, t, n, i, o), !0;
                        case 6:
                            return l.fn.call(l.context, t, n, i, o, a), !0
                    }
                    for (c = 1, u = Array(d - 1); c < d; c++) u[c - 1] = arguments[c];
                    l.fn.apply(l.context, u)
                } else {
                    var f, h = l.length;
                    for (c = 0; c < h; c++) switch (l[c].once && this.removeListener(e, l[c].fn, void 0, !0), d) {
                        case 1:
                            l[c].fn.call(l[c].context);
                            break;
                        case 2:
                            l[c].fn.call(l[c].context, t);
                            break;
                        case 3:
                            l[c].fn.call(l[c].context, t, n);
                            break;
                        case 4:
                            l[c].fn.call(l[c].context, t, n, i);
                            break;
                        default:
                            if (!u)
                                for (f = 1, u = Array(d - 1); f < d; f++) u[f - 1] = arguments[f];
                            l[c].fn.apply(l[c].context, u)
                    }
                }
                return !0
            }, s.prototype.on = function(e, t, r) {
                return o(this, e, t, r, !1)
            }, s.prototype.once = function(e, t, r) {
                return o(this, e, t, r, !0)
            }, s.prototype.removeListener = function(e, t, n, i) {
                var o = r ? r + e : e;
                if (!this._events[o]) return this;
                if (!t) return a(this, o), this;
                var s = this._events[o];
                if (s.fn) s.fn !== t || i && !s.once || n && s.context !== n || a(this, o);
                else {
                    for (var u = 0, c = [], l = s.length; u < l; u++)(s[u].fn !== t || i && !s[u].once || n && s[u].context !== n) && c.push(s[u]);
                    c.length ? this._events[o] = 1 === c.length ? c[0] : c : a(this, o)
                }
                return this
            }, s.prototype.removeAllListeners = function(e) {
                var t;
                return e ? (t = r ? r + e : e, this._events[t] && a(this, t)) : (this._events = new n, this._eventsCount = 0), this
            }, s.prototype.off = s.prototype.removeListener, s.prototype.addListener = s.prototype.on, s.prefixed = r, s.EventEmitter = s, e.exports = s
        },
        71851: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(24011);
            n.__exportStar(r(47036), t), n.__exportStar(r(62703), t)
        },
        47036: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_THOUSAND = t.ONE_HUNDRED = void 0, t.ONE_HUNDRED = 100, t.ONE_THOUSAND = 1e3
        },
        62703: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = 5 * t.ONE_MINUTE, t.TEN_MINUTES = 10 * t.ONE_MINUTE, t.THIRTY_MINUTES = 30 * t.ONE_MINUTE, t.SIXTY_MINUTES = 60 * t.ONE_MINUTE, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = 3 * t.ONE_HOUR, t.SIX_HOURS = 6 * t.ONE_HOUR, t.TWELVE_HOURS = 12 * t.ONE_HOUR, t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = 3 * t.ONE_DAY, t.FIVE_DAYS = 5 * t.ONE_DAY, t.SEVEN_DAYS = 7 * t.ONE_DAY, t.THIRTY_DAYS = 30 * t.ONE_DAY, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = 2 * t.ONE_WEEK, t.THREE_WEEKS = 3 * t.ONE_WEEK, t.FOUR_WEEKS = 4 * t.ONE_WEEK, t.ONE_YEAR = 365 * t.ONE_DAY
        },
        54574: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(24011);
            n.__exportStar(r(91268), t), n.__exportStar(r(32674), t), n.__exportStar(r(79165), t), n.__exportStar(r(71851), t)
        },
        79165: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(24011).__exportStar(r(34760), t)
        },
        34760: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IWatch = void 0;
            class r {}
            t.IWatch = r
        },
        25115: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.fromMiliseconds = t.toMiliseconds = void 0;
            let n = r(71851);
            t.toMiliseconds = function(e) {
                return e * n.ONE_THOUSAND
            }, t.fromMiliseconds = function(e) {
                return Math.floor(e / n.ONE_THOUSAND)
            }
        },
        23396: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.delay = void 0, t.delay = function(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t(!0)
                    }, e)
                })
            }
        },
        91268: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(24011);
            n.__exportStar(r(23396), t), n.__exportStar(r(25115), t)
        },
        32674: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Watch = void 0;
            class r {
                constructor() {
                    this.timestamps = new Map
                }
                start(e) {
                    if (this.timestamps.has(e)) throw Error(`Watch already started for label: ${e}`);
                    this.timestamps.set(e, {
                        started: Date.now()
                    })
                }
                stop(e) {
                    let t = this.get(e);
                    if (void 0 !== t.elapsed) throw Error(`Watch already stopped for label: ${e}`);
                    let r = Date.now() - t.started;
                    this.timestamps.set(e, {
                        started: t.started,
                        elapsed: r
                    })
                }
                get(e) {
                    let t = this.timestamps.get(e);
                    if (void 0 === t) throw Error(`No timestamp found for label: ${e}`);
                    return t
                }
                elapsed(e) {
                    let t = this.get(e);
                    return t.elapsed || Date.now() - t.started
                }
            }
            t.Watch = r, t.default = r
        },
        24011: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                __assign: function() {
                    return o
                },
                __asyncDelegator: function() {
                    return w
                },
                __asyncGenerator: function() {
                    return v
                },
                __asyncValues: function() {
                    return E
                },
                __await: function() {
                    return y
                },
                __awaiter: function() {
                    return l
                },
                __classPrivateFieldGet: function() {
                    return O
                },
                __classPrivateFieldSet: function() {
                    return _
                },
                __createBinding: function() {
                    return f
                },
                __decorate: function() {
                    return s
                },
                __exportStar: function() {
                    return h
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return d
                },
                __importDefault: function() {
                    return x
                },
                __importStar: function() {
                    return P
                },
                __makeTemplateObject: function() {
                    return A
                },
                __metadata: function() {
                    return c
                },
                __param: function() {
                    return u
                },
                __read: function() {
                    return m
                },
                __rest: function() {
                    return a
                },
                __spread: function() {
                    return g
                },
                __spreadArrays: function() {
                    return b
                },
                __values: function() {
                    return p
                }
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.
            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.
            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function a(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function s(e, t, r, n) {
                var i, o = arguments.length,
                    a = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);
                else
                    for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
                return o > 3 && a && Object.defineProperty(t, r, a), a
            }

            function u(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function c(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function l(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(a, s)
                    }
                    u((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, o, a = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: s(0),
                    throw: s(1),
                    return: s(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function s(o) {
                    return function(s) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; a;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return a.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        a.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = a.ops.pop(), a.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = a.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            a = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            a.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && a.label < i[1]) {
                                            a.label = i[1], i = o;
                                            break
                                        }
                                        if (i && a.label < i[2]) {
                                            a.label = i[2], a.ops.push(o);
                                            break
                                        }
                                        i[2] && a.ops.pop(), a.trys.pop();
                                        continue
                                }
                                o = t.call(e, a)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, s])
                    }
                }
            }

            function f(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function h(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function m(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    a = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) a.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return a
            }

            function g() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(m(arguments[t]));
                return e
            }

            function b() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], a = 0, s = o.length; a < s; a++, i++) n[i] = o[a];
                return n
            }

            function y(e) {
                return this instanceof y ? (this.v = e, this) : new y(e)
            }

            function v(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, a("next"), a("throw"), a("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function a(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || s(e, t)
                        })
                    })
                }

                function s(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(u, c) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function u(e) {
                    s("next", e)
                }

                function c(e) {
                    s("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && s(o[0][0], o[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: y(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function A(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function O(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function _(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        77500: function(e, t, r) {
            "use strict";
            r.d(t, {
                AW: function() {
                    return w
                },
                O6: function() {
                    return tu
                },
                rV: function() {
                    return P
                },
                gn: function() {
                    return eo
                },
                H1: function() {
                    return X
                },
                hF: function() {
                    return ee
                },
                WG: function() {
                    return C
                },
                pe: function() {
                    return k
                },
                m$: function() {
                    return _
                },
                vB: function() {
                    return M
                },
                HI: function() {
                    return S
                },
                E0: function() {
                    return es
                },
                Gq: function() {
                    return en
                },
                $0: function() {
                    return V
                },
                Z4: function() {
                    return er
                },
                Bv: function() {
                    return ew
                },
                Au: function() {
                    return x
                },
                jd: function() {
                    return O
                },
                gu: function() {
                    return b
                },
                D: function() {
                    return Y
                },
                X_: function() {
                    return K
                },
                bW: function() {
                    return el
                },
                Z7: function() {
                    return ej
                },
                cO: function() {
                    return ef
                },
                _H: function() {
                    return ed
                },
                fc: function() {
                    return ek
                },
                D6: function() {
                    return eF
                },
                Hh: function() {
                    return ec
                },
                Ym: function() {
                    return I
                },
                rj: function() {
                    return T
                },
                jU: function() {
                    return G
                },
                gp: function() {
                    return eM
                },
                rF: function() {
                    return tt
                },
                Bw: function() {
                    return ea
                },
                UG: function() {
                    return $
                },
                Gg: function() {
                    return ti
                },
                xW: function() {
                    return eK
                },
                b$: function() {
                    return H
                },
                Ih: function() {
                    return eH
                },
                h1: function() {
                    return eY
                },
                Q8: function() {
                    return R
                },
                o8: function() {
                    return eq
                },
                qt: function() {
                    return eU
                },
                Dd: function() {
                    return eV
                },
                $t: function() {
                    return e3
                },
                nf: function() {
                    return e4
                },
                Q0: function() {
                    return e2
                },
                in: function() {
                    return eX
                },
                p8: function() {
                    return e9
                },
                sI: function() {
                    return te
                },
                al: function() {
                    return e7
                },
                L5: function() {
                    return eL
                },
                EJ: function() {
                    return e6
                },
                Z2: function() {
                    return e0
                },
                PM: function() {
                    return e1
                },
                hH: function() {
                    return e5
                },
                ON: function() {
                    return tn
                },
                n: function() {
                    return eZ
                },
                JT: function() {
                    return e8
                },
                M_: function() {
                    return ez
                },
                jv: function() {
                    return eW
                },
                KC: function() {
                    return J
                },
                eG: function() {
                    return eu
                },
                fK: function() {
                    return eN
                },
                IP: function() {
                    return Z
                },
                DQ: function() {
                    return g
                },
                iP: function() {
                    return ei
                },
                M: function() {
                    return eB
                },
                he: function() {
                    return ev
                },
                uw: function() {
                    return ta
                },
                Ll: function() {
                    return B
                },
                EN: function() {
                    return N
                }
            });
            var n = r(23518),
                i = r(67878),
                o = r(24861),
                a = r(67929),
                s = r(89414),
                u = r(39613),
                c = r(52159),
                l = r(54574),
                d = r(25527),
                f = r(70053),
                h = r(97190);
            let p = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe",
                    batchFetchMessages: "waku_batchFetchMessages"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe",
                    batchFetchMessages: "irn_batchFetchMessages"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe",
                    batchFetchMessages: "iridium_batchFetchMessages"
                }
            };
            var m = r(25566);

            function g(e) {
                let [t, r] = e.split(":");
                return {
                    namespace: t,
                    reference: r
                }
            }

            function b(e, t = []) {
                let r = [];
                return Object.keys(e).forEach(n => {
                    if (t.length && !t.includes(n)) return;
                    let i = e[n];
                    r.push(...i.accounts)
                }), r
            }

            function y(e, t) {
                return e.includes(":") ? [e] : t.chains || []
            }
            let v = "base10",
                w = "base16",
                E = "base64pad",
                A = "utf8",
                P = 1;

            function x() {
                let e = s.Au();
                return {
                    privateKey: (0, u.BB)(e.secretKey, w),
                    publicKey: (0, u.BB)(e.publicKey, w)
                }
            }

            function O() {
                let e = (0, o.randomBytes)(32);
                return (0, u.BB)(e, w)
            }

            function _(e, t) {
                let r = s.gi((0, u.mL)(e, w), (0, u.mL)(t, w), !0),
                    n = new i.t(a.mE, r).expand(32);
                return (0, u.BB)(n, w)
            }

            function I(e) {
                let t = (0, a.vp)((0, u.mL)(e, w));
                return (0, u.BB)(t, w)
            }

            function T(e) {
                let t = (0, a.vp)((0, u.mL)(e, A));
                return (0, u.BB)(t, w)
            }

            function C(e) {
                return Number((0, u.BB)(e, v))
            }

            function S(e) {
                var t;
                let r = (t = "u" > typeof e.type ? e.type : 0, (0, u.mL)(`${t}`, v));
                if (C(r) === P && typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                let i = "u" > typeof e.senderPublicKey ? (0, u.mL)(e.senderPublicKey, w) : void 0,
                    a = "u" > typeof e.iv ? (0, u.mL)(e.iv, w) : (0, o.randomBytes)(12);
                return function(e) {
                    if (C(e.type) === P) {
                        if (typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                        return (0, u.BB)((0, u.zo)([e.type, e.senderPublicKey, e.iv, e.sealed]), E)
                    }
                    return (0, u.BB)((0, u.zo)([e.type, e.iv, e.sealed]), E)
                }({
                    type: r,
                    sealed: new n.OK((0, u.mL)(e.symKey, w)).seal(a, (0, u.mL)(e.message, A)),
                    iv: a,
                    senderPublicKey: i
                })
            }

            function k(e) {
                let t = new n.OK((0, u.mL)(e.symKey, w)),
                    {
                        sealed: r,
                        iv: i
                    } = M(e.encoded),
                    o = t.open(i, r);
                if (null === o) throw Error("Failed to decrypt");
                return (0, u.BB)(o, A)
            }

            function M(e) {
                let t = (0, u.mL)(e, E),
                    r = t.slice(0, 1);
                if (C(r) === P) {
                    let e = t.slice(1, 33),
                        n = t.slice(33, 45);
                    return {
                        type: r,
                        sealed: t.slice(45),
                        iv: n,
                        senderPublicKey: e
                    }
                }
                let n = t.slice(1, 13);
                return {
                    type: r,
                    sealed: t.slice(13),
                    iv: n
                }
            }

            function B(e, t) {
                let r = M(e);
                return N({
                    type: C(r.type),
                    senderPublicKey: "u" > typeof r.senderPublicKey ? (0, u.BB)(r.senderPublicKey, w) : void 0,
                    receiverPublicKey: t ? .receiverPublicKey
                })
            }

            function N(e) {
                let t = e ? .type || 0;
                if (t === P) {
                    if (typeof e ? .senderPublicKey > "u") throw Error("missing sender public key");
                    if (typeof e ? .receiverPublicKey > "u") throw Error("missing receiver public key")
                }
                return {
                    type: t,
                    senderPublicKey: e ? .senderPublicKey,
                    receiverPublicKey: e ? .receiverPublicKey
                }
            }

            function R(e) {
                return e.type === P && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey
            }
            var D = Object.defineProperty,
                j = Object.getOwnPropertySymbols,
                F = Object.prototype.hasOwnProperty,
                U = Object.prototype.propertyIsEnumerable,
                L = (e, t, r) => t in e ? D(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                q = (e, t) => {
                    for (var r in t || (t = {})) F.call(t, r) && L(e, r, t[r]);
                    if (j)
                        for (var r of j(t)) U.call(t, r) && L(e, r, t[r]);
                    return e
                };
            let z = {
                reactNative: "react-native",
                node: "node",
                browser: "browser",
                unknown: "unknown"
            };

            function $() {
                return "u" > typeof m && "u" > typeof m.versions && "u" > typeof m.versions.node
            }

            function H() {
                return !(0, d.getDocument)() && !!(0, d.getNavigator)() && "ReactNative" === navigator.product
            }

            function G() {
                return !$() && !!(0, d.getNavigator)() && !!(0, d.getDocument)()
            }

            function W() {
                return H() ? z.reactNative : $() ? z.node : G() ? z.browser : z.unknown
            }

            function K() {
                var e;
                try {
                    return H() && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Application) ? null == (e = r.g.Application) ? void 0 : e.applicationId : void 0
                } catch {
                    return
                }
            }

            function Y() {
                return (0, f.D)() || {
                    name: "",
                    description: "",
                    url: "",
                    icons: [""]
                }
            }

            function V({
                protocol: e,
                version: t,
                relayUrl: n,
                sdkVersion: i,
                auth: o,
                projectId: a,
                useOnCloseEvent: s,
                bundleId: u
            }) {
                var l, f;
                let p;
                let m = n.split("?"),
                    g = function(e, t, n) {
                        let i = function() {
                                if (W() === z.reactNative && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Platform)) {
                                    let {
                                        OS: e,
                                        Version: t
                                    } = r.g.Platform;
                                    return [e, t].join("-")
                                }
                                let e = (0, c.qY)();
                                if (null === e) return "unknown";
                                let t = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                                return "browser" === e.type ? [t, e.name, e.version].join("-") : [t, e.version].join("-")
                            }(),
                            o = function() {
                                var e;
                                let t = W();
                                return t === z.browser ? [t, (null == (e = (0, d.getLocation)()) ? void 0 : e.host) || "unknown"].join(":") : t
                            }();
                        return [
                            [e, t].join("-"), ["js", n].join("-"), i, o
                        ].join("/")
                    }(e, t, i),
                    b = (l = m[1] || "", f = {
                        auth: o,
                        ua: g,
                        projectId: a,
                        useOnCloseEvent: s || void 0,
                        origin: u || void 0
                    }, p = q(q({}, p = h.parse(l)), f), l = h.stringify(p));
                return m[0] + "?" + b
            }

            function Q(e, t) {
                return e.filter(e => t.includes(e)).length === e.length
            }

            function J(e) {
                return Object.fromEntries(e.entries())
            }

            function Z(e) {
                return new Map(Object.entries(e))
            }

            function X(e = l.FIVE_MINUTES, t) {
                let r, n, i;
                let o = (0, l.toMiliseconds)(e || l.FIVE_MINUTES);
                return {
                    resolve: e => {
                        i && r && (clearTimeout(i), r(e))
                    },
                    reject: e => {
                        i && n && (clearTimeout(i), n(e))
                    },
                    done: () => new Promise((e, a) => {
                        i = setTimeout(() => {
                            a(Error(t))
                        }, o), r = e, n = a
                    })
                }
            }

            function ee(e, t, r) {
                return new Promise(async (n, i) => {
                    let o = setTimeout(() => i(Error(r)), t);
                    try {
                        let t = await e;
                        n(t)
                    } catch (e) {
                        i(e)
                    }
                    clearTimeout(o)
                })
            }

            function et(e, t) {
                if ("string" == typeof t && t.startsWith(`${e}:`)) return t;
                if ("topic" === e.toLowerCase()) {
                    if ("string" != typeof t) throw Error('Value must be "string" for expirer target type: topic');
                    return `topic:${t}`
                }
                if ("id" === e.toLowerCase()) {
                    if ("number" != typeof t) throw Error('Value must be "number" for expirer target type: id');
                    return `id:${t}`
                }
                throw Error(`Unknown expirer target type: ${e}`)
            }

            function er(e) {
                return et("topic", e)
            }

            function en(e) {
                return et("id", e)
            }

            function ei(e) {
                let [t, r] = e.split(":"), n = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === t && "string" == typeof r) n.topic = r;
                else if ("id" === t && Number.isInteger(Number(r))) n.id = Number(r);
                else throw Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);
                return n
            }

            function eo(e, t) {
                return (0, l.fromMiliseconds)((t || Date.now()) + (0, l.toMiliseconds)(e))
            }

            function ea(e) {
                return Date.now() >= (0, l.toMiliseconds)(e)
            }

            function es(e, t) {
                return `${e}${t?`:${t}`:""}`
            }

            function eu(e = [], t = []) {
                return [...new Set([...e, ...t])]
            }
            async function ec({
                id: e,
                topic: t,
                wcDeepLink: n
            }) {
                try {
                    if (!n) return;
                    let i = "string" == typeof n ? JSON.parse(n) : n,
                        o = i ? .href;
                    if ("string" != typeof o) return;
                    o.endsWith("/") && (o = o.slice(0, -1));
                    let a = `${o}/wc?requestId=${e}&sessionTopic=${t}`,
                        s = W();
                    s === z.browser ? a.startsWith("https://") ? window.open(a, "_blank", "noreferrer noopener") : window.open(a, "_self", "noreferrer noopener") : s === z.reactNative && "u" > typeof(null == r.g ? void 0 : r.g.Linking) && await r.g.Linking.openURL(a)
                } catch (e) {
                    console.error(e)
                }
            }
            async function el(e, t) {
                try {
                    return await e.getItem(t) || (G() ? localStorage.getItem(t) : void 0)
                } catch (e) {
                    console.error(e)
                }
            }

            function ed(e) {
                return e ? .relay || {
                    protocol: "irn"
                }
            }

            function ef(e) {
                let t = p[e];
                if (typeof t > "u") throw Error(`Relay Protocol not supported: ${e}`);
                return t
            }
            var eh = Object.defineProperty,
                ep = Object.getOwnPropertySymbols,
                em = Object.prototype.hasOwnProperty,
                eg = Object.prototype.propertyIsEnumerable,
                eb = (e, t, r) => t in e ? eh(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                ey = (e, t) => {
                    for (var r in t || (t = {})) em.call(t, r) && eb(e, r, t[r]);
                    if (ep)
                        for (var r of ep(t)) eg.call(t, r) && eb(e, r, t[r]);
                    return e
                };

            function ev(e) {
                var t;
                let r = (e = (e = e.includes("wc://") ? e.replace("wc://", "") : e).includes("wc:") ? e.replace("wc:", "") : e).indexOf(":"),
                    n = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0,
                    i = e.substring(0, r),
                    o = e.substring(r + 1, n).split("@"),
                    a = "u" > typeof n ? e.substring(n) : "",
                    s = h.parse(a);
                return {
                    protocol: i,
                    topic: (t = o[0]).startsWith("//") ? t.substring(2) : t,
                    version: parseInt(o[1], 10),
                    symKey: s.symKey,
                    relay: function(e, t = "-") {
                        let r = {},
                            n = "relay" + t;
                        return Object.keys(e).forEach(t => {
                            if (t.startsWith(n)) {
                                let i = t.replace(n, ""),
                                    o = e[t];
                                r[i] = o
                            }
                        }), r
                    }(s)
                }
            }

            function ew(e) {
                return `${e.protocol}:${e.topic}@${e.version}?` + h.stringify(ey({
                    symKey: e.symKey
                }, function(e, t = "-") {
                    let r = {};
                    return Object.keys(e).forEach(n => {
                        e[n] && (r["relay" + t + n] = e[n])
                    }), r
                }(e.relay)))
            }
            var eE = Object.defineProperty,
                eA = Object.defineProperties,
                eP = Object.getOwnPropertyDescriptors,
                ex = Object.getOwnPropertySymbols,
                eO = Object.prototype.hasOwnProperty,
                e_ = Object.prototype.propertyIsEnumerable,
                eI = (e, t, r) => t in e ? eE(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                eT = (e, t) => {
                    for (var r in t || (t = {})) eO.call(t, r) && eI(e, r, t[r]);
                    if (ex)
                        for (var r of ex(t)) e_.call(t, r) && eI(e, r, t[r]);
                    return e
                },
                eC = (e, t) => eA(e, eP(t));

            function eS(e) {
                let t = [];
                return e.forEach(e => {
                    let [r, n] = e.split(":");
                    t.push(`${r}:${n}`)
                }), t
            }

            function ek(e, t) {
                let r = eX(e, t);
                if (r) throw Error(r.message);
                let n = {};
                for (let [t, r] of Object.entries(e)) n[t] = {
                    methods: r.methods,
                    events: r.events,
                    chains: r.accounts.map(e => `${e.split(":")[0]}:${e.split(":")[1]}`)
                };
                return n
            }

            function eM(e) {
                return e.includes(":")
            }

            function eB(e) {
                return eM(e) ? e.split(":")[0] : e
            }

            function eN(e) {
                var t, r, n;
                let i = {};
                if (!eL(e)) return i;
                for (let [o, a] of Object.entries(e)) {
                    let e = eM(o) ? [o] : a.chains,
                        s = a.methods || [],
                        u = a.events || [],
                        c = eB(o);
                    i[c] = eC(eT({}, i[c]), {
                        chains: eu(e, null == (t = i[c]) ? void 0 : t.chains),
                        methods: eu(s, null == (r = i[c]) ? void 0 : r.methods),
                        events: eu(u, null == (n = i[c]) ? void 0 : n.events)
                    })
                }
                return i
            }
            let eR = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                eD = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function ej(e, t) {
                let {
                    message: r,
                    code: n
                } = eD[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function eF(e, t) {
                let {
                    message: r,
                    code: n
                } = eR[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function eU(e, t) {
                return !!Array.isArray(e) && (!("u" > typeof t) || !e.length || e.every(t))
            }

            function eL(e) {
                return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length
            }

            function eq(e) {
                return typeof e > "u"
            }

            function ez(e, t) {
                return !!(t && eq(e)) || "string" == typeof e && !!e.trim().length
            }

            function e$(e, t) {
                return !!(t && eq(e)) || "number" == typeof e && !isNaN(e)
            }

            function eH(e, t) {
                let {
                    requiredNamespaces: r
                } = t, n = Object.keys(e.namespaces), i = Object.keys(r), o = !0;
                return !!Q(i, n) && (n.forEach(t => {
                    let {
                        accounts: n,
                        methods: i,
                        events: a
                    } = e.namespaces[t], s = eS(n), u = r[t];
                    Q(y(t, u), s) && Q(u.methods, i) && Q(u.events, a) || (o = !1)
                }), o)
            }

            function eG(e) {
                return !!(ez(e, !1) && e.includes(":")) && 2 === e.split(":").length
            }

            function eW(e) {
                if (ez(e, !1)) try {
                    return "u" > typeof new URL(e)
                } catch {}
                return !1
            }

            function eK(e) {
                var t;
                return null == (t = e ? .proposer) ? void 0 : t.publicKey
            }

            function eY(e) {
                return e ? .topic
            }

            function eV(e, t) {
                let r = null;
                return ez(e ? .publicKey, !1) || (r = ej("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r
            }

            function eQ(e) {
                let t = !0;
                return eU(e) ? e.length && (t = e.every(e => ez(e, !1))) : t = !1, t
            }

            function eJ(e, t) {
                let r = null;
                return Object.values(e).forEach(e => {
                    var n;
                    let i;
                    if (r) return;
                    let o = (n = `${t}, namespace`, i = null, eQ(e ? .methods) ? eQ(e ? .events) || (i = eF("UNSUPPORTED_EVENTS", `${n}, events should be an array of strings or empty array for no events`)) : i = eF("UNSUPPORTED_METHODS", `${n}, methods should be an array of strings or empty array for no methods`), i);
                    o && (r = o)
                }), r
            }

            function eZ(e, t, r) {
                let n = null;
                if (e && eL(e)) {
                    let i;
                    let o = eJ(e, t);
                    o && (n = o);
                    let a = (i = null, Object.entries(e).forEach(([e, n]) => {
                        var o, a;
                        let s;
                        if (i) return;
                        let u = (o = y(e, n), a = `${t} ${r}`, s = null, eU(o) && o.length ? o.forEach(e => {
                            s || eG(e) || (s = eF("UNSUPPORTED_CHAINS", `${a}, chain ${e} should be a string and conform to "namespace:chainId" format`))
                        }) : eG(e) || (s = eF("UNSUPPORTED_CHAINS", `${a}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), s);
                        u && (i = u)
                    }), i);
                    a && (n = a)
                } else n = ej("MISSING_OR_INVALID", `${t}, ${r} should be an object with data`);
                return n
            }

            function eX(e, t) {
                let r = null;
                if (e && eL(e)) {
                    let n;
                    let i = eJ(e, t);
                    i && (r = i);
                    let o = (n = null, Object.values(e).forEach(e => {
                        var r, i;
                        let o;
                        if (n) return;
                        let a = (r = e ? .accounts, i = `${t} namespace`, o = null, eU(r) ? r.forEach(e => {
                            o || function(e) {
                                if (ez(e, !1) && e.includes(":")) {
                                    let t = e.split(":");
                                    if (3 === t.length) {
                                        let e = t[0] + ":" + t[1];
                                        return !!t[2] && eG(e)
                                    }
                                }
                                return !1
                            }(e) || (o = eF("UNSUPPORTED_ACCOUNTS", `${i}, account ${e} should be a string and conform to "namespace:chainId:address" format`))
                        }) : o = eF("UNSUPPORTED_ACCOUNTS", `${i}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), o);
                        a && (n = a)
                    }), n);
                    o && (r = o)
                } else r = ej("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
                return r
            }

            function e0(e) {
                return ez(e.protocol, !0)
            }

            function e1(e, t) {
                let r = !1;
                return t && !e ? r = !0 : e && eU(e) && e.length && e.forEach(e => {
                    r = e0(e)
                }), r
            }

            function e2(e) {
                return "number" == typeof e
            }

            function e6(e) {
                return "u" > typeof e
            }

            function e3(e) {
                return !(!e || "object" != typeof e || !e.code || !e$(e.code, !1) || !e.message || !ez(e.message, !1))
            }

            function e5(e) {
                return !(eq(e) || !ez(e.method, !1))
            }

            function e8(e) {
                return !(eq(e) || eq(e.result) && eq(e.error) || !e$(e.id, !1) || !ez(e.jsonrpc, !1))
            }

            function e4(e) {
                return !(eq(e) || !ez(e.name, !1))
            }

            function e9(e, t) {
                return !(!eG(t) || !(function(e) {
                    let t = [];
                    return Object.values(e).forEach(e => {
                        t.push(...eS(e.accounts))
                    }), t
                })(e).includes(t))
            }

            function e7(e, t, r) {
                return !!ez(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        eS(e.accounts).includes(t) && r.push(...e.methods)
                    }), r
                })(e, t).includes(r)
            }

            function te(e, t, r) {
                return !!ez(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        eS(e.accounts).includes(t) && r.push(...e.events)
                    }), r
                })(e, t).includes(r)
            }

            function tt(e, t, r) {
                let n = null,
                    i = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            var n;
                            r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach(n => {
                                t[n] = {
                                    methods: e[r].methods,
                                    events: e[r].events
                                }
                            })
                        }), t
                    }(e),
                    o = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            if (r.includes(":")) t[r] = e[r];
                            else {
                                let n = eS(e[r].accounts);
                                n ? .forEach(n => {
                                    t[n] = {
                                        accounts: e[r].accounts.filter(e => e.includes(`${n}:`)),
                                        methods: e[r].methods,
                                        events: e[r].events
                                    }
                                })
                            }
                        }), t
                    }(t),
                    a = Object.keys(i),
                    s = Object.keys(o),
                    u = tr(Object.keys(e)),
                    c = tr(Object.keys(t)),
                    l = u.filter(e => !c.includes(e));
                return l.length && (n = ej("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l.toString()}
      Received: ${Object.keys(t).toString()}`)), Q(a, s) || (n = ej("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${a.toString()}
      Approved: ${s.toString()}`)), Object.keys(t).forEach(e => {
                    if (!e.includes(":") || n) return;
                    let i = eS(t[e].accounts);
                    i.includes(e) || (n = ej("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${e}
        Required: ${e}
        Approved: ${i.toString()}`))
                }), a.forEach(e => {
                    n || (Q(i[e].methods, o[e].methods) ? Q(i[e].events, o[e].events) || (n = ej("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${e}`)) : n = ej("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${e}`))
                }), n
            }

            function tr(e) {
                return [...new Set(e.map(e => e.includes(":") ? e.split(":")[0] : e))]
            }

            function tn(e, t) {
                return e$(e, !1) && e <= t.max && e >= t.min
            }

            function ti() {
                let e = W();
                return new Promise(t => {
                    switch (e) {
                        case z.browser:
                            t(G() && navigator ? .onLine);
                            break;
                        case z.reactNative:
                            t(to());
                            break;
                        case z.node:
                        default:
                            t(!0)
                    }
                })
            }
            async function to() {
                if (H() && "u" > typeof r.g && null != r.g && r.g.NetInfo) {
                    let e = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                    return e ? .isConnected
                }
                return !0
            }

            function ta(e) {
                switch (W()) {
                    case z.browser:
                        !H() && G() && (window.addEventListener("online", () => e(!0)), window.addEventListener("offline", () => e(!1)));
                        break;
                    case z.reactNative:
                        H() && "u" > typeof r.g && null != r.g && r.g.NetInfo && r.g ? .NetInfo.addEventListener(t => e(t ? .isConnected));
                    case z.node:
                }
            }
            let ts = {};
            class tu {
                static get(e) {
                    return ts[e]
                }
                static set(e, t) {
                    ts[e] = t
                }
                static delete(e) {
                    delete ts[e]
                }
            }
        },
        97190: function(e, t, r) {
            "use strict";
            let n = r(29276),
                i = r(56368),
                o = r(76442),
                a = r(24816),
                s = e => null == e,
                u = Symbol("encodeFragmentIdentifier");

            function c(e) {
                if ("string" != typeof e || 1 !== e.length) throw TypeError("arrayFormatSeparator must be single character string")
            }

            function l(e, t) {
                return t.encode ? t.strict ? n(e) : encodeURIComponent(e) : e
            }

            function d(e, t) {
                return t.decode ? i(e) : e
            }

            function f(e) {
                let t = e.indexOf("#");
                return -1 !== t && (e = e.slice(0, t)), e
            }

            function h(e) {
                let t = (e = f(e)).indexOf("?");
                return -1 === t ? "" : e.slice(t + 1)
            }

            function p(e, t) {
                return t.parseNumbers && !Number.isNaN(Number(e)) && "string" == typeof e && "" !== e.trim() ? e = Number(e) : t.parseBooleans && null !== e && ("true" === e.toLowerCase() || "false" === e.toLowerCase()) && (e = "true" === e.toLowerCase()), e
            }

            function m(e, t) {
                c((t = Object.assign({
                    decode: !0,
                    sort: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ",",
                    parseNumbers: !1,
                    parseBooleans: !1
                }, t)).arrayFormatSeparator);
                let r = function(e) {
                        let t;
                        switch (e.arrayFormat) {
                            case "index":
                                return (e, r, n) => {
                                    if (t = /\[(\d*)\]$/.exec(e), e = e.replace(/\[\d*\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    void 0 === n[e] && (n[e] = {}), n[e][t[1]] = r
                                };
                            case "bracket":
                                return (e, r, n) => {
                                    if (t = /(\[\])$/.exec(e), e = e.replace(/\[\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "colon-list-separator":
                                return (e, r, n) => {
                                    if (t = /(:list)$/.exec(e), e = e.replace(/:list$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "comma":
                            case "separator":
                                return (t, r, n) => {
                                    let i = "string" == typeof r && r.includes(e.arrayFormatSeparator),
                                        o = "string" == typeof r && !i && d(r, e).includes(e.arrayFormatSeparator);
                                    r = o ? d(r, e) : r;
                                    let a = i || o ? r.split(e.arrayFormatSeparator).map(t => d(t, e)) : null === r ? r : d(r, e);
                                    n[t] = a
                                };
                            case "bracket-separator":
                                return (t, r, n) => {
                                    let i = /(\[\])$/.test(t);
                                    if (t = t.replace(/\[\]$/, ""), !i) {
                                        n[t] = r ? d(r, e) : r;
                                        return
                                    }
                                    let o = null === r ? [] : r.split(e.arrayFormatSeparator).map(t => d(t, e));
                                    if (void 0 === n[t]) {
                                        n[t] = o;
                                        return
                                    }
                                    n[t] = [].concat(n[t], o)
                                };
                            default:
                                return (e, t, r) => {
                                    if (void 0 === r[e]) {
                                        r[e] = t;
                                        return
                                    }
                                    r[e] = [].concat(r[e], t)
                                }
                        }
                    }(t),
                    n = Object.create(null);
                if ("string" != typeof e || !(e = e.trim().replace(/^[?#&]/, ""))) return n;
                for (let i of e.split("&")) {
                    if ("" === i) continue;
                    let [e, a] = o(t.decode ? i.replace(/\+/g, " ") : i, "=");
                    a = void 0 === a ? null : ["comma", "separator", "bracket-separator"].includes(t.arrayFormat) ? a : d(a, t), r(d(e, t), a, n)
                }
                for (let e of Object.keys(n)) {
                    let r = n[e];
                    if ("object" == typeof r && null !== r)
                        for (let e of Object.keys(r)) r[e] = p(r[e], t);
                    else n[e] = p(r, t)
                }
                return !1 === t.sort ? n : (!0 === t.sort ? Object.keys(n).sort() : Object.keys(n).sort(t.sort)).reduce((e, t) => {
                    let r = n[t];
                    return r && "object" == typeof r && !Array.isArray(r) ? e[t] = function e(t) {
                        return Array.isArray(t) ? t.sort() : "object" == typeof t ? e(Object.keys(t)).sort((e, t) => Number(e) - Number(t)).map(e => t[e]) : t
                    }(r) : e[t] = r, e
                }, Object.create(null))
            }
            t.extract = h, t.parse = m, t.stringify = (e, t) => {
                if (!e) return "";
                c((t = Object.assign({
                    encode: !0,
                    strict: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ","
                }, t)).arrayFormatSeparator);
                let r = r => t.skipNull && s(e[r]) || t.skipEmptyString && "" === e[r],
                    n = function(e) {
                        switch (e.arrayFormat) {
                            case "index":
                                return t => (r, n) => {
                                    let i = r.length;
                                    return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [l(t, e), "[", i, "]"].join("")] : [...r, [l(t, e), "[", l(i, e), "]=", l(n, e)].join("")]
                                };
                            case "bracket":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [l(t, e), "[]"].join("")] : [...r, [l(t, e), "[]=", l(n, e)].join("")];
                            case "colon-list-separator":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [l(t, e), ":list="].join("")] : [...r, [l(t, e), ":list=", l(n, e)].join("")];
                            case "comma":
                            case "separator":
                            case "bracket-separator":
                                {
                                    let t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                                    return r => (n, i) => void 0 === i || e.skipNull && null === i || e.skipEmptyString && "" === i ? n : (i = null === i ? "" : i, 0 === n.length) ? [
                                        [l(r, e), t, l(i, e)].join("")
                                    ] : [
                                        [n, l(i, e)].join(e.arrayFormatSeparator)
                                    ]
                                }
                            default:
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, l(t, e)] : [...r, [l(t, e), "=", l(n, e)].join("")]
                        }
                    }(t),
                    i = {};
                for (let t of Object.keys(e)) r(t) || (i[t] = e[t]);
                let o = Object.keys(i);
                return !1 !== t.sort && o.sort(t.sort), o.map(r => {
                    let i = e[r];
                    return void 0 === i ? "" : null === i ? l(r, t) : Array.isArray(i) ? 0 === i.length && "bracket-separator" === t.arrayFormat ? l(r, t) + "[]" : i.reduce(n(r), []).join("&") : l(r, t) + "=" + l(i, t)
                }).filter(e => e.length > 0).join("&")
            }, t.parseUrl = (e, t) => {
                t = Object.assign({
                    decode: !0
                }, t);
                let [r, n] = o(e, "#");
                return Object.assign({
                    url: r.split("?")[0] || "",
                    query: m(h(e), t)
                }, t && t.parseFragmentIdentifier && n ? {
                    fragmentIdentifier: d(n, t)
                } : {})
            }, t.stringifyUrl = (e, r) => {
                r = Object.assign({
                    encode: !0,
                    strict: !0,
                    [u]: !0
                }, r);
                let n = f(e.url).split("?")[0] || "",
                    i = t.extract(e.url),
                    o = Object.assign(t.parse(i, {
                        sort: !1
                    }), e.query),
                    a = t.stringify(o, r);
                a && (a = `?${a}`);
                let s = function(e) {
                    let t = "",
                        r = e.indexOf("#");
                    return -1 !== r && (t = e.slice(r)), t
                }(e.url);
                return e.fragmentIdentifier && (s = `#${r[u]?l(e.fragmentIdentifier,r):e.fragmentIdentifier}`), `${n}${a}${s}`
            }, t.pick = (e, r, n) => {
                n = Object.assign({
                    parseFragmentIdentifier: !0,
                    [u]: !1
                }, n);
                let {
                    url: i,
                    query: o,
                    fragmentIdentifier: s
                } = t.parseUrl(e, n);
                return t.stringifyUrl({
                    url: i,
                    query: a(o, r),
                    fragmentIdentifier: s
                }, n)
            }, t.exclude = (e, r, n) => {
                let i = Array.isArray(r) ? e => !r.includes(e) : (e, t) => !r(e, t);
                return t.pick(e, i, n)
            }
        },
        25527: function(e, t) {
            "use strict";

            function r(e) {
                let t;
                return "undefined" != typeof window && void 0 !== window[e] && (t = window[e]), t
            }

            function n(e) {
                let t = r(e);
                if (!t) throw Error(`${e} is not defined in Window`);
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLocalStorage = t.getLocalStorageOrThrow = t.getCrypto = t.getCryptoOrThrow = t.getLocation = t.getLocationOrThrow = t.getNavigator = t.getNavigatorOrThrow = t.getDocument = t.getDocumentOrThrow = t.getFromWindowOrThrow = t.getFromWindow = void 0, t.getFromWindow = r, t.getFromWindowOrThrow = n, t.getDocumentOrThrow = function() {
                return n("document")
            }, t.getDocument = function() {
                return r("document")
            }, t.getNavigatorOrThrow = function() {
                return n("navigator")
            }, t.getNavigator = function() {
                return r("navigator")
            }, t.getLocationOrThrow = function() {
                return n("location")
            }, t.getLocation = function() {
                return r("location")
            }, t.getCryptoOrThrow = function() {
                return n("crypto")
            }, t.getCrypto = function() {
                return r("crypto")
            }, t.getLocalStorageOrThrow = function() {
                return n("localStorage")
            }, t.getLocalStorage = function() {
                return r("localStorage")
            }
        },
        70053: function(e, t, r) {
            "use strict";
            t.D = void 0;
            let n = r(25527);
            t.D = function() {
                let e, t, r;
                try {
                    e = n.getDocumentOrThrow(), t = n.getLocationOrThrow()
                } catch (e) {
                    return null
                }

                function i(...t) {
                    let r = e.getElementsByTagName("meta");
                    for (let e = 0; e < r.length; e++) {
                        let n = r[e],
                            i = ["itemprop", "property", "name"].map(e => n.getAttribute(e)).filter(e => !!e && t.includes(e));
                        if (i.length && i) {
                            let e = n.getAttribute("content");
                            if (e) return e
                        }
                    }
                    return ""
                }
                let o = ((r = i("name", "og:site_name", "og:title", "twitter:title")) || (r = e.title), r),
                    a = i("description", "og:description", "twitter:description", "keywords");
                return {
                    description: a,
                    url: t.origin,
                    icons: function() {
                        let r = e.getElementsByTagName("link"),
                            n = [];
                        for (let e = 0; e < r.length; e++) {
                            let i = r[e],
                                o = i.getAttribute("rel");
                            if (o && o.toLowerCase().indexOf("icon") > -1) {
                                let e = i.getAttribute("href");
                                if (e) {
                                    if (-1 === e.toLowerCase().indexOf("https:") && -1 === e.toLowerCase().indexOf("http:") && 0 !== e.indexOf("//")) {
                                        let r = t.protocol + "//" + t.host;
                                        if (0 === e.indexOf("/")) r += e;
                                        else {
                                            let n = t.pathname.split("/");
                                            n.pop(), r += n.join("/") + "/" + e
                                        }
                                        n.push(r)
                                    } else if (0 === e.indexOf("//")) {
                                        let r = t.protocol + e;
                                        n.push(r)
                                    } else n.push(e)
                                }
                            }
                        }
                        return n
                    }(),
                    name: o
                }
            }
        },
        48738: function(e, t) {
            "use strict";
            t.byteLength = function(e) {
                var t = u(e),
                    r = t[0],
                    n = t[1];
                return (r + n) * 3 / 4 - n
            }, t.toByteArray = function(e) {
                var t, r, o = u(e),
                    a = o[0],
                    s = o[1],
                    c = new i((a + s) * 3 / 4 - s),
                    l = 0,
                    d = s > 0 ? a - 4 : a;
                for (r = 0; r < d; r += 4) t = n[e.charCodeAt(r)] << 18 | n[e.charCodeAt(r + 1)] << 12 | n[e.charCodeAt(r + 2)] << 6 | n[e.charCodeAt(r + 3)], c[l++] = t >> 16 & 255, c[l++] = t >> 8 & 255, c[l++] = 255 & t;
                return 2 === s && (t = n[e.charCodeAt(r)] << 2 | n[e.charCodeAt(r + 1)] >> 4, c[l++] = 255 & t), 1 === s && (t = n[e.charCodeAt(r)] << 10 | n[e.charCodeAt(r + 1)] << 4 | n[e.charCodeAt(r + 2)] >> 2, c[l++] = t >> 8 & 255, c[l++] = 255 & t), c
            }, t.fromByteArray = function(e) {
                for (var t, n = e.length, i = n % 3, o = [], a = 0, s = n - i; a < s; a += 16383) o.push(function(e, t, n) {
                    for (var i, o = [], a = t; a < n; a += 3) o.push(r[(i = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2])) >> 18 & 63] + r[i >> 12 & 63] + r[i >> 6 & 63] + r[63 & i]);
                    return o.join("")
                }(e, a, a + 16383 > s ? s : a + 16383));
                return 1 === i ? o.push(r[(t = e[n - 1]) >> 2] + r[t << 4 & 63] + "==") : 2 === i && o.push(r[(t = (e[n - 2] << 8) + e[n - 1]) >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "="), o.join("")
            };
            for (var r = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, s = o.length; a < s; ++a) r[a] = o[a], n[o.charCodeAt(a)] = a;

            function u(e) {
                var t = e.length;
                if (t % 4 > 0) throw Error("Invalid string. Length must be a multiple of 4");
                var r = e.indexOf("="); - 1 === r && (r = t);
                var n = r === t ? 0 : 4 - r % 4;
                return [r, n]
            }
            n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63
        },
        1192: function(e) {
            "use strict";
            for (var t = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", r = {}, n = 0; n < t.length; n++) {
                var i = t.charAt(n);
                if (void 0 !== r[i]) throw TypeError(i + " is ambiguous");
                r[i] = n
            }

            function o(e) {
                var t = e >> 25;
                return (33554431 & e) << 5 ^ 996825010 & -(t >> 0 & 1) ^ 642813549 & -(t >> 1 & 1) ^ 513874426 & -(t >> 2 & 1) ^ 1027748829 & -(t >> 3 & 1) ^ 705979059 & -(t >> 4 & 1)
            }

            function a(e) {
                for (var t = 1, r = 0; r < e.length; ++r) {
                    var n = e.charCodeAt(r);
                    if (n < 33 || n > 126) return "Invalid prefix (" + e + ")";
                    t = o(t) ^ n >> 5
                }
                for (r = 0, t = o(t); r < e.length; ++r) {
                    var i = e.charCodeAt(r);
                    t = o(t) ^ 31 & i
                }
                return t
            }

            function s(e, t) {
                if (t = t || 90, e.length < 8) return e + " too short";
                if (e.length > t) return "Exceeds length limit";
                var n = e.toLowerCase(),
                    i = e.toUpperCase();
                if (e !== n && e !== i) return "Mixed-case string " + e;
                var s = (e = n).lastIndexOf("1");
                if (-1 === s) return "No separator character for " + e;
                if (0 === s) return "Missing prefix for " + e;
                var u = e.slice(0, s),
                    c = e.slice(s + 1);
                if (c.length < 6) return "Data too short";
                var l = a(u);
                if ("string" == typeof l) return l;
                for (var d = [], f = 0; f < c.length; ++f) {
                    var h = c.charAt(f),
                        p = r[h];
                    if (void 0 === p) return "Unknown character " + h;
                    l = o(l) ^ p, f + 6 >= c.length || d.push(p)
                }
                return 1 !== l ? "Invalid checksum for " + e : {
                    prefix: u,
                    words: d
                }
            }

            function u(e, t, r, n) {
                for (var i = 0, o = 0, a = (1 << r) - 1, s = [], u = 0; u < e.length; ++u)
                    for (i = i << t | e[u], o += t; o >= r;) s.push(i >> (o -= r) & a);
                if (n) o > 0 && s.push(i << r - o & a);
                else {
                    if (o >= t) return "Excess padding";
                    if (i << r - o & a) return "Non-zero padding"
                }
                return s
            }
            e.exports = {
                decodeUnsafe: function() {
                    var e = s.apply(null, arguments);
                    if ("object" == typeof e) return e
                },
                decode: function(e) {
                    var t = s.apply(null, arguments);
                    if ("object" == typeof t) return t;
                    throw Error(t)
                },
                encode: function(e, r, n) {
                    if (n = n || 90, e.length + 7 + r.length > n) throw TypeError("Exceeds length limit");
                    var i = a(e = e.toLowerCase());
                    if ("string" == typeof i) throw Error(i);
                    for (var s = e + "1", u = 0; u < r.length; ++u) {
                        var c = r[u];
                        if (c >> 5 != 0) throw Error("Non 5-bit word");
                        i = o(i) ^ c, s += t.charAt(c)
                    }
                    for (u = 0; u < 6; ++u) i = o(i);
                    for (i ^= 1, u = 0; u < 6; ++u) {
                        var l = i >> (5 - u) * 5 & 31;
                        s += t.charAt(l)
                    }
                    return s
                },
                toWordsUnsafe: function(e) {
                    var t = u(e, 8, 5, !0);
                    if (Array.isArray(t)) return t
                },
                toWords: function(e) {
                    var t = u(e, 8, 5, !0);
                    if (Array.isArray(t)) return t;
                    throw Error(t)
                },
                fromWordsUnsafe: function(e) {
                    var t = u(e, 5, 8, !1);
                    if (Array.isArray(t)) return t
                },
                fromWords: function(e) {
                    var t = u(e, 5, 8, !1);
                    if (Array.isArray(t)) return t;
                    throw Error(t)
                }
            }
        },
        58171: function(e, t, r) {
            ! function(e, t) {
                "use strict";

                function n(e, t) {
                    if (!e) throw Error(t || "Assertion failed")
                }

                function i(e, t) {
                    e.super_ = t;
                    var r = function() {};
                    r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
                }

                function o(e, t, r) {
                    if (o.isBN(e)) return e;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && (("le" === t || "be" === t) && (r = t, t = 10), this._init(e || 0, t || 10, r || "be"))
                }
                "object" == typeof e ? e.exports = o : t.BN = o, o.BN = o, o.wordSize = 26;
                try {
                    d = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(46601).Buffer
                } catch (e) {}

                function a(e, t) {
                    var r = e.charCodeAt(t);
                    return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + e)
                }

                function s(e, t, r) {
                    var n = a(e, r);
                    return r - 1 >= t && (n |= a(e, r - 1) << 4), n
                }

                function u(e, t, r, i) {
                    for (var o = 0, a = 0, s = Math.min(e.length, r), u = t; u < s; u++) {
                        var c = e.charCodeAt(u) - 48;
                        o *= i, a = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, n(c >= 0 && a < i, "Invalid character"), o += a
                    }
                    return o
                }

                function c(e, t) {
                    e.words = t.words, e.length = t.length, e.negative = t.negative, e.red = t.red
                }
                if (o.isBN = function(e) {
                        return e instanceof o || null !== e && "object" == typeof e && e.constructor.wordSize === o.wordSize && Array.isArray(e.words)
                    }, o.max = function(e, t) {
                        return e.cmp(t) > 0 ? e : t
                    }, o.min = function(e, t) {
                        return 0 > e.cmp(t) ? e : t
                    }, o.prototype._init = function(e, t, r) {
                        if ("number" == typeof e) return this._initNumber(e, t, r);
                        if ("object" == typeof e) return this._initArray(e, t, r);
                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                        var i = 0;
                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < e.length && (16 === t ? this._parseHex(e, i, r) : (this._parseBase(e, t, i), "le" === r && this._initArray(this.toArray(), t, r)))
                    }, o.prototype._initNumber = function(e, t, r) {
                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [67108863 & e], this.length = 1) : e < 4503599627370496 ? (this.words = [67108863 & e, e / 67108864 & 67108863], this.length = 2) : (n(e < 9007199254740992), this.words = [67108863 & e, e / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r)
                    }, o.prototype._initArray = function(e, t, r) {
                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(e.length / 3), this.words = Array(this.length);
                        for (var i, o, a = 0; a < this.length; a++) this.words[a] = 0;
                        var s = 0;
                        if ("be" === r)
                            for (a = e.length - 1, i = 0; a >= 0; a -= 3) o = e[a] | e[a - 1] << 8 | e[a - 2] << 16, this.words[i] |= o << s & 67108863, this.words[i + 1] = o >>> 26 - s & 67108863, (s += 24) >= 26 && (s -= 26, i++);
                        else if ("le" === r)
                            for (a = 0, i = 0; a < e.length; a += 3) o = e[a] | e[a + 1] << 8 | e[a + 2] << 16, this.words[i] |= o << s & 67108863, this.words[i + 1] = o >>> 26 - s & 67108863, (s += 24) >= 26 && (s -= 26, i++);
                        return this._strip()
                    }, o.prototype._parseHex = function(e, t, r) {
                        this.length = Math.ceil((e.length - t) / 6), this.words = Array(this.length);
                        for (var n, i = 0; i < this.length; i++) this.words[i] = 0;
                        var o = 0,
                            a = 0;
                        if ("be" === r)
                            for (i = e.length - 1; i >= t; i -= 2) n = s(e, t, i) << o, this.words[a] |= 67108863 & n, o >= 18 ? (o -= 18, a += 1, this.words[a] |= n >>> 26) : o += 8;
                        else
                            for (i = (e.length - t) % 2 == 0 ? t + 1 : t; i < e.length; i += 2) n = s(e, t, i) << o, this.words[a] |= 67108863 & n, o >= 18 ? (o -= 18, a += 1, this.words[a] |= n >>> 26) : o += 8;
                        this._strip()
                    }, o.prototype._parseBase = function(e, t, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= t) n++;
                        n--, i = i / t | 0;
                        for (var o = e.length - r, a = o % n, s = Math.min(o, o - a) + r, c = 0, l = r; l < s; l += n) c = u(e, l, l + n, t), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        if (0 !== a) {
                            var d = 1;
                            for (c = u(e, l, e.length, t), l = 0; l < a; l++) d *= t;
                            this.imuln(d), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c)
                        }
                        this._strip()
                    }, o.prototype.copy = function(e) {
                        e.words = Array(this.length);
                        for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
                        e.length = this.length, e.negative = this.negative, e.red = this.red
                    }, o.prototype._move = function(e) {
                        c(e, this)
                    }, o.prototype.clone = function() {
                        var e = new o(null);
                        return this.copy(e), e
                    }, o.prototype._expand = function(e) {
                        for (; this.length < e;) this.words[this.length++] = 0;
                        return this
                    }, o.prototype._strip = function() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    o.prototype[Symbol.for("nodejs.util.inspect.custom")] = l
                } catch (e) {
                    o.prototype.inspect = l
                } else o.prototype.inspect = l;

                function l() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var d, f = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function m(e, t, r) {
                    r.negative = t.negative ^ e.negative;
                    var n = e.length + t.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | e.words[0],
                        o = 0 | t.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, d = 67108863 & u, f = Math.min(c, t.length - 1), h = Math.max(0, c - e.length + 1); h <= f; h++) {
                            var p = c - h | 0;
                            l += (a = (i = 0 | e.words[p]) * (o = 0 | t.words[h]) + d) / 67108864 | 0, d = 67108863 & a
                        }
                        r.words[c] = 0 | d, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip()
                }
                o.prototype.toString = function(e, t) {
                    if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                        r = "";
                        for (var r, i = 0, o = 0, a = 0; a < this.length; a++) {
                            var s = this.words[a],
                                u = ((s << i | o) & 16777215).toString(16);
                            o = s >>> 24 - i & 16777215, (i += 2) >= 26 && (i -= 26, a--), r = 0 !== o || a !== this.length - 1 ? f[6 - u.length] + u + r : u + r
                        }
                        for (0 !== o && (r = o.toString(16) + r); r.length % t != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (e === (0 | e) && e >= 2 && e <= 36) {
                        var c = h[e],
                            l = p[e];
                        r = "";
                        var d = this.clone();
                        for (d.negative = 0; !d.isZero();) {
                            var m = d.modrn(l).toString(e);
                            r = (d = d.idivn(l)).isZero() ? m + r : f[c - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % t != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    n(!1, "Base should be between 2 and 36")
                }, o.prototype.toNumber = function() {
                    var e = this.words[0];
                    return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e
                }, o.prototype.toJSON = function() {
                    return this.toString(16, 2)
                }, d && (o.prototype.toBuffer = function(e, t) {
                    return this.toArrayLike(d, e, t)
                }), o.prototype.toArray = function(e, t) {
                    return this.toArrayLike(Array, e, t)
                }, o.prototype.toArrayLike = function(e, t, r) {
                    this._strip();
                    var i = this.byteLength(),
                        o = r || Math.max(1, i);
                    n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0");
                    var a = e.allocUnsafe ? e.allocUnsafe(o) : new e(o);
                    return this["_toArrayLike" + ("le" === t ? "LE" : "BE")](a, i), a
                }, o.prototype._toArrayLikeLE = function(e, t) {
                    for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        e[r++] = 255 & a, r < e.length && (e[r++] = a >> 8 & 255), r < e.length && (e[r++] = a >> 16 & 255), 6 === o ? (r < e.length && (e[r++] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r < e.length)
                        for (e[r++] = n; r < e.length;) e[r++] = 0
                }, o.prototype._toArrayLikeBE = function(e, t) {
                    for (var r = e.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        e[r--] = 255 & a, r >= 0 && (e[r--] = a >> 8 & 255), r >= 0 && (e[r--] = a >> 16 & 255), 6 === o ? (r >= 0 && (e[r--] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r >= 0)
                        for (e[r--] = n; r >= 0;) e[r--] = 0
                }, Math.clz32 ? o.prototype._countBits = function(e) {
                    return 32 - Math.clz32(e)
                } : o.prototype._countBits = function(e) {
                    var t = e,
                        r = 0;
                    return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t
                }, o.prototype._zeroBits = function(e) {
                    if (0 === e) return 26;
                    var t = e,
                        r = 0;
                    return (8191 & t) == 0 && (r += 13, t >>>= 13), (127 & t) == 0 && (r += 7, t >>>= 7), (15 & t) == 0 && (r += 4, t >>>= 4), (3 & t) == 0 && (r += 2, t >>>= 2), (1 & t) == 0 && r++, r
                }, o.prototype.bitLength = function() {
                    var e = this.words[this.length - 1],
                        t = this._countBits(e);
                    return (this.length - 1) * 26 + t
                }, o.prototype.zeroBits = function() {
                    if (this.isZero()) return 0;
                    for (var e = 0, t = 0; t < this.length; t++) {
                        var r = this._zeroBits(this.words[t]);
                        if (e += r, 26 !== r) break
                    }
                    return e
                }, o.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }, o.prototype.toTwos = function(e) {
                    return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
                }, o.prototype.fromTwos = function(e) {
                    return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
                }, o.prototype.isNeg = function() {
                    return 0 !== this.negative
                }, o.prototype.neg = function() {
                    return this.clone().ineg()
                }, o.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1), this
                }, o.prototype.iuor = function(e) {
                    for (; this.length < e.length;) this.words[this.length++] = 0;
                    for (var t = 0; t < e.length; t++) this.words[t] = this.words[t] | e.words[t];
                    return this._strip()
                }, o.prototype.ior = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuor(e)
                }, o.prototype.or = function(e) {
                    return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
                }, o.prototype.uor = function(e) {
                    return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
                }, o.prototype.iuand = function(e) {
                    var t;
                    t = this.length > e.length ? e : this;
                    for (var r = 0; r < t.length; r++) this.words[r] = this.words[r] & e.words[r];
                    return this.length = t.length, this._strip()
                }, o.prototype.iand = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuand(e)
                }, o.prototype.and = function(e) {
                    return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
                }, o.prototype.uand = function(e) {
                    return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
                }, o.prototype.iuxor = function(e) {
                    this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                    for (var t, r, n = 0; n < r.length; n++) this.words[n] = t.words[n] ^ r.words[n];
                    if (this !== t)
                        for (; n < t.length; n++) this.words[n] = t.words[n];
                    return this.length = t.length, this._strip()
                }, o.prototype.ixor = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuxor(e)
                }, o.prototype.xor = function(e) {
                    return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
                }, o.prototype.uxor = function(e) {
                    return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
                }, o.prototype.inotn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = 0 | Math.ceil(e / 26),
                        r = e % 26;
                    this._expand(t), r > 0 && t--;
                    for (var i = 0; i < t; i++) this.words[i] = 67108863 & ~this.words[i];
                    return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this._strip()
                }, o.prototype.notn = function(e) {
                    return this.clone().inotn(e)
                }, o.prototype.setn = function(e, t) {
                    n("number" == typeof e && e >= 0);
                    var r = e / 26 | 0,
                        i = e % 26;
                    return this._expand(r + 1), t ? this.words[r] = this.words[r] | 1 << i : this.words[r] = this.words[r] & ~(1 << i), this._strip()
                }, o.prototype.iadd = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                    this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                    for (var t, r, n, i = 0, o = 0; o < n.length; o++) t = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & t, i = t >>> 26;
                    for (; 0 !== i && o < r.length; o++) t = (0 | r.words[o]) + i, this.words[o] = 67108863 & t, i = t >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, o.prototype.add = function(e) {
                    var t;
                    return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
                }, o.prototype.isub = function(e) {
                    if (0 !== e.negative) {
                        e.negative = 0;
                        var t, r, n = this.iadd(e);
                        return e.negative = 1, n._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                    var i = this.cmp(e);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (t = this, r = e) : (t = e, r = this);
                    for (var o = 0, a = 0; a < r.length; a++) o = (n = (0 | t.words[a]) - (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & n;
                    for (; 0 !== o && a < t.length; a++) o = (n = (0 | t.words[a]) + o) >> 26, this.words[a] = 67108863 & n;
                    if (0 === o && a < t.length && t !== this)
                        for (; a < t.length; a++) this.words[a] = t.words[a];
                    return this.length = Math.max(this.length, a), t !== this && (this.negative = 1), this._strip()
                }, o.prototype.sub = function(e) {
                    return this.clone().isub(e)
                };
                var g = function(e, t, r) {
                    var n, i, o, a = e.words,
                        s = t.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        d = 8191 & l,
                        f = l >>> 13,
                        h = 0 | a[1],
                        p = 8191 & h,
                        m = h >>> 13,
                        g = 0 | a[2],
                        b = 8191 & g,
                        y = g >>> 13,
                        v = 0 | a[3],
                        w = 8191 & v,
                        E = v >>> 13,
                        A = 0 | a[4],
                        P = 8191 & A,
                        x = A >>> 13,
                        O = 0 | a[5],
                        _ = 8191 & O,
                        I = O >>> 13,
                        T = 0 | a[6],
                        C = 8191 & T,
                        S = T >>> 13,
                        k = 0 | a[7],
                        M = 8191 & k,
                        B = k >>> 13,
                        N = 0 | a[8],
                        R = 8191 & N,
                        D = N >>> 13,
                        j = 0 | a[9],
                        F = 8191 & j,
                        U = j >>> 13,
                        L = 0 | s[0],
                        q = 8191 & L,
                        z = L >>> 13,
                        $ = 0 | s[1],
                        H = 8191 & $,
                        G = $ >>> 13,
                        W = 0 | s[2],
                        K = 8191 & W,
                        Y = W >>> 13,
                        V = 0 | s[3],
                        Q = 8191 & V,
                        J = V >>> 13,
                        Z = 0 | s[4],
                        X = 8191 & Z,
                        ee = Z >>> 13,
                        et = 0 | s[5],
                        er = 8191 & et,
                        en = et >>> 13,
                        ei = 0 | s[6],
                        eo = 8191 & ei,
                        ea = ei >>> 13,
                        es = 0 | s[7],
                        eu = 8191 & es,
                        ec = es >>> 13,
                        el = 0 | s[8],
                        ed = 8191 & el,
                        ef = el >>> 13,
                        eh = 0 | s[9],
                        ep = 8191 & eh,
                        em = eh >>> 13;
                    r.negative = e.negative ^ t.negative, r.length = 19;
                    var eg = (c + (n = Math.imul(d, q)) | 0) + ((8191 & (i = (i = Math.imul(d, z)) + Math.imul(f, q) | 0)) << 13) | 0;
                    c = ((o = Math.imul(f, z)) + (i >>> 13) | 0) + (eg >>> 26) | 0, eg &= 67108863, n = Math.imul(p, q), i = (i = Math.imul(p, z)) + Math.imul(m, q) | 0, o = Math.imul(m, z);
                    var eb = (c + (n = n + Math.imul(d, H) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, G) | 0) + Math.imul(f, H) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, G) | 0) + (i >>> 13) | 0) + (eb >>> 26) | 0, eb &= 67108863, n = Math.imul(b, q), i = (i = Math.imul(b, z)) + Math.imul(y, q) | 0, o = Math.imul(y, z), n = n + Math.imul(p, H) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(m, H) | 0, o = o + Math.imul(m, G) | 0;
                    var ey = (c + (n = n + Math.imul(d, K) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, Y) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, Y) | 0) + (i >>> 13) | 0) + (ey >>> 26) | 0, ey &= 67108863, n = Math.imul(w, q), i = (i = Math.imul(w, z)) + Math.imul(E, q) | 0, o = Math.imul(E, z), n = n + Math.imul(b, H) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(y, H) | 0, o = o + Math.imul(y, G) | 0, n = n + Math.imul(p, K) | 0, i = (i = i + Math.imul(p, Y) | 0) + Math.imul(m, K) | 0, o = o + Math.imul(m, Y) | 0;
                    var ev = (c + (n = n + Math.imul(d, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, J) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, J) | 0) + (i >>> 13) | 0) + (ev >>> 26) | 0, ev &= 67108863, n = Math.imul(P, q), i = (i = Math.imul(P, z)) + Math.imul(x, q) | 0, o = Math.imul(x, z), n = n + Math.imul(w, H) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(E, H) | 0, o = o + Math.imul(E, G) | 0, n = n + Math.imul(b, K) | 0, i = (i = i + Math.imul(b, Y) | 0) + Math.imul(y, K) | 0, o = o + Math.imul(y, Y) | 0, n = n + Math.imul(p, Q) | 0, i = (i = i + Math.imul(p, J) | 0) + Math.imul(m, Q) | 0, o = o + Math.imul(m, J) | 0;
                    var ew = (c + (n = n + Math.imul(d, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ee) | 0) + Math.imul(f, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ee) | 0) + (i >>> 13) | 0) + (ew >>> 26) | 0, ew &= 67108863, n = Math.imul(_, q), i = (i = Math.imul(_, z)) + Math.imul(I, q) | 0, o = Math.imul(I, z), n = n + Math.imul(P, H) | 0, i = (i = i + Math.imul(P, G) | 0) + Math.imul(x, H) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(w, K) | 0, i = (i = i + Math.imul(w, Y) | 0) + Math.imul(E, K) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(b, Q) | 0, i = (i = i + Math.imul(b, J) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, ee) | 0) + Math.imul(m, X) | 0, o = o + Math.imul(m, ee) | 0;
                    var eE = (c + (n = n + Math.imul(d, er) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, en) | 0) + Math.imul(f, er) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, en) | 0) + (i >>> 13) | 0) + (eE >>> 26) | 0, eE &= 67108863, n = Math.imul(C, q), i = (i = Math.imul(C, z)) + Math.imul(S, q) | 0, o = Math.imul(S, z), n = n + Math.imul(_, H) | 0, i = (i = i + Math.imul(_, G) | 0) + Math.imul(I, H) | 0, o = o + Math.imul(I, G) | 0, n = n + Math.imul(P, K) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(x, K) | 0, o = o + Math.imul(x, Y) | 0, n = n + Math.imul(w, Q) | 0, i = (i = i + Math.imul(w, J) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, J) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, ee) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, ee) | 0, n = n + Math.imul(p, er) | 0, i = (i = i + Math.imul(p, en) | 0) + Math.imul(m, er) | 0, o = o + Math.imul(m, en) | 0;
                    var eA = (c + (n = n + Math.imul(d, eo) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ea) | 0) + Math.imul(f, eo) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ea) | 0) + (i >>> 13) | 0) + (eA >>> 26) | 0, eA &= 67108863, n = Math.imul(M, q), i = (i = Math.imul(M, z)) + Math.imul(B, q) | 0, o = Math.imul(B, z), n = n + Math.imul(C, H) | 0, i = (i = i + Math.imul(C, G) | 0) + Math.imul(S, H) | 0, o = o + Math.imul(S, G) | 0, n = n + Math.imul(_, K) | 0, i = (i = i + Math.imul(_, Y) | 0) + Math.imul(I, K) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, J) | 0) + Math.imul(x, Q) | 0, o = o + Math.imul(x, J) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, ee) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, ee) | 0, n = n + Math.imul(b, er) | 0, i = (i = i + Math.imul(b, en) | 0) + Math.imul(y, er) | 0, o = o + Math.imul(y, en) | 0, n = n + Math.imul(p, eo) | 0, i = (i = i + Math.imul(p, ea) | 0) + Math.imul(m, eo) | 0, o = o + Math.imul(m, ea) | 0;
                    var eP = (c + (n = n + Math.imul(d, eu) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ec) | 0) + Math.imul(f, eu) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ec) | 0) + (i >>> 13) | 0) + (eP >>> 26) | 0, eP &= 67108863, n = Math.imul(R, q), i = (i = Math.imul(R, z)) + Math.imul(D, q) | 0, o = Math.imul(D, z), n = n + Math.imul(M, H) | 0, i = (i = i + Math.imul(M, G) | 0) + Math.imul(B, H) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(C, K) | 0, i = (i = i + Math.imul(C, Y) | 0) + Math.imul(S, K) | 0, o = o + Math.imul(S, Y) | 0, n = n + Math.imul(_, Q) | 0, i = (i = i + Math.imul(_, J) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, ee) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, ee) | 0, n = n + Math.imul(w, er) | 0, i = (i = i + Math.imul(w, en) | 0) + Math.imul(E, er) | 0, o = o + Math.imul(E, en) | 0, n = n + Math.imul(b, eo) | 0, i = (i = i + Math.imul(b, ea) | 0) + Math.imul(y, eo) | 0, o = o + Math.imul(y, ea) | 0, n = n + Math.imul(p, eu) | 0, i = (i = i + Math.imul(p, ec) | 0) + Math.imul(m, eu) | 0, o = o + Math.imul(m, ec) | 0;
                    var ex = (c + (n = n + Math.imul(d, ed) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ef) | 0) + Math.imul(f, ed) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, ef) | 0) + (i >>> 13) | 0) + (ex >>> 26) | 0, ex &= 67108863, n = Math.imul(F, q), i = (i = Math.imul(F, z)) + Math.imul(U, q) | 0, o = Math.imul(U, z), n = n + Math.imul(R, H) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(D, H) | 0, o = o + Math.imul(D, G) | 0, n = n + Math.imul(M, K) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(B, K) | 0, o = o + Math.imul(B, Y) | 0, n = n + Math.imul(C, Q) | 0, i = (i = i + Math.imul(C, J) | 0) + Math.imul(S, Q) | 0, o = o + Math.imul(S, J) | 0, n = n + Math.imul(_, X) | 0, i = (i = i + Math.imul(_, ee) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, ee) | 0, n = n + Math.imul(P, er) | 0, i = (i = i + Math.imul(P, en) | 0) + Math.imul(x, er) | 0, o = o + Math.imul(x, en) | 0, n = n + Math.imul(w, eo) | 0, i = (i = i + Math.imul(w, ea) | 0) + Math.imul(E, eo) | 0, o = o + Math.imul(E, ea) | 0, n = n + Math.imul(b, eu) | 0, i = (i = i + Math.imul(b, ec) | 0) + Math.imul(y, eu) | 0, o = o + Math.imul(y, ec) | 0, n = n + Math.imul(p, ed) | 0, i = (i = i + Math.imul(p, ef) | 0) + Math.imul(m, ed) | 0, o = o + Math.imul(m, ef) | 0;
                    var eO = (c + (n = n + Math.imul(d, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, em) | 0) + Math.imul(f, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(f, em) | 0) + (i >>> 13) | 0) + (eO >>> 26) | 0, eO &= 67108863, n = Math.imul(F, H), i = (i = Math.imul(F, G)) + Math.imul(U, H) | 0, o = Math.imul(U, G), n = n + Math.imul(R, K) | 0, i = (i = i + Math.imul(R, Y) | 0) + Math.imul(D, K) | 0, o = o + Math.imul(D, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, J) | 0) + Math.imul(B, Q) | 0, o = o + Math.imul(B, J) | 0, n = n + Math.imul(C, X) | 0, i = (i = i + Math.imul(C, ee) | 0) + Math.imul(S, X) | 0, o = o + Math.imul(S, ee) | 0, n = n + Math.imul(_, er) | 0, i = (i = i + Math.imul(_, en) | 0) + Math.imul(I, er) | 0, o = o + Math.imul(I, en) | 0, n = n + Math.imul(P, eo) | 0, i = (i = i + Math.imul(P, ea) | 0) + Math.imul(x, eo) | 0, o = o + Math.imul(x, ea) | 0, n = n + Math.imul(w, eu) | 0, i = (i = i + Math.imul(w, ec) | 0) + Math.imul(E, eu) | 0, o = o + Math.imul(E, ec) | 0, n = n + Math.imul(b, ed) | 0, i = (i = i + Math.imul(b, ef) | 0) + Math.imul(y, ed) | 0, o = o + Math.imul(y, ef) | 0;
                    var e_ = (c + (n = n + Math.imul(p, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, em) | 0) + Math.imul(m, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(m, em) | 0) + (i >>> 13) | 0) + (e_ >>> 26) | 0, e_ &= 67108863, n = Math.imul(F, K), i = (i = Math.imul(F, Y)) + Math.imul(U, K) | 0, o = Math.imul(U, Y), n = n + Math.imul(R, Q) | 0, i = (i = i + Math.imul(R, J) | 0) + Math.imul(D, Q) | 0, o = o + Math.imul(D, J) | 0, n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, ee) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, ee) | 0, n = n + Math.imul(C, er) | 0, i = (i = i + Math.imul(C, en) | 0) + Math.imul(S, er) | 0, o = o + Math.imul(S, en) | 0, n = n + Math.imul(_, eo) | 0, i = (i = i + Math.imul(_, ea) | 0) + Math.imul(I, eo) | 0, o = o + Math.imul(I, ea) | 0, n = n + Math.imul(P, eu) | 0, i = (i = i + Math.imul(P, ec) | 0) + Math.imul(x, eu) | 0, o = o + Math.imul(x, ec) | 0, n = n + Math.imul(w, ed) | 0, i = (i = i + Math.imul(w, ef) | 0) + Math.imul(E, ed) | 0, o = o + Math.imul(E, ef) | 0;
                    var eI = (c + (n = n + Math.imul(b, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, em) | 0) + Math.imul(y, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, em) | 0) + (i >>> 13) | 0) + (eI >>> 26) | 0, eI &= 67108863, n = Math.imul(F, Q), i = (i = Math.imul(F, J)) + Math.imul(U, Q) | 0, o = Math.imul(U, J), n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, ee) | 0) + Math.imul(D, X) | 0, o = o + Math.imul(D, ee) | 0, n = n + Math.imul(M, er) | 0, i = (i = i + Math.imul(M, en) | 0) + Math.imul(B, er) | 0, o = o + Math.imul(B, en) | 0, n = n + Math.imul(C, eo) | 0, i = (i = i + Math.imul(C, ea) | 0) + Math.imul(S, eo) | 0, o = o + Math.imul(S, ea) | 0, n = n + Math.imul(_, eu) | 0, i = (i = i + Math.imul(_, ec) | 0) + Math.imul(I, eu) | 0, o = o + Math.imul(I, ec) | 0, n = n + Math.imul(P, ed) | 0, i = (i = i + Math.imul(P, ef) | 0) + Math.imul(x, ed) | 0, o = o + Math.imul(x, ef) | 0;
                    var eT = (c + (n = n + Math.imul(w, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, em) | 0) + Math.imul(E, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, em) | 0) + (i >>> 13) | 0) + (eT >>> 26) | 0, eT &= 67108863, n = Math.imul(F, X), i = (i = Math.imul(F, ee)) + Math.imul(U, X) | 0, o = Math.imul(U, ee), n = n + Math.imul(R, er) | 0, i = (i = i + Math.imul(R, en) | 0) + Math.imul(D, er) | 0, o = o + Math.imul(D, en) | 0, n = n + Math.imul(M, eo) | 0, i = (i = i + Math.imul(M, ea) | 0) + Math.imul(B, eo) | 0, o = o + Math.imul(B, ea) | 0, n = n + Math.imul(C, eu) | 0, i = (i = i + Math.imul(C, ec) | 0) + Math.imul(S, eu) | 0, o = o + Math.imul(S, ec) | 0, n = n + Math.imul(_, ed) | 0, i = (i = i + Math.imul(_, ef) | 0) + Math.imul(I, ed) | 0, o = o + Math.imul(I, ef) | 0;
                    var eC = (c + (n = n + Math.imul(P, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, em) | 0) + Math.imul(x, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(x, em) | 0) + (i >>> 13) | 0) + (eC >>> 26) | 0, eC &= 67108863, n = Math.imul(F, er), i = (i = Math.imul(F, en)) + Math.imul(U, er) | 0, o = Math.imul(U, en), n = n + Math.imul(R, eo) | 0, i = (i = i + Math.imul(R, ea) | 0) + Math.imul(D, eo) | 0, o = o + Math.imul(D, ea) | 0, n = n + Math.imul(M, eu) | 0, i = (i = i + Math.imul(M, ec) | 0) + Math.imul(B, eu) | 0, o = o + Math.imul(B, ec) | 0, n = n + Math.imul(C, ed) | 0, i = (i = i + Math.imul(C, ef) | 0) + Math.imul(S, ed) | 0, o = o + Math.imul(S, ef) | 0;
                    var eS = (c + (n = n + Math.imul(_, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(_, em) | 0) + Math.imul(I, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, em) | 0) + (i >>> 13) | 0) + (eS >>> 26) | 0, eS &= 67108863, n = Math.imul(F, eo), i = (i = Math.imul(F, ea)) + Math.imul(U, eo) | 0, o = Math.imul(U, ea), n = n + Math.imul(R, eu) | 0, i = (i = i + Math.imul(R, ec) | 0) + Math.imul(D, eu) | 0, o = o + Math.imul(D, ec) | 0, n = n + Math.imul(M, ed) | 0, i = (i = i + Math.imul(M, ef) | 0) + Math.imul(B, ed) | 0, o = o + Math.imul(B, ef) | 0;
                    var ek = (c + (n = n + Math.imul(C, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(C, em) | 0) + Math.imul(S, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(S, em) | 0) + (i >>> 13) | 0) + (ek >>> 26) | 0, ek &= 67108863, n = Math.imul(F, eu), i = (i = Math.imul(F, ec)) + Math.imul(U, eu) | 0, o = Math.imul(U, ec), n = n + Math.imul(R, ed) | 0, i = (i = i + Math.imul(R, ef) | 0) + Math.imul(D, ed) | 0, o = o + Math.imul(D, ef) | 0;
                    var eM = (c + (n = n + Math.imul(M, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, em) | 0) + Math.imul(B, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(B, em) | 0) + (i >>> 13) | 0) + (eM >>> 26) | 0, eM &= 67108863, n = Math.imul(F, ed), i = (i = Math.imul(F, ef)) + Math.imul(U, ed) | 0, o = Math.imul(U, ef);
                    var eB = (c + (n = n + Math.imul(R, ep) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, em) | 0) + Math.imul(D, ep) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(D, em) | 0) + (i >>> 13) | 0) + (eB >>> 26) | 0, eB &= 67108863;
                    var eN = (c + (n = Math.imul(F, ep)) | 0) + ((8191 & (i = (i = Math.imul(F, em)) + Math.imul(U, ep) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(U, em)) + (i >>> 13) | 0) + (eN >>> 26) | 0, eN &= 67108863, u[0] = eg, u[1] = eb, u[2] = ey, u[3] = ev, u[4] = ew, u[5] = eE, u[6] = eA, u[7] = eP, u[8] = ex, u[9] = eO, u[10] = e_, u[11] = eI, u[12] = eT, u[13] = eC, u[14] = eS, u[15] = ek, u[16] = eM, u[17] = eB, u[18] = eN, 0 !== c && (u[19] = c, r.length++), r
                };

                function b(e, t, r) {
                    r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                    for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                        var a = i;
                        i = 0;
                        for (var s = 67108863 & n, u = Math.min(o, t.length - 1), c = Math.max(0, o - e.length + 1); c <= u; c++) {
                            var l = o - c,
                                d = (0 | e.words[l]) * (0 | t.words[c]),
                                f = 67108863 & d;
                            a = a + (d / 67108864 | 0) | 0, s = 67108863 & (f = f + s | 0), i += (a = a + (f >>> 26) | 0) >>> 26, a &= 67108863
                        }
                        r.words[o] = s, n = a, a = i
                    }
                    return 0 !== n ? r.words[o] = n : r.length--, r._strip()
                }

                function y(e, t) {
                    this.x = e, this.y = t
                }
                Math.imul || (g = m), o.prototype.mulTo = function(e, t) {
                    var r, n = this.length + e.length;
                    return 10 === this.length && 10 === e.length ? g(this, e, t) : n < 63 ? m(this, e, t) : b(this, e, t)
                }, y.prototype.makeRBT = function(e) {
                    for (var t = Array(e), r = o.prototype._countBits(e) - 1, n = 0; n < e; n++) t[n] = this.revBin(n, r, e);
                    return t
                }, y.prototype.revBin = function(e, t, r) {
                    if (0 === e || e === r - 1) return e;
                    for (var n = 0, i = 0; i < t; i++) n |= (1 & e) << t - i - 1, e >>= 1;
                    return n
                }, y.prototype.permute = function(e, t, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = t[e[a]], i[a] = r[e[a]]
                }, y.prototype.transform = function(e, t, r, n, i, o) {
                    this.permute(o, e, t, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var d = u, f = c, h = 0; h < a; h++) {
                                var p = r[l + h],
                                    m = n[l + h],
                                    g = r[l + h + a],
                                    b = n[l + h + a],
                                    y = d * g - f * b;
                                b = d * b + f * g, g = y, r[l + h] = p + g, n[l + h] = m + b, r[l + h + a] = p - g, n[l + h + a] = m - b, h !== s && (y = u * d - c * f, f = u * f + c * d, d = y)
                            }
                }, y.prototype.guessLen13b = function(e, t) {
                    var r = 1 | Math.max(t, e),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, y.prototype.conjugate = function(e, t, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = e[n];
                            e[n] = e[r - n - 1], e[r - n - 1] = i, i = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -i
                        }
                }, y.prototype.normalize13b = function(e, t) {
                    for (var r = 0, n = 0; n < t / 2; n++) {
                        var i = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                        e[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return e
                }, y.prototype.convert13b = function(e, t, r, i) {
                    for (var o = 0, a = 0; a < t; a++) o += 0 | e[a], r[2 * a] = 8191 & o, o >>>= 13, r[2 * a + 1] = 8191 & o, o >>>= 13;
                    for (a = 2 * t; a < i; ++a) r[a] = 0;
                    n(0 === o), n((-8192 & o) == 0)
                }, y.prototype.stub = function(e) {
                    for (var t = Array(e), r = 0; r < e; r++) t[r] = 0;
                    return t
                }, y.prototype.mulp = function(e, t, r) {
                    var n = 2 * this.guessLen13b(e.length, t.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = Array(n),
                        s = Array(n),
                        u = Array(n),
                        c = Array(n),
                        l = Array(n),
                        d = Array(n),
                        f = r.words;
                    f.length = n, this.convert13b(e.words, e.length, a, n), this.convert13b(t.words, t.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, d, n, i);
                    for (var h = 0; h < n; h++) {
                        var p = s[h] * l[h] - u[h] * d[h];
                        u[h] = s[h] * d[h] + u[h] * l[h], s[h] = p
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, f, o, n, i), this.conjugate(f, o, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r._strip()
                }, o.prototype.mul = function(e) {
                    var t = new o(null);
                    return t.words = Array(this.length + e.length), this.mulTo(e, t)
                }, o.prototype.mulf = function(e) {
                    var t = new o(null);
                    return t.words = Array(this.length + e.length), b(this, e, t)
                }, o.prototype.imul = function(e) {
                    return this.clone().mulTo(e, this)
                }, o.prototype.imuln = function(e) {
                    var t = e < 0;
                    t && (e = -e), n("number" == typeof e), n(e < 67108864);
                    for (var r = 0, i = 0; i < this.length; i++) {
                        var o = (0 | this.words[i]) * e,
                            a = (67108863 & o) + (67108863 & r);
                        r >>= 26, r += (o / 67108864 | 0) + (a >>> 26), this.words[i] = 67108863 & a
                    }
                    return 0 !== r && (this.words[i] = r, this.length++), t ? this.ineg() : this
                }, o.prototype.muln = function(e) {
                    return this.clone().imuln(e)
                }, o.prototype.sqr = function() {
                    return this.mul(this)
                }, o.prototype.isqr = function() {
                    return this.imul(this.clone())
                }, o.prototype.pow = function(e) {
                    var t = function(e) {
                        for (var t = Array(e.bitLength()), r = 0; r < t.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            t[r] = e.words[n] >>> i & 1
                        }
                        return t
                    }(e);
                    if (0 === t.length) return new o(1);
                    for (var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                    if (++n < t.length)
                        for (var i = r.sqr(); n < t.length; n++, i = i.sqr()) 0 !== t[n] && (r = r.mul(i));
                    return r
                }, o.prototype.iushln = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t, r = e % 26,
                        i = (e - r) / 26,
                        o = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var a = 0;
                        for (t = 0; t < this.length; t++) {
                            var s = this.words[t] & o,
                                u = (0 | this.words[t]) - s << r;
                            this.words[t] = u | a, a = s >>> 26 - r
                        }
                        a && (this.words[t] = a, this.length++)
                    }
                    if (0 !== i) {
                        for (t = this.length - 1; t >= 0; t--) this.words[t + i] = this.words[t];
                        for (t = 0; t < i; t++) this.words[t] = 0;
                        this.length += i
                    }
                    return this._strip()
                }, o.prototype.ishln = function(e) {
                    return n(0 === this.negative), this.iushln(e)
                }, o.prototype.iushrn = function(e, t, r) {
                    n("number" == typeof e && e >= 0), i = t ? (t - t % 26) / 26 : 0;
                    var i, o = e % 26,
                        a = Math.min((e - o) / 26, this.length),
                        s = 67108863 ^ 67108863 >>> o << o;
                    if (i -= a, i = Math.max(0, i), r) {
                        for (var u = 0; u < a; u++) r.words[u] = this.words[u];
                        r.length = a
                    }
                    if (0 === a);
                    else if (this.length > a)
                        for (this.length -= a, u = 0; u < this.length; u++) this.words[u] = this.words[u + a];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= i); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - o | l >>> o, c = l & s
                    }
                    return r && 0 !== c && (r.words[r.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, o.prototype.ishrn = function(e, t, r) {
                    return n(0 === this.negative), this.iushrn(e, t, r)
                }, o.prototype.shln = function(e) {
                    return this.clone().ishln(e)
                }, o.prototype.ushln = function(e) {
                    return this.clone().iushln(e)
                }, o.prototype.shrn = function(e) {
                    return this.clone().ishrn(e)
                }, o.prototype.ushrn = function(e) {
                    return this.clone().iushrn(e)
                }, o.prototype.testn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = e % 26,
                        r = (e - t) / 26;
                    return !(this.length <= r) && !!(this.words[r] & 1 << t)
                }, o.prototype.imaskn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = e % 26,
                        r = (e - t) / 26;
                    return (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) ? this : (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t && (this.words[this.length - 1] &= 67108863 ^ 67108863 >>> t << t), this._strip())
                }, o.prototype.maskn = function(e) {
                    return this.clone().imaskn(e)
                }, o.prototype.iaddn = function(e) {
                    return (n("number" == typeof e), n(e < 67108864), e < 0) ? this.isubn(-e) : 0 !== this.negative ? (1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0) : (this.negative = 0, this.isubn(e), this.negative = 1), this) : this._iaddn(e)
                }, o.prototype._iaddn = function(e) {
                    this.words[0] += e;
                    for (var t = 0; t < this.length && this.words[t] >= 67108864; t++) this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                    return this.length = Math.max(this.length, t + 1), this
                }, o.prototype.isubn = function(e) {
                    if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                    if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var t = 0; t < this.length && this.words[t] < 0; t++) this.words[t] += 67108864, this.words[t + 1] -= 1;
                    return this._strip()
                }, o.prototype.addn = function(e) {
                    return this.clone().iaddn(e)
                }, o.prototype.subn = function(e) {
                    return this.clone().isubn(e)
                }, o.prototype.iabs = function() {
                    return this.negative = 0, this
                }, o.prototype.abs = function() {
                    return this.clone().iabs()
                }, o.prototype._ishlnsubmul = function(e, t, r) {
                    var i, o, a = e.length + r;
                    this._expand(a);
                    var s = 0;
                    for (i = 0; i < e.length; i++) {
                        o = (0 | this.words[i + r]) + s;
                        var u = (0 | e.words[i]) * t;
                        o -= 67108863 & u, s = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                    }
                    for (; i < this.length - r; i++) s = (o = (0 | this.words[i + r]) + s) >> 26, this.words[i + r] = 67108863 & o;
                    if (0 === s) return this._strip();
                    for (n(-1 === s), s = 0, i = 0; i < this.length; i++) s = (o = -(0 | this.words[i]) + s) >> 26, this.words[i] = 67108863 & o;
                    return this.negative = 1, this._strip()
                }, o.prototype._wordDiv = function(e, t) {
                    var r, n = this.length - e.length,
                        i = this.clone(),
                        a = e,
                        s = 0 | a.words[a.length - 1];
                    0 != (n = 26 - this._countBits(s)) && (a = a.ushln(n), i.iushln(n), s = 0 | a.words[a.length - 1]);
                    var u = i.length - a.length;
                    if ("mod" !== t) {
                        (r = new o(null)).length = u + 1, r.words = Array(r.length);
                        for (var c = 0; c < r.length; c++) r.words[c] = 0
                    }
                    var l = i.clone()._ishlnsubmul(a, 1, u);
                    0 === l.negative && (i = l, r && (r.words[u] = 1));
                    for (var d = u - 1; d >= 0; d--) {
                        var f = (0 | i.words[a.length + d]) * 67108864 + (0 | i.words[a.length + d - 1]);
                        for (f = Math.min(f / s | 0, 67108863), i._ishlnsubmul(a, f, d); 0 !== i.negative;) f--, i.negative = 0, i._ishlnsubmul(a, 1, d), i.isZero() || (i.negative ^= 1);
                        r && (r.words[d] = f)
                    }
                    return r && r._strip(), i._strip(), "div" !== t && 0 !== n && i.iushrn(n), {
                        div: r || null,
                        mod: i
                    }
                }, o.prototype.divmod = function(e, t, r) {
                    var i, a, s;
                    return (n(!e.isZero()), this.isZero()) ? {
                        div: new o(0),
                        mod: new o(0)
                    } : 0 !== this.negative && 0 === e.negative ? (s = this.neg().divmod(e, t), "mod" !== t && (i = s.div.neg()), "div" !== t && (a = s.mod.neg(), r && 0 !== a.negative && a.iadd(e)), {
                        div: i,
                        mod: a
                    }) : 0 === this.negative && 0 !== e.negative ? (s = this.divmod(e.neg(), t), "mod" !== t && (i = s.div.neg()), {
                        div: i,
                        mod: s.mod
                    }) : (this.negative & e.negative) != 0 ? (s = this.neg().divmod(e.neg(), t), "div" !== t && (a = s.mod.neg(), r && 0 !== a.negative && a.isub(e)), {
                        div: s.div,
                        mod: a
                    }) : e.length > this.length || 0 > this.cmp(e) ? {
                        div: new o(0),
                        mod: this
                    } : 1 === e.length ? "div" === t ? {
                        div: this.divn(e.words[0]),
                        mod: null
                    } : "mod" === t ? {
                        div: null,
                        mod: new o(this.modrn(e.words[0]))
                    } : {
                        div: this.divn(e.words[0]),
                        mod: new o(this.modrn(e.words[0]))
                    } : this._wordDiv(e, t)
                }, o.prototype.div = function(e) {
                    return this.divmod(e, "div", !1).div
                }, o.prototype.mod = function(e) {
                    return this.divmod(e, "mod", !1).mod
                }, o.prototype.umod = function(e) {
                    return this.divmod(e, "mod", !0).mod
                }, o.prototype.divRound = function(e) {
                    var t = this.divmod(e);
                    if (t.mod.isZero()) return t.div;
                    var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
                        n = e.ushrn(1),
                        i = e.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1)
                }, o.prototype.modrn = function(e) {
                    var t = e < 0;
                    t && (e = -e), n(e <= 67108863);
                    for (var r = 67108864 % e, i = 0, o = this.length - 1; o >= 0; o--) i = (r * i + (0 | this.words[o])) % e;
                    return t ? -i : i
                }, o.prototype.modn = function(e) {
                    return this.modrn(e)
                }, o.prototype.idivn = function(e) {
                    var t = e < 0;
                    t && (e = -e), n(e <= 67108863);
                    for (var r = 0, i = this.length - 1; i >= 0; i--) {
                        var o = (0 | this.words[i]) + 67108864 * r;
                        this.words[i] = o / e | 0, r = o % e
                    }
                    return this._strip(), t ? this.ineg() : this
                }, o.prototype.divn = function(e) {
                    return this.clone().idivn(e)
                }, o.prototype.egcd = function(e) {
                    n(0 === e.negative), n(!e.isZero());
                    var t = this,
                        r = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var i = new o(1), a = new o(0), s = new o(0), u = new o(1), c = 0; t.isEven() && r.isEven();) t.iushrn(1), r.iushrn(1), ++c;
                    for (var l = r.clone(), d = t.clone(); !t.isZero();) {
                        for (var f = 0, h = 1;
                            (t.words[0] & h) == 0 && f < 26; ++f, h <<= 1);
                        if (f > 0)
                            for (t.iushrn(f); f-- > 0;)(i.isOdd() || a.isOdd()) && (i.iadd(l), a.isub(d)), i.iushrn(1), a.iushrn(1);
                        for (var p = 0, m = 1;
                            (r.words[0] & m) == 0 && p < 26; ++p, m <<= 1);
                        if (p > 0)
                            for (r.iushrn(p); p-- > 0;)(s.isOdd() || u.isOdd()) && (s.iadd(l), u.isub(d)), s.iushrn(1), u.iushrn(1);
                        t.cmp(r) >= 0 ? (t.isub(r), i.isub(s), a.isub(u)) : (r.isub(t), s.isub(i), u.isub(a))
                    }
                    return {
                        a: s,
                        b: u,
                        gcd: r.iushln(c)
                    }
                }, o.prototype._invmp = function(e) {
                    n(0 === e.negative), n(!e.isZero());
                    var t, r = this,
                        i = e.clone();
                    r = 0 !== r.negative ? r.umod(e) : r.clone();
                    for (var a = new o(1), s = new o(0), u = i.clone(); r.cmpn(1) > 0 && i.cmpn(1) > 0;) {
                        for (var c = 0, l = 1;
                            (r.words[0] & l) == 0 && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) a.isOdd() && a.iadd(u), a.iushrn(1);
                        for (var d = 0, f = 1;
                            (i.words[0] & f) == 0 && d < 26; ++d, f <<= 1);
                        if (d > 0)
                            for (i.iushrn(d); d-- > 0;) s.isOdd() && s.iadd(u), s.iushrn(1);
                        r.cmp(i) >= 0 ? (r.isub(i), a.isub(s)) : (i.isub(r), s.isub(a))
                    }
                    return 0 > (t = 0 === r.cmpn(1) ? a : s).cmpn(0) && t.iadd(e), t
                }, o.prototype.gcd = function(e) {
                    if (this.isZero()) return e.abs();
                    if (e.isZero()) return this.abs();
                    var t = this.clone(),
                        r = e.clone();
                    t.negative = 0, r.negative = 0;
                    for (var n = 0; t.isEven() && r.isEven(); n++) t.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; t.isEven();) t.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = t.cmp(r);
                        if (i < 0) {
                            var o = t;
                            t = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        t.isub(r)
                    }
                    return r.iushln(n)
                }, o.prototype.invm = function(e) {
                    return this.egcd(e).a.umod(e)
                }, o.prototype.isEven = function() {
                    return (1 & this.words[0]) == 0
                }, o.prototype.isOdd = function() {
                    return (1 & this.words[0]) == 1
                }, o.prototype.andln = function(e) {
                    return this.words[0] & e
                }, o.prototype.bincn = function(e) {
                    n("number" == typeof e);
                    var t = e % 26,
                        r = (e - t) / 26,
                        i = 1 << t;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                    for (var o = i, a = r; 0 !== o && a < this.length; a++) {
                        var s = 0 | this.words[a];
                        s += o, o = s >>> 26, s &= 67108863, this.words[a] = s
                    }
                    return 0 !== o && (this.words[a] = o, this.length++), this
                }, o.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }, o.prototype.cmpn = function(e) {
                    var t, r = e < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this._strip(), this.length > 1) t = 1;
                    else {
                        r && (e = -e), n(e <= 67108863, "Number is too big");
                        var i = 0 | this.words[0];
                        t = i === e ? 0 : i < e ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -t : t
                }, o.prototype.cmp = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return -1;
                    if (0 === this.negative && 0 !== e.negative) return 1;
                    var t = this.ucmp(e);
                    return 0 !== this.negative ? 0 | -t : t
                }, o.prototype.ucmp = function(e) {
                    if (this.length > e.length) return 1;
                    if (this.length < e.length) return -1;
                    for (var t = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | e.words[r];
                        if (n !== i) {
                            n < i ? t = -1 : n > i && (t = 1);
                            break
                        }
                    }
                    return t
                }, o.prototype.gtn = function(e) {
                    return 1 === this.cmpn(e)
                }, o.prototype.gt = function(e) {
                    return 1 === this.cmp(e)
                }, o.prototype.gten = function(e) {
                    return this.cmpn(e) >= 0
                }, o.prototype.gte = function(e) {
                    return this.cmp(e) >= 0
                }, o.prototype.ltn = function(e) {
                    return -1 === this.cmpn(e)
                }, o.prototype.lt = function(e) {
                    return -1 === this.cmp(e)
                }, o.prototype.lten = function(e) {
                    return 0 >= this.cmpn(e)
                }, o.prototype.lte = function(e) {
                    return 0 >= this.cmp(e)
                }, o.prototype.eqn = function(e) {
                    return 0 === this.cmpn(e)
                }, o.prototype.eq = function(e) {
                    return 0 === this.cmp(e)
                }, o.red = function(e) {
                    return new O(e)
                }, o.prototype.toRed = function(e) {
                    return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e)
                }, o.prototype.fromRed = function() {
                    return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, o.prototype._forceRed = function(e) {
                    return this.red = e, this
                }, o.prototype.forceRed = function(e) {
                    return n(!this.red, "Already a number in reduction context"), this._forceRed(e)
                }, o.prototype.redAdd = function(e) {
                    return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e)
                }, o.prototype.redIAdd = function(e) {
                    return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e)
                }, o.prototype.redSub = function(e) {
                    return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e)
                }, o.prototype.redISub = function(e) {
                    return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e)
                }, o.prototype.redShl = function(e) {
                    return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e)
                }, o.prototype.redMul = function(e) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e)
                }, o.prototype.redIMul = function(e) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e)
                }, o.prototype.redSqr = function() {
                    return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, o.prototype.redISqr = function() {
                    return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, o.prototype.redSqrt = function() {
                    return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, o.prototype.redInvm = function() {
                    return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, o.prototype.redNeg = function() {
                    return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, o.prototype.redPow = function(e) {
                    return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e)
                };
                var v = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function w(e, t) {
                    this.name = e, this.p = new o(t, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function E() {
                    w.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function A() {
                    w.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P() {
                    w.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function x() {
                    w.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function O(e) {
                    if ("string" == typeof e) {
                        var t = o._prime(e);
                        this.m = t.p, this.prime = t
                    } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null
                }

                function _(e) {
                    O.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                w.prototype._tmp = function() {
                    var e = new o(null);
                    return e.words = Array(Math.ceil(this.n / 13)), e
                }, w.prototype.ireduce = function(e) {
                    var t, r = e;
                    do this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength(); while (t > this.n);
                    var n = t < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, w.prototype.split = function(e, t) {
                    e.iushrn(this.n, 0, t)
                }, w.prototype.imulK = function(e) {
                    return e.imul(this.k)
                }, i(E, w), E.prototype.split = function(e, t) {
                    for (var r = Math.min(e.length, 9), n = 0; n < r; n++) t.words[n] = e.words[n];
                    if (t.length = r, e.length <= 9) {
                        e.words[0] = 0, e.length = 1;
                        return
                    }
                    var i = e.words[9];
                    for (n = 10, t.words[t.length++] = 4194303 & i; n < e.length; n++) {
                        var o = 0 | e.words[n];
                        e.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, e.words[n - 10] = i, 0 === i && e.length > 10 ? e.length -= 10 : e.length -= 9
                }, E.prototype.imulK = function(e) {
                    e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var n = 0 | e.words[r];
                        t += 977 * n, e.words[r] = 67108863 & t, t = 64 * n + (t / 67108864 | 0)
                    }
                    return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e
                }, i(A, w), i(P, w), i(x, w), x.prototype.imulK = function(e) {
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var n = (0 | e.words[r]) * 19 + t,
                            i = 67108863 & n;
                        n >>>= 26, e.words[r] = i, t = n
                    }
                    return 0 !== t && (e.words[e.length++] = t), e
                }, o._prime = function(e) {
                    var t;
                    if (v[e]) return v[e];
                    if ("k256" === e) t = new E;
                    else if ("p224" === e) t = new A;
                    else if ("p192" === e) t = new P;
                    else if ("p25519" === e) t = new x;
                    else throw Error("Unknown prime " + e);
                    return v[e] = t, t
                }, O.prototype._verify1 = function(e) {
                    n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers")
                }, O.prototype._verify2 = function(e, t) {
                    n((e.negative | t.negative) == 0, "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers")
                }, O.prototype.imod = function(e) {
                    return this.prime ? this.prime.ireduce(e)._forceRed(this) : (c(e, e.umod(this.m)._forceRed(this)), e)
                }, O.prototype.neg = function(e) {
                    return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
                }, O.prototype.add = function(e, t) {
                    this._verify2(e, t);
                    var r = e.add(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, O.prototype.iadd = function(e, t) {
                    this._verify2(e, t);
                    var r = e.iadd(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, O.prototype.sub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.sub(t);
                    return 0 > r.cmpn(0) && r.iadd(this.m), r._forceRed(this)
                }, O.prototype.isub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.isub(t);
                    return 0 > r.cmpn(0) && r.iadd(this.m), r
                }, O.prototype.shl = function(e, t) {
                    return this._verify1(e), this.imod(e.ushln(t))
                }, O.prototype.imul = function(e, t) {
                    return this._verify2(e, t), this.imod(e.imul(t))
                }, O.prototype.mul = function(e, t) {
                    return this._verify2(e, t), this.imod(e.mul(t))
                }, O.prototype.isqr = function(e) {
                    return this.imul(e, e.clone())
                }, O.prototype.sqr = function(e) {
                    return this.mul(e, e)
                }, O.prototype.sqrt = function(e) {
                    if (e.isZero()) return e.clone();
                    var t = this.m.andln(3);
                    if (n(t % 2 == 1), 3 === t) {
                        var r = this.m.add(new o(1)).iushrn(2);
                        return this.pow(e, r)
                    }
                    for (var i = this.m.subn(1), a = 0; !i.isZero() && 0 === i.andln(1);) a++, i.iushrn(1);
                    n(!i.isZero());
                    var s = new o(1).toRed(this),
                        u = s.redNeg(),
                        c = this.m.subn(1).iushrn(1),
                        l = this.m.bitLength();
                    for (l = new o(2 * l * l).toRed(this); 0 !== this.pow(l, c).cmp(u);) l.redIAdd(u);
                    for (var d = this.pow(l, i), f = this.pow(e, i.addn(1).iushrn(1)), h = this.pow(e, i), p = a; 0 !== h.cmp(s);) {
                        for (var m = h, g = 0; 0 !== m.cmp(s); g++) m = m.redSqr();
                        n(g < p);
                        var b = this.pow(d, new o(1).iushln(p - g - 1));
                        f = f.redMul(b), d = b.redSqr(), h = h.redMul(d), p = g
                    }
                    return f
                }, O.prototype.invm = function(e) {
                    var t = e._invmp(this.m);
                    return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t)
                }, O.prototype.pow = function(e, t) {
                    if (t.isZero()) return new o(1).toRed(this);
                    if (0 === t.cmpn(1)) return e.clone();
                    var r = Array(16);
                    r[0] = new o(1).toRed(this), r[1] = e;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], e);
                    var i = r[0],
                        a = 0,
                        s = 0,
                        u = t.bitLength() % 26;
                    for (0 === u && (u = 26), n = t.length - 1; n >= 0; n--) {
                        for (var c = t.words[n], l = u - 1; l >= 0; l--) {
                            var d = c >> l & 1;
                            if (i !== r[0] && (i = this.sqr(i)), 0 === d && 0 === a) {
                                s = 0;
                                continue
                            }
                            a <<= 1, a |= d, (4 == ++s || 0 === n && 0 === l) && (i = this.mul(i, r[a]), s = 0, a = 0)
                        }
                        u = 26
                    }
                    return i
                }, O.prototype.convertTo = function(e) {
                    var t = e.umod(this.m);
                    return t === e ? t.clone() : t
                }, O.prototype.convertFrom = function(e) {
                    var t = e.clone();
                    return t.red = null, t
                }, o.mont = function(e) {
                    return new _(e)
                }, i(_, O), _.prototype.convertTo = function(e) {
                    return this.imod(e.ushln(this.shift))
                }, _.prototype.convertFrom = function(e) {
                    var t = this.imod(e.mul(this.rinv));
                    return t.red = null, t
                }, _.prototype.imul = function(e, t) {
                    if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                    var r = e.imul(t),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : 0 > i.cmpn(0) && (o = i.iadd(this.m)), o._forceRed(this)
                }, _.prototype.mul = function(e, t) {
                    if (e.isZero() || t.isZero()) return new o(0)._forceRed(this);
                    var r = e.mul(t),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        a = i;
                    return i.cmp(this.m) >= 0 ? a = i.isub(this.m) : 0 > i.cmpn(0) && (a = i.iadd(this.m)), a._forceRed(this)
                }, _.prototype.invm = function(e) {
                    return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(e = r.nmd(e), this)
        },
        9109: function(e, t, r) {
            "use strict";
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author Feross Aboukhadijeh <https://feross.org>
             * @license MIT
             */
            let n = r(48738),
                i = r(6868),
                o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;

            function a(e) {
                if (e > 2147483647) throw RangeError('The value "' + e + '" is invalid for option "size"');
                let t = new Uint8Array(e);
                return Object.setPrototypeOf(t, s.prototype), t
            }

            function s(e, t, r) {
                if ("number" == typeof e) {
                    if ("string" == typeof t) throw TypeError('The "string" argument must be of type string. Received type number');
                    return l(e)
                }
                return u(e, t, r)
            }

            function u(e, t, r) {
                if ("string" == typeof e) return function(e, t) {
                    if (("string" != typeof t || "" === t) && (t = "utf8"), !s.isEncoding(t)) throw TypeError("Unknown encoding: " + t);
                    let r = 0 | p(e, t),
                        n = a(r),
                        i = n.write(e, t);
                    return i !== r && (n = n.slice(0, i)), n
                }(e, t);
                if (ArrayBuffer.isView(e)) return function(e) {
                    if (j(e, Uint8Array)) {
                        let t = new Uint8Array(e);
                        return f(t.buffer, t.byteOffset, t.byteLength)
                    }
                    return d(e)
                }(e);
                if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                if (j(e, ArrayBuffer) || e && j(e.buffer, ArrayBuffer) || "undefined" != typeof SharedArrayBuffer && (j(e, SharedArrayBuffer) || e && j(e.buffer, SharedArrayBuffer))) return f(e, t, r);
                if ("number" == typeof e) throw TypeError('The "value" argument must not be of type number. Received type number');
                let n = e.valueOf && e.valueOf();
                if (null != n && n !== e) return s.from(n, t, r);
                let i = function(e) {
                    var t;
                    if (s.isBuffer(e)) {
                        let t = 0 | h(e.length),
                            r = a(t);
                        return 0 === r.length || e.copy(r, 0, 0, t), r
                    }
                    return void 0 !== e.length ? "number" != typeof e.length || (t = e.length) != t ? a(0) : d(e) : "Buffer" === e.type && Array.isArray(e.data) ? d(e.data) : void 0
                }(e);
                if (i) return i;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return s.from(e[Symbol.toPrimitive]("string"), t, r);
                throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
            }

            function c(e) {
                if ("number" != typeof e) throw TypeError('"size" argument must be of type number');
                if (e < 0) throw RangeError('The value "' + e + '" is invalid for option "size"')
            }

            function l(e) {
                return c(e), a(e < 0 ? 0 : 0 | h(e))
            }

            function d(e) {
                let t = e.length < 0 ? 0 : 0 | h(e.length),
                    r = a(t);
                for (let n = 0; n < t; n += 1) r[n] = 255 & e[n];
                return r
            }

            function f(e, t, r) {
                let n;
                if (t < 0 || e.byteLength < t) throw RangeError('"offset" is outside of buffer bounds');
                if (e.byteLength < t + (r || 0)) throw RangeError('"length" is outside of buffer bounds');
                return Object.setPrototypeOf(n = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, t) : new Uint8Array(e, t, r), s.prototype), n
            }

            function h(e) {
                if (e >= 2147483647) throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
                return 0 | e
            }

            function p(e, t) {
                if (s.isBuffer(e)) return e.length;
                if (ArrayBuffer.isView(e) || j(e, ArrayBuffer)) return e.byteLength;
                if ("string" != typeof e) throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                let r = e.length,
                    n = arguments.length > 2 && !0 === arguments[2];
                if (!n && 0 === r) return 0;
                let i = !1;
                for (;;) switch (t) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return r;
                    case "utf8":
                    case "utf-8":
                        return N(e).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * r;
                    case "hex":
                        return r >>> 1;
                    case "base64":
                        return R(e).length;
                    default:
                        if (i) return n ? -1 : N(e).length;
                        t = ("" + t).toLowerCase(), i = !0
                }
            }

            function m(e, t, r) {
                let i = !1;
                if ((void 0 === t || t < 0) && (t = 0), t > this.length || ((void 0 === r || r > this.length) && (r = this.length), r <= 0 || (r >>>= 0) <= (t >>>= 0))) return "";
                for (e || (e = "utf8");;) switch (e) {
                    case "hex":
                        return function(e, t, r) {
                            let n = e.length;
                            (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                            let i = "";
                            for (let n = t; n < r; ++n) i += F[e[n]];
                            return i
                        }(this, t, r);
                    case "utf8":
                    case "utf-8":
                        return v(this, t, r);
                    case "ascii":
                        return function(e, t, r) {
                            let n = "";
                            r = Math.min(e.length, r);
                            for (let i = t; i < r; ++i) n += String.fromCharCode(127 & e[i]);
                            return n
                        }(this, t, r);
                    case "latin1":
                    case "binary":
                        return function(e, t, r) {
                            let n = "";
                            r = Math.min(e.length, r);
                            for (let i = t; i < r; ++i) n += String.fromCharCode(e[i]);
                            return n
                        }(this, t, r);
                    case "base64":
                        var o, a;
                        return o = t, a = r, 0 === o && a === this.length ? n.fromByteArray(this) : n.fromByteArray(this.slice(o, a));
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return function(e, t, r) {
                            let n = e.slice(t, r),
                                i = "";
                            for (let e = 0; e < n.length - 1; e += 2) i += String.fromCharCode(n[e] + 256 * n[e + 1]);
                            return i
                        }(this, t, r);
                    default:
                        if (i) throw TypeError("Unknown encoding: " + e);
                        e = (e + "").toLowerCase(), i = !0
                }
            }

            function g(e, t, r) {
                let n = e[t];
                e[t] = e[r], e[r] = n
            }

            function b(e, t, r, n, i) {
                var o;
                if (0 === e.length) return -1;
                if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), (o = r = +r) != o && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
                    if (i) return -1;
                    r = e.length - 1
                } else if (r < 0) {
                    if (!i) return -1;
                    r = 0
                }
                if ("string" == typeof t && (t = s.from(t, n)), s.isBuffer(t)) return 0 === t.length ? -1 : y(e, t, r, n, i);
                if ("number" == typeof t) return (t &= 255, "function" == typeof Uint8Array.prototype.indexOf) ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : y(e, [t], r, n, i);
                throw TypeError("val must be string, number or Buffer")
            }

            function y(e, t, r, n, i) {
                let o, a = 1,
                    s = e.length,
                    u = t.length;
                if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                    if (e.length < 2 || t.length < 2) return -1;
                    a = 2, s /= 2, u /= 2, r /= 2
                }

                function c(e, t) {
                    return 1 === a ? e[t] : e.readUInt16BE(t * a)
                }
                if (i) {
                    let n = -1;
                    for (o = r; o < s; o++)
                        if (c(e, o) === c(t, -1 === n ? 0 : o - n)) {
                            if (-1 === n && (n = o), o - n + 1 === u) return n * a
                        } else -1 !== n && (o -= o - n), n = -1
                } else
                    for (r + u > s && (r = s - u), o = r; o >= 0; o--) {
                        let r = !0;
                        for (let n = 0; n < u; n++)
                            if (c(e, o + n) !== c(t, n)) {
                                r = !1;
                                break
                            }
                        if (r) return o
                    }
                return -1
            }

            function v(e, t, r) {
                r = Math.min(e.length, r);
                let n = [],
                    i = t;
                for (; i < r;) {
                    let t = e[i],
                        o = null,
                        a = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
                    if (i + a <= r) {
                        let r, n, s, u;
                        switch (a) {
                            case 1:
                                t < 128 && (o = t);
                                break;
                            case 2:
                                (192 & (r = e[i + 1])) == 128 && (u = (31 & t) << 6 | 63 & r) > 127 && (o = u);
                                break;
                            case 3:
                                r = e[i + 1], n = e[i + 2], (192 & r) == 128 && (192 & n) == 128 && (u = (15 & t) << 12 | (63 & r) << 6 | 63 & n) > 2047 && (u < 55296 || u > 57343) && (o = u);
                                break;
                            case 4:
                                r = e[i + 1], n = e[i + 2], s = e[i + 3], (192 & r) == 128 && (192 & n) == 128 && (192 & s) == 128 && (u = (15 & t) << 18 | (63 & r) << 12 | (63 & n) << 6 | 63 & s) > 65535 && u < 1114112 && (o = u)
                        }
                    }
                    null === o ? (o = 65533, a = 1) : o > 65535 && (o -= 65536, n.push(o >>> 10 & 1023 | 55296), o = 56320 | 1023 & o), n.push(o), i += a
                }
                return function(e) {
                    let t = e.length;
                    if (t <= 4096) return String.fromCharCode.apply(String, e);
                    let r = "",
                        n = 0;
                    for (; n < t;) r += String.fromCharCode.apply(String, e.slice(n, n += 4096));
                    return r
                }(n)
            }

            function w(e, t, r) {
                if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
                if (e + t > r) throw RangeError("Trying to access beyond buffer length")
            }

            function E(e, t, r, n, i, o) {
                if (!s.isBuffer(e)) throw TypeError('"buffer" argument must be a Buffer instance');
                if (t > i || t < o) throw RangeError('"value" argument is out of bounds');
                if (r + n > e.length) throw RangeError("Index out of range")
            }

            function A(e, t, r, n, i) {
                S(t, n, i, e, r, 7);
                let o = Number(t & BigInt(4294967295));
                e[r++] = o, o >>= 8, e[r++] = o, o >>= 8, e[r++] = o, o >>= 8, e[r++] = o;
                let a = Number(t >> BigInt(32) & BigInt(4294967295));
                return e[r++] = a, a >>= 8, e[r++] = a, a >>= 8, e[r++] = a, a >>= 8, e[r++] = a, r
            }

            function P(e, t, r, n, i) {
                S(t, n, i, e, r, 7);
                let o = Number(t & BigInt(4294967295));
                e[r + 7] = o, o >>= 8, e[r + 6] = o, o >>= 8, e[r + 5] = o, o >>= 8, e[r + 4] = o;
                let a = Number(t >> BigInt(32) & BigInt(4294967295));
                return e[r + 3] = a, a >>= 8, e[r + 2] = a, a >>= 8, e[r + 1] = a, a >>= 8, e[r] = a, r + 8
            }

            function x(e, t, r, n, i, o) {
                if (r + n > e.length || r < 0) throw RangeError("Index out of range")
            }

            function O(e, t, r, n, o) {
                return t = +t, r >>>= 0, o || x(e, t, r, 4, 34028234663852886e22, -34028234663852886e22), i.write(e, t, r, n, 23, 4), r + 4
            }

            function _(e, t, r, n, o) {
                return t = +t, r >>>= 0, o || x(e, t, r, 8, 17976931348623157e292, -17976931348623157e292), i.write(e, t, r, n, 52, 8), r + 8
            }
            t.Buffer = s, t.SlowBuffer = function(e) {
                return +e != e && (e = 0), s.alloc(+e)
            }, t.INSPECT_MAX_BYTES = 50, t.kMaxLength = 2147483647, s.TYPED_ARRAY_SUPPORT = function() {
                try {
                    let e = new Uint8Array(1),
                        t = {
                            foo: function() {
                                return 42
                            }
                        };
                    return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo()
                } catch (e) {
                    return !1
                }
            }(), s.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(s.prototype, "parent", {
                enumerable: !0,
                get: function() {
                    if (s.isBuffer(this)) return this.buffer
                }
            }), Object.defineProperty(s.prototype, "offset", {
                enumerable: !0,
                get: function() {
                    if (s.isBuffer(this)) return this.byteOffset
                }
            }), s.poolSize = 8192, s.from = function(e, t, r) {
                return u(e, t, r)
            }, Object.setPrototypeOf(s.prototype, Uint8Array.prototype), Object.setPrototypeOf(s, Uint8Array), s.alloc = function(e, t, r) {
                return (c(e), e <= 0) ? a(e) : void 0 !== t ? "string" == typeof r ? a(e).fill(t, r) : a(e).fill(t) : a(e)
            }, s.allocUnsafe = function(e) {
                return l(e)
            }, s.allocUnsafeSlow = function(e) {
                return l(e)
            }, s.isBuffer = function(e) {
                return null != e && !0 === e._isBuffer && e !== s.prototype
            }, s.compare = function(e, t) {
                if (j(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)), j(t, Uint8Array) && (t = s.from(t, t.offset, t.byteLength)), !s.isBuffer(e) || !s.isBuffer(t)) throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (e === t) return 0;
                let r = e.length,
                    n = t.length;
                for (let i = 0, o = Math.min(r, n); i < o; ++i)
                    if (e[i] !== t[i]) {
                        r = e[i], n = t[i];
                        break
                    }
                return r < n ? -1 : n < r ? 1 : 0
            }, s.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }, s.concat = function(e, t) {
                let r;
                if (!Array.isArray(e)) throw TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length) return s.alloc(0);
                if (void 0 === t)
                    for (r = 0, t = 0; r < e.length; ++r) t += e[r].length;
                let n = s.allocUnsafe(t),
                    i = 0;
                for (r = 0; r < e.length; ++r) {
                    let t = e[r];
                    if (j(t, Uint8Array)) i + t.length > n.length ? (s.isBuffer(t) || (t = s.from(t)), t.copy(n, i)) : Uint8Array.prototype.set.call(n, t, i);
                    else if (s.isBuffer(t)) t.copy(n, i);
                    else throw TypeError('"list" argument must be an Array of Buffers');
                    i += t.length
                }
                return n
            }, s.byteLength = p, s.prototype._isBuffer = !0, s.prototype.swap16 = function() {
                let e = this.length;
                if (e % 2 != 0) throw RangeError("Buffer size must be a multiple of 16-bits");
                for (let t = 0; t < e; t += 2) g(this, t, t + 1);
                return this
            }, s.prototype.swap32 = function() {
                let e = this.length;
                if (e % 4 != 0) throw RangeError("Buffer size must be a multiple of 32-bits");
                for (let t = 0; t < e; t += 4) g(this, t, t + 3), g(this, t + 1, t + 2);
                return this
            }, s.prototype.swap64 = function() {
                let e = this.length;
                if (e % 8 != 0) throw RangeError("Buffer size must be a multiple of 64-bits");
                for (let t = 0; t < e; t += 8) g(this, t, t + 7), g(this, t + 1, t + 6), g(this, t + 2, t + 5), g(this, t + 3, t + 4);
                return this
            }, s.prototype.toString = function() {
                let e = this.length;
                return 0 === e ? "" : 0 == arguments.length ? v(this, 0, e) : m.apply(this, arguments)
            }, s.prototype.toLocaleString = s.prototype.toString, s.prototype.equals = function(e) {
                if (!s.isBuffer(e)) throw TypeError("Argument must be a Buffer");
                return this === e || 0 === s.compare(this, e)
            }, s.prototype.inspect = function() {
                let e = "",
                    r = t.INSPECT_MAX_BYTES;
                return e = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (e += " ... "), "<Buffer " + e + ">"
            }, o && (s.prototype[o] = s.prototype.inspect), s.prototype.compare = function(e, t, r, n, i) {
                if (j(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)), !s.isBuffer(e)) throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) throw RangeError("out of range index");
                if (n >= i && t >= r) return 0;
                if (n >= i) return -1;
                if (t >= r) return 1;
                if (t >>>= 0, r >>>= 0, n >>>= 0, i >>>= 0, this === e) return 0;
                let o = i - n,
                    a = r - t,
                    u = Math.min(o, a),
                    c = this.slice(n, i),
                    l = e.slice(t, r);
                for (let e = 0; e < u; ++e)
                    if (c[e] !== l[e]) {
                        o = c[e], a = l[e];
                        break
                    }
                return o < a ? -1 : a < o ? 1 : 0
            }, s.prototype.includes = function(e, t, r) {
                return -1 !== this.indexOf(e, t, r)
            }, s.prototype.indexOf = function(e, t, r) {
                return b(this, e, t, r, !0)
            }, s.prototype.lastIndexOf = function(e, t, r) {
                return b(this, e, t, r, !1)
            }, s.prototype.write = function(e, t, r, n) {
                var i, o, a, s, u, c, l, d;
                if (void 0 === t) n = "utf8", r = this.length, t = 0;
                else if (void 0 === r && "string" == typeof t) n = t, r = this.length, t = 0;
                else if (isFinite(t)) t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
                else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                let f = this.length - t;
                if ((void 0 === r || r > f) && (r = f), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                let h = !1;
                for (;;) switch (n) {
                    case "hex":
                        return function(e, t, r, n) {
                            let i;
                            r = Number(r) || 0;
                            let o = e.length - r;
                            n ? (n = Number(n)) > o && (n = o) : n = o;
                            let a = t.length;
                            for (n > a / 2 && (n = a / 2), i = 0; i < n; ++i) {
                                let n = parseInt(t.substr(2 * i, 2), 16);
                                if (n != n) break;
                                e[r + i] = n
                            }
                            return i
                        }(this, e, t, r);
                    case "utf8":
                    case "utf-8":
                        return i = t, o = r, D(N(e, this.length - i), this, i, o);
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return a = t, s = r, D(function(e) {
                            let t = [];
                            for (let r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                            return t
                        }(e), this, a, s);
                    case "base64":
                        return u = t, c = r, D(R(e), this, u, c);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return l = t, d = r, D(function(e, t) {
                            let r, n;
                            let i = [];
                            for (let o = 0; o < e.length && !((t -= 2) < 0); ++o) n = (r = e.charCodeAt(o)) >> 8, i.push(r % 256), i.push(n);
                            return i
                        }(e, this.length - l), this, l, d);
                    default:
                        if (h) throw TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase(), h = !0
                }
            }, s.prototype.toJSON = function() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }, s.prototype.slice = function(e, t) {
                let r = this.length;
                e = ~~e, t = void 0 === t ? r : ~~t, e < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), t < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e);
                let n = this.subarray(e, t);
                return Object.setPrototypeOf(n, s.prototype), n
            }, s.prototype.readUintLE = s.prototype.readUIntLE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || w(e, t, this.length);
                let n = this[e],
                    i = 1,
                    o = 0;
                for (; ++o < t && (i *= 256);) n += this[e + o] * i;
                return n
            }, s.prototype.readUintBE = s.prototype.readUIntBE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || w(e, t, this.length);
                let n = this[e + --t],
                    i = 1;
                for (; t > 0 && (i *= 256);) n += this[e + --t] * i;
                return n
            }, s.prototype.readUint8 = s.prototype.readUInt8 = function(e, t) {
                return e >>>= 0, t || w(e, 1, this.length), this[e]
            }, s.prototype.readUint16LE = s.prototype.readUInt16LE = function(e, t) {
                return e >>>= 0, t || w(e, 2, this.length), this[e] | this[e + 1] << 8
            }, s.prototype.readUint16BE = s.prototype.readUInt16BE = function(e, t) {
                return e >>>= 0, t || w(e, 2, this.length), this[e] << 8 | this[e + 1]
            }, s.prototype.readUint32LE = s.prototype.readUInt32LE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
            }, s.prototype.readUint32BE = s.prototype.readUInt32BE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
            }, s.prototype.readBigUInt64LE = U(function(e) {
                k(e >>>= 0, "offset");
                let t = this[e],
                    r = this[e + 7];
                (void 0 === t || void 0 === r) && M(e, this.length - 8);
                let n = t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e],
                    i = this[++e] + 256 * this[++e] + 65536 * this[++e] + 16777216 * r;
                return BigInt(n) + (BigInt(i) << BigInt(32))
            }), s.prototype.readBigUInt64BE = U(function(e) {
                k(e >>>= 0, "offset");
                let t = this[e],
                    r = this[e + 7];
                (void 0 === t || void 0 === r) && M(e, this.length - 8);
                let n = 16777216 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
                    i = 16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r;
                return (BigInt(n) << BigInt(32)) + BigInt(i)
            }), s.prototype.readIntLE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || w(e, t, this.length);
                let n = this[e],
                    i = 1,
                    o = 0;
                for (; ++o < t && (i *= 256);) n += this[e + o] * i;
                return n >= (i *= 128) && (n -= Math.pow(2, 8 * t)), n
            }, s.prototype.readIntBE = function(e, t, r) {
                e >>>= 0, t >>>= 0, r || w(e, t, this.length);
                let n = t,
                    i = 1,
                    o = this[e + --n];
                for (; n > 0 && (i *= 256);) o += this[e + --n] * i;
                return o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o
            }, s.prototype.readInt8 = function(e, t) {
                return (e >>>= 0, t || w(e, 1, this.length), 128 & this[e]) ? -((255 - this[e] + 1) * 1) : this[e]
            }, s.prototype.readInt16LE = function(e, t) {
                e >>>= 0, t || w(e, 2, this.length);
                let r = this[e] | this[e + 1] << 8;
                return 32768 & r ? 4294901760 | r : r
            }, s.prototype.readInt16BE = function(e, t) {
                e >>>= 0, t || w(e, 2, this.length);
                let r = this[e + 1] | this[e] << 8;
                return 32768 & r ? 4294901760 | r : r
            }, s.prototype.readInt32LE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
            }, s.prototype.readInt32BE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
            }, s.prototype.readBigInt64LE = U(function(e) {
                k(e >>>= 0, "offset");
                let t = this[e],
                    r = this[e + 7];
                return (void 0 === t || void 0 === r) && M(e, this.length - 8), (BigInt(this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24)) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e])
            }), s.prototype.readBigInt64BE = U(function(e) {
                k(e >>>= 0, "offset");
                let t = this[e],
                    r = this[e + 7];
                return (void 0 === t || void 0 === r) && M(e, this.length - 8), (BigInt((t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e]) << BigInt(32)) + BigInt(16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + r)
            }), s.prototype.readFloatLE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), i.read(this, e, !0, 23, 4)
            }, s.prototype.readFloatBE = function(e, t) {
                return e >>>= 0, t || w(e, 4, this.length), i.read(this, e, !1, 23, 4)
            }, s.prototype.readDoubleLE = function(e, t) {
                return e >>>= 0, t || w(e, 8, this.length), i.read(this, e, !0, 52, 8)
            }, s.prototype.readDoubleBE = function(e, t) {
                return e >>>= 0, t || w(e, 8, this.length), i.read(this, e, !1, 52, 8)
            }, s.prototype.writeUintLE = s.prototype.writeUIntLE = function(e, t, r, n) {
                if (e = +e, t >>>= 0, r >>>= 0, !n) {
                    let n = Math.pow(2, 8 * r) - 1;
                    E(this, e, t, r, n, 0)
                }
                let i = 1,
                    o = 0;
                for (this[t] = 255 & e; ++o < r && (i *= 256);) this[t + o] = e / i & 255;
                return t + r
            }, s.prototype.writeUintBE = s.prototype.writeUIntBE = function(e, t, r, n) {
                if (e = +e, t >>>= 0, r >>>= 0, !n) {
                    let n = Math.pow(2, 8 * r) - 1;
                    E(this, e, t, r, n, 0)
                }
                let i = r - 1,
                    o = 1;
                for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) this[t + i] = e / o & 255;
                return t + r
            }, s.prototype.writeUint8 = s.prototype.writeUInt8 = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1
            }, s.prototype.writeUint16LE = s.prototype.writeUInt16LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
            }, s.prototype.writeUint16BE = s.prototype.writeUInt16BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
            }, s.prototype.writeUint32LE = s.prototype.writeUInt32LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4
            }, s.prototype.writeUint32BE = s.prototype.writeUInt32BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
            }, s.prototype.writeBigUInt64LE = U(function(e, t = 0) {
                return A(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
            }), s.prototype.writeBigUInt64BE = U(function(e, t = 0) {
                return P(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
            }), s.prototype.writeIntLE = function(e, t, r, n) {
                if (e = +e, t >>>= 0, !n) {
                    let n = Math.pow(2, 8 * r - 1);
                    E(this, e, t, r, n - 1, -n)
                }
                let i = 0,
                    o = 1,
                    a = 0;
                for (this[t] = 255 & e; ++i < r && (o *= 256);) e < 0 && 0 === a && 0 !== this[t + i - 1] && (a = 1), this[t + i] = (e / o >> 0) - a & 255;
                return t + r
            }, s.prototype.writeIntBE = function(e, t, r, n) {
                if (e = +e, t >>>= 0, !n) {
                    let n = Math.pow(2, 8 * r - 1);
                    E(this, e, t, r, n - 1, -n)
                }
                let i = r - 1,
                    o = 1,
                    a = 0;
                for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) e < 0 && 0 === a && 0 !== this[t + i + 1] && (a = 1), this[t + i] = (e / o >> 0) - a & 255;
                return t + r
            }, s.prototype.writeInt8 = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
            }, s.prototype.writeInt16LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
            }, s.prototype.writeInt16BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
            }, s.prototype.writeInt32LE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4
            }, s.prototype.writeInt32BE = function(e, t, r) {
                return e = +e, t >>>= 0, r || E(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
            }, s.prototype.writeBigInt64LE = U(function(e, t = 0) {
                return A(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }), s.prototype.writeBigInt64BE = U(function(e, t = 0) {
                return P(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }), s.prototype.writeFloatLE = function(e, t, r) {
                return O(this, e, t, !0, r)
            }, s.prototype.writeFloatBE = function(e, t, r) {
                return O(this, e, t, !1, r)
            }, s.prototype.writeDoubleLE = function(e, t, r) {
                return _(this, e, t, !0, r)
            }, s.prototype.writeDoubleBE = function(e, t, r) {
                return _(this, e, t, !1, r)
            }, s.prototype.copy = function(e, t, r, n) {
                if (!s.isBuffer(e)) throw TypeError("argument should be a Buffer");
                if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r || 0 === e.length || 0 === this.length) return 0;
                if (t < 0) throw RangeError("targetStart out of bounds");
                if (r < 0 || r >= this.length) throw RangeError("Index out of range");
                if (n < 0) throw RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);
                let i = n - r;
                return this === e && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e, this.subarray(r, n), t), i
            }, s.prototype.fill = function(e, t, r, n) {
                let i;
                if ("string" == typeof e) {
                    if ("string" == typeof t ? (n = t, t = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw TypeError("encoding must be a string");
                    if ("string" == typeof n && !s.isEncoding(n)) throw TypeError("Unknown encoding: " + n);
                    if (1 === e.length) {
                        let t = e.charCodeAt(0);
                        ("utf8" === n && t < 128 || "latin1" === n) && (e = t)
                    }
                } else "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                if (t < 0 || this.length < t || this.length < r) throw RangeError("Out of range index");
                if (r <= t) return this;
                if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" == typeof e)
                    for (i = t; i < r; ++i) this[i] = e;
                else {
                    let o = s.isBuffer(e) ? e : s.from(e, n),
                        a = o.length;
                    if (0 === a) throw TypeError('The value "' + e + '" is invalid for argument "value"');
                    for (i = 0; i < r - t; ++i) this[i + t] = o[i % a]
                }
                return this
            };
            let I = {};

            function T(e, t, r) {
                I[e] = class extends r {
                    constructor() {
                        super(), Object.defineProperty(this, "message", {
                            value: t.apply(this, arguments),
                            writable: !0,
                            configurable: !0
                        }), this.name = `${this.name} [${e}]`, this.stack, delete this.name
                    }
                    get code() {
                        return e
                    }
                    set code(e) {
                        Object.defineProperty(this, "code", {
                            configurable: !0,
                            enumerable: !0,
                            value: e,
                            writable: !0
                        })
                    }
                    toString() {
                        return `${this.name} [${e}]: ${this.message}`
                    }
                }
            }

            function C(e) {
                let t = "",
                    r = e.length,
                    n = "-" === e[0] ? 1 : 0;
                for (; r >= n + 4; r -= 3) t = `_${e.slice(r-3,r)}${t}`;
                return `${e.slice(0,r)}${t}`
            }

            function S(e, t, r, n, i, o) {
                if (e > r || e < t) {
                    let n;
                    let i = "bigint" == typeof t ? "n" : "";
                    throw n = o > 3 ? 0 === t || t === BigInt(0) ? `>= 0${i} and < 2${i} ** ${(o+1)*8}${i}` : `>= -(2${i} ** ${(o+1)*8-1}${i}) and < 2 ** ${(o+1)*8-1}${i}` : `>= ${t}${i} and <= ${r}${i}`, new I.ERR_OUT_OF_RANGE("value", n, e)
                }
                k(i, "offset"), (void 0 === n[i] || void 0 === n[i + o]) && M(i, n.length - (o + 1))
            }

            function k(e, t) {
                if ("number" != typeof e) throw new I.ERR_INVALID_ARG_TYPE(t, "number", e)
            }

            function M(e, t, r) {
                if (Math.floor(e) !== e) throw k(e, r), new I.ERR_OUT_OF_RANGE(r || "offset", "an integer", e);
                if (t < 0) throw new I.ERR_BUFFER_OUT_OF_BOUNDS;
                throw new I.ERR_OUT_OF_RANGE(r || "offset", `>= ${r?1:0} and <= ${t}`, e)
            }
            T("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
                return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds"
            }, RangeError), T("ERR_INVALID_ARG_TYPE", function(e, t) {
                return `The "${e}" argument must be of type number. Received type ${typeof t}`
            }, TypeError), T("ERR_OUT_OF_RANGE", function(e, t, r) {
                let n = `The value of "${e}" is out of range.`,
                    i = r;
                return Number.isInteger(r) && Math.abs(r) > 4294967296 ? i = C(String(r)) : "bigint" == typeof r && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = C(i)), i += "n"), n += ` It must be ${t}. Received ${i}`
            }, RangeError);
            let B = /[^+/0-9A-Za-z-_]/g;

            function N(e, t) {
                let r;
                t = t || 1 / 0;
                let n = e.length,
                    i = null,
                    o = [];
                for (let a = 0; a < n; ++a) {
                    if ((r = e.charCodeAt(a)) > 55295 && r < 57344) {
                        if (!i) {
                            if (r > 56319 || a + 1 === n) {
                                (t -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            i = r;
                            continue
                        }
                        if (r < 56320) {
                            (t -= 3) > -1 && o.push(239, 191, 189), i = r;
                            continue
                        }
                        r = (i - 55296 << 10 | r - 56320) + 65536
                    } else i && (t -= 3) > -1 && o.push(239, 191, 189);
                    if (i = null, r < 128) {
                        if ((t -= 1) < 0) break;
                        o.push(r)
                    } else if (r < 2048) {
                        if ((t -= 2) < 0) break;
                        o.push(r >> 6 | 192, 63 & r | 128)
                    } else if (r < 65536) {
                        if ((t -= 3) < 0) break;
                        o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                    } else if (r < 1114112) {
                        if ((t -= 4) < 0) break;
                        o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                    } else throw Error("Invalid code point")
                }
                return o
            }

            function R(e) {
                return n.toByteArray(function(e) {
                    if ((e = (e = e.split("=")[0]).trim().replace(B, "")).length < 2) return "";
                    for (; e.length % 4 != 0;) e += "=";
                    return e
                }(e))
            }

            function D(e, t, r, n) {
                let i;
                for (i = 0; i < n && !(i + r >= t.length) && !(i >= e.length); ++i) t[i + r] = e[i];
                return i
            }

            function j(e, t) {
                return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
            }
            let F = function() {
                let e = "0123456789abcdef",
                    t = Array(256);
                for (let r = 0; r < 16; ++r) {
                    let n = 16 * r;
                    for (let i = 0; i < 16; ++i) t[n + i] = e[r] + e[i]
                }
                return t
            }();

            function U(e) {
                return "undefined" == typeof BigInt ? L : e
            }

            function L() {
                throw Error("BigInt not supported")
            }
        },
        56368: function(e) {
            "use strict";
            var t = "%[a-f0-9]{2}",
                r = RegExp("(" + t + ")|([^%]+?)", "gi"),
                n = RegExp("(" + t + ")+", "gi");
            e.exports = function(e) {
                if ("string" != typeof e) throw TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof e + "`");
                try {
                    return e = e.replace(/\+/g, " "), decodeURIComponent(e)
                } catch (t) {
                    return function(e) {
                        for (var t = {
                                "%FE%FF": "��",
                                "%FF%FE": "��"
                            }, i = n.exec(e); i;) {
                            try {
                                t[i[0]] = decodeURIComponent(i[0])
                            } catch (e) {
                                var o = function(e) {
                                    try {
                                        return decodeURIComponent(e)
                                    } catch (i) {
                                        for (var t = e.match(r) || [], n = 1; n < t.length; n++) t = (e = (function e(t, r) {
                                            try {
                                                return [decodeURIComponent(t.join(""))]
                                            } catch (e) {}
                                            if (1 === t.length) return t;
                                            r = r || 1;
                                            var n = t.slice(0, r),
                                                i = t.slice(r);
                                            return Array.prototype.concat.call([], e(n), e(i))
                                        })(t, n).join("")).match(r) || [];
                                        return e
                                    }
                                }(i[0]);
                                o !== i[0] && (t[i[0]] = o)
                            }
                            i = n.exec(e)
                        }
                        t["%C2"] = "�";
                        for (var a = Object.keys(t), s = 0; s < a.length; s++) {
                            var u = a[s];
                            e = e.replace(RegExp(u, "g"), t[u])
                        }
                        return e
                    }(e)
                }
            }
        },
        52159: function(e, t, r) {
            "use strict";
            r.d(t, {
                qY: function() {
                    return h
                }
            });
            var n = r(25566),
                i = function(e, t, r) {
                    if (r || 2 == arguments.length)
                        for (var n, i = 0, o = t.length; i < o; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                    return e.concat(n || Array.prototype.slice.call(t))
                },
                o = function(e, t, r) {
                    this.name = e, this.version = t, this.os = r, this.type = "browser"
                },
                a = function(e) {
                    this.version = e, this.type = "node", this.name = "node", this.os = n.platform
                },
                s = function(e, t, r, n) {
                    this.name = e, this.version = t, this.os = r, this.bot = n, this.type = "bot-device"
                },
                u = function() {
                    this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null
                },
                c = function() {
                    this.type = "react-native", this.name = "react-native", this.version = null, this.os = null
                },
                l = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                d = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
                    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
                    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FB[AS]V\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["curl", /^curl\/([0-9\.]+)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]
                ],
                f = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/]
                ];

            function h(e) {
                return e ? p(e) : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product ? new c : "undefined" != typeof navigator ? p(navigator.userAgent) : void 0 !== n && n.version ? new a(n.version.slice(1)) : null
            }

            function p(e) {
                var t = "" !== e && d.reduce(function(t, r) {
                    var n = r[0],
                        i = r[1];
                    if (t) return t;
                    var o = i.exec(e);
                    return !!o && [n, o]
                }, !1);
                if (!t) return null;
                var r = t[0],
                    n = t[1];
                if ("searchbot" === r) return new u;
                var a = n[1] && n[1].split(".").join("_").split("_").slice(0, 3);
                a ? a.length < 3 && (a = i(i([], a, !0), function(e) {
                    for (var t = [], r = 0; r < e; r++) t.push("0");
                    return t
                }(3 - a.length), !0)) : a = [];
                var c = a.join("."),
                    h = function(e) {
                        for (var t = 0, r = f.length; t < r; t++) {
                            var n = f[t],
                                i = n[0];
                            if (n[1].exec(e)) return i
                        }
                        return null
                    }(e),
                    p = l.exec(e);
                return p && p[1] ? new s(r, c, h, p[1]) : new o(r, c, h)
            }
        },
        52892: function(e) {
            "use strict";
            var t = {
                single_source_shortest_paths: function(e, r, n) {
                    var i, o, a, s, u, c, l, d = {},
                        f = {};
                    f[r] = 0;
                    var h = t.PriorityQueue.make();
                    for (h.push(r, 0); !h.empty();)
                        for (a in o = (i = h.pop()).value, s = i.cost, u = e[o] || {}) u.hasOwnProperty(a) && (c = s + u[a], l = f[a], (void 0 === f[a] || l > c) && (f[a] = c, h.push(a, c), d[a] = o));
                    if (void 0 !== n && void 0 === f[n]) throw Error(["Could not find a path from ", r, " to ", n, "."].join(""));
                    return d
                },
                extract_shortest_path_from_predecessor_list: function(e, t) {
                    for (var r = [], n = t; n;) r.push(n), e[n], n = e[n];
                    return r.reverse(), r
                },
                find_path: function(e, r, n) {
                    var i = t.single_source_shortest_paths(e, r, n);
                    return t.extract_shortest_path_from_predecessor_list(i, n)
                },
                PriorityQueue: {
                    make: function(e) {
                        var r, n = t.PriorityQueue,
                            i = {};
                        for (r in e = e || {}, n) n.hasOwnProperty(r) && (i[r] = n[r]);
                        return i.queue = [], i.sorter = e.sorter || n.default_sorter, i
                    },
                    default_sorter: function(e, t) {
                        return e.cost - t.cost
                    },
                    push: function(e, t) {
                        this.queue.push({
                            value: e,
                            cost: t
                        }), this.queue.sort(this.sorter)
                    },
                    pop: function() {
                        return this.queue.shift()
                    },
                    empty: function() {
                        return 0 === this.queue.length
                    }
                }
            };
            e.exports = t
        },
        47059: function(e) {
            "use strict";
            e.exports = function(e) {
                for (var t = [], r = e.length, n = 0; n < r; n++) {
                    var i = e.charCodeAt(n);
                    if (i >= 55296 && i <= 56319 && r > n + 1) {
                        var o = e.charCodeAt(n + 1);
                        o >= 56320 && o <= 57343 && (i = (i - 55296) * 1024 + o - 56320 + 65536, n += 1)
                    }
                    if (i < 128) {
                        t.push(i);
                        continue
                    }
                    if (i < 2048) {
                        t.push(i >> 6 | 192), t.push(63 & i | 128);
                        continue
                    }
                    if (i < 55296 || i >= 57344 && i < 65536) {
                        t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128);
                        continue
                    }
                    if (i >= 65536 && i <= 1114111) {
                        t.push(i >> 18 | 240), t.push(i >> 12 & 63 | 128), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128);
                        continue
                    }
                    t.push(239, 191, 189)
                }
                return new Uint8Array(t).buffer
            }
        },
        68885: function(e) {
            "use strict";
            var t, r = "object" == typeof Reflect ? Reflect : null,
                n = r && "function" == typeof r.apply ? r.apply : function(e, t, r) {
                    return Function.prototype.apply.call(e, t, r)
                };
            t = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            } : function(e) {
                return Object.getOwnPropertyNames(e)
            };
            var i = Number.isNaN || function(e) {
                return e != e
            };

            function o() {
                o.init.call(this)
            }
            e.exports = o, e.exports.once = function(e, t) {
                return new Promise(function(r, n) {
                    var i;

                    function o(r) {
                        e.removeListener(t, a), n(r)
                    }

                    function a() {
                        "function" == typeof e.removeListener && e.removeListener("error", o), r([].slice.call(arguments))
                    }
                    m(e, t, a, {
                        once: !0
                    }), "error" !== t && (i = {
                        once: !0
                    }, "function" == typeof e.on && m(e, "error", o, i))
                })
            }, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
            var a = 10;

            function s(e) {
                if ("function" != typeof e) throw TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }

            function u(e) {
                return void 0 === e._maxListeners ? o.defaultMaxListeners : e._maxListeners
            }

            function c(e, t, r, n) {
                if (s(r), void 0 === (o = e._events) ? (o = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", t, r.listener ? r.listener : r), o = e._events), a = o[t]), void 0 === a) a = o[t] = r, ++e._eventsCount;
                else if ("function" == typeof a ? a = o[t] = n ? [r, a] : [a, r] : n ? a.unshift(r) : a.push(r), (i = u(e)) > 0 && a.length > i && !a.warned) {
                    a.warned = !0;
                    var i, o, a, c = Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    c.name = "MaxListenersExceededWarning", c.emitter = e, c.type = t, c.count = a.length, console && console.warn && console.warn(c)
                }
                return e
            }

            function l() {
                if (!this.fired) return (this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 == arguments.length) ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
            }

            function d(e, t, r) {
                var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: e,
                        type: t,
                        listener: r
                    },
                    i = l.bind(n);
                return i.listener = r, n.wrapFn = i, i
            }

            function f(e, t, r) {
                var n = e._events;
                if (void 0 === n) return [];
                var i = n[t];
                return void 0 === i ? [] : "function" == typeof i ? r ? [i.listener || i] : [i] : r ? function(e) {
                    for (var t = Array(e.length), r = 0; r < t.length; ++r) t[r] = e[r].listener || e[r];
                    return t
                }(i) : p(i, i.length)
            }

            function h(e) {
                var t = this._events;
                if (void 0 !== t) {
                    var r = t[e];
                    if ("function" == typeof r) return 1;
                    if (void 0 !== r) return r.length
                }
                return 0
            }

            function p(e, t) {
                for (var r = Array(t), n = 0; n < t; ++n) r[n] = e[n];
                return r
            }

            function m(e, t, r, n) {
                if ("function" == typeof e.on) n.once ? e.once(t, r) : e.on(t, r);
                else if ("function" == typeof e.addEventListener) e.addEventListener(t, function i(o) {
                    n.once && e.removeEventListener(t, i), r(o)
                });
                else throw TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e)
            }
            Object.defineProperty(o, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return a
                },
                set: function(e) {
                    if ("number" != typeof e || e < 0 || i(e)) throw RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    a = e
                }
            }), o.init = function() {
                (void 0 === this._events || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
            }, o.prototype.setMaxListeners = function(e) {
                if ("number" != typeof e || e < 0 || i(e)) throw RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e, this
            }, o.prototype.getMaxListeners = function() {
                return u(this)
            }, o.prototype.emit = function(e) {
                for (var t = [], r = 1; r < arguments.length; r++) t.push(arguments[r]);
                var i = "error" === e,
                    o = this._events;
                if (void 0 !== o) i = i && void 0 === o.error;
                else if (!i) return !1;
                if (i) {
                    if (t.length > 0 && (a = t[0]), a instanceof Error) throw a;
                    var a, s = Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                    throw s.context = a, s
                }
                var u = o[e];
                if (void 0 === u) return !1;
                if ("function" == typeof u) n(u, this, t);
                else
                    for (var c = u.length, l = p(u, c), r = 0; r < c; ++r) n(l[r], this, t);
                return !0
            }, o.prototype.addListener = function(e, t) {
                return c(this, e, t, !1)
            }, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function(e, t) {
                return c(this, e, t, !0)
            }, o.prototype.once = function(e, t) {
                return s(t), this.on(e, d(this, e, t)), this
            }, o.prototype.prependOnceListener = function(e, t) {
                return s(t), this.prependListener(e, d(this, e, t)), this
            }, o.prototype.removeListener = function(e, t) {
                var r, n, i, o, a;
                if (s(t), void 0 === (n = this._events) || void 0 === (r = n[e])) return this;
                if (r === t || r.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, r.listener || t));
                else if ("function" != typeof r) {
                    for (i = -1, o = r.length - 1; o >= 0; o--)
                        if (r[o] === t || r[o].listener === t) {
                            a = r[o].listener, i = o;
                            break
                        }
                    if (i < 0) return this;
                    0 === i ? r.shift() : function(e, t) {
                        for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                        e.pop()
                    }(r, i), 1 === r.length && (n[e] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", e, a || t)
                }
                return this
            }, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function(e) {
                var t, r, n;
                if (void 0 === (r = this._events)) return this;
                if (void 0 === r.removeListener) return 0 == arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]), this;
                if (0 == arguments.length) {
                    var i, o = Object.keys(r);
                    for (n = 0; n < o.length; ++n) "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
                }
                if ("function" == typeof(t = r[e])) this.removeListener(e, t);
                else if (void 0 !== t)
                    for (n = t.length - 1; n >= 0; n--) this.removeListener(e, t[n]);
                return this
            }, o.prototype.listeners = function(e) {
                return f(this, e, !0)
            }, o.prototype.rawListeners = function(e) {
                return f(this, e, !1)
            }, o.listenerCount = function(e, t) {
                return "function" == typeof e.listenerCount ? e.listenerCount(t) : h.call(e, t)
            }, o.prototype.listenerCount = h, o.prototype.eventNames = function() {
                return this._eventsCount > 0 ? t(this._events) : []
            }
        },
        24816: function(e) {
            "use strict";
            e.exports = function(e, t) {
                for (var r = {}, n = Object.keys(e), i = Array.isArray(t), o = 0; o < n.length; o++) {
                    var a = n[o],
                        s = e[a];
                    (i ? -1 !== t.indexOf(a) : t(a, s, e)) && (r[a] = s)
                }
                return r
            }
        },
        83699: function(e, t, r) {
            t.utils = r(69874), t.common = r(37142), t.sha = r(37727), t.ripemd = r(89561), t.hmac = r(40238), t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160
        },
        37142: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(71974);

            function o() {
                this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32
            }
            t.BlockHash = o, o.prototype.update = function(e, t) {
                if (e = n.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
                    var r = (e = this.pending).length % this._delta8;
                    this.pending = e.slice(e.length - r, e.length), 0 === this.pending.length && (this.pending = null), e = n.join32(e, 0, e.length - r, this.endian);
                    for (var i = 0; i < e.length; i += this._delta32) this._update(e, i, i + this._delta32)
                }
                return this
            }, o.prototype.digest = function(e) {
                return this.update(this._pad()), i(null === this.pending), this._digest(e)
            }, o.prototype._pad = function() {
                var e = this.pendingTotal,
                    t = this._delta8,
                    r = t - (e + this.padLength) % t,
                    n = Array(r + this.padLength);
                n[0] = 128;
                for (var i = 1; i < r; i++) n[i] = 0;
                if (e <<= 3, "big" === this.endian) {
                    for (var o = 8; o < this.padLength; o++) n[i++] = 0;
                    n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = e >>> 24 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 8 & 255, n[i++] = 255 & e
                } else
                    for (o = 8, n[i++] = 255 & e, n[i++] = e >>> 8 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0; o < this.padLength; o++) n[i++] = 0;
                return n
            }
        },
        40238: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(71974);

            function o(e, t, r) {
                if (!(this instanceof o)) return new o(e, t, r);
                this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t, r))
            }
            e.exports = o, o.prototype._init = function(e) {
                e.length > this.blockSize && (e = new this.Hash().update(e).digest()), i(e.length <= this.blockSize);
                for (var t = e.length; t < this.blockSize; t++) e.push(0);
                for (t = 0; t < e.length; t++) e[t] ^= 54;
                for (t = 0, this.inner = new this.Hash().update(e); t < e.length; t++) e[t] ^= 106;
                this.outer = new this.Hash().update(e)
            }, o.prototype.update = function(e, t) {
                return this.inner.update(e, t), this
            }, o.prototype.digest = function(e) {
                return this.outer.update(this.inner.digest()), this.outer.digest(e)
            }
        },
        89561: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(37142),
                o = n.rotl32,
                a = n.sum32,
                s = n.sum32_3,
                u = n.sum32_4,
                c = i.BlockHash;

            function l() {
                if (!(this instanceof l)) return new l;
                c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little"
            }

            function d(e, t, r, n) {
                return e <= 15 ? t ^ r ^ n : e <= 31 ? t & r | ~t & n : e <= 47 ? (t | ~r) ^ n : e <= 63 ? t & n | r & ~n : t ^ (r | ~n)
            }
            n.inherits(l, c), t.ripemd160 = l, l.blockSize = 512, l.outSize = 160, l.hmacStrength = 192, l.padLength = 64, l.prototype._update = function(e, t) {
                for (var r = this.h[0], n = this.h[1], i = this.h[2], c = this.h[3], l = this.h[4], g = r, b = n, y = i, v = c, w = l, E = 0; E < 80; E++) {
                    var A, P, x = a(o(u(r, d(E, n, i, c), e[f[E] + t], (A = E) <= 15 ? 0 : A <= 31 ? 1518500249 : A <= 47 ? 1859775393 : A <= 63 ? 2400959708 : 2840853838), p[E]), l);
                    r = l, l = c, c = o(i, 10), i = n, n = x, x = a(o(u(g, d(79 - E, b, y, v), e[h[E] + t], (P = E) <= 15 ? 1352829926 : P <= 31 ? 1548603684 : P <= 47 ? 1836072691 : P <= 63 ? 2053994217 : 0), m[E]), w), g = w, w = v, v = o(y, 10), y = b, b = x
                }
                x = s(this.h[1], i, v), this.h[1] = s(this.h[2], c, w), this.h[2] = s(this.h[3], l, g), this.h[3] = s(this.h[4], r, b), this.h[4] = s(this.h[0], n, y), this.h[0] = x
            }, l.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h, "little") : n.split32(this.h, "little")
            };
            var f = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
                h = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
                p = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
                m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
        },
        37727: function(e, t, r) {
            "use strict";
            t.sha1 = r(99659), t.sha224 = r(15577), t.sha256 = r(4132), t.sha384 = r(65560), t.sha512 = r(86124)
        },
        99659: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(37142),
                o = r(9221),
                a = n.rotl32,
                s = n.sum32,
                u = n.sum32_5,
                c = o.ft_1,
                l = i.BlockHash,
                d = [1518500249, 1859775393, 2400959708, 3395469782];

            function f() {
                if (!(this instanceof f)) return new f;
                l.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = Array(80)
            }
            n.inherits(f, l), e.exports = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 80, f.padLength = 64, f.prototype._update = function(e, t) {
                for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
                for (; n < r.length; n++) r[n] = a(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                var i = this.h[0],
                    o = this.h[1],
                    l = this.h[2],
                    f = this.h[3],
                    h = this.h[4];
                for (n = 0; n < r.length; n++) {
                    var p = ~~(n / 20),
                        m = u(a(i, 5), c(p, o, l, f), h, r[n], d[p]);
                    h = f, f = l, l = a(o, 30), o = i, i = m
                }
                this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], l), this.h[3] = s(this.h[3], f), this.h[4] = s(this.h[4], h)
            }, f.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
        },
        15577: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(4132);

            function o() {
                if (!(this instanceof o)) return new o;
                i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
            }
            n.inherits(o, i), e.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big")
            }
        },
        4132: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(37142),
                o = r(9221),
                a = r(71974),
                s = n.sum32,
                u = n.sum32_4,
                c = n.sum32_5,
                l = o.ch32,
                d = o.maj32,
                f = o.s0_256,
                h = o.s1_256,
                p = o.g0_256,
                m = o.g1_256,
                g = i.BlockHash,
                b = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

            function y() {
                if (!(this instanceof y)) return new y;
                g.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = b, this.W = Array(64)
            }
            n.inherits(y, g), e.exports = y, y.blockSize = 512, y.outSize = 256, y.hmacStrength = 192, y.padLength = 64, y.prototype._update = function(e, t) {
                for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
                for (; n < r.length; n++) r[n] = u(m(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
                var i = this.h[0],
                    o = this.h[1],
                    g = this.h[2],
                    b = this.h[3],
                    y = this.h[4],
                    v = this.h[5],
                    w = this.h[6],
                    E = this.h[7];
                for (a(this.k.length === r.length), n = 0; n < r.length; n++) {
                    var A = c(E, h(y), l(y, v, w), this.k[n], r[n]),
                        P = s(f(i), d(i, o, g));
                    E = w, w = v, v = y, y = s(b, A), b = g, g = o, o = i, i = s(A, P)
                }
                this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], g), this.h[3] = s(this.h[3], b), this.h[4] = s(this.h[4], y), this.h[5] = s(this.h[5], v), this.h[6] = s(this.h[6], w), this.h[7] = s(this.h[7], E)
            }, y.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
        },
        65560: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(86124);

            function o() {
                if (!(this instanceof o)) return new o;
                i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
            }
            n.inherits(o, i), e.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big")
            }
        },
        86124: function(e, t, r) {
            "use strict";
            var n = r(69874),
                i = r(37142),
                o = r(71974),
                a = n.rotr64_hi,
                s = n.rotr64_lo,
                u = n.shr64_hi,
                c = n.shr64_lo,
                l = n.sum64,
                d = n.sum64_hi,
                f = n.sum64_lo,
                h = n.sum64_4_hi,
                p = n.sum64_4_lo,
                m = n.sum64_5_hi,
                g = n.sum64_5_lo,
                b = i.BlockHash,
                y = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

            function v() {
                if (!(this instanceof v)) return new v;
                b.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = y, this.W = Array(160)
            }
            n.inherits(v, b), e.exports = v, v.blockSize = 1024, v.outSize = 512, v.hmacStrength = 192, v.padLength = 128, v.prototype._prepareBlock = function(e, t) {
                for (var r = this.W, n = 0; n < 32; n++) r[n] = e[t + n];
                for (; n < r.length; n += 2) {
                    var i = function(e, t) {
                            var r = a(e, t, 19) ^ a(t, e, 29) ^ u(e, t, 6);
                            return r < 0 && (r += 4294967296), r
                        }(r[n - 4], r[n - 3]),
                        o = function(e, t) {
                            var r = s(e, t, 19) ^ s(t, e, 29) ^ c(e, t, 6);
                            return r < 0 && (r += 4294967296), r
                        }(r[n - 4], r[n - 3]),
                        l = r[n - 14],
                        d = r[n - 13],
                        f = function(e, t) {
                            var r = a(e, t, 1) ^ a(e, t, 8) ^ u(e, t, 7);
                            return r < 0 && (r += 4294967296), r
                        }(r[n - 30], r[n - 29]),
                        m = function(e, t) {
                            var r = s(e, t, 1) ^ s(e, t, 8) ^ c(e, t, 7);
                            return r < 0 && (r += 4294967296), r
                        }(r[n - 30], r[n - 29]),
                        g = r[n - 32],
                        b = r[n - 31];
                    r[n] = h(i, o, l, d, f, m, g, b), r[n + 1] = p(i, o, l, d, f, m, g, b)
                }
            }, v.prototype._update = function(e, t) {
                this._prepareBlock(e, t);
                var r = this.W,
                    n = this.h[0],
                    i = this.h[1],
                    u = this.h[2],
                    c = this.h[3],
                    h = this.h[4],
                    p = this.h[5],
                    b = this.h[6],
                    y = this.h[7],
                    v = this.h[8],
                    w = this.h[9],
                    E = this.h[10],
                    A = this.h[11],
                    P = this.h[12],
                    x = this.h[13],
                    O = this.h[14],
                    _ = this.h[15];
                o(this.k.length === r.length);
                for (var I = 0; I < r.length; I += 2) {
                    var T = O,
                        C = _,
                        S = function(e, t) {
                            var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
                            return r < 0 && (r += 4294967296), r
                        }(v, w),
                        k = function(e, t) {
                            var r = s(e, t, 14) ^ s(e, t, 18) ^ s(t, e, 9);
                            return r < 0 && (r += 4294967296), r
                        }(v, w),
                        M = function(e, t, r, n, i) {
                            var o = e & r ^ ~e & i;
                            return o < 0 && (o += 4294967296), o
                        }(v, 0, E, 0, P, x),
                        B = function(e, t, r, n, i, o) {
                            var a = t & n ^ ~t & o;
                            return a < 0 && (a += 4294967296), a
                        }(0, w, 0, A, 0, x),
                        N = this.k[I],
                        R = this.k[I + 1],
                        D = r[I],
                        j = r[I + 1],
                        F = m(T, C, S, k, M, B, N, R, D, j),
                        U = g(T, C, S, k, M, B, N, R, D, j);
                    T = function(e, t) {
                        var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
                        return r < 0 && (r += 4294967296), r
                    }(n, i);
                    var L = d(T, C = function(e, t) {
                            var r = s(e, t, 28) ^ s(t, e, 2) ^ s(t, e, 7);
                            return r < 0 && (r += 4294967296), r
                        }(n, i), S = function(e, t, r, n, i) {
                            var o = e & r ^ e & i ^ r & i;
                            return o < 0 && (o += 4294967296), o
                        }(n, 0, u, 0, h, p), k = function(e, t, r, n, i, o) {
                            var a = t & n ^ t & o ^ n & o;
                            return a < 0 && (a += 4294967296), a
                        }(0, i, 0, c, 0, p)),
                        q = f(T, C, S, k);
                    O = P, _ = x, P = E, x = A, E = v, A = w, v = d(b, y, F, U), w = f(y, y, F, U), b = h, y = p, h = u, p = c, u = n, c = i, n = d(F, U, L, q), i = f(F, U, L, q)
                }
                l(this.h, 0, n, i), l(this.h, 2, u, c), l(this.h, 4, h, p), l(this.h, 6, b, y), l(this.h, 8, v, w), l(this.h, 10, E, A), l(this.h, 12, P, x), l(this.h, 14, O, _)
            }, v.prototype._digest = function(e) {
                return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
        },
        9221: function(e, t, r) {
            "use strict";
            var n = r(69874).rotr32;

            function i(e, t, r) {
                return e & t ^ e & r ^ t & r
            }
            t.ft_1 = function(e, t, r, n) {
                return 0 === e ? t & r ^ ~t & n : 1 === e || 3 === e ? t ^ r ^ n : 2 === e ? i(t, r, n) : void 0
            }, t.ch32 = function(e, t, r) {
                return e & t ^ ~e & r
            }, t.maj32 = i, t.p32 = function(e, t, r) {
                return e ^ t ^ r
            }, t.s0_256 = function(e) {
                return n(e, 2) ^ n(e, 13) ^ n(e, 22)
            }, t.s1_256 = function(e) {
                return n(e, 6) ^ n(e, 11) ^ n(e, 25)
            }, t.g0_256 = function(e) {
                return n(e, 7) ^ n(e, 18) ^ e >>> 3
            }, t.g1_256 = function(e) {
                return n(e, 17) ^ n(e, 19) ^ e >>> 10
            }
        },
        69874: function(e, t, r) {
            "use strict";
            var n = r(71974),
                i = r(87398);

            function o(e) {
                return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0
            }

            function a(e) {
                return 1 === e.length ? "0" + e : e
            }

            function s(e) {
                if (7 === e.length) return "0" + e;
                if (6 === e.length) return "00" + e;
                if (5 === e.length) return "000" + e;
                if (4 === e.length) return "0000" + e;
                if (3 === e.length) return "00000" + e;
                if (2 === e.length) return "000000" + e;
                if (1 === e.length) return "0000000" + e;
                else return e
            }
            t.inherits = i, t.toArray = function(e, t) {
                if (Array.isArray(e)) return e.slice();
                if (!e) return [];
                var r = [];
                if ("string" == typeof e) {
                    if (t) {
                        if ("hex" === t)
                            for ((e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e), i = 0; i < e.length; i += 2) r.push(parseInt(e[i] + e[i + 1], 16))
                    } else
                        for (var n = 0, i = 0; i < e.length; i++) {
                            var o, a, s = e.charCodeAt(i);
                            s < 128 ? r[n++] = s : (s < 2048 ? r[n++] = s >> 6 | 192 : ((o = e, a = i, (64512 & o.charCodeAt(a)) != 55296 || a < 0 || a + 1 >= o.length ? 1 : (64512 & o.charCodeAt(a + 1)) != 56320) ? r[n++] = s >> 12 | 224 : (s = 65536 + ((1023 & s) << 10) + (1023 & e.charCodeAt(++i)), r[n++] = s >> 18 | 240, r[n++] = s >> 12 & 63 | 128), r[n++] = s >> 6 & 63 | 128), r[n++] = 63 & s | 128)
                        }
                } else
                    for (i = 0; i < e.length; i++) r[i] = 0 | e[i];
                return r
            }, t.toHex = function(e) {
                for (var t = "", r = 0; r < e.length; r++) t += a(e[r].toString(16));
                return t
            }, t.htonl = o, t.toHex32 = function(e, t) {
                for (var r = "", n = 0; n < e.length; n++) {
                    var i = e[n];
                    "little" === t && (i = o(i)), r += s(i.toString(16))
                }
                return r
            }, t.zero2 = a, t.zero8 = s, t.join32 = function(e, t, r, i) {
                var o, a = r - t;
                n(a % 4 == 0);
                for (var s = Array(a / 4), u = 0, c = t; u < s.length; u++, c += 4) o = "big" === i ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c], s[u] = o >>> 0;
                return s
            }, t.split32 = function(e, t) {
                for (var r = Array(4 * e.length), n = 0, i = 0; n < e.length; n++, i += 4) {
                    var o = e[n];
                    "big" === t ? (r[i] = o >>> 24, r[i + 1] = o >>> 16 & 255, r[i + 2] = o >>> 8 & 255, r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24, r[i + 2] = o >>> 16 & 255, r[i + 1] = o >>> 8 & 255, r[i] = 255 & o)
                }
                return r
            }, t.rotr32 = function(e, t) {
                return e >>> t | e << 32 - t
            }, t.rotl32 = function(e, t) {
                return e << t | e >>> 32 - t
            }, t.sum32 = function(e, t) {
                return e + t >>> 0
            }, t.sum32_3 = function(e, t, r) {
                return e + t + r >>> 0
            }, t.sum32_4 = function(e, t, r, n) {
                return e + t + r + n >>> 0
            }, t.sum32_5 = function(e, t, r, n, i) {
                return e + t + r + n + i >>> 0
            }, t.sum64 = function(e, t, r, n) {
                var i = e[t],
                    o = n + e[t + 1] >>> 0;
                e[t] = (o < n ? 1 : 0) + r + i >>> 0, e[t + 1] = o
            }, t.sum64_hi = function(e, t, r, n) {
                return (t + n >>> 0 < t ? 1 : 0) + e + r >>> 0
            }, t.sum64_lo = function(e, t, r, n) {
                return t + n >>> 0
            }, t.sum64_4_hi = function(e, t, r, n, i, o, a, s) {
                var u, c = t;
                return e + r + i + a + (0 + ((c = c + n >>> 0) < t ? 1 : 0) + ((c = c + o >>> 0) < o ? 1 : 0) + ((c = c + s >>> 0) < s ? 1 : 0)) >>> 0
            }, t.sum64_4_lo = function(e, t, r, n, i, o, a, s) {
                return t + n + o + s >>> 0
            }, t.sum64_5_hi = function(e, t, r, n, i, o, a, s, u, c) {
                var l, d = t;
                return e + r + i + a + u + (0 + ((d = d + n >>> 0) < t ? 1 : 0) + ((d = d + o >>> 0) < o ? 1 : 0) + ((d = d + s >>> 0) < s ? 1 : 0) + ((d = d + c >>> 0) < c ? 1 : 0)) >>> 0
            }, t.sum64_5_lo = function(e, t, r, n, i, o, a, s, u, c) {
                return t + n + o + s + c >>> 0
            }, t.rotr64_hi = function(e, t, r) {
                return (t << 32 - r | e >>> r) >>> 0
            }, t.rotr64_lo = function(e, t, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }, t.shr64_hi = function(e, t, r) {
                return e >>> r
            }, t.shr64_lo = function(e, t, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }
        },
        6868: function(e, t) { /*!ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource>*/
            t.read = function(e, t, r, n, i) {
                var o, a, s = 8 * i - n - 1,
                    u = (1 << s) - 1,
                    c = u >> 1,
                    l = -7,
                    d = r ? i - 1 : 0,
                    f = r ? -1 : 1,
                    h = e[t + d];
                for (d += f, o = h & (1 << -l) - 1, h >>= -l, l += s; l > 0; o = 256 * o + e[t + d], d += f, l -= 8);
                for (a = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; a = 256 * a + e[t + d], d += f, l -= 8);
                if (0 === o) o = 1 - c;
                else {
                    if (o === u) return a ? NaN : 1 / 0 * (h ? -1 : 1);
                    a += Math.pow(2, n), o -= c
                }
                return (h ? -1 : 1) * a * Math.pow(2, o - n)
            }, t.write = function(e, t, r, n, i, o) {
                var a, s, u, c = 8 * o - i - 1,
                    l = (1 << c) - 1,
                    d = l >> 1,
                    f = 23 === i ? 5960464477539062e-23 : 0,
                    h = n ? 0 : o - 1,
                    p = n ? 1 : -1,
                    m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (isNaN(t = Math.abs(t)) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, a = l) : (a = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), a + d >= 1 ? t += f / u : t += f * Math.pow(2, 1 - d), t * u >= 2 && (a++, u /= 2), a + d >= l ? (s = 0, a = l) : a + d >= 1 ? (s = (t * u - 1) * Math.pow(2, i), a += d) : (s = t * Math.pow(2, d - 1) * Math.pow(2, i), a = 0)); i >= 8; e[r + h] = 255 & s, h += p, s /= 256, i -= 8);
                for (a = a << i | s, c += i; c > 0; e[r + h] = 255 & a, h += p, a /= 256, c -= 8);
                e[r + h - p] |= 128 * m
            }
        },
        87398: function(e) {
            "function" == typeof Object.create ? e.exports = function(e, t) {
                t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
            } : e.exports = function(e, t) {
                if (t) {
                    e.super_ = t;
                    var r = function() {};
                    r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e
                }
            }
        },
        83524: function(e, t, r) {
            var n, i = r(25566);
            ! function() {
                "use strict";
                var o = "input is invalid type",
                    a = "object" == typeof window,
                    s = a ? window : {};
                s.JS_SHA3_NO_WINDOW && (a = !1);
                var u = !a && "object" == typeof self;
                !s.JS_SHA3_NO_NODE_JS && "object" == typeof i && i.versions && i.versions.node ? s = r.g : u && (s = self);
                var c = !s.JS_SHA3_NO_COMMON_JS && e.exports,
                    l = r.amdO,
                    d = !s.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                    f = "0123456789abcdef".split(""),
                    h = [4, 1024, 262144, 67108864],
                    p = [0, 8, 16, 24],
                    m = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
                    g = [224, 256, 384, 512],
                    b = [128, 256],
                    y = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                    v = {
                        128: 168,
                        256: 136
                    };
                (s.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(e) {
                    return "[object Array]" === Object.prototype.toString.call(e)
                }), d && (s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(e) {
                    return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer
                });
                for (var w = function(e, t, r) {
                        return function(n) {
                            return new R(e, t, e).update(n)[r]()
                        }
                    }, E = function(e, t, r) {
                        return function(n, i) {
                            return new R(e, t, i).update(n)[r]()
                        }
                    }, A = function(e, t, r) {
                        return function(t, n, i, o) {
                            return I["cshake" + e].update(t, n, i, o)[r]()
                        }
                    }, P = function(e, t, r) {
                        return function(t, n, i, o) {
                            return I["kmac" + e].update(t, n, i, o)[r]()
                        }
                    }, x = function(e, t, r, n) {
                        for (var i = 0; i < y.length; ++i) {
                            var o = y[i];
                            e[o] = t(r, n, o)
                        }
                        return e
                    }, O = function(e, t) {
                        var r = w(e, t, "hex");
                        return r.create = function() {
                            return new R(e, t, e)
                        }, r.update = function(e) {
                            return r.create().update(e)
                        }, x(r, w, e, t)
                    }, _ = [{
                        name: "keccak",
                        padding: [1, 256, 65536, 16777216],
                        bits: g,
                        createMethod: O
                    }, {
                        name: "sha3",
                        padding: [6, 1536, 393216, 100663296],
                        bits: g,
                        createMethod: O
                    }, {
                        name: "shake",
                        padding: [31, 7936, 2031616, 520093696],
                        bits: b,
                        createMethod: function(e, t) {
                            var r = E(e, t, "hex");
                            return r.create = function(r) {
                                return new R(e, t, r)
                            }, r.update = function(e, t) {
                                return r.create(t).update(e)
                            }, x(r, E, e, t)
                        }
                    }, {
                        name: "cshake",
                        padding: h,
                        bits: b,
                        createMethod: function(e, t) {
                            var r = v[e],
                                n = A(e, t, "hex");
                            return n.create = function(n, i, o) {
                                return i || o ? new R(e, t, n).bytepad([i, o], r) : I["shake" + e].create(n)
                            }, n.update = function(e, t, r, i) {
                                return n.create(t, r, i).update(e)
                            }, x(n, A, e, t)
                        }
                    }, {
                        name: "kmac",
                        padding: h,
                        bits: b,
                        createMethod: function(e, t) {
                            var r = v[e],
                                n = P(e, t, "hex");
                            return n.create = function(n, i, o) {
                                return new D(e, t, i).bytepad(["KMAC", o], r).bytepad([n], r)
                            }, n.update = function(e, t, r, i) {
                                return n.create(e, r, i).update(t)
                            }, x(n, P, e, t)
                        }
                    }], I = {}, T = [], C = 0; C < _.length; ++C)
                    for (var S = _[C], k = S.bits, M = 0; M < k.length; ++M) {
                        var B = S.name + "_" + k[M];
                        if (T.push(B), I[B] = S.createMethod(k[M], S.padding), "sha3" !== S.name) {
                            var N = S.name + k[M];
                            T.push(N), I[N] = I[B]
                        }
                    }

                function R(e, t, r) {
                    this.blocks = [], this.s = [], this.padding = t, this.outputBits = r, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (e << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                    for (var n = 0; n < 50; ++n) this.s[n] = 0
                }

                function D(e, t, r) {
                    R.call(this, e, t, r)
                }
                R.prototype.update = function(e) {
                    if (this.finalized) throw Error("finalize already called");
                    var t, r = typeof e;
                    if ("string" !== r) {
                        if ("object" === r) {
                            if (null === e) throw Error(o);
                            if (d && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!Array.isArray(e) && (!d || !ArrayBuffer.isView(e))) throw Error(o)
                        } else throw Error(o);
                        t = !0
                    }
                    for (var n, i, a = this.blocks, s = this.byteCount, u = e.length, c = this.blockCount, l = 0, f = this.s; l < u;) {
                        if (this.reset)
                            for (n = 1, this.reset = !1, a[0] = this.block; n < c + 1; ++n) a[n] = 0;
                        if (t)
                            for (n = this.start; l < u && n < s; ++l) a[n >> 2] |= e[l] << p[3 & n++];
                        else
                            for (n = this.start; l < u && n < s; ++l)(i = e.charCodeAt(l)) < 128 ? a[n >> 2] |= i << p[3 & n++] : (i < 2048 ? a[n >> 2] |= (192 | i >> 6) << p[3 & n++] : (i < 55296 || i >= 57344 ? a[n >> 2] |= (224 | i >> 12) << p[3 & n++] : (i = 65536 + ((1023 & i) << 10 | 1023 & e.charCodeAt(++l)), a[n >> 2] |= (240 | i >> 18) << p[3 & n++], a[n >> 2] |= (128 | i >> 12 & 63) << p[3 & n++]), a[n >> 2] |= (128 | i >> 6 & 63) << p[3 & n++]), a[n >> 2] |= (128 | 63 & i) << p[3 & n++]);
                        if (this.lastByteIndex = n, n >= s) {
                            for (this.start = n - s, this.block = a[c], n = 0; n < c; ++n) f[n] ^= a[n];
                            j(f), this.reset = !0
                        } else this.start = n
                    }
                    return this
                }, R.prototype.encode = function(e, t) {
                    var r = 255 & e,
                        n = 1,
                        i = [r];
                    for (e >>= 8, r = 255 & e; r > 0;) i.unshift(r), e >>= 8, r = 255 & e, ++n;
                    return t ? i.push(n) : i.unshift(n), this.update(i), i.length
                }, R.prototype.encodeString = function(e) {
                    var t, r = typeof e;
                    if ("string" !== r) {
                        if ("object" === r) {
                            if (null === e) throw Error(o);
                            if (d && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!Array.isArray(e) && (!d || !ArrayBuffer.isView(e))) throw Error(o)
                        } else throw Error(o);
                        t = !0
                    }
                    var n = 0,
                        i = e.length;
                    if (t) n = i;
                    else
                        for (var a = 0; a < e.length; ++a) {
                            var s = e.charCodeAt(a);
                            s < 128 ? n += 1 : s < 2048 ? n += 2 : s < 55296 || s >= 57344 ? n += 3 : (s = 65536 + ((1023 & s) << 10 | 1023 & e.charCodeAt(++a)), n += 4)
                        }
                    return n += this.encode(8 * n), this.update(e), n
                }, R.prototype.bytepad = function(e, t) {
                    for (var r = this.encode(t), n = 0; n < e.length; ++n) r += this.encodeString(e[n]);
                    var i = t - r % t,
                        o = [];
                    return o.length = i, this.update(o), this
                }, R.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var e = this.blocks,
                            t = this.lastByteIndex,
                            r = this.blockCount,
                            n = this.s;
                        if (e[t >> 2] |= this.padding[3 & t], this.lastByteIndex === this.byteCount)
                            for (t = 1, e[0] = e[r]; t < r + 1; ++t) e[t] = 0;
                        for (e[r - 1] |= 2147483648, t = 0; t < r; ++t) n[t] ^= e[t];
                        j(n)
                    }
                }, R.prototype.toString = R.prototype.hex = function() {
                    this.finalize();
                    for (var e, t = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, a = 0, s = ""; a < n;) {
                        for (o = 0; o < t && a < n; ++o, ++a) s += f[(e = r[o]) >> 4 & 15] + f[15 & e] + f[e >> 12 & 15] + f[e >> 8 & 15] + f[e >> 20 & 15] + f[e >> 16 & 15] + f[e >> 28 & 15] + f[e >> 24 & 15];
                        a % t == 0 && (j(r), o = 0)
                    }
                    return i && (s += f[(e = r[o]) >> 4 & 15] + f[15 & e], i > 1 && (s += f[e >> 12 & 15] + f[e >> 8 & 15]), i > 2 && (s += f[e >> 20 & 15] + f[e >> 16 & 15])), s
                }, R.prototype.arrayBuffer = function() {
                    this.finalize();
                    for (var e, t = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, a = 0, s = this.outputBits >> 3, u = new Uint32Array(e = new ArrayBuffer(i ? n + 1 << 2 : s)); a < n;) {
                        for (o = 0; o < t && a < n; ++o, ++a) u[a] = r[o];
                        a % t == 0 && j(r)
                    }
                    return i && (u[o] = r[o], e = e.slice(0, s)), e
                }, R.prototype.buffer = R.prototype.arrayBuffer, R.prototype.digest = R.prototype.array = function() {
                    this.finalize();
                    for (var e, t, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, a = 0, s = 0, u = []; s < i;) {
                        for (a = 0; a < r && s < i; ++a, ++s) e = s << 2, t = n[a], u[e] = 255 & t, u[e + 1] = t >> 8 & 255, u[e + 2] = t >> 16 & 255, u[e + 3] = t >> 24 & 255;
                        s % r == 0 && j(n)
                    }
                    return o && (e = s << 2, t = n[a], u[e] = 255 & t, o > 1 && (u[e + 1] = t >> 8 & 255), o > 2 && (u[e + 2] = t >> 16 & 255)), u
                }, D.prototype = new R, D.prototype.finalize = function() {
                    return this.encode(this.outputBits, !0), R.prototype.finalize.call(this)
                };
                var j = function(e) {
                    var t, r, n, i, o, a, s, u, c, l, d, f, h, p, g, b, y, v, w, E, A, P, x, O, _, I, T, C, S, k, M, B, N, R, D, j, F, U, L, q, z, $, H, G, W, K, Y, V, Q, J, Z, X, ee, et, er, en, ei, eo, ea, es, eu, ec, el;
                    for (n = 0; n < 48; n += 2) i = e[0] ^ e[10] ^ e[20] ^ e[30] ^ e[40], o = e[1] ^ e[11] ^ e[21] ^ e[31] ^ e[41], a = e[2] ^ e[12] ^ e[22] ^ e[32] ^ e[42], s = e[3] ^ e[13] ^ e[23] ^ e[33] ^ e[43], u = e[4] ^ e[14] ^ e[24] ^ e[34] ^ e[44], c = e[5] ^ e[15] ^ e[25] ^ e[35] ^ e[45], l = e[6] ^ e[16] ^ e[26] ^ e[36] ^ e[46], d = e[7] ^ e[17] ^ e[27] ^ e[37] ^ e[47], f = e[8] ^ e[18] ^ e[28] ^ e[38] ^ e[48], h = e[9] ^ e[19] ^ e[29] ^ e[39] ^ e[49], t = f ^ (a << 1 | s >>> 31), r = h ^ (s << 1 | a >>> 31), e[0] ^= t, e[1] ^= r, e[10] ^= t, e[11] ^= r, e[20] ^= t, e[21] ^= r, e[30] ^= t, e[31] ^= r, e[40] ^= t, e[41] ^= r, t = i ^ (u << 1 | c >>> 31), r = o ^ (c << 1 | u >>> 31), e[2] ^= t, e[3] ^= r, e[12] ^= t, e[13] ^= r, e[22] ^= t, e[23] ^= r, e[32] ^= t, e[33] ^= r, e[42] ^= t, e[43] ^= r, t = a ^ (l << 1 | d >>> 31), r = s ^ (d << 1 | l >>> 31), e[4] ^= t, e[5] ^= r, e[14] ^= t, e[15] ^= r, e[24] ^= t, e[25] ^= r, e[34] ^= t, e[35] ^= r, e[44] ^= t, e[45] ^= r, t = u ^ (f << 1 | h >>> 31), r = c ^ (h << 1 | f >>> 31), e[6] ^= t, e[7] ^= r, e[16] ^= t, e[17] ^= r, e[26] ^= t, e[27] ^= r, e[36] ^= t, e[37] ^= r, e[46] ^= t, e[47] ^= r, t = l ^ (i << 1 | o >>> 31), r = d ^ (o << 1 | i >>> 31), e[8] ^= t, e[9] ^= r, e[18] ^= t, e[19] ^= r, e[28] ^= t, e[29] ^= r, e[38] ^= t, e[39] ^= r, e[48] ^= t, e[49] ^= r, p = e[0], g = e[1], K = e[11] << 4 | e[10] >>> 28, Y = e[10] << 4 | e[11] >>> 28, C = e[20] << 3 | e[21] >>> 29, S = e[21] << 3 | e[20] >>> 29, es = e[31] << 9 | e[30] >>> 23, eu = e[30] << 9 | e[31] >>> 23, $ = e[40] << 18 | e[41] >>> 14, H = e[41] << 18 | e[40] >>> 14, R = e[2] << 1 | e[3] >>> 31, D = e[3] << 1 | e[2] >>> 31, b = e[13] << 12 | e[12] >>> 20, y = e[12] << 12 | e[13] >>> 20, V = e[22] << 10 | e[23] >>> 22, Q = e[23] << 10 | e[22] >>> 22, k = e[33] << 13 | e[32] >>> 19, M = e[32] << 13 | e[33] >>> 19, ec = e[42] << 2 | e[43] >>> 30, el = e[43] << 2 | e[42] >>> 30, et = e[5] << 30 | e[4] >>> 2, er = e[4] << 30 | e[5] >>> 2, j = e[14] << 6 | e[15] >>> 26, F = e[15] << 6 | e[14] >>> 26, v = e[25] << 11 | e[24] >>> 21, w = e[24] << 11 | e[25] >>> 21, J = e[34] << 15 | e[35] >>> 17, Z = e[35] << 15 | e[34] >>> 17, B = e[45] << 29 | e[44] >>> 3, N = e[44] << 29 | e[45] >>> 3, O = e[6] << 28 | e[7] >>> 4, _ = e[7] << 28 | e[6] >>> 4, en = e[17] << 23 | e[16] >>> 9, ei = e[16] << 23 | e[17] >>> 9, U = e[26] << 25 | e[27] >>> 7, L = e[27] << 25 | e[26] >>> 7, E = e[36] << 21 | e[37] >>> 11, A = e[37] << 21 | e[36] >>> 11, X = e[47] << 24 | e[46] >>> 8, ee = e[46] << 24 | e[47] >>> 8, G = e[8] << 27 | e[9] >>> 5, W = e[9] << 27 | e[8] >>> 5, I = e[18] << 20 | e[19] >>> 12, T = e[19] << 20 | e[18] >>> 12, eo = e[29] << 7 | e[28] >>> 25, ea = e[28] << 7 | e[29] >>> 25, q = e[38] << 8 | e[39] >>> 24, z = e[39] << 8 | e[38] >>> 24, P = e[48] << 14 | e[49] >>> 18, x = e[49] << 14 | e[48] >>> 18, e[0] = p ^ ~b & v, e[1] = g ^ ~y & w, e[10] = O ^ ~I & C, e[11] = _ ^ ~T & S, e[20] = R ^ ~j & U, e[21] = D ^ ~F & L, e[30] = G ^ ~K & V, e[31] = W ^ ~Y & Q, e[40] = et ^ ~en & eo, e[41] = er ^ ~ei & ea, e[2] = b ^ ~v & E, e[3] = y ^ ~w & A, e[12] = I ^ ~C & k, e[13] = T ^ ~S & M, e[22] = j ^ ~U & q, e[23] = F ^ ~L & z, e[32] = K ^ ~V & J, e[33] = Y ^ ~Q & Z, e[42] = en ^ ~eo & es, e[43] = ei ^ ~ea & eu, e[4] = v ^ ~E & P, e[5] = w ^ ~A & x, e[14] = C ^ ~k & B, e[15] = S ^ ~M & N, e[24] = U ^ ~q & $, e[25] = L ^ ~z & H, e[34] = V ^ ~J & X, e[35] = Q ^ ~Z & ee, e[44] = eo ^ ~es & ec, e[45] = ea ^ ~eu & el, e[6] = E ^ ~P & p, e[7] = A ^ ~x & g, e[16] = k ^ ~B & O, e[17] = M ^ ~N & _, e[26] = q ^ ~$ & R, e[27] = z ^ ~H & D, e[36] = J ^ ~X & G, e[37] = Z ^ ~ee & W, e[46] = es ^ ~ec & et, e[47] = eu ^ ~el & er, e[8] = P ^ ~p & b, e[9] = x ^ ~g & y, e[18] = B ^ ~O & I, e[19] = N ^ ~_ & T, e[28] = $ ^ ~R & j, e[29] = H ^ ~D & F, e[38] = X ^ ~G & K, e[39] = ee ^ ~W & Y, e[48] = ec ^ ~et & en, e[49] = el ^ ~er & ei, e[0] ^= m[n], e[1] ^= m[n + 1]
                };
                if (c) e.exports = I;
                else {
                    for (C = 0; C < T.length; ++C) s[T[C]] = I[T[C]];
                    l && void 0 !== (n = (function() {
                        return I
                    }).call(t, r, t, e)) && (e.exports = n)
                }
            }()
        },
        71974: function(e) {
            function t(e, t) {
                if (!e) throw Error(t || "Assertion failed")
            }
            e.exports = t, t.equal = function(e, t, r) {
                if (e != t) throw Error(r || "Assertion failed: " + e + " != " + t)
            }
        },
        16463: function(e, t, r) {
            "use strict";
            var n = r(71169);
            r.o(n, "useRouter") && r.d(t, {
                useRouter: function() {
                    return n.useRouter
                }
            }), r.o(n, "useSearchParams") && r.d(t, {
                useSearchParams: function() {
                    return n.useSearchParams
                }
            })
        },
        7449: function(e, t) {
            "use strict";

            function r() {
                return null
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), Object.defineProperty(t, "default", {
                enumerable: !0,
                get: function() {
                    return r
                }
            }), ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        99949: function(e, t, r) {
            "use strict";
            var n = r(88877);

            function i() {}

            function o() {}
            o.resetWarningCache = i, e.exports = function() {
                function e(e, t, r, i, o, a) {
                    if (a !== n) {
                        var s = Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                        throw s.name = "Invariant Violation", s
                    }
                }

                function t() {
                    return e
                }
                e.isRequired = e;
                var r = {
                    array: e,
                    bigint: e,
                    bool: e,
                    func: e,
                    number: e,
                    object: e,
                    string: e,
                    symbol: e,
                    any: e,
                    arrayOf: t,
                    element: e,
                    elementType: e,
                    instanceOf: t,
                    node: e,
                    objectOf: t,
                    oneOf: t,
                    oneOfType: t,
                    shape: t,
                    exact: t,
                    checkPropTypes: o,
                    resetWarningCache: i
                };
                return r.PropTypes = r, r
            }
        },
        41448: function(e, t, r) {
            e.exports = r(99949)()
        },
        88877: function(e) {
            "use strict";
            e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
        },
        19783: function(e, t, r) {
            let n = r(87936),
                i = r(23364),
                o = r(64811),
                a = r(65773);

            function s(e, t, r, o, a) {
                let s = [].slice.call(arguments, 1),
                    u = s.length,
                    c = "function" == typeof s[u - 1];
                if (!c && !n()) throw Error("Callback required as last argument");
                if (c) {
                    if (u < 2) throw Error("Too few arguments provided");
                    2 === u ? (a = r, r = t, t = o = void 0) : 3 === u && (t.getContext && void 0 === a ? (a = o, o = void 0) : (a = o, o = r, r = t, t = void 0))
                } else {
                    if (u < 1) throw Error("Too few arguments provided");
                    return 1 === u ? (r = t, t = o = void 0) : 2 !== u || t.getContext || (o = r, r = t, t = void 0), new Promise(function(n, a) {
                        try {
                            let a = i.create(r, o);
                            n(e(a, t, o))
                        } catch (e) {
                            a(e)
                        }
                    })
                }
                try {
                    let n = i.create(r, o);
                    a(null, e(n, t, o))
                } catch (e) {
                    a(e)
                }
            }
            t.create = i.create, t.toCanvas = s.bind(null, o.render), t.toDataURL = s.bind(null, o.renderToDataURL), t.toString = s.bind(null, function(e, t, r) {
                return a.render(e, r)
            })
        },
        87936: function(e) {
            e.exports = function() {
                return "function" == typeof Promise && Promise.prototype && Promise.prototype.then
            }
        },
        80532: function(e, t, r) {
            let n = r(2601).getSymbolSize;
            t.getRowColCoords = function(e) {
                if (1 === e) return [];
                let t = Math.floor(e / 7) + 2,
                    r = n(e),
                    i = 145 === r ? 26 : 2 * Math.ceil((r - 13) / (2 * t - 2)),
                    o = [r - 7];
                for (let e = 1; e < t - 1; e++) o[e] = o[e - 1] - i;
                return o.push(6), o.reverse()
            }, t.getPositions = function(e) {
                let r = [],
                    n = t.getRowColCoords(e),
                    i = n.length;
                for (let e = 0; e < i; e++)
                    for (let t = 0; t < i; t++)(0 !== e || 0 !== t) && (0 !== e || t !== i - 1) && (e !== i - 1 || 0 !== t) && r.push([n[e], n[t]]);
                return r
            }
        },
        62971: function(e, t, r) {
            let n = r(58257),
                i = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", " ", "$", "%", "*", "+", "-", ".", "/", ":"];

            function o(e) {
                this.mode = n.ALPHANUMERIC, this.data = e
            }
            o.getBitsLength = function(e) {
                return 11 * Math.floor(e / 2) + e % 2 * 6
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(e) {
                let t;
                for (t = 0; t + 2 <= this.data.length; t += 2) {
                    let r = 45 * i.indexOf(this.data[t]);
                    r += i.indexOf(this.data[t + 1]), e.put(r, 11)
                }
                this.data.length % 2 && e.put(i.indexOf(this.data[t]), 6)
            }, e.exports = o
        },
        86423: function(e) {
            function t() {
                this.buffer = [], this.length = 0
            }
            t.prototype = {
                get: function(e) {
                    return (this.buffer[Math.floor(e / 8)] >>> 7 - e % 8 & 1) == 1
                },
                put: function(e, t) {
                    for (let r = 0; r < t; r++) this.putBit((e >>> t - r - 1 & 1) == 1)
                },
                getLengthInBits: function() {
                    return this.length
                },
                putBit: function(e) {
                    let t = Math.floor(this.length / 8);
                    this.buffer.length <= t && this.buffer.push(0), e && (this.buffer[t] |= 128 >>> this.length % 8), this.length++
                }
            }, e.exports = t
        },
        43143: function(e) {
            function t(e) {
                if (!e || e < 1) throw Error("BitMatrix size must be defined and greater than 0");
                this.size = e, this.data = new Uint8Array(e * e), this.reservedBit = new Uint8Array(e * e)
            }
            t.prototype.set = function(e, t, r, n) {
                let i = e * this.size + t;
                this.data[i] = r, n && (this.reservedBit[i] = !0)
            }, t.prototype.get = function(e, t) {
                return this.data[e * this.size + t]
            }, t.prototype.xor = function(e, t, r) {
                this.data[e * this.size + t] ^= r
            }, t.prototype.isReserved = function(e, t) {
                return this.reservedBit[e * this.size + t]
            }, e.exports = t
        },
        23841: function(e, t, r) {
            let n = r(47059),
                i = r(58257);

            function o(e) {
                this.mode = i.BYTE, "string" == typeof e && (e = n(e)), this.data = new Uint8Array(e)
            }
            o.getBitsLength = function(e) {
                return 8 * e
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(e) {
                for (let t = 0, r = this.data.length; t < r; t++) e.put(this.data[t], 8)
            }, e.exports = o
        },
        34270: function(e, t, r) {
            let n = r(38428),
                i = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81],
                o = [7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];
            t.getBlocksCount = function(e, t) {
                switch (t) {
                    case n.L:
                        return i[(e - 1) * 4 + 0];
                    case n.M:
                        return i[(e - 1) * 4 + 1];
                    case n.Q:
                        return i[(e - 1) * 4 + 2];
                    case n.H:
                        return i[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }, t.getTotalCodewordsCount = function(e, t) {
                switch (t) {
                    case n.L:
                        return o[(e - 1) * 4 + 0];
                    case n.M:
                        return o[(e - 1) * 4 + 1];
                    case n.Q:
                        return o[(e - 1) * 4 + 2];
                    case n.H:
                        return o[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }
        },
        38428: function(e, t) {
            t.L = {
                bit: 1
            }, t.M = {
                bit: 0
            }, t.Q = {
                bit: 3
            }, t.H = {
                bit: 2
            }, t.isValid = function(e) {
                return e && void 0 !== e.bit && e.bit >= 0 && e.bit < 4
            }, t.from = function(e, r) {
                if (t.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        switch (e.toLowerCase()) {
                            case "l":
                            case "low":
                                return t.L;
                            case "m":
                            case "medium":
                                return t.M;
                            case "q":
                            case "quartile":
                                return t.Q;
                            case "h":
                            case "high":
                                return t.H;
                            default:
                                throw Error("Unknown EC Level: " + e)
                        }
                    }(e)
                } catch (e) {
                    return r
                }
            }
        },
        16123: function(e, t, r) {
            let n = r(2601).getSymbolSize;
            t.getPositions = function(e) {
                let t = n(e);
                return [
                    [0, 0],
                    [t - 7, 0],
                    [0, t - 7]
                ]
            }
        },
        59906: function(e, t, r) {
            let n = r(2601),
                i = n.getBCHDigit(1335);
            t.getEncodedBits = function(e, t) {
                let r = e.bit << 3 | t,
                    o = r << 10;
                for (; n.getBCHDigit(o) - i >= 0;) o ^= 1335 << n.getBCHDigit(o) - i;
                return (r << 10 | o) ^ 21522
            }
        },
        61011: function(e, t) {
            let r = new Uint8Array(512),
                n = new Uint8Array(256);
            ! function() {
                let e = 1;
                for (let t = 0; t < 255; t++) r[t] = e, n[e] = t, 256 & (e <<= 1) && (e ^= 285);
                for (let e = 255; e < 512; e++) r[e] = r[e - 255]
            }(), t.log = function(e) {
                if (e < 1) throw Error("log(" + e + ")");
                return n[e]
            }, t.exp = function(e) {
                return r[e]
            }, t.mul = function(e, t) {
                return 0 === e || 0 === t ? 0 : r[n[e] + n[t]]
            }
        },
        62558: function(e, t, r) {
            let n = r(58257),
                i = r(2601);

            function o(e) {
                this.mode = n.KANJI, this.data = e
            }
            o.getBitsLength = function(e) {
                return 13 * e
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(e) {
                let t;
                for (t = 0; t < this.data.length; t++) {
                    let r = i.toSJIS(this.data[t]);
                    if (r >= 33088 && r <= 40956) r -= 33088;
                    else if (r >= 57408 && r <= 60351) r -= 49472;
                    else throw Error("Invalid SJIS character: " + this.data[t] + "\nMake sure your charset is UTF-8");
                    r = (r >>> 8 & 255) * 192 + (255 & r), e.put(r, 13)
                }
            }, e.exports = o
        },
        42903: function(e, t) {
            t.Patterns = {
                PATTERN000: 0,
                PATTERN001: 1,
                PATTERN010: 2,
                PATTERN011: 3,
                PATTERN100: 4,
                PATTERN101: 5,
                PATTERN110: 6,
                PATTERN111: 7
            };
            let r = {
                N1: 3,
                N2: 3,
                N3: 40,
                N4: 10
            };
            t.isValid = function(e) {
                return null != e && "" !== e && !isNaN(e) && e >= 0 && e <= 7
            }, t.from = function(e) {
                return t.isValid(e) ? parseInt(e, 10) : void 0
            }, t.getPenaltyN1 = function(e) {
                let t = e.size,
                    n = 0,
                    i = 0,
                    o = 0,
                    a = null,
                    s = null;
                for (let u = 0; u < t; u++) {
                    i = o = 0, a = s = null;
                    for (let c = 0; c < t; c++) {
                        let t = e.get(u, c);
                        t === a ? i++ : (i >= 5 && (n += r.N1 + (i - 5)), a = t, i = 1), (t = e.get(c, u)) === s ? o++ : (o >= 5 && (n += r.N1 + (o - 5)), s = t, o = 1)
                    }
                    i >= 5 && (n += r.N1 + (i - 5)), o >= 5 && (n += r.N1 + (o - 5))
                }
                return n
            }, t.getPenaltyN2 = function(e) {
                let t = e.size,
                    n = 0;
                for (let r = 0; r < t - 1; r++)
                    for (let i = 0; i < t - 1; i++) {
                        let t = e.get(r, i) + e.get(r, i + 1) + e.get(r + 1, i) + e.get(r + 1, i + 1);
                        (4 === t || 0 === t) && n++
                    }
                return n * r.N2
            }, t.getPenaltyN3 = function(e) {
                let t = e.size,
                    n = 0,
                    i = 0,
                    o = 0;
                for (let r = 0; r < t; r++) {
                    i = o = 0;
                    for (let a = 0; a < t; a++) i = i << 1 & 2047 | e.get(r, a), a >= 10 && (1488 === i || 93 === i) && n++, o = o << 1 & 2047 | e.get(a, r), a >= 10 && (1488 === o || 93 === o) && n++
                }
                return n * r.N3
            }, t.getPenaltyN4 = function(e) {
                let t = 0,
                    n = e.data.length;
                for (let r = 0; r < n; r++) t += e.data[r];
                return Math.abs(Math.ceil(100 * t / n / 5) - 10) * r.N4
            }, t.applyMask = function(e, r) {
                let n = r.size;
                for (let i = 0; i < n; i++)
                    for (let o = 0; o < n; o++) r.isReserved(o, i) || r.xor(o, i, function(e, r, n) {
                        switch (e) {
                            case t.Patterns.PATTERN000:
                                return (r + n) % 2 == 0;
                            case t.Patterns.PATTERN001:
                                return r % 2 == 0;
                            case t.Patterns.PATTERN010:
                                return n % 3 == 0;
                            case t.Patterns.PATTERN011:
                                return (r + n) % 3 == 0;
                            case t.Patterns.PATTERN100:
                                return (Math.floor(r / 2) + Math.floor(n / 3)) % 2 == 0;
                            case t.Patterns.PATTERN101:
                                return r * n % 2 + r * n % 3 == 0;
                            case t.Patterns.PATTERN110:
                                return (r * n % 2 + r * n % 3) % 2 == 0;
                            case t.Patterns.PATTERN111:
                                return (r * n % 3 + (r + n) % 2) % 2 == 0;
                            default:
                                throw Error("bad maskPattern:" + e)
                        }
                    }(e, o, i))
            }, t.getBestMask = function(e, r) {
                let n = Object.keys(t.Patterns).length,
                    i = 0,
                    o = 1 / 0;
                for (let a = 0; a < n; a++) {
                    r(a), t.applyMask(a, e);
                    let n = t.getPenaltyN1(e) + t.getPenaltyN2(e) + t.getPenaltyN3(e) + t.getPenaltyN4(e);
                    t.applyMask(a, e), n < o && (o = n, i = a)
                }
                return i
            }
        },
        58257: function(e, t, r) {
            let n = r(66477),
                i = r(36276);
            t.NUMERIC = {
                id: "Numeric",
                bit: 1,
                ccBits: [10, 12, 14]
            }, t.ALPHANUMERIC = {
                id: "Alphanumeric",
                bit: 2,
                ccBits: [9, 11, 13]
            }, t.BYTE = {
                id: "Byte",
                bit: 4,
                ccBits: [8, 16, 16]
            }, t.KANJI = {
                id: "Kanji",
                bit: 8,
                ccBits: [8, 10, 12]
            }, t.MIXED = {
                bit: -1
            }, t.getCharCountIndicator = function(e, t) {
                if (!e.ccBits) throw Error("Invalid mode: " + e);
                if (!n.isValid(t)) throw Error("Invalid version: " + t);
                return t >= 1 && t < 10 ? e.ccBits[0] : t < 27 ? e.ccBits[1] : e.ccBits[2]
            }, t.getBestModeForData = function(e) {
                return i.testNumeric(e) ? t.NUMERIC : i.testAlphanumeric(e) ? t.ALPHANUMERIC : i.testKanji(e) ? t.KANJI : t.BYTE
            }, t.toString = function(e) {
                if (e && e.id) return e.id;
                throw Error("Invalid mode")
            }, t.isValid = function(e) {
                return e && e.bit && e.ccBits
            }, t.from = function(e, r) {
                if (t.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        switch (e.toLowerCase()) {
                            case "numeric":
                                return t.NUMERIC;
                            case "alphanumeric":
                                return t.ALPHANUMERIC;
                            case "kanji":
                                return t.KANJI;
                            case "byte":
                                return t.BYTE;
                            default:
                                throw Error("Unknown mode: " + e)
                        }
                    }(e)
                } catch (e) {
                    return r
                }
            }
        },
        6078: function(e, t, r) {
            let n = r(58257);

            function i(e) {
                this.mode = n.NUMERIC, this.data = e.toString()
            }
            i.getBitsLength = function(e) {
                return 10 * Math.floor(e / 3) + (e % 3 ? e % 3 * 3 + 1 : 0)
            }, i.prototype.getLength = function() {
                return this.data.length
            }, i.prototype.getBitsLength = function() {
                return i.getBitsLength(this.data.length)
            }, i.prototype.write = function(e) {
                let t, r;
                for (t = 0; t + 3 <= this.data.length; t += 3) r = parseInt(this.data.substr(t, 3), 10), e.put(r, 10);
                let n = this.data.length - t;
                n > 0 && (r = parseInt(this.data.substr(t), 10), e.put(r, 3 * n + 1))
            }, e.exports = i
        },
        80958: function(e, t, r) {
            let n = r(61011);
            t.mul = function(e, t) {
                let r = new Uint8Array(e.length + t.length - 1);
                for (let i = 0; i < e.length; i++)
                    for (let o = 0; o < t.length; o++) r[i + o] ^= n.mul(e[i], t[o]);
                return r
            }, t.mod = function(e, t) {
                let r = new Uint8Array(e);
                for (; r.length - t.length >= 0;) {
                    let e = r[0];
                    for (let i = 0; i < t.length; i++) r[i] ^= n.mul(t[i], e);
                    let i = 0;
                    for (; i < r.length && 0 === r[i];) i++;
                    r = r.slice(i)
                }
                return r
            }, t.generateECPolynomial = function(e) {
                let r = new Uint8Array([1]);
                for (let i = 0; i < e; i++) r = t.mul(r, new Uint8Array([1, n.exp(i)]));
                return r
            }
        },
        23364: function(e, t, r) {
            let n = r(2601),
                i = r(38428),
                o = r(86423),
                a = r(43143),
                s = r(80532),
                u = r(16123),
                c = r(42903),
                l = r(34270),
                d = r(84001),
                f = r(11888),
                h = r(59906),
                p = r(58257),
                m = r(25051);

            function g(e, t, r) {
                let n, i;
                let o = e.size,
                    a = h.getEncodedBits(t, r);
                for (n = 0; n < 15; n++) i = (a >> n & 1) == 1, n < 6 ? e.set(n, 8, i, !0) : n < 8 ? e.set(n + 1, 8, i, !0) : e.set(o - 15 + n, 8, i, !0), n < 8 ? e.set(8, o - n - 1, i, !0) : n < 9 ? e.set(8, 15 - n - 1 + 1, i, !0) : e.set(8, 15 - n - 1, i, !0);
                e.set(o - 8, 8, 1, !0)
            }
            t.create = function(e, t) {
                let r, h;
                if (void 0 === e || "" === e) throw Error("No input text");
                let b = i.M;
                return void 0 !== t && (b = i.from(t.errorCorrectionLevel, i.M), r = f.from(t.version), h = c.from(t.maskPattern), t.toSJISFunc && n.setToSJISFunction(t.toSJISFunc)),
                    function(e, t, r, i) {
                        let h;
                        if (Array.isArray(e)) h = m.fromArray(e);
                        else if ("string" == typeof e) {
                            let n = t;
                            if (!n) {
                                let t = m.rawSplit(e);
                                n = f.getBestVersionForData(t, r)
                            }
                            h = m.fromString(e, n || 40)
                        } else throw Error("Invalid data");
                        let b = f.getBestVersionForData(h, r);
                        if (!b) throw Error("The amount of data is too big to be stored in a QR Code");
                        if (t) {
                            if (t < b) throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + b + ".\n")
                        } else t = b;
                        let y = function(e, t, r) {
                                let i = new o;
                                r.forEach(function(t) {
                                    i.put(t.mode.bit, 4), i.put(t.getLength(), p.getCharCountIndicator(t.mode, e)), t.write(i)
                                });
                                let a = (n.getSymbolTotalCodewords(e) - l.getTotalCodewordsCount(e, t)) * 8;
                                for (i.getLengthInBits() + 4 <= a && i.put(0, 4); i.getLengthInBits() % 8 != 0;) i.putBit(0);
                                let s = (a - i.getLengthInBits()) / 8;
                                for (let e = 0; e < s; e++) i.put(e % 2 ? 17 : 236, 8);
                                return function(e, t, r) {
                                    let i, o;
                                    let a = n.getSymbolTotalCodewords(t),
                                        s = a - l.getTotalCodewordsCount(t, r),
                                        u = l.getBlocksCount(t, r),
                                        c = a % u,
                                        f = u - c,
                                        h = Math.floor(a / u),
                                        p = Math.floor(s / u),
                                        m = p + 1,
                                        g = h - p,
                                        b = new d(g),
                                        y = 0,
                                        v = Array(u),
                                        w = Array(u),
                                        E = 0,
                                        A = new Uint8Array(e.buffer);
                                    for (let e = 0; e < u; e++) {
                                        let t = e < f ? p : m;
                                        v[e] = A.slice(y, y + t), w[e] = b.encode(v[e]), y += t, E = Math.max(E, t)
                                    }
                                    let P = new Uint8Array(a),
                                        x = 0;
                                    for (i = 0; i < E; i++)
                                        for (o = 0; o < u; o++) i < v[o].length && (P[x++] = v[o][i]);
                                    for (i = 0; i < g; i++)
                                        for (o = 0; o < u; o++) P[x++] = w[o][i];
                                    return P
                                }(i, e, t)
                            }(t, r, h),
                            v = new a(n.getSymbolSize(t));
                        return function(e, t) {
                                let r = e.size,
                                    n = u.getPositions(t);
                                for (let t = 0; t < n.length; t++) {
                                    let i = n[t][0],
                                        o = n[t][1];
                                    for (let t = -1; t <= 7; t++)
                                        if (!(i + t <= -1) && !(r <= i + t))
                                            for (let n = -1; n <= 7; n++) o + n <= -1 || r <= o + n || (t >= 0 && t <= 6 && (0 === n || 6 === n) || n >= 0 && n <= 6 && (0 === t || 6 === t) || t >= 2 && t <= 4 && n >= 2 && n <= 4 ? e.set(i + t, o + n, !0, !0) : e.set(i + t, o + n, !1, !0))
                                }
                            }(v, t),
                            function(e) {
                                let t = e.size;
                                for (let r = 8; r < t - 8; r++) {
                                    let t = r % 2 == 0;
                                    e.set(r, 6, t, !0), e.set(6, r, t, !0)
                                }
                            }(v),
                            function(e, t) {
                                let r = s.getPositions(t);
                                for (let t = 0; t < r.length; t++) {
                                    let n = r[t][0],
                                        i = r[t][1];
                                    for (let t = -2; t <= 2; t++)
                                        for (let r = -2; r <= 2; r++) - 2 === t || 2 === t || -2 === r || 2 === r || 0 === t && 0 === r ? e.set(n + t, i + r, !0, !0) : e.set(n + t, i + r, !1, !0)
                                }
                            }(v, t), g(v, r, 0), t >= 7 && function(e, t) {
                                let r, n, i;
                                let o = e.size,
                                    a = f.getEncodedBits(t);
                                for (let t = 0; t < 18; t++) r = Math.floor(t / 3), n = t % 3 + o - 8 - 3, i = (a >> t & 1) == 1, e.set(r, n, i, !0), e.set(n, r, i, !0)
                            }(v, t),
                            function(e, t) {
                                let r = e.size,
                                    n = -1,
                                    i = r - 1,
                                    o = 7,
                                    a = 0;
                                for (let s = r - 1; s > 0; s -= 2)
                                    for (6 === s && s--;;) {
                                        for (let r = 0; r < 2; r++)
                                            if (!e.isReserved(i, s - r)) {
                                                let n = !1;
                                                a < t.length && (n = (t[a] >>> o & 1) == 1), e.set(i, s - r, n), -1 == --o && (a++, o = 7)
                                            }
                                        if ((i += n) < 0 || r <= i) {
                                            i -= n, n = -n;
                                            break
                                        }
                                    }
                            }(v, y), isNaN(i) && (i = c.getBestMask(v, g.bind(null, v, r))), c.applyMask(i, v), g(v, r, i), {
                                modules: v,
                                version: t,
                                errorCorrectionLevel: r,
                                maskPattern: i,
                                segments: h
                            }
                    }(e, r, b, h)
            }
        },
        84001: function(e, t, r) {
            let n = r(80958);

            function i(e) {
                this.genPoly = void 0, this.degree = e, this.degree && this.initialize(this.degree)
            }
            i.prototype.initialize = function(e) {
                this.degree = e, this.genPoly = n.generateECPolynomial(this.degree)
            }, i.prototype.encode = function(e) {
                if (!this.genPoly) throw Error("Encoder not initialized");
                let t = new Uint8Array(e.length + this.degree);
                t.set(e);
                let r = n.mod(t, this.genPoly),
                    i = this.degree - r.length;
                if (i > 0) {
                    let e = new Uint8Array(this.degree);
                    return e.set(r, i), e
                }
                return r
            }, e.exports = i
        },
        36276: function(e, t) {
            let r = "[0-9]+",
                n = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+",
                i = "(?:(?![A-Z0-9 $%*+\\-./:]|" + (n = n.replace(/u/g, "\\u")) + ")(?:.|[\r\n]))+";
            t.KANJI = RegExp(n, "g"), t.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g"), t.BYTE = RegExp(i, "g"), t.NUMERIC = RegExp(r, "g"), t.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g");
            let o = RegExp("^" + n + "$"),
                a = RegExp("^" + r + "$"),
                s = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
            t.testKanji = function(e) {
                return o.test(e)
            }, t.testNumeric = function(e) {
                return a.test(e)
            }, t.testAlphanumeric = function(e) {
                return s.test(e)
            }
        },
        25051: function(e, t, r) {
            let n = r(58257),
                i = r(6078),
                o = r(62971),
                a = r(23841),
                s = r(62558),
                u = r(36276),
                c = r(2601),
                l = r(52892);

            function d(e) {
                return unescape(encodeURIComponent(e)).length
            }

            function f(e, t, r) {
                let n;
                let i = [];
                for (; null !== (n = e.exec(r));) i.push({
                    data: n[0],
                    index: n.index,
                    mode: t,
                    length: n[0].length
                });
                return i
            }

            function h(e) {
                let t, r;
                let i = f(u.NUMERIC, n.NUMERIC, e),
                    o = f(u.ALPHANUMERIC, n.ALPHANUMERIC, e);
                return c.isKanjiModeEnabled() ? (t = f(u.BYTE, n.BYTE, e), r = f(u.KANJI, n.KANJI, e)) : (t = f(u.BYTE_KANJI, n.BYTE, e), r = []), i.concat(o, t, r).sort(function(e, t) {
                    return e.index - t.index
                }).map(function(e) {
                    return {
                        data: e.data,
                        mode: e.mode,
                        length: e.length
                    }
                })
            }

            function p(e, t) {
                switch (t) {
                    case n.NUMERIC:
                        return i.getBitsLength(e);
                    case n.ALPHANUMERIC:
                        return o.getBitsLength(e);
                    case n.KANJI:
                        return s.getBitsLength(e);
                    case n.BYTE:
                        return a.getBitsLength(e)
                }
            }

            function m(e, t) {
                let r;
                let u = n.getBestModeForData(e);
                if ((r = n.from(t, u)) !== n.BYTE && r.bit < u.bit) throw Error('"' + e + '" cannot be encoded with mode ' + n.toString(r) + ".\n Suggested mode is: " + n.toString(u));
                switch (r !== n.KANJI || c.isKanjiModeEnabled() || (r = n.BYTE), r) {
                    case n.NUMERIC:
                        return new i(e);
                    case n.ALPHANUMERIC:
                        return new o(e);
                    case n.KANJI:
                        return new s(e);
                    case n.BYTE:
                        return new a(e)
                }
            }
            t.fromArray = function(e) {
                return e.reduce(function(e, t) {
                    return "string" == typeof t ? e.push(m(t, null)) : t.data && e.push(m(t.data, t.mode)), e
                }, [])
            }, t.fromString = function(e, r) {
                let i = function(e, t) {
                        let r = {},
                            i = {
                                start: {}
                            },
                            o = ["start"];
                        for (let a = 0; a < e.length; a++) {
                            let s = e[a],
                                u = [];
                            for (let e = 0; e < s.length; e++) {
                                let c = s[e],
                                    l = "" + a + e;
                                u.push(l), r[l] = {
                                    node: c,
                                    lastCount: 0
                                }, i[l] = {};
                                for (let e = 0; e < o.length; e++) {
                                    let a = o[e];
                                    r[a] && r[a].node.mode === c.mode ? (i[a][l] = p(r[a].lastCount + c.length, c.mode) - p(r[a].lastCount, c.mode), r[a].lastCount += c.length) : (r[a] && (r[a].lastCount = c.length), i[a][l] = p(c.length, c.mode) + 4 + n.getCharCountIndicator(c.mode, t))
                                }
                            }
                            o = u
                        }
                        for (let e = 0; e < o.length; e++) i[o[e]].end = 0;
                        return {
                            map: i,
                            table: r
                        }
                    }(function(e) {
                        let t = [];
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r];
                            switch (i.mode) {
                                case n.NUMERIC:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.ALPHANUMERIC,
                                        length: i.length
                                    }, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: i.length
                                    }]);
                                    break;
                                case n.ALPHANUMERIC:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: i.length
                                    }]);
                                    break;
                                case n.KANJI:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: d(i.data)
                                    }]);
                                    break;
                                case n.BYTE:
                                    t.push([{
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: d(i.data)
                                    }])
                            }
                        }
                        return t
                    }(h(e, c.isKanjiModeEnabled())), r),
                    o = l.find_path(i.map, "start", "end"),
                    a = [];
                for (let e = 1; e < o.length - 1; e++) a.push(i.table[o[e]].node);
                return t.fromArray(a.reduce(function(e, t) {
                    let r = e.length - 1 >= 0 ? e[e.length - 1] : null;
                    return r && r.mode === t.mode ? e[e.length - 1].data += t.data : e.push(t), e
                }, []))
            }, t.rawSplit = function(e) {
                return t.fromArray(h(e, c.isKanjiModeEnabled()))
            }
        },
        2601: function(e, t) {
            let r;
            let n = [0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];
            t.getSymbolSize = function(e) {
                if (!e) throw Error('"version" cannot be null or undefined');
                if (e < 1 || e > 40) throw Error('"version" should be in range from 1 to 40');
                return 4 * e + 17
            }, t.getSymbolTotalCodewords = function(e) {
                return n[e]
            }, t.getBCHDigit = function(e) {
                let t = 0;
                for (; 0 !== e;) t++, e >>>= 1;
                return t
            }, t.setToSJISFunction = function(e) {
                if ("function" != typeof e) throw Error('"toSJISFunc" is not a valid function.');
                r = e
            }, t.isKanjiModeEnabled = function() {
                return void 0 !== r
            }, t.toSJIS = function(e) {
                return r(e)
            }
        },
        66477: function(e, t) {
            t.isValid = function(e) {
                return !isNaN(e) && e >= 1 && e <= 40
            }
        },
        11888: function(e, t, r) {
            let n = r(2601),
                i = r(34270),
                o = r(38428),
                a = r(58257),
                s = r(66477),
                u = n.getBCHDigit(7973);

            function c(e, t) {
                return a.getCharCountIndicator(e, t) + 4
            }
            t.from = function(e, t) {
                return s.isValid(e) ? parseInt(e, 10) : t
            }, t.getCapacity = function(e, t, r) {
                if (!s.isValid(e)) throw Error("Invalid QR Code version");
                void 0 === r && (r = a.BYTE);
                let o = (n.getSymbolTotalCodewords(e) - i.getTotalCodewordsCount(e, t)) * 8;
                if (r === a.MIXED) return o;
                let u = o - c(r, e);
                switch (r) {
                    case a.NUMERIC:
                        return Math.floor(u / 10 * 3);
                    case a.ALPHANUMERIC:
                        return Math.floor(u / 11 * 2);
                    case a.KANJI:
                        return Math.floor(u / 13);
                    case a.BYTE:
                    default:
                        return Math.floor(u / 8)
                }
            }, t.getBestVersionForData = function(e, r) {
                let n;
                let i = o.from(r, o.M);
                if (Array.isArray(e)) {
                    if (e.length > 1) return function(e, r) {
                        for (let n = 1; n <= 40; n++)
                            if (function(e, t) {
                                    let r = 0;
                                    return e.forEach(function(e) {
                                        let n = c(e.mode, t);
                                        r += n + e.getBitsLength()
                                    }), r
                                }(e, n) <= t.getCapacity(n, r, a.MIXED)) return n
                    }(e, i);
                    if (0 === e.length) return 1;
                    n = e[0]
                } else n = e;
                return function(e, r, n) {
                    for (let i = 1; i <= 40; i++)
                        if (r <= t.getCapacity(i, n, e)) return i
                }(n.mode, n.getLength(), i)
            }, t.getEncodedBits = function(e) {
                if (!s.isValid(e) || e < 7) throw Error("Invalid QR Code version");
                let t = e << 12;
                for (; n.getBCHDigit(t) - u >= 0;) t ^= 7973 << n.getBCHDigit(t) - u;
                return e << 12 | t
            }
        },
        64811: function(e, t, r) {
            let n = r(59472);
            t.render = function(e, t, r) {
                var i;
                let o = r,
                    a = t;
                void 0 !== o || t && t.getContext || (o = t, t = void 0), t || (a = function() {
                    try {
                        return document.createElement("canvas")
                    } catch (e) {
                        throw Error("You need to specify a canvas element")
                    }
                }()), o = n.getOptions(o);
                let s = n.getImageWidth(e.modules.size, o),
                    u = a.getContext("2d"),
                    c = u.createImageData(s, s);
                return n.qrToImageData(c.data, e, o), i = a, u.clearRect(0, 0, i.width, i.height), i.style || (i.style = {}), i.height = s, i.width = s, i.style.height = s + "px", i.style.width = s + "px", u.putImageData(c, 0, 0), a
            }, t.renderToDataURL = function(e, r, n) {
                let i = n;
                void 0 !== i || r && r.getContext || (i = r, r = void 0), i || (i = {});
                let o = t.render(e, r, i),
                    a = i.type || "image/png",
                    s = i.rendererOpts || {};
                return o.toDataURL(a, s.quality)
            }
        },
        65773: function(e, t, r) {
            let n = r(59472);

            function i(e, t) {
                let r = e.a / 255,
                    n = t + '="' + e.hex + '"';
                return r < 1 ? n + " " + t + '-opacity="' + r.toFixed(2).slice(1) + '"' : n
            }

            function o(e, t, r) {
                let n = e + t;
                return void 0 !== r && (n += " " + r), n
            }
            t.render = function(e, t, r) {
                let a = n.getOptions(t),
                    s = e.modules.size,
                    u = e.modules.data,
                    c = s + 2 * a.margin,
                    l = a.color.light.a ? "<path " + i(a.color.light, "fill") + ' d="M0 0h' + c + "v" + c + 'H0z"/>' : "",
                    d = "<path " + i(a.color.dark, "stroke") + ' d="' + function(e, t, r) {
                        let n = "",
                            i = 0,
                            a = !1,
                            s = 0;
                        for (let u = 0; u < e.length; u++) {
                            let c = Math.floor(u % t),
                                l = Math.floor(u / t);
                            c || a || (a = !0), e[u] ? (s++, u > 0 && c > 0 && e[u - 1] || (n += a ? o("M", c + r, .5 + l + r) : o("m", i, 0), i = 0, a = !1), c + 1 < t && e[u + 1] || (n += o("h", s), s = 0)) : i++
                        }
                        return n
                    }(u, s, a.margin) + '"/>',
                    f = '<svg xmlns="http://www.w3.org/2000/svg" ' + (a.width ? 'width="' + a.width + '" height="' + a.width + '" ' : "") + ('viewBox="0 0 ' + c) + " " + c + '" shape-rendering="crispEdges">' + l + d + "</svg>\n";
                return "function" == typeof r && r(null, f), f
            }
        },
        59472: function(e, t) {
            function r(e) {
                if ("number" == typeof e && (e = e.toString()), "string" != typeof e) throw Error("Color should be defined as hex string");
                let t = e.slice().replace("#", "").split("");
                if (t.length < 3 || 5 === t.length || t.length > 8) throw Error("Invalid hex color: " + e);
                (3 === t.length || 4 === t.length) && (t = Array.prototype.concat.apply([], t.map(function(e) {
                    return [e, e]
                }))), 6 === t.length && t.push("F", "F");
                let r = parseInt(t.join(""), 16);
                return {
                    r: r >> 24 & 255,
                    g: r >> 16 & 255,
                    b: r >> 8 & 255,
                    a: 255 & r,
                    hex: "#" + t.slice(0, 6).join("")
                }
            }
            t.getOptions = function(e) {
                e || (e = {}), e.color || (e.color = {});
                let t = void 0 === e.margin || null === e.margin || e.margin < 0 ? 4 : e.margin,
                    n = e.width && e.width >= 21 ? e.width : void 0,
                    i = e.scale || 4;
                return {
                    width: n,
                    scale: n ? 4 : i,
                    margin: t,
                    color: {
                        dark: r(e.color.dark || "#000000ff"),
                        light: r(e.color.light || "#ffffffff")
                    },
                    type: e.type,
                    rendererOpts: e.rendererOpts || {}
                }
            }, t.getScale = function(e, t) {
                return t.width && t.width >= e + 2 * t.margin ? t.width / (e + 2 * t.margin) : t.scale
            }, t.getImageWidth = function(e, r) {
                let n = t.getScale(e, r);
                return Math.floor((e + 2 * r.margin) * n)
            }, t.qrToImageData = function(e, r, n) {
                let i = r.modules.size,
                    o = r.modules.data,
                    a = t.getScale(i, n),
                    s = Math.floor((i + 2 * n.margin) * a),
                    u = n.margin * a,
                    c = [n.color.light, n.color.dark];
                for (let t = 0; t < s; t++)
                    for (let r = 0; r < s; r++) {
                        let l = (t * s + r) * 4,
                            d = n.color.light;
                        t >= u && r >= u && t < s - u && r < s - u && (d = c[o[Math.floor((t - u) / a) * i + Math.floor((r - u) / a)] ? 1 : 0]), e[l++] = d.r, e[l++] = d.g, e[l++] = d.b, e[l] = d.a
                    }
            }
        },
        48469: function(e, t, r) {
            "use strict";
            r.d(t, {
                zt: function() {
                    return L
                },
                m7: function() {
                    return M
                },
                VY: function() {
                    return q
                }
            });
            var n, i, o = r(2265),
                a = r(41448),
                s = r.n(a);

            function u(e, t) {
                if (null == e) return {};
                var r = {};
                for (var n in e)
                    if (Object.prototype.hasOwnProperty.call(e, n)) {
                        if (t.indexOf(n) >= 0) continue;
                        r[n] = e[n]
                    }
                return r
            }

            function c(e, t) {
                return (c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function l(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, c(e, t)
            }
            var d = r(54887),
                f = {
                    disabled: !1
                },
                h = o.createContext(null),
                p = "unmounted",
                m = "exited",
                g = "entering",
                b = "entered",
                y = "exiting",
                v = function(e) {
                    function t(t, r) {
                        n = e.call(this, t, r) || this;
                        var n, i, o = r && !r.isMounting ? t.enter : t.appear;
                        return n.appearStatus = null, t.in ? o ? (i = m, n.appearStatus = g) : i = b : i = t.unmountOnExit || t.mountOnEnter ? p : m, n.state = {
                            status: i
                        }, n.nextCallback = null, n
                    }
                    l(t, e), t.getDerivedStateFromProps = function(e, t) {
                        return e.in && t.status === p ? {
                            status: m
                        } : null
                    };
                    var r = t.prototype;
                    return r.componentDidMount = function() {
                        this.updateStatus(!0, this.appearStatus)
                    }, r.componentDidUpdate = function(e) {
                        var t = null;
                        if (e !== this.props) {
                            var r = this.state.status;
                            this.props.in ? r !== g && r !== b && (t = g) : (r === g || r === b) && (t = y)
                        }
                        this.updateStatus(!1, t)
                    }, r.componentWillUnmount = function() {
                        this.cancelNextCallback()
                    }, r.getTimeouts = function() {
                        var e, t, r, n = this.props.timeout;
                        return e = t = r = n, null != n && "number" != typeof n && (e = n.exit, t = n.enter, r = void 0 !== n.appear ? n.appear : t), {
                            exit: e,
                            enter: t,
                            appear: r
                        }
                    }, r.updateStatus = function(e, t) {
                        if (void 0 === e && (e = !1), null !== t) {
                            if (this.cancelNextCallback(), t === g) {
                                if (this.props.unmountOnExit || this.props.mountOnEnter) {
                                    var r = this.props.nodeRef ? this.props.nodeRef.current : d.findDOMNode(this);
                                    r && r.scrollTop
                                }
                                this.performEnter(e)
                            } else this.performExit()
                        } else this.props.unmountOnExit && this.state.status === m && this.setState({
                            status: p
                        })
                    }, r.performEnter = function(e) {
                        var t = this,
                            r = this.props.enter,
                            n = this.context ? this.context.isMounting : e,
                            i = this.props.nodeRef ? [n] : [d.findDOMNode(this), n],
                            o = i[0],
                            a = i[1],
                            s = this.getTimeouts(),
                            u = n ? s.appear : s.enter;
                        if (!e && !r || f.disabled) {
                            this.safeSetState({
                                status: b
                            }, function() {
                                t.props.onEntered(o)
                            });
                            return
                        }
                        this.props.onEnter(o, a), this.safeSetState({
                            status: g
                        }, function() {
                            t.props.onEntering(o, a), t.onTransitionEnd(u, function() {
                                t.safeSetState({
                                    status: b
                                }, function() {
                                    t.props.onEntered(o, a)
                                })
                            })
                        })
                    }, r.performExit = function() {
                        var e = this,
                            t = this.props.exit,
                            r = this.getTimeouts(),
                            n = this.props.nodeRef ? void 0 : d.findDOMNode(this);
                        if (!t || f.disabled) {
                            this.safeSetState({
                                status: m
                            }, function() {
                                e.props.onExited(n)
                            });
                            return
                        }
                        this.props.onExit(n), this.safeSetState({
                            status: y
                        }, function() {
                            e.props.onExiting(n), e.onTransitionEnd(r.exit, function() {
                                e.safeSetState({
                                    status: m
                                }, function() {
                                    e.props.onExited(n)
                                })
                            })
                        })
                    }, r.cancelNextCallback = function() {
                        null !== this.nextCallback && (this.nextCallback.cancel(), this.nextCallback = null)
                    }, r.safeSetState = function(e, t) {
                        t = this.setNextCallback(t), this.setState(e, t)
                    }, r.setNextCallback = function(e) {
                        var t = this,
                            r = !0;
                        return this.nextCallback = function(n) {
                            r && (r = !1, t.nextCallback = null, e(n))
                        }, this.nextCallback.cancel = function() {
                            r = !1
                        }, this.nextCallback
                    }, r.onTransitionEnd = function(e, t) {
                        this.setNextCallback(t);
                        var r = this.props.nodeRef ? this.props.nodeRef.current : d.findDOMNode(this),
                            n = null == e && !this.props.addEndListener;
                        if (!r || n) {
                            setTimeout(this.nextCallback, 0);
                            return
                        }
                        if (this.props.addEndListener) {
                            var i = this.props.nodeRef ? [this.nextCallback] : [r, this.nextCallback],
                                o = i[0],
                                a = i[1];
                            this.props.addEndListener(o, a)
                        }
                        null != e && setTimeout(this.nextCallback, e)
                    }, r.render = function() {
                        var e = this.state.status;
                        if (e === p) return null;
                        var t = this.props,
                            r = t.children,
                            n = (t.in, t.mountOnEnter, t.unmountOnExit, t.appear, t.enter, t.exit, t.timeout, t.addEndListener, t.onEnter, t.onEntering, t.onEntered, t.onExit, t.onExiting, t.onExited, t.nodeRef, u(t, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]));
                        return o.createElement(h.Provider, {
                            value: null
                        }, "function" == typeof r ? r(e, n) : o.cloneElement(o.Children.only(r), n))
                    }, t
                }(o.Component);

            function w() {}

            function E() {
                return (E = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = arguments[t];
                        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function A(e, t) {
                var r = Object.create(null);
                return e && o.Children.map(e, function(e) {
                    return e
                }).forEach(function(e) {
                    r[e.key] = t && (0, o.isValidElement)(e) ? t(e) : e
                }), r
            }

            function P(e, t, r) {
                return null != r[t] ? r[t] : e.props[t]
            }
            v.contextType = h, v.propTypes = {}, v.defaultProps = { in: !1,
                mountOnEnter: !1,
                unmountOnExit: !1,
                appear: !1,
                enter: !0,
                exit: !0,
                onEnter: w,
                onEntering: w,
                onEntered: w,
                onExit: w,
                onExiting: w,
                onExited: w
            }, v.UNMOUNTED = p, v.EXITED = m, v.ENTERING = g, v.ENTERED = b, v.EXITING = y;
            var x = Object.values || function(e) {
                    return Object.keys(e).map(function(t) {
                        return e[t]
                    })
                },
                O = function(e) {
                    function t(t, r) {
                        var n, i = (n = e.call(this, t, r) || this).handleExited.bind(function(e) {
                            if (void 0 === e) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }(n));
                        return n.state = {
                            contextValue: {
                                isMounting: !0
                            },
                            handleExited: i,
                            firstRender: !0
                        }, n
                    }
                    l(t, e);
                    var r = t.prototype;
                    return r.componentDidMount = function() {
                        this.mounted = !0, this.setState({
                            contextValue: {
                                isMounting: !1
                            }
                        })
                    }, r.componentWillUnmount = function() {
                        this.mounted = !1
                    }, t.getDerivedStateFromProps = function(e, t) {
                        var r, n, i = t.children,
                            a = t.handleExited;
                        return {
                            children: t.firstRender ? A(e.children, function(t) {
                                return (0, o.cloneElement)(t, {
                                    onExited: a.bind(null, t),
                                    in: !0,
                                    appear: P(t, "appear", e),
                                    enter: P(t, "enter", e),
                                    exit: P(t, "exit", e)
                                })
                            }) : (Object.keys(n = function(e, t) {
                                function r(r) {
                                    return r in t ? t[r] : e[r]
                                }
                                e = e || {}, t = t || {};
                                var n, i = Object.create(null),
                                    o = [];
                                for (var a in e) a in t ? o.length && (i[a] = o, o = []) : o.push(a);
                                var s = {};
                                for (var u in t) {
                                    if (i[u])
                                        for (n = 0; n < i[u].length; n++) {
                                            var c = i[u][n];
                                            s[i[u][n]] = r(c)
                                        }
                                    s[u] = r(u)
                                }
                                for (n = 0; n < o.length; n++) s[o[n]] = r(o[n]);
                                return s
                            }(i, r = A(e.children))).forEach(function(t) {
                                var s = n[t];
                                if ((0, o.isValidElement)(s)) {
                                    var u = t in i,
                                        c = t in r,
                                        l = i[t],
                                        d = (0, o.isValidElement)(l) && !l.props.in;
                                    c && (!u || d) ? n[t] = (0, o.cloneElement)(s, {
                                        onExited: a.bind(null, s),
                                        in: !0,
                                        exit: P(s, "exit", e),
                                        enter: P(s, "enter", e)
                                    }) : c || !u || d ? c && u && (0, o.isValidElement)(l) && (n[t] = (0, o.cloneElement)(s, {
                                        onExited: a.bind(null, s),
                                        in: l.props.in,
                                        exit: P(s, "exit", e),
                                        enter: P(s, "enter", e)
                                    })) : n[t] = (0, o.cloneElement)(s, { in: !1
                                    })
                                }
                            }), n),
                            firstRender: !1
                        }
                    }, r.handleExited = function(e, t) {
                        var r = A(this.props.children);
                        e.key in r || (e.props.onExited && e.props.onExited(t), this.mounted && this.setState(function(t) {
                            var r = E({}, t.children);
                            return delete r[e.key], {
                                children: r
                            }
                        }))
                    }, r.render = function() {
                        var e = this.props,
                            t = e.component,
                            r = e.childFactory,
                            n = u(e, ["component", "childFactory"]),
                            i = this.state.contextValue,
                            a = x(this.state.children).map(r);
                        return (delete n.appear, delete n.enter, delete n.exit, null === t) ? o.createElement(h.Provider, {
                            value: i
                        }, a) : o.createElement(h.Provider, {
                            value: i
                        }, o.createElement(t, n, a))
                    }, t
                }(o.Component);

            function _(e, t, r) {
                return t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r, e
            }

            function I() {
                return (I = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = arguments[t];
                        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function T(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter(function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    })), r.push.apply(r, n)
                }
                return r
            }

            function C(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? T(Object(r), !0).forEach(function(t) {
                        _(e, t, r[t])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : T(Object(r)).forEach(function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    })
                }
                return e
            }

            function S(e, t) {
                if (null == e) return {};
                var r, n, i = function(e, t) {
                    if (null == e) return {};
                    var r, n, i = {},
                        o = Object.keys(e);
                    for (n = 0; n < o.length; n++) r = o[n], t.indexOf(r) >= 0 || (i[r] = e[r]);
                    return i
                }(e, t);
                if (Object.getOwnPropertySymbols) {
                    var o = Object.getOwnPropertySymbols(e);
                    for (n = 0; n < o.length; n++) r = o[n], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (i[r] = e[r])
                }
                return i
            }
            O.propTypes = {}, O.defaultProps = {
                component: "div",
                childFactory: function(e) {
                    return e
                }
            };
            var k = (0, o.createContext)(),
                M = {
                    TOP_LEFT: "top left",
                    TOP_CENTER: "top center",
                    TOP_RIGHT: "top right",
                    MIDDLE_LEFT: "middle left",
                    MIDDLE: "middle",
                    MIDDLE_RIGHT: "middle right",
                    BOTTOM_LEFT: "bottom left",
                    BOTTOM_CENTER: "bottom center",
                    BOTTOM_RIGHT: "bottom right"
                },
                B = {
                    INFO: "info",
                    SUCCESS: "success",
                    ERROR: "error"
                },
                N = {
                    FADE: "fade",
                    SCALE: "scale"
                },
                R = function(e) {
                    var t = {
                        left: 0,
                        position: "fixed",
                        display: "flex",
                        justifyContent: "center",
                        alignItems: "center",
                        flexDirection: "column",
                        width: "100%",
                        pointerEvents: "none"
                    };
                    switch (e) {
                        case M.TOP_LEFT:
                            return C(C({}, t), {}, {
                                top: 0,
                                alignItems: "flex-start"
                            });
                        case M.TOP_CENTER:
                            return C(C({}, t), {}, {
                                top: 0
                            });
                        case M.TOP_RIGHT:
                            return C(C({}, t), {}, {
                                top: 0,
                                alignItems: "flex-end"
                            });
                        case M.MIDDLE_LEFT:
                            return C(C({}, t), {}, {
                                top: "50%",
                                alignItems: "flex-start"
                            });
                        case M.MIDDLE:
                            return C(C({}, t), {}, {
                                top: "50%"
                            });
                        case M.MIDDLE_RIGHT:
                            return C(C({}, t), {}, {
                                top: "50%",
                                alignItems: "flex-end"
                            });
                        case M.BOTTOM_LEFT:
                            return C(C({}, t), {}, {
                                bottom: 0,
                                alignItems: "flex-start"
                            });
                        case M.BOTTOM_CENTER:
                            return C(C({}, t), {}, {
                                bottom: 0
                            });
                        case M.BOTTOM_RIGHT:
                            return C(C({}, t), {}, {
                                bottom: 0,
                                alignItems: "flex-end"
                            });
                        default:
                            return t
                    }
                },
                D = function(e) {
                    var t = e.children,
                        r = e.options,
                        n = r.position,
                        i = r.containerStyle,
                        a = S(e, ["children", "options"]),
                        s = (0, o.useMemo)(function() {
                            return R(n)
                        }, [n]);
                    return t.length > 0 && o.createElement("div", I({
                        style: C(C({}, s), i)
                    }, a), t)
                },
                j = (_(n = {}, N.FADE, {
                    transition: "opacity ".concat(250, "ms ease"),
                    opacity: 0
                }), _(n, N.SCALE, {
                    transform: "scale(1)",
                    transition: "all ".concat(250, "ms ease-in-out")
                }), n),
                F = (_(i = {}, N.FADE, {
                    entering: {
                        opacity: 0
                    },
                    entered: {
                        opacity: 1
                    }
                }), _(i, N.SCALE, {
                    entering: {
                        transform: "scale(0)"
                    },
                    entered: {
                        transform: "scale(1)"
                    },
                    exiting: {
                        transform: "scale(0)"
                    },
                    exited: {
                        transform: "scale(1)"
                    }
                }), i),
                U = function(e) {
                    var t = e.children,
                        r = e.type,
                        n = S(e, ["children", "type"]),
                        i = (0, o.useRef)(null);
                    return o.createElement(v, I({
                        nodeRef: i
                    }, n, {
                        timeout: 250
                    }), function(e) {
                        return o.createElement("div", {
                            ref: i,
                            style: C(C({}, j[r]), F[r][e])
                        }, t)
                    })
                },
                L = function(e) {
                    var t, r, n = e.children,
                        i = e.offset,
                        a = e.position,
                        s = e.timeout,
                        u = e.type,
                        c = e.transition,
                        l = e.containerStyle,
                        f = e.template,
                        h = e.context,
                        p = S(e, ["children", "offset", "position", "timeout", "type", "transition", "containerStyle", "template", "context"]),
                        m = (0, o.useRef)(null),
                        g = (0, o.useRef)(null),
                        b = (0, o.useRef)([]),
                        y = function(e) {
                            if (Array.isArray(e)) return e
                        }(t = (0, o.useState)([])) || function(e, t) {
                            if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) {
                                var r = [],
                                    n = !0,
                                    i = !1,
                                    o = void 0;
                                try {
                                    for (var a, s = e[Symbol.iterator](); !(n = (a = s.next()).done) && (r.push(a.value), 2 !== r.length); n = !0);
                                } catch (e) {
                                    i = !0, o = e
                                } finally {
                                    try {
                                        n || null == s.return || s.return()
                                    } finally {
                                        if (i) throw o
                                    }
                                }
                                return r
                            }
                        }(t, 2) || function() {
                            throw TypeError("Invalid attempt to destructure non-iterable instance")
                        }(),
                        v = y[0],
                        w = y[1];
                    (0, o.useEffect)(function() {
                        m.current = document.createElement("div"), m.current.id = "__react-alert__", document.body.appendChild(m.current);
                        var e = b.current;
                        return function() {
                            e.forEach(clearTimeout), m.current && document.body.removeChild(m.current)
                        }
                    }, []);
                    var E = (0, o.useCallback)(function(e) {
                            w(function(t) {
                                var r = t.length,
                                    n = t.filter(function(t) {
                                        return t.id !== e.id
                                    });
                                return r > n.length && e.options.onClose && e.options.onClose(), n
                            })
                        }, []),
                        A = (0, o.useCallback)(function() {
                            g.current.alerts.forEach(E)
                        }, [E]),
                        P = (0, o.useCallback)(function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                r = {
                                    id: Math.random().toString(36).substr(2, 9),
                                    message: e,
                                    options: C({
                                        position: t.position || a,
                                        timeout: s,
                                        type: u
                                    }, t)
                                };
                            if (r.close = function() {
                                    return E(r)
                                }, r.options.timeout) {
                                var n = setTimeout(function() {
                                    E(r), b.current.splice(b.current.indexOf(n), 1)
                                }, r.options.timeout);
                                b.current.push(n)
                            }
                            return w(function(e) {
                                return e.concat(r)
                            }), r.options.onOpen && r.options.onOpen(), r
                        }, [a, E, s, u]),
                        x = (0, o.useCallback)(function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            return t.type = B.SUCCESS, P(e, t)
                        }, [P]),
                        _ = (0, o.useCallback)(function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            return t.type = B.ERROR, P(e, t)
                        }, [P]),
                        T = (0, o.useCallback)(function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            return t.type = B.INFO, P(e, t)
                        }, [P]);
                    g.current = {
                        alerts: v,
                        show: P,
                        remove: E,
                        removeAll: A,
                        success: x,
                        error: _,
                        info: T
                    };
                    var k = (r = function(e) {
                        return e.options.position
                    }, v.reduce(function(e, t) {
                        var n = r(t);
                        return e[n] || (e[n] = []), e[n].push(t), e
                    }, {}));
                    return o.createElement(h.Provider, {
                        value: g
                    }, n, m.current && (0, d.createPortal)(o.createElement(o.Fragment, null, Object.keys(M).map(function(e) {
                        var t = M[e];
                        return o.createElement(O, I({
                            appear: !0,
                            key: t,
                            options: {
                                position: t,
                                containerStyle: l
                            },
                            component: D
                        }, p), k[t] ? k[t].map(function(e) {
                            return o.createElement(U, {
                                type: c,
                                key: e.id
                            }, o.createElement(f, I({
                                style: {
                                    margin: i,
                                    pointerEvents: "all"
                                }
                            }, e)))
                        }) : null)
                    })), m.current))
                };
            L.propTypes = {
                offset: s().string,
                position: s().oneOf(Object.keys(M).map(function(e) {
                    return M[e]
                })),
                timeout: s().number,
                type: s().oneOf(Object.keys(B).map(function(e) {
                    return B[e]
                })),
                transition: s().oneOf(Object.keys(N).map(function(e) {
                    return N[e]
                })),
                containerStyle: s().object,
                template: s().oneOfType([s().element, s().func, s().elementType]).isRequired,
                context: s().shape({
                    Provider: s().object,
                    Consumer: s().object
                })
            }, L.defaultProps = {
                offset: "10px",
                position: M.TOP_CENTER,
                timeout: 0,
                type: B.INFO,
                transition: N.FADE,
                containerStyle: {
                    zIndex: 100
                },
                context: k
            };
            var q = function(e) {
                var t = (0, o.useContext)(e || k);
                return (0, o.useMemo)(function() {
                    return t.current
                }, [t])
            }
        },
        17590: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return V
                }
            });
            var n, i, o, a, s, u, c, l = r(11735),
                d = r(2265),
                f = "right-scroll-bar-position",
                h = "width-before-scroll-bar";

            function p(e, t) {
                return "function" == typeof e ? e(t) : e && (e.current = t), e
            }
            var m = "undefined" != typeof window ? d.useLayoutEffect : d.useEffect,
                g = new WeakMap,
                b = (void 0 === n && (n = {}), (void 0 === i && (i = function(e) {
                    return e
                }), o = [], a = !1, s = {
                    read: function() {
                        if (a) throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
                        return o.length ? o[o.length - 1] : null
                    },
                    useMedium: function(e) {
                        var t = i(e, a);
                        return o.push(t),
                            function() {
                                o = o.filter(function(e) {
                                    return e !== t
                                })
                            }
                    },
                    assignSyncMedium: function(e) {
                        for (a = !0; o.length;) {
                            var t = o;
                            o = [], t.forEach(e)
                        }
                        o = {
                            push: function(t) {
                                return e(t)
                            },
                            filter: function() {
                                return o
                            }
                        }
                    },
                    assignMedium: function(e) {
                        a = !0;
                        var t = [];
                        if (o.length) {
                            var r = o;
                            o = [], r.forEach(e), t = o
                        }
                        var n = function() {
                                var r = t;
                                t = [], r.forEach(e)
                            },
                            i = function() {
                                return Promise.resolve().then(n)
                            };
                        i(), o = {
                            push: function(e) {
                                t.push(e), i()
                            },
                            filter: function(e) {
                                return t = t.filter(e), o
                            }
                        }
                    }
                }).options = (0, l.__assign)({
                    async: !0,
                    ssr: !1
                }, n), s),
                y = function() {},
                v = d.forwardRef(function(e, t) {
                    var r, n, i, o, a = d.useRef(null),
                        s = d.useState({
                            onScrollCapture: y,
                            onWheelCapture: y,
                            onTouchMoveCapture: y
                        }),
                        u = s[0],
                        c = s[1],
                        f = e.forwardProps,
                        h = e.children,
                        v = e.className,
                        w = e.removeScrollBar,
                        E = e.enabled,
                        A = e.shards,
                        P = e.sideCar,
                        x = e.noIsolation,
                        O = e.inert,
                        _ = e.allowPinchZoom,
                        I = e.as,
                        T = e.gapMode,
                        C = (0, l.__rest)(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]),
                        S = (r = [a, t], n = function(e) {
                            return r.forEach(function(t) {
                                return p(t, e)
                            })
                        }, (i = (0, d.useState)(function() {
                            return {
                                value: null,
                                callback: n,
                                facade: {
                                    get current() {
                                        return i.value
                                    },
                                    set current(value) {
                                        var e = i.value;
                                        e !== value && (i.value = value, i.callback(value, e))
                                    }
                                }
                            }
                        })[0]).callback = n, o = i.facade, m(function() {
                            var e = g.get(o);
                            if (e) {
                                var t = new Set(e),
                                    n = new Set(r),
                                    i = o.current;
                                t.forEach(function(e) {
                                    n.has(e) || p(e, null)
                                }), n.forEach(function(e) {
                                    t.has(e) || p(e, i)
                                })
                            }
                            g.set(o, r)
                        }, [r]), o),
                        k = (0, l.__assign)((0, l.__assign)({}, C), u);
                    return d.createElement(d.Fragment, null, E && d.createElement(P, {
                        sideCar: b,
                        removeScrollBar: w,
                        shards: A,
                        noIsolation: x,
                        inert: O,
                        setCallbacks: c,
                        allowPinchZoom: !!_,
                        lockRef: a,
                        gapMode: T
                    }), f ? d.cloneElement(d.Children.only(h), (0, l.__assign)((0, l.__assign)({}, k), {
                        ref: S
                    })) : d.createElement(void 0 === I ? "div" : I, (0, l.__assign)({}, k, {
                        className: v,
                        ref: S
                    }), h))
                });
            v.defaultProps = {
                enabled: !0,
                removeScrollBar: !0,
                inert: !1
            }, v.classNames = {
                fullWidth: h,
                zeroRight: f
            };
            var w = function(e) {
                var t = e.sideCar,
                    r = (0, l.__rest)(e, ["sideCar"]);
                if (!t) throw Error("Sidecar: please provide `sideCar` property to import the right car");
                var n = t.read();
                if (!n) throw Error("Sidecar medium not found");
                return d.createElement(n, (0, l.__assign)({}, r))
            };
            w.isSideCarExport = !0;
            var E = function() {
                    var e = 0,
                        t = null;
                    return {
                        add: function(n) {
                            if (0 == e && (t = function() {
                                    if (!document) return null;
                                    var e = document.createElement("style");
                                    e.type = "text/css";
                                    var t = c || r.nc;
                                    return t && e.setAttribute("nonce", t), e
                                }())) {
                                var i, o;
                                (i = t).styleSheet ? i.styleSheet.cssText = n : i.appendChild(document.createTextNode(n)), o = t, (document.head || document.getElementsByTagName("head")[0]).appendChild(o)
                            }
                            e++
                        },
                        remove: function() {
                            --e || !t || (t.parentNode && t.parentNode.removeChild(t), t = null)
                        }
                    }
                },
                A = function() {
                    var e = E();
                    return function(t, r) {
                        d.useEffect(function() {
                            return e.add(t),
                                function() {
                                    e.remove()
                                }
                        }, [t && r])
                    }
                },
                P = function() {
                    var e = A();
                    return function(t) {
                        return e(t.styles, t.dynamic), null
                    }
                },
                x = {
                    left: 0,
                    top: 0,
                    right: 0,
                    gap: 0
                },
                O = function(e) {
                    return parseInt(e || "", 10) || 0
                },
                _ = function(e) {
                    var t = window.getComputedStyle(document.body),
                        r = t["padding" === e ? "paddingLeft" : "marginLeft"],
                        n = t["padding" === e ? "paddingTop" : "marginTop"],
                        i = t["padding" === e ? "paddingRight" : "marginRight"];
                    return [O(r), O(n), O(i)]
                },
                I = function(e) {
                    if (void 0 === e && (e = "margin"), "undefined" == typeof window) return x;
                    var t = _(e),
                        r = document.documentElement.clientWidth,
                        n = window.innerWidth;
                    return {
                        left: t[0],
                        top: t[1],
                        right: t[2],
                        gap: Math.max(0, n - r + t[2] - t[0])
                    }
                },
                T = P(),
                C = "data-scroll-locked",
                S = function(e, t, r, n) {
                    var i = e.left,
                        o = e.top,
                        a = e.right,
                        s = e.gap;
                    return void 0 === r && (r = "margin"), "\n  .".concat("with-scroll-bars-hidden", " {\n   overflow: hidden ").concat(n, ";\n   padding-right: ").concat(s, "px ").concat(n, ";\n  }\n  body[").concat(C, "] {\n    overflow: hidden ").concat(n, ";\n    overscroll-behavior: contain;\n    ").concat([t && "position: relative ".concat(n, ";"), "margin" === r && "\n    padding-left: ".concat(i, "px;\n    padding-top: ").concat(o, "px;\n    padding-right: ").concat(a, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(s, "px ").concat(n, ";\n    "), "padding" === r && "padding-right: ".concat(s, "px ").concat(n, ";")].filter(Boolean).join(""), "\n  }\n  \n  .").concat(f, " {\n    right: ").concat(s, "px ").concat(n, ";\n  }\n  \n  .").concat(h, " {\n    margin-right: ").concat(s, "px ").concat(n, ";\n  }\n  \n  .").concat(f, " .").concat(f, " {\n    right: 0 ").concat(n, ";\n  }\n  \n  .").concat(h, " .").concat(h, " {\n    margin-right: 0 ").concat(n, ";\n  }\n  \n  body[").concat(C, "] {\n    ").concat("--removed-body-scroll-bar-size", ": ").concat(s, "px;\n  }\n")
                },
                k = function() {
                    var e = parseInt(document.body.getAttribute(C) || "0", 10);
                    return isFinite(e) ? e : 0
                },
                M = function() {
                    d.useEffect(function() {
                        return document.body.setAttribute(C, (k() + 1).toString()),
                            function() {
                                var e = k() - 1;
                                e <= 0 ? document.body.removeAttribute(C) : document.body.setAttribute(C, e.toString())
                            }
                    }, [])
                },
                B = function(e) {
                    var t = e.noRelative,
                        r = e.noImportant,
                        n = e.gapMode,
                        i = void 0 === n ? "margin" : n;
                    M();
                    var o = d.useMemo(function() {
                        return I(i)
                    }, [i]);
                    return d.createElement(T, {
                        styles: S(o, !t, i, r ? "" : "!important")
                    })
                },
                N = !1;
            if ("undefined" != typeof window) try {
                var R = Object.defineProperty({}, "passive", {
                    get: function() {
                        return N = !0, !0
                    }
                });
                window.addEventListener("test", R, R), window.removeEventListener("test", R, R)
            } catch (e) {
                N = !1
            }
            var D = !!N && {
                    passive: !1
                },
                j = function(e, t) {
                    var r = window.getComputedStyle(e);
                    return "hidden" !== r[t] && !(r.overflowY === r.overflowX && "TEXTAREA" !== e.tagName && "visible" === r[t])
                },
                F = function(e, t) {
                    var r = t.ownerDocument,
                        n = t;
                    do {
                        if ("undefined" != typeof ShadowRoot && n instanceof ShadowRoot && (n = n.host), U(e, n)) {
                            var i = L(e, n);
                            if (i[1] > i[2]) return !0
                        }
                        n = n.parentNode
                    } while (n && n !== r.body);
                    return !1
                },
                U = function(e, t) {
                    return "v" === e ? j(t, "overflowY") : j(t, "overflowX")
                },
                L = function(e, t) {
                    return "v" === e ? [t.scrollTop, t.scrollHeight, t.clientHeight] : [t.scrollLeft, t.scrollWidth, t.clientWidth]
                },
                q = function(e, t, r, n, i) {
                    var o, a = (o = window.getComputedStyle(t).direction, "h" === e && "rtl" === o ? -1 : 1),
                        s = a * n,
                        u = r.target,
                        c = t.contains(u),
                        l = !1,
                        d = s > 0,
                        f = 0,
                        h = 0;
                    do {
                        var p = L(e, u),
                            m = p[0],
                            g = p[1] - p[2] - a * m;
                        (m || g) && U(e, u) && (f += g, h += m), u instanceof ShadowRoot ? u = u.host : u = u.parentNode
                    } while (!c && u !== document.body || c && (t.contains(u) || t === u));
                    return d && (i && 1 > Math.abs(f) || !i && s > f) ? l = !0 : !d && (i && 1 > Math.abs(h) || !i && -s > h) && (l = !0), l
                },
                z = function(e) {
                    return "changedTouches" in e ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY] : [0, 0]
                },
                $ = function(e) {
                    return [e.deltaX, e.deltaY]
                },
                H = function(e) {
                    return e && "current" in e ? e.current : e
                },
                G = 0,
                W = [],
                K = (u = function(e) {
                    var t = d.useRef([]),
                        r = d.useRef([0, 0]),
                        n = d.useRef(),
                        i = d.useState(G++)[0],
                        o = d.useState(P)[0],
                        a = d.useRef(e);
                    d.useEffect(function() {
                        a.current = e
                    }, [e]), d.useEffect(function() {
                        if (e.inert) {
                            document.body.classList.add("block-interactivity-".concat(i));
                            var t = (0, l.__spreadArray)([e.lockRef.current], (e.shards || []).map(H), !0).filter(Boolean);
                            return t.forEach(function(e) {
                                    return e.classList.add("allow-interactivity-".concat(i))
                                }),
                                function() {
                                    document.body.classList.remove("block-interactivity-".concat(i)), t.forEach(function(e) {
                                        return e.classList.remove("allow-interactivity-".concat(i))
                                    })
                                }
                        }
                    }, [e.inert, e.lockRef.current, e.shards]);
                    var s = d.useCallback(function(e, t) {
                            if ("touches" in e && 2 === e.touches.length) return !a.current.allowPinchZoom;
                            var i, o = z(e),
                                s = r.current,
                                u = "deltaX" in e ? e.deltaX : s[0] - o[0],
                                c = "deltaY" in e ? e.deltaY : s[1] - o[1],
                                l = e.target,
                                d = Math.abs(u) > Math.abs(c) ? "h" : "v";
                            if ("touches" in e && "h" === d && "range" === l.type) return !1;
                            var f = F(d, l);
                            if (!f) return !0;
                            if (f ? i = d : (i = "v" === d ? "h" : "v", f = F(d, l)), !f) return !1;
                            if (!n.current && "changedTouches" in e && (u || c) && (n.current = i), !i) return !0;
                            var h = n.current || i;
                            return q(h, t, e, "h" === h ? u : c, !0)
                        }, []),
                        u = d.useCallback(function(e) {
                            if (W.length && W[W.length - 1] === o) {
                                var r = "deltaY" in e ? $(e) : z(e),
                                    n = t.current.filter(function(t) {
                                        var n;
                                        return t.name === e.type && (t.target === e.target || e.target === t.shadowParent) && (n = t.delta)[0] === r[0] && n[1] === r[1]
                                    })[0];
                                if (n && n.should) {
                                    e.cancelable && e.preventDefault();
                                    return
                                }
                                if (!n) {
                                    var i = (a.current.shards || []).map(H).filter(Boolean).filter(function(t) {
                                        return t.contains(e.target)
                                    });
                                    (i.length > 0 ? s(e, i[0]) : !a.current.noIsolation) && e.cancelable && e.preventDefault()
                                }
                            }
                        }, []),
                        c = d.useCallback(function(e, r, n, i) {
                            var o = {
                                name: e,
                                delta: r,
                                target: n,
                                should: i,
                                shadowParent: function(e) {
                                    for (var t = null; null !== e;) e instanceof ShadowRoot && (t = e.host, e = e.host), e = e.parentNode;
                                    return t
                                }(n)
                            };
                            t.current.push(o), setTimeout(function() {
                                t.current = t.current.filter(function(e) {
                                    return e !== o
                                })
                            }, 1)
                        }, []),
                        f = d.useCallback(function(e) {
                            r.current = z(e), n.current = void 0
                        }, []),
                        h = d.useCallback(function(t) {
                            c(t.type, $(t), t.target, s(t, e.lockRef.current))
                        }, []),
                        p = d.useCallback(function(t) {
                            c(t.type, z(t), t.target, s(t, e.lockRef.current))
                        }, []);
                    d.useEffect(function() {
                        return W.push(o), e.setCallbacks({
                                onScrollCapture: h,
                                onWheelCapture: h,
                                onTouchMoveCapture: p
                            }), document.addEventListener("wheel", u, D), document.addEventListener("touchmove", u, D), document.addEventListener("touchstart", f, D),
                            function() {
                                W = W.filter(function(e) {
                                    return e !== o
                                }), document.removeEventListener("wheel", u, D), document.removeEventListener("touchmove", u, D), document.removeEventListener("touchstart", f, D)
                            }
                    }, []);
                    var m = e.removeScrollBar,
                        g = e.inert;
                    return d.createElement(d.Fragment, null, g ? d.createElement(o, {
                        styles: "\n  .block-interactivity-".concat(i, " {pointer-events: none;}\n  .allow-interactivity-").concat(i, " {pointer-events: all;}\n")
                    }) : null, m ? d.createElement(B, {
                        gapMode: e.gapMode
                    }) : null)
                }, b.useMedium(u), w),
                Y = d.forwardRef(function(e, t) {
                    return d.createElement(v, (0, l.__assign)({}, e, {
                        ref: t,
                        sideCar: K
                    }))
                });
            Y.classNames = v.classNames;
            var V = Y
        },
        76442: function(e) {
            "use strict";
            e.exports = (e, t) => {
                if (!("string" == typeof e && "string" == typeof t)) throw TypeError("Expected the arguments to be of type `string`");
                if ("" === t) return [e];
                let r = e.indexOf(t);
                return -1 === r ? [e] : [e.slice(0, r), e.slice(r + t.length)]
            }
        },
        29276: function(e) {
            "use strict";
            e.exports = e => encodeURIComponent(e).replace(/[!'()*]/g, e => `%${e.charCodeAt(0).toString(16).toUpperCase()}`)
        },
        26088: function(e, t, r) {
            var n;
            ! function(i, o) {
                "use strict";
                var a = "function",
                    s = "undefined",
                    u = "object",
                    c = "string",
                    l = "major",
                    d = "model",
                    f = "name",
                    h = "type",
                    p = "vendor",
                    m = "version",
                    g = "architecture",
                    b = "console",
                    y = "mobile",
                    v = "tablet",
                    w = "smarttv",
                    E = "wearable",
                    A = "embedded",
                    P = "Amazon",
                    x = "Apple",
                    O = "ASUS",
                    _ = "BlackBerry",
                    I = "Browser",
                    T = "Chrome",
                    C = "Firefox",
                    S = "Google",
                    k = "Huawei",
                    M = "Microsoft",
                    B = "Motorola",
                    N = "Opera",
                    R = "Samsung",
                    D = "Sharp",
                    j = "Sony",
                    F = "Xiaomi",
                    U = "Zebra",
                    L = "Facebook",
                    q = "Chromium OS",
                    z = "Mac OS",
                    $ = function(e, t) {
                        var r = {};
                        for (var n in e) t[n] && t[n].length % 2 == 0 ? r[n] = t[n].concat(e[n]) : r[n] = e[n];
                        return r
                    },
                    H = function(e) {
                        for (var t = {}, r = 0; r < e.length; r++) t[e[r].toUpperCase()] = e[r];
                        return t
                    },
                    G = function(e, t) {
                        return typeof e === c && -1 !== W(t).indexOf(W(e))
                    },
                    W = function(e) {
                        return e.toLowerCase()
                    },
                    K = function(e, t) {
                        if (typeof e === c) return e = e.replace(/^\s\s*/, ""), typeof t === s ? e : e.substring(0, 500)
                    },
                    Y = function(e, t) {
                        for (var r, n, i, s, c, l, d = 0; d < t.length && !c;) {
                            var f = t[d],
                                h = t[d + 1];
                            for (r = n = 0; r < f.length && !c && f[r];)
                                if (c = f[r++].exec(e))
                                    for (i = 0; i < h.length; i++) l = c[++n], typeof(s = h[i]) === u && s.length > 0 ? 2 === s.length ? typeof s[1] == a ? this[s[0]] = s[1].call(this, l) : this[s[0]] = s[1] : 3 === s.length ? typeof s[1] !== a || s[1].exec && s[1].test ? this[s[0]] = l ? l.replace(s[1], s[2]) : void 0 : this[s[0]] = l ? s[1].call(this, l, s[2]) : void 0 : 4 === s.length && (this[s[0]] = l ? s[3].call(this, l.replace(s[1], s[2])) : void 0) : this[s] = l || o;
                            d += 2
                        }
                    },
                    V = function(e, t) {
                        for (var r in t)
                            if (typeof t[r] === u && t[r].length > 0) {
                                for (var n = 0; n < t[r].length; n++)
                                    if (G(t[r][n], e)) return "?" === r ? o : r
                            } else if (G(t[r], e)) return "?" === r ? o : r;
                        return e
                    },
                    Q = {
                        ME: "4.90",
                        "NT 3.11": "NT3.51",
                        "NT 4.0": "NT4.0",
                        2e3: "NT 5.0",
                        XP: ["NT 5.1", "NT 5.2"],
                        Vista: "NT 6.0",
                        7: "NT 6.1",
                        8: "NT 6.2",
                        "8.1": "NT 6.3",
                        10: ["NT 6.4", "NT 10.0"],
                        RT: "ARM"
                    },
                    J = {
                        browser: [
                            [/\b(?:crmo|crios)\/([\w\.]+)/i],
                            [m, [f, "Chrome"]],
                            [/edg(?:e|ios|a)?\/([\w\.]+)/i],
                            [m, [f, "Edge"]],
                            [/(opera mini)\/([-\w\.]+)/i, /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i, /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],
                            [f, m],
                            [/opios[\/ ]+([\w\.]+)/i],
                            [m, [f, N + " Mini"]],
                            [/\bopr\/([\w\.]+)/i],
                            [m, [f, N]],
                            [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
                            [m, [f, "Baidu"]],
                            [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i, /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i, /(?:ms|\()(ie) ([\w\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i, /(heytap|ovi)browser\/([\d\.]+)/i, /(weibo)__([\d\.]+)/i],
                            [f, m],
                            [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
                            [m, [f, "UC" + I]],
                            [/microm.+\bqbcore\/([\w\.]+)/i, /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i],
                            [m, [f, "WeChat"]],
                            [/konqueror\/([\w\.]+)/i],
                            [m, [f, "Konqueror"]],
                            [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
                            [m, [f, "IE"]],
                            [/ya(?:search)?browser\/([\w\.]+)/i],
                            [m, [f, "Yandex"]],
                            [/slbrowser\/([\w\.]+)/i],
                            [m, [f, "Smart Lenovo " + I]],
                            [/(avast|avg)\/([\w\.]+)/i],
                            [
                                [f, /(.+)/, "$1 Secure " + I], m
                            ],
                            [/\bfocus\/([\w\.]+)/i],
                            [m, [f, C + " Focus"]],
                            [/\bopt\/([\w\.]+)/i],
                            [m, [f, N + " Touch"]],
                            [/coc_coc\w+\/([\w\.]+)/i],
                            [m, [f, "Coc Coc"]],
                            [/dolfin\/([\w\.]+)/i],
                            [m, [f, "Dolphin"]],
                            [/coast\/([\w\.]+)/i],
                            [m, [f, N + " Coast"]],
                            [/miuibrowser\/([\w\.]+)/i],
                            [m, [f, "MIUI " + I]],
                            [/fxios\/([-\w\.]+)/i],
                            [m, [f, C]],
                            [/\bqihu|(qi?ho?o?|360)browser/i],
                            [
                                [f, "360 " + I]
                            ],
                            [/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i],
                            [
                                [f, /(.+)/, "$1 " + I], m
                            ],
                            [/samsungbrowser\/([\w\.]+)/i],
                            [m, [f, R + " Internet"]],
                            [/(comodo_dragon)\/([\w\.]+)/i],
                            [
                                [f, /_/g, " "], m
                            ],
                            [/metasr[\/ ]?([\d\.]+)/i],
                            [m, [f, "Sogou Explorer"]],
                            [/(sogou)mo\w+\/([\d\.]+)/i],
                            [
                                [f, "Sogou Mobile"], m
                            ],
                            [/(electron)\/([\w\.]+) safari/i, /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i, /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i],
                            [f, m],
                            [/(lbbrowser)/i, /\[(linkedin)app\]/i],
                            [f],
                            [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
                            [
                                [f, L], m
                            ],
                            [/(Klarna)\/([\w\.]+)/i, /(kakao(?:talk|story))[\/ ]([\w\.]+)/i, /(naver)\(.*?(\d+\.[\w\.]+).*\)/i, /safari (line)\/([\w\.]+)/i, /\b(line)\/([\w\.]+)\/iab/i, /(alipay)client\/([\w\.]+)/i, /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i],
                            [f, m],
                            [/\bgsa\/([\w\.]+) .*safari\//i],
                            [m, [f, "GSA"]],
                            [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
                            [m, [f, "TikTok"]],
                            [/headlesschrome(?:\/([\w\.]+)| )/i],
                            [m, [f, T + " Headless"]],
                            [/ wv\).+(chrome)\/([\w\.]+)/i],
                            [
                                [f, T + " WebView"], m
                            ],
                            [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
                            [m, [f, "Android " + I]],
                            [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
                            [f, m],
                            [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
                            [m, [f, "Mobile Safari"]],
                            [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
                            [m, f],
                            [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
                            [f, [m, V, {
                                "1.0": "/8",
                                "1.2": "/1",
                                "1.3": "/3",
                                "2.0": "/412",
                                "2.0.2": "/416",
                                "2.0.3": "/417",
                                "2.0.4": "/419",
                                "?": "/"
                            }]],
                            [/(webkit|khtml)\/([\w\.]+)/i],
                            [f, m],
                            [/(navigator|netscape\d?)\/([-\w\.]+)/i],
                            [
                                [f, "Netscape"], m
                            ],
                            [/mobile vr; rv:([\w\.]+)\).+firefox/i],
                            [m, [f, C + " Reality"]],
                            [/ekiohf.+(flow)\/([\w\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i, /(firefox)\/([\w\.]+)/i, /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i, /(links) \(([\w\.]+)/i, /panasonic;(viera)/i],
                            [f, m],
                            [/(cobalt)\/([\w\.]+)/i],
                            [f, [m, /master.|lts./, ""]]
                        ],
                        cpu: [
                            [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
                            [
                                [g, "amd64"]
                            ],
                            [/(ia32(?=;))/i],
                            [
                                [g, W]
                            ],
                            [/((?:i[346]|x)86)[;\)]/i],
                            [
                                [g, "ia32"]
                            ],
                            [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
                            [
                                [g, "arm64"]
                            ],
                            [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
                            [
                                [g, "armhf"]
                            ],
                            [/windows (ce|mobile); ppc;/i],
                            [
                                [g, "arm"]
                            ],
                            [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
                            [
                                [g, /ower/, "", W]
                            ],
                            [/(sun4\w)[;\)]/i],
                            [
                                [g, "sparc"]
                            ],
                            [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],
                            [
                                [g, W]
                            ]
                        ],
                        device: [
                            [/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],
                            [d, [p, R],
                                [h, v]
                            ],
                            [/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]([-\w]+)/i, /sec-(sgh\w+)/i],
                            [d, [p, R],
                                [h, y]
                            ],
                            [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
                            [d, [p, x],
                                [h, y]
                            ],
                            [/\((ipad);[-\w\),; ]+apple/i, /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i],
                            [d, [p, x],
                                [h, v]
                            ],
                            [/(macintosh);/i],
                            [d, [p, x]],
                            [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
                            [d, [p, D],
                                [h, y]
                            ],
                            [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
                            [d, [p, k],
                                [h, v]
                            ],
                            [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],
                            [d, [p, k],
                                [h, y]
                            ],
                            [/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i, /\b; (\w+) build\/hm\1/i, /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i, /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i, /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i, /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i],
                            [
                                [d, /_/g, " "],
                                [p, F],
                                [h, y]
                            ],
                            [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i, /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],
                            [
                                [d, /_/g, " "],
                                [p, F],
                                [h, v]
                            ],
                            [/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],
                            [d, [p, "OPPO"],
                                [h, y]
                            ],
                            [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
                            [d, [p, "Vivo"],
                                [h, y]
                            ],
                            [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
                            [d, [p, "Realme"],
                                [h, y]
                            ],
                            [/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],
                            [d, [p, B],
                                [h, y]
                            ],
                            [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
                            [d, [p, B],
                                [h, v]
                            ],
                            [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],
                            [d, [p, "LG"],
                                [h, v]
                            ],
                            [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i],
                            [d, [p, "LG"],
                                [h, y]
                            ],
                            [/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],
                            [d, [p, "Lenovo"],
                                [h, v]
                            ],
                            [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i],
                            [
                                [d, /_/g, " "],
                                [p, "Nokia"],
                                [h, y]
                            ],
                            [/(pixel c)\b/i],
                            [d, [p, S],
                                [h, v]
                            ],
                            [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
                            [d, [p, S],
                                [h, y]
                            ],
                            [/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],
                            [d, [p, j],
                                [h, y]
                            ],
                            [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
                            [
                                [d, "Xperia Tablet"],
                                [p, j],
                                [h, v]
                            ],
                            [/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],
                            [d, [p, "OnePlus"],
                                [h, y]
                            ],
                            [/(alexa)webm/i, /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i, /(kf[a-z]+)( bui|\)).+silk\//i],
                            [d, [p, P],
                                [h, v]
                            ],
                            [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
                            [
                                [d, /(.+)/g, "Fire Phone $1"],
                                [p, P],
                                [h, y]
                            ],
                            [/(playbook);[-\w\),; ]+(rim)/i],
                            [d, p, [h, v]],
                            [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
                            [d, [p, _],
                                [h, y]
                            ],
                            [/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],
                            [d, [p, O],
                                [h, v]
                            ],
                            [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
                            [d, [p, O],
                                [h, y]
                            ],
                            [/(nexus 9)/i],
                            [d, [p, "HTC"],
                                [h, v]
                            ],
                            [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i, /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],
                            [p, [d, /_/g, " "],
                                [h, y]
                            ],
                            [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
                            [d, [p, "Acer"],
                                [h, v]
                            ],
                            [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
                            [d, [p, "Meizu"],
                                [h, y]
                            ],
                            [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
                            [d, [p, "Ulefone"],
                                [h, y]
                            ],
                            [/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i, /(hp) ([\w ]+\w)/i, /(asus)-?(\w+)/i, /(microsoft); (lumia[\w ]+)/i, /(lenovo)[-_ ]?([-\w]+)/i, /(jolla)/i, /(oppo) ?([\w ]+) bui/i],
                            [p, d, [h, y]],
                            [/(kobo)\s(ereader|touch)/i, /(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\/([\w\.]+)/i, /(nook)[\w ]+build\/(\w+)/i, /(dell) (strea[kpr\d ]*[\dko])/i, /(le[- ]+pan)[- ]+(\w{1,9}) bui/i, /(trinity)[- ]*(t\d{3}) bui/i, /(gigaset)[- ]+(q\w{1,9}) bui/i, /(vodafone) ([\w ]+)(?:\)| bui)/i],
                            [p, d, [h, v]],
                            [/(surface duo)/i],
                            [d, [p, M],
                                [h, v]
                            ],
                            [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
                            [d, [p, "Fairphone"],
                                [h, y]
                            ],
                            [/(u304aa)/i],
                            [d, [p, "AT&T"],
                                [h, y]
                            ],
                            [/\bsie-(\w*)/i],
                            [d, [p, "Siemens"],
                                [h, y]
                            ],
                            [/\b(rct\w+) b/i],
                            [d, [p, "RCA"],
                                [h, v]
                            ],
                            [/\b(venue[\d ]{2,7}) b/i],
                            [d, [p, "Dell"],
                                [h, v]
                            ],
                            [/\b(q(?:mv|ta)\w+) b/i],
                            [d, [p, "Verizon"],
                                [h, v]
                            ],
                            [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
                            [d, [p, "Barnes & Noble"],
                                [h, v]
                            ],
                            [/\b(tm\d{3}\w+) b/i],
                            [d, [p, "NuVision"],
                                [h, v]
                            ],
                            [/\b(k88) b/i],
                            [d, [p, "ZTE"],
                                [h, v]
                            ],
                            [/\b(nx\d{3}j) b/i],
                            [d, [p, "ZTE"],
                                [h, y]
                            ],
                            [/\b(gen\d{3}) b.+49h/i],
                            [d, [p, "Swiss"],
                                [h, y]
                            ],
                            [/\b(zur\d{3}) b/i],
                            [d, [p, "Swiss"],
                                [h, v]
                            ],
                            [/\b((zeki)?tb.*\b) b/i],
                            [d, [p, "Zeki"],
                                [h, v]
                            ],
                            [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
                            [
                                [p, "Dragon Touch"], d, [h, v]
                            ],
                            [/\b(ns-?\w{0,9}) b/i],
                            [d, [p, "Insignia"],
                                [h, v]
                            ],
                            [/\b((nxa|next)-?\w{0,9}) b/i],
                            [d, [p, "NextBook"],
                                [h, v]
                            ],
                            [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
                            [
                                [p, "Voice"], d, [h, y]
                            ],
                            [/\b(lvtel\-)?(v1[12]) b/i],
                            [
                                [p, "LvTel"], d, [h, y]
                            ],
                            [/\b(ph-1) /i],
                            [d, [p, "Essential"],
                                [h, y]
                            ],
                            [/\b(v(100md|700na|7011|917g).*\b) b/i],
                            [d, [p, "Envizen"],
                                [h, v]
                            ],
                            [/\b(trio[-\w\. ]+) b/i],
                            [d, [p, "MachSpeed"],
                                [h, v]
                            ],
                            [/\btu_(1491) b/i],
                            [d, [p, "Rotor"],
                                [h, v]
                            ],
                            [/(shield[\w ]+) b/i],
                            [d, [p, "Nvidia"],
                                [h, v]
                            ],
                            [/(sprint) (\w+)/i],
                            [p, d, [h, y]],
                            [/(kin\.[onetw]{3})/i],
                            [
                                [d, /\./g, " "],
                                [p, M],
                                [h, y]
                            ],
                            [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
                            [d, [p, U],
                                [h, v]
                            ],
                            [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
                            [d, [p, U],
                                [h, y]
                            ],
                            [/smart-tv.+(samsung)/i],
                            [p, [h, w]],
                            [/hbbtv.+maple;(\d+)/i],
                            [
                                [d, /^/, "SmartTV"],
                                [p, R],
                                [h, w]
                            ],
                            [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
                            [
                                [p, "LG"],
                                [h, w]
                            ],
                            [/(apple) ?tv/i],
                            [p, [d, x + " TV"],
                                [h, w]
                            ],
                            [/crkey/i],
                            [
                                [d, T + "cast"],
                                [p, S],
                                [h, w]
                            ],
                            [/droid.+aft(\w+)( bui|\))/i],
                            [d, [p, P],
                                [h, w]
                            ],
                            [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
                            [d, [p, D],
                                [h, w]
                            ],
                            [/(bravia[\w ]+)( bui|\))/i],
                            [d, [p, j],
                                [h, w]
                            ],
                            [/(mitv-\w{5}) bui/i],
                            [d, [p, F],
                                [h, w]
                            ],
                            [/Hbbtv.*(technisat) (.*);/i],
                            [p, d, [h, w]],
                            [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],
                            [
                                [p, K],
                                [d, K],
                                [h, w]
                            ],
                            [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
                            [
                                [h, w]
                            ],
                            [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
                            [p, d, [h, b]],
                            [/droid.+; (shield) bui/i],
                            [d, [p, "Nvidia"],
                                [h, b]
                            ],
                            [/(playstation [345portablevi]+)/i],
                            [d, [p, j],
                                [h, b]
                            ],
                            [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
                            [d, [p, M],
                                [h, b]
                            ],
                            [/((pebble))app/i],
                            [p, d, [h, E]],
                            [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
                            [d, [p, x],
                                [h, E]
                            ],
                            [/droid.+; (glass) \d/i],
                            [d, [p, S],
                                [h, E]
                            ],
                            [/droid.+; (wt63?0{2,3})\)/i],
                            [d, [p, U],
                                [h, E]
                            ],
                            [/(quest( 2| pro)?)/i],
                            [d, [p, L],
                                [h, E]
                            ],
                            [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
                            [p, [h, A]],
                            [/(aeobc)\b/i],
                            [d, [p, P],
                                [h, A]
                            ],
                            [/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i],
                            [d, [h, y]],
                            [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
                            [d, [h, v]],
                            [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
                            [
                                [h, v]
                            ],
                            [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],
                            [
                                [h, y]
                            ],
                            [/(android[-\w\. ]{0,9});.+buil/i],
                            [d, [p, "Generic"]]
                        ],
                        engine: [
                            [/windows.+ edge\/([\w\.]+)/i],
                            [m, [f, "EdgeHTML"]],
                            [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
                            [m, [f, "Blink"]],
                            [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, /ekioh(flow)\/([\w\.]+)/i, /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i, /(icab)[\/ ]([23]\.[\d\.]+)/i, /\b(libweb)/i],
                            [f, m],
                            [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
                            [m, f]
                        ],
                        os: [
                            [/microsoft (windows) (vista|xp)/i],
                            [f, m],
                            [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
                            [f, [m, V, Q]],
                            [/windows nt 6\.2; (arm)/i, /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i],
                            [
                                [m, V, Q],
                                [f, "Windows"]
                            ],
                            [/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i, /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i],
                            [
                                [m, /_/g, "."],
                                [f, "iOS"]
                            ],
                            [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i],
                            [
                                [f, z],
                                [m, /_/g, "."]
                            ],
                            [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
                            [m, f],
                            [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i, /(tizen|kaios)[\/ ]([\w\.]+)/i, /\((series40);/i],
                            [f, m],
                            [/\(bb(10);/i],
                            [m, [f, _]],
                            [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
                            [m, [f, "Symbian"]],
                            [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],
                            [m, [f, C + " OS"]],
                            [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
                            [m, [f, "webOS"]],
                            [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
                            [m, [f, "watchOS"]],
                            [/crkey\/([\d\.]+)/i],
                            [m, [f, T + "cast"]],
                            [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
                            [
                                [f, q], m
                            ],
                            [/panasonic;(viera)/i, /(netrange)mmh/i, /(nettv)\/(\d+\.[\w\.]+)/i, /(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\);]+)/i, /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i, /(mint)[\/\(\) ]?(\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i, /(hurd|linux) ?([\w\.]*)/i, /(gnu) ?([\w\.]*)/i, /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i, /(haiku) (\w+)/i],
                            [f, m],
                            [/(sunos) ?([\w\.\d]*)/i],
                            [
                                [f, "Solaris"], m
                            ],
                            [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i, /(aix) ((\d)(?=\.|\)| )[\w\.])*/i, /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, /(unix) ?([\w\.]*)/i],
                            [f, m]
                        ]
                    },
                    Z = function(e, t) {
                        if (typeof e === u && (t = e, e = o), !(this instanceof Z)) return new Z(e, t).getResult();
                        var r = typeof i !== s && i.navigator ? i.navigator : o,
                            n = e || (r && r.userAgent ? r.userAgent : ""),
                            b = r && r.userAgentData ? r.userAgentData : o,
                            w = t ? $(J, t) : J,
                            E = r && r.userAgent == n;
                        return this.getBrowser = function() {
                            var e, t = {};
                            return t[f] = o, t[m] = o, Y.call(t, n, w.browser), t[l] = typeof(e = t[m]) === c ? e.replace(/[^\d\.]/g, "").split(".")[0] : o, E && r && r.brave && typeof r.brave.isBrave == a && (t[f] = "Brave"), t
                        }, this.getCPU = function() {
                            var e = {};
                            return e[g] = o, Y.call(e, n, w.cpu), e
                        }, this.getDevice = function() {
                            var e = {};
                            return e[p] = o, e[d] = o, e[h] = o, Y.call(e, n, w.device), E && !e[h] && b && b.mobile && (e[h] = y), E && "Macintosh" == e[d] && r && typeof r.standalone !== s && r.maxTouchPoints && r.maxTouchPoints > 2 && (e[d] = "iPad", e[h] = v), e
                        }, this.getEngine = function() {
                            var e = {};
                            return e[f] = o, e[m] = o, Y.call(e, n, w.engine), e
                        }, this.getOS = function() {
                            var e = {};
                            return e[f] = o, e[m] = o, Y.call(e, n, w.os), E && !e[f] && b && "Unknown" != b.platform && (e[f] = b.platform.replace(/chrome os/i, q).replace(/macos/i, z)), e
                        }, this.getResult = function() {
                            return {
                                ua: this.getUA(),
                                browser: this.getBrowser(),
                                engine: this.getEngine(),
                                os: this.getOS(),
                                device: this.getDevice(),
                                cpu: this.getCPU()
                            }
                        }, this.getUA = function() {
                            return n
                        }, this.setUA = function(e) {
                            return n = typeof e === c && e.length > 500 ? K(e, 500) : e, this
                        }, this.setUA(n), this
                    };
                Z.VERSION = "1.0.37", Z.BROWSER = H([f, m, l]), Z.CPU = H([g]), Z.DEVICE = H([d, p, h, b, y, w, v, E, A]), Z.ENGINE = Z.OS = H([f, m]), typeof t !== s ? (e.exports && (t = e.exports = Z), t.UAParser = Z) : r.amdO ? o !== (n = (function() {
                    return Z
                }).call(t, r, t, e)) && (e.exports = n) : typeof i !== s && (i.UAParser = Z);
                var X = typeof i !== s && (i.jQuery || i.Zepto);
                if (X && !X.ua) {
                    var ee = new Z;
                    X.ua = ee.getResult(), X.ua.get = function() {
                        return ee.getUA()
                    }, X.ua.set = function(e) {
                        ee.setUA(e);
                        var t = ee.getResult();
                        for (var r in t) X.ua[r] = t[r]
                    }
                }
            }("object" == typeof window ? window : this)
        },
        92010: function(e, t, r) {
            "use strict";
            var n = r(2265),
                i = "function" == typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
                },
                o = n.useState,
                a = n.useEffect,
                s = n.useLayoutEffect,
                u = n.useDebugValue;

            function c(e) {
                var t = e.getSnapshot;
                e = e.value;
                try {
                    var r = t();
                    return !i(e, r)
                } catch (e) {
                    return !0
                }
            }
            var l = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? function(e, t) {
                return t()
            } : function(e, t) {
                var r = t(),
                    n = o({
                        inst: {
                            value: r,
                            getSnapshot: t
                        }
                    }),
                    i = n[0].inst,
                    l = n[1];
                return s(function() {
                    i.value = r, i.getSnapshot = t, c(i) && l({
                        inst: i
                    })
                }, [e, r, t]), a(function() {
                    return c(i) && l({
                        inst: i
                    }), e(function() {
                        c(i) && l({
                            inst: i
                        })
                    })
                }, [e]), u(r), r
            };
            t.useSyncExternalStore = void 0 !== n.useSyncExternalStore ? n.useSyncExternalStore : l
        },
        43227: function(e, t, r) {
            "use strict";
            var n = r(2265),
                i = r(64854),
                o = "function" == typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
                },
                a = i.useSyncExternalStore,
                s = n.useRef,
                u = n.useEffect,
                c = n.useMemo,
                l = n.useDebugValue;
            t.useSyncExternalStoreWithSelector = function(e, t, r, n, i) {
                var d = s(null);
                if (null === d.current) {
                    var f = {
                        hasValue: !1,
                        value: null
                    };
                    d.current = f
                } else f = d.current;
                var h = a(e, (d = c(function() {
                    function e(e) {
                        if (!u) {
                            if (u = !0, a = e, e = n(e), void 0 !== i && f.hasValue) {
                                var t = f.value;
                                if (i(t, e)) return s = t
                            }
                            return s = e
                        }
                        if (t = s, o(a, e)) return t;
                        var r = n(e);
                        return void 0 !== i && i(t, r) ? t : (a = e, s = r)
                    }
                    var a, s, u = !1,
                        c = void 0 === r ? null : r;
                    return [function() {
                        return e(t())
                    }, null === c ? void 0 : function() {
                        return e(c())
                    }]
                }, [t, r, n, i]))[0], d[1]);
                return u(function() {
                    f.hasValue = !0, f.value = h
                }, [h]), l(h), h
            }
        },
        64854: function(e, t, r) {
            "use strict";
            e.exports = r(92010)
        },
        84782: function(e, t, r) {
            "use strict";
            e.exports = r(43227)
        },
        25566: function(e) {
            var t, r, n, i = e.exports = {};

            function o() {
                throw Error("setTimeout has not been defined")
            }

            function a() {
                throw Error("clearTimeout has not been defined")
            }

            function s(e) {
                if (t === setTimeout) return setTimeout(e, 0);
                if ((t === o || !t) && setTimeout) return t = setTimeout, setTimeout(e, 0);
                try {
                    return t(e, 0)
                } catch (r) {
                    try {
                        return t.call(null, e, 0)
                    } catch (r) {
                        return t.call(this, e, 0)
                    }
                }
            }! function() {
                try {
                    t = "function" == typeof setTimeout ? setTimeout : o
                } catch (e) {
                    t = o
                }
                try {
                    r = "function" == typeof clearTimeout ? clearTimeout : a
                } catch (e) {
                    r = a
                }
            }();
            var u = [],
                c = !1,
                l = -1;

            function d() {
                c && n && (c = !1, n.length ? u = n.concat(u) : l = -1, u.length && f())
            }

            function f() {
                if (!c) {
                    var e = s(d);
                    c = !0;
                    for (var t = u.length; t;) {
                        for (n = u, u = []; ++l < t;) n && n[l].run();
                        l = -1, t = u.length
                    }
                    n = null, c = !1,
                        function(e) {
                            if (r === clearTimeout) return clearTimeout(e);
                            if ((r === a || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e);
                            try {
                                r(e)
                            } catch (t) {
                                try {
                                    return r.call(null, e)
                                } catch (t) {
                                    return r.call(this, e)
                                }
                            }
                        }(e)
                }
            }

            function h(e, t) {
                this.fun = e, this.array = t
            }

            function p() {}
            i.nextTick = function(e) {
                var t = Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
                u.push(new h(e, t)), 1 !== u.length || c || s(f)
            }, h.prototype.run = function() {
                this.fun.apply(null, this.array)
            }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = p, i.addListener = p, i.once = p, i.off = p, i.removeListener = p, i.removeAllListeners = p, i.emit = p, i.prependListener = p, i.prependOnceListener = p, i.listeners = function(e) {
                return []
            }, i.binding = function(e) {
                throw Error("process.binding is not supported")
            }, i.cwd = function() {
                return "/"
            }, i.chdir = function(e) {
                throw Error("process.chdir is not supported")
            }, i.umask = function() {
                return 0
            }
        },
        56800: function(e, t) {
            var r;
            /*!
            Copyright (c) 2018 Jed Watson.
            Licensed under the MIT License (MIT), see
            http://jedwatson.github.io/classnames
            */
            ! function() {
                "use strict";
                var n = {}.hasOwnProperty;

                function i() {
                    for (var e = "", t = 0; t < arguments.length; t++) {
                        var r = arguments[t];
                        r && (e = o(e, function(e) {
                            if ("string" == typeof e || "number" == typeof e) return e;
                            if ("object" != typeof e) return "";
                            if (Array.isArray(e)) return i.apply(null, e);
                            if (e.toString !== Object.prototype.toString && !e.toString.toString().includes("[native code]")) return e.toString();
                            var t = "";
                            for (var r in e) n.call(e, r) && e[r] && (t = o(t, r));
                            return t
                        }(r)))
                    }
                    return e
                }

                function o(e, t) {
                    return t ? e ? e + " " + t : e + t : e
                }
                e.exports ? (i.default = i, e.exports = i) : void 0 !== (r = (function() {
                    return i
                }).apply(t, [])) && (e.exports = r)
            }()
        },
        5974: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccount = void 0, t.parseAccount = function(e) {
                return "string" == typeof e ? {
                    address: e,
                    type: "json-rpc"
                } : e
            }
        },
        20461: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = void 0;
            let n = r(66967),
                i = r(15146);
            t.publicKeyToAddress = function(e) {
                let t = (0, i.keccak256)(`0x${e.substring(4)}`).substring(26);
                return (0, n.checksumAddress)(`0x${t}`)
            }
        },
        23114: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAddress = void 0;
            let n = r(9344),
                i = r(43362),
                o = r(389),
                a = r(48584),
                s = r(14772),
                u = r(28510),
                c = r(37679),
                l = r(38765),
                d = r(76933),
                f = r(50742),
                h = r(85002);
            async function p(e, {
                blockNumber: t,
                blockTag: r,
                coinType: p,
                name: m,
                universalResolverAddress: g
            }) {
                let b = g;
                if (!b) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    b = (0, a.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let a = (0, o.encodeFunctionData)({
                            abi: n.addressResolverAbi,
                            functionName: "addr",
                            ...null != p ? {
                                args: [(0, l.namehash)(m), BigInt(p)]
                            } : {
                                args: [(0, l.namehash)(m)]
                            }
                        }),
                        c = await (0, f.getAction)(e, h.readContract, "readContract")({
                            address: b,
                            abi: n.universalResolverResolveAbi,
                            functionName: "resolve",
                            args: [(0, u.toHex)((0, d.packetToBytes)(m)), a],
                            blockNumber: t,
                            blockTag: r
                        });
                    if ("0x" === c[0]) return null;
                    let g = (0, i.decodeFunctionResult)({
                        abi: n.addressResolverAbi,
                        args: null != p ? [(0, l.namehash)(m), BigInt(p)] : void 0,
                        functionName: "addr",
                        data: c[0]
                    });
                    if ("0x" === g || "0x00" === (0, s.trim)(g)) return null;
                    return g
                } catch (e) {
                    if ((0, c.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsAddress = p
        },
        10081: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAvatar = void 0;
            let n = r(81026),
                i = r(50742),
                o = r(64071);
            async function a(e, {
                blockNumber: t,
                blockTag: r,
                gatewayUrls: a,
                name: s,
                universalResolverAddress: u
            }) {
                let c = await (0, i.getAction)(e, o.getEnsText, "getEnsText")({
                    blockNumber: t,
                    blockTag: r,
                    key: "avatar",
                    name: s,
                    universalResolverAddress: u
                });
                if (!c) return null;
                try {
                    return await (0, n.parseAvatarRecord)(e, {
                        record: c,
                        gatewayUrls: a
                    })
                } catch {
                    return null
                }
            }
            t.getEnsAvatar = a
        },
        92410: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsName = void 0;
            let n = r(9344),
                i = r(48584),
                o = r(28510),
                a = r(37679),
                s = r(76933),
                u = r(50742),
                c = r(85002);
            async function l(e, {
                address: t,
                blockNumber: r,
                blockTag: l,
                universalResolverAddress: d
            }) {
                let f = d;
                if (!f) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    f = (0, i.getChainContractAddress)({
                        blockNumber: r,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let h = `${t.toLowerCase().substring(2)}.addr.reverse`;
                try {
                    let [i, a] = await (0, u.getAction)(e, c.readContract, "readContract")({
                        address: f,
                        abi: n.universalResolverReverseAbi,
                        functionName: "reverse",
                        args: [(0, o.toHex)((0, s.packetToBytes)(h))],
                        blockNumber: r,
                        blockTag: l
                    });
                    if (t.toLowerCase() !== a.toLowerCase()) return null;
                    return i
                } catch (e) {
                    if ((0, a.isNullUniversalResolverError)(e, "reverse")) return null;
                    throw e
                }
            }
            t.getEnsName = l
        },
        32691: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsResolver = void 0;
            let n = r(48584),
                i = r(28510),
                o = r(76933),
                a = r(50742),
                s = r(85002);
            async function u(e, {
                blockNumber: t,
                blockTag: r,
                name: u,
                universalResolverAddress: c
            }) {
                let l = c;
                if (!l) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    l = (0, n.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let [d] = await (0, a.getAction)(e, s.readContract, "readContract")({
                    address: l,
                    abi: [{
                        inputs: [{
                            type: "bytes"
                        }],
                        name: "findResolver",
                        outputs: [{
                            type: "address"
                        }, {
                            type: "bytes32"
                        }],
                        stateMutability: "view",
                        type: "function"
                    }],
                    functionName: "findResolver",
                    args: [(0, i.toHex)((0, o.packetToBytes)(u))],
                    blockNumber: t,
                    blockTag: r
                });
                return d
            }
            t.getEnsResolver = u
        },
        64071: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsText = void 0;
            let n = r(9344),
                i = r(43362),
                o = r(389),
                a = r(48584),
                s = r(28510),
                u = r(37679),
                c = r(38765),
                l = r(76933),
                d = r(50742),
                f = r(85002);
            async function h(e, {
                blockNumber: t,
                blockTag: r,
                name: h,
                key: p,
                universalResolverAddress: m
            }) {
                let g = m;
                if (!g) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    g = (0, a.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let a = await (0, d.getAction)(e, f.readContract, "readContract")({
                        address: g,
                        abi: n.universalResolverResolveAbi,
                        functionName: "resolve",
                        args: [(0, s.toHex)((0, l.packetToBytes)(h)), (0, o.encodeFunctionData)({
                            abi: n.textResolverAbi,
                            functionName: "text",
                            args: [(0, c.namehash)(h), p]
                        })],
                        blockNumber: t,
                        blockTag: r
                    });
                    if ("0x" === a[0]) return null;
                    let u = (0, i.decodeFunctionResult)({
                        abi: n.textResolverAbi,
                        functionName: "text",
                        data: a[0]
                    });
                    return "" === u ? null : u
                } catch (e) {
                    if ((0, u.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsText = h
        },
        49504: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventParameters = t.getFunctionParameters = t.getContract = void 0;
            let n = r(50742),
                i = r(29244),
                o = r(3357),
                a = r(71118),
                s = r(85002),
                u = r(42471),
                c = r(67995),
                l = r(86899);

            function d(e) {
                let t = e.length && Array.isArray(e[0]);
                return {
                    args: t ? e[0] : [],
                    options: (t ? e[1] : e[0]) ? ? {}
                }
            }

            function f(e, t) {
                let r = !1;
                return Array.isArray(e[0]) ? r = !0 : 1 === e.length ? r = t.inputs.some(e => e.indexed) : 2 === e.length && (r = !0), {
                    args: r ? e[0] : void 0,
                    options: (r ? e[1] : e[0]) ? ? {}
                }
            }
            t.getContract = function({
                abi: e,
                address: t,
                publicClient: r,
                walletClient: h
            }) {
                let p = null != r,
                    m = null != h,
                    g = {},
                    b = !1,
                    y = !1,
                    v = !1;
                for (let t of e)
                    if ("function" === t.type ? "view" === t.stateMutability || "pure" === t.stateMutability ? b = !0 : y = !0 : "event" === t.type && (v = !0), b && y && v) break;
                return p && (b && (g.read = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: u
                        } = d(i);
                        return (0, n.getAction)(r, s.readContract, "readContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: a,
                            ...u
                        })
                    }
                })), y && (g.simulate = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: s
                        } = d(i);
                        return (0, n.getAction)(r, u.simulateContract, "simulateContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: a,
                            ...s
                        })
                    }
                })), v && (g.createEventFilter = new Proxy({}, {
                    get: (o, a) => (...o) => {
                        let {
                            args: s,
                            options: u
                        } = f(o, e.find(e => "event" === e.type && e.name === a));
                        return (0, n.getAction)(r, i.createContractEventFilter, "createContractEventFilter")({
                            abi: e,
                            address: t,
                            eventName: a,
                            args: s,
                            ...u
                        })
                    }
                }), g.getEvents = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: s,
                            options: u
                        } = f(i, e.find(e => "event" === e.type && e.name === o));
                        return (0, n.getAction)(r, a.getContractEvents, "getContractEvents")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: s,
                            ...u
                        })
                    }
                }), g.watchEvent = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: s
                        } = f(i, e.find(e => "event" === e.type && e.name === o));
                        return (0, n.getAction)(r, c.watchContractEvent, "watchContractEvent")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: a,
                            ...s
                        })
                    }
                }))), m && y && (g.write = new Proxy({}, {
                    get: (r, i) => (...r) => {
                        let {
                            args: o,
                            options: a
                        } = d(r);
                        return (0, n.getAction)(h, l.writeContract, "writeContract")({
                            abi: e,
                            address: t,
                            functionName: i,
                            args: o,
                            ...a
                        })
                    }
                })), (p || m) && y && (g.estimateGas = new Proxy({}, {
                    get: (i, a) => (...i) => {
                        let {
                            args: s,
                            options: u
                        } = d(i), c = r ? ? h;
                        return (0, n.getAction)(c, o.estimateContractGas, "estimateContractGas")({
                            abi: e,
                            address: t,
                            functionName: a,
                            args: s,
                            ...u,
                            account: u.account ? ? h.account
                        })
                    }
                })), g.address = t, g.abi = e, g
            }, t.getFunctionParameters = d, t.getEventParameters = f
        },
        58965: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getRevertErrorData = t.call = void 0;
            let n = r(5974),
                i = r(9344),
                o = r(519),
                a = r(96477),
                s = r(2439),
                u = r(85374),
                c = r(43362),
                l = r(389),
                d = r(48584),
                f = r(28510),
                h = r(59399),
                p = r(26940),
                m = r(23974),
                g = r(62752),
                b = r(93960);
            async function y(e, t) {
                let {
                    account: i = e.account,
                    batch: a = !!e.batch ? .multicall,
                    blockNumber: u,
                    blockTag: c = "latest",
                    accessList: l,
                    data: d,
                    gas: g,
                    gasPrice: y,
                    maxFeePerGas: E,
                    maxPriorityFeePerGas: A,
                    nonce: P,
                    to: x,
                    value: O,
                    ..._
                } = t, I = i ? (0, n.parseAccount)(i) : void 0;
                try {
                    (0, b.assertRequest)(t);
                    let r = (u ? (0, f.numberToHex)(u) : void 0) || c,
                        n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || m.formatTransactionRequest)({ ...(0, p.extract)(_, {
                                format: n
                            }),
                            from: I ? .address,
                            accessList: l,
                            data: d,
                            gas: g,
                            gasPrice: y,
                            maxFeePerGas: E,
                            maxPriorityFeePerGas: A,
                            nonce: P,
                            to: x,
                            value: O
                        });
                    if (a && function({
                            request: e
                        }) {
                            let {
                                data: t,
                                to: r,
                                ...n
                            } = e;
                            return !(!t || t.startsWith(o.aggregate3Signature)) && !!r && !(Object.values(n).filter(e => void 0 !== e).length > 0)
                        }({
                            request: i
                        })) try {
                        return await v(e, { ...i,
                            blockNumber: u,
                            blockTag: c
                        })
                    } catch (e) {
                        if (!(e instanceof s.ClientChainNotConfiguredError) && !(e instanceof s.ChainDoesNotSupportContract)) throw e
                    }
                    let h = await e.request({
                        method: "eth_call",
                        params: r ? [i, r] : [i]
                    });
                    if ("0x" === h) return {
                        data: void 0
                    };
                    return {
                        data: h
                    }
                } catch (a) {
                    let n = w(a),
                        {
                            offchainLookup: i,
                            offchainLookupSignature: o
                        } = await Promise.resolve().then(() => r(98204));
                    if (n ? .slice(0, 10) === o && x) return {
                        data: await i(e, {
                            data: n,
                            to: x
                        })
                    };
                    throw (0, h.getCallError)(a, { ...t,
                        account: I,
                        chain: e.chain
                    })
                }
            }
            async function v(e, t) {
                let {
                    batchSize: r = 1024,
                    wait: n = 0
                } = "object" == typeof e.batch ? .multicall ? e.batch.multicall : {}, {
                    blockNumber: o,
                    blockTag: a = "latest",
                    data: h,
                    multicallAddress: p,
                    to: m
                } = t, b = p;
                if (!b) {
                    if (!e.chain) throw new s.ClientChainNotConfiguredError;
                    b = (0, d.getChainContractAddress)({
                        blockNumber: o,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let y = (o ? (0, f.numberToHex)(o) : void 0) || a,
                    {
                        schedule: v
                    } = (0, g.createBatchScheduler)({
                        id: `${e.uid}.${y}`,
                        wait: n,
                        shouldSplitBatch: e => e.reduce((e, {
                            data: t
                        }) => e + (t.length - 2), 0) > 2 * r,
                        fn: async t => {
                            let r = t.map(e => ({
                                    allowFailure: !0,
                                    callData: e.data,
                                    target: e.to
                                })),
                                n = (0, l.encodeFunctionData)({
                                    abi: i.multicall3Abi,
                                    args: [r],
                                    functionName: "aggregate3"
                                }),
                                o = await e.request({
                                    method: "eth_call",
                                    params: [{
                                        data: n,
                                        to: b
                                    }, y]
                                });
                            return (0, c.decodeFunctionResult)({
                                abi: i.multicall3Abi,
                                args: [r],
                                functionName: "aggregate3",
                                data: o || "0x"
                            })
                        }
                    }),
                    [{
                        returnData: w,
                        success: E
                    }] = await v({
                        data: h,
                        to: m
                    });
                if (!E) throw new u.RawContractError({
                    data: w
                });
                return "0x" === w ? {
                    data: void 0
                } : {
                    data: w
                }
            }

            function w(e) {
                if (!(e instanceof a.BaseError)) return;
                let t = e.walk();
                return "object" == typeof t.data ? t.data.data : t.data
            }
            t.call = y, t.getRevertErrorData = w
        },
        67412: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBlockFilter = void 0;
            let n = r(49132);
            async function i(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newBlockFilter"
                    }),
                    r = await e.request({
                        method: "eth_newBlockFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "block"
                }
            }
            t.createBlockFilter = i
        },
        29244: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createContractEventFilter = void 0;
            let n = r(63406),
                i = r(28510),
                o = r(49132);
            async function a(e, {
                address: t,
                abi: r,
                args: a,
                eventName: s,
                fromBlock: u,
                strict: c,
                toBlock: l
            }) {
                let d = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    f = s ? (0, n.encodeEventTopics)({
                        abi: r,
                        args: a,
                        eventName: s
                    }) : void 0,
                    h = await e.request({
                        method: "eth_newFilter",
                        params: [{
                            address: t,
                            fromBlock: "bigint" == typeof u ? (0, i.numberToHex)(u) : u,
                            toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                            topics: f
                        }]
                    });
                return {
                    abi: r,
                    args: a,
                    eventName: s,
                    id: h,
                    request: d(h),
                    strict: c,
                    type: "event"
                }
            }
            t.createContractEventFilter = a
        },
        83573: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createEventFilter = void 0;
            let n = r(63406),
                i = r(28510),
                o = r(49132);
            async function a(e, {
                address: t,
                args: r,
                event: a,
                events: s,
                fromBlock: u,
                strict: c,
                toBlock: l
            } = {}) {
                let d = s ? ? (a ? [a] : void 0),
                    f = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    h = [];
                d && (h = [d.flatMap(e => (0, n.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: r
                }))], a && (h = h[0]));
                let p = await e.request({
                    method: "eth_newFilter",
                    params: [{
                        address: t,
                        fromBlock: "bigint" == typeof u ? (0, i.numberToHex)(u) : u,
                        toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                        ...h.length ? {
                            topics: h
                        } : {}
                    }]
                });
                return {
                    abi: d,
                    args: r,
                    eventName: a ? a.name : void 0,
                    fromBlock: u,
                    id: p,
                    request: f(p),
                    strict: c,
                    toBlock: l,
                    type: "event"
                }
            }
            t.createEventFilter = a
        },
        50231: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPendingTransactionFilter = void 0;
            let n = r(49132);
            async function i(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newPendingTransactionFilter"
                    }),
                    r = await e.request({
                        method: "eth_newPendingTransactionFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "transaction"
                }
            }
            t.createPendingTransactionFilter = i
        },
        3357: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateContractGas = void 0;
            let n = r(5974),
                i = r(389),
                o = r(77803),
                a = r(50742),
                s = r(33944);
            async function u(e, {
                abi: t,
                address: r,
                args: u,
                functionName: c,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: u,
                    functionName: c
                });
                try {
                    return await (0, a.getAction)(e, s.estimateGas, "estimateGas")({
                        data: d,
                        to: r,
                        ...l
                    })
                } catch (i) {
                    let e = l.account ? (0, n.parseAccount)(l.account) : void 0;
                    throw (0, o.getContractError)(i, {
                        abi: t,
                        address: r,
                        args: u,
                        docsPath: "/docs/contract/estimateContractGas",
                        functionName: c,
                        sender: e ? .address
                    })
                }
            }
            t.estimateContractGas = u
        },
        83952: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateFeesPerGas = t.estimateFeesPerGas = void 0;
            let n = r(93220),
                i = r(50742),
                o = r(45942),
                a = r(94380),
                s = r(69379);
            async function u(e, t) {
                return c(e, t)
            }
            async function c(e, t) {
                let {
                    block: r,
                    chain: u = e.chain,
                    request: c,
                    type: l = "eip1559"
                } = t || {}, d = await (async () => "function" == typeof u ? .fees ? .baseFeeMultiplier ? u.fees.baseFeeMultiplier({
                    block: r,
                    client: e,
                    request: c
                }) : u ? .fees ? .baseFeeMultiplier ? ? 1.2)();
                if (d < 1) throw new n.BaseFeeScalarError;
                let f = 10 ** (d.toString().split(".")[1] ? .length ? ? 0),
                    h = e => e * BigInt(Math.ceil(d * f)) / BigInt(f),
                    p = r || await (0, i.getAction)(e, a.getBlock, "getBlock")({});
                if ("function" == typeof u ? .fees ? .estimateFeesPerGas) return u.fees.estimateFeesPerGas({
                    block: r,
                    client: e,
                    multiply: h,
                    request: c,
                    type: l
                });
                if ("eip1559" === l) {
                    if ("bigint" != typeof p.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let t = c ? .maxPriorityFeePerGas ? c.maxPriorityFeePerGas : await (0, o.internal_estimateMaxPriorityFeePerGas)(e, {
                            block: p,
                            chain: u,
                            request: c
                        }),
                        r = h(p.baseFeePerGas);
                    return {
                        maxFeePerGas: c ? .maxFeePerGas ? ? r + t,
                        maxPriorityFeePerGas: t
                    }
                }
                return {
                    gasPrice: c ? .gasPrice ? ? h(await (0, i.getAction)(e, s.getGasPrice, "getGasPrice")({}))
                }
            }
            t.estimateFeesPerGas = u, t.internal_estimateFeesPerGas = c
        },
        33944: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateGas = void 0;
            let n = r(5974),
                i = r(28532),
                o = r(28510),
                a = r(74158),
                s = r(26940),
                u = r(23974),
                c = r(93960),
                l = r(47561);
            async function d(e, t) {
                let r = t.account ? ? e.account;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/public/estimateGas"
                });
                let d = (0, n.parseAccount)(r);
                try {
                    let {
                        accessList: r,
                        blockNumber: n,
                        blockTag: i,
                        data: a,
                        gas: f,
                        gasPrice: h,
                        maxFeePerGas: p,
                        maxPriorityFeePerGas: m,
                        nonce: g,
                        to: b,
                        value: y,
                        ...v
                    } = "local" === d.type ? await (0, l.prepareTransactionRequest)(e, t) : t, w = (n ? (0, o.numberToHex)(n) : void 0) || i;
                    (0, c.assertRequest)(t);
                    let E = e.chain ? .formatters ? .transactionRequest ? .format,
                        A = (E || u.formatTransactionRequest)({ ...(0, s.extract)(v, {
                                format: E
                            }),
                            from: d.address,
                            accessList: r,
                            data: a,
                            gas: f,
                            gasPrice: h,
                            maxFeePerGas: p,
                            maxPriorityFeePerGas: m,
                            nonce: g,
                            to: b,
                            value: y
                        }),
                        P = await e.request({
                            method: "eth_estimateGas",
                            params: w ? [A, w] : [A]
                        });
                    return BigInt(P)
                } catch (r) {
                    throw (0, a.getEstimateGasError)(r, { ...t,
                        account: d,
                        chain: e.chain
                    })
                }
            }
            t.estimateGas = d
        },
        45942: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateMaxPriorityFeePerGas = t.estimateMaxPriorityFeePerGas = void 0;
            let n = r(93220),
                i = r(67256),
                o = r(50742),
                a = r(94380),
                s = r(69379);
            async function u(e, t) {
                return c(e, t)
            }
            async function c(e, t) {
                let {
                    block: r,
                    chain: u = e.chain,
                    request: c
                } = t || {};
                if ("function" == typeof u ? .fees ? .defaultPriorityFee) {
                    let t = r || await (0, o.getAction)(e, a.getBlock, "getBlock")({});
                    return u.fees.defaultPriorityFee({
                        block: t,
                        client: e,
                        request: c
                    })
                }
                if (void 0 !== u ? .fees ? .defaultPriorityFee) return u ? .fees ? .defaultPriorityFee;
                try {
                    let t = await e.request({
                        method: "eth_maxPriorityFeePerGas"
                    });
                    return (0, i.hexToBigInt)(t)
                } catch {
                    let [t, i] = await Promise.all([r ? Promise.resolve(r) : (0, o.getAction)(e, a.getBlock, "getBlock")({}), (0, o.getAction)(e, s.getGasPrice, "getGasPrice")({})]);
                    if ("bigint" != typeof t.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let u = i - t.baseFeePerGas;
                    if (u < 0 n) return 0 n;
                    return u
                }
            }
            t.estimateMaxPriorityFeePerGas = u, t.internal_estimateMaxPriorityFeePerGas = c
        },
        74042: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBalance = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = r ? (0, n.numberToHex)(r) : void 0;
                return BigInt(await e.request({
                    method: "eth_getBalance",
                    params: [t, o || i]
                }))
            }
            t.getBalance = i
        },
        94380: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlock = void 0;
            let n = r(61611),
                i = r(28510),
                o = r(64023);
            async function a(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: a,
                includeTransactions: s
            } = {}) {
                let u = s ? ? !1,
                    c = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    l = null;
                if (!(l = t ? await e.request({
                        method: "eth_getBlockByHash",
                        params: [t, u]
                    }) : await e.request({
                        method: "eth_getBlockByNumber",
                        params: [c || (a ? ? "latest"), u]
                    }))) throw new n.BlockNotFoundError({
                    blockHash: t,
                    blockNumber: r
                });
                return (e.chain ? .formatters ? .block ? .format || o.formatBlock)(l)
            }
            t.getBlock = a
        },
        70083: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockNumber = t.getBlockNumberCache = void 0;
            let n = r(84982),
                i = e => `blockNumber.${e}`;
            async function o(e, {
                cacheTime: t = e.cacheTime,
                maxAge: r
            } = {}) {
                return BigInt(await (0, n.withCache)(() => e.request({
                    method: "eth_blockNumber"
                }), {
                    cacheKey: i(e.uid),
                    cacheTime: r ? ? t
                }))
            }
            t.getBlockNumberCache = function(e) {
                return (0, n.getCache)(i(e))
            }, t.getBlockNumber = o
        },
        86291: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockTransactionCount = void 0;
            let n = r(67256),
                i = r(28510);
            async function o(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: o = "latest"
            } = {}) {
                let a;
                let s = void 0 !== r ? (0, i.numberToHex)(r) : void 0;
                return a = t ? await e.request({
                    method: "eth_getBlockTransactionCountByHash",
                    params: [t]
                }) : await e.request({
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [s || o]
                }), (0, n.hexToNumber)(a)
            }
            t.getBlockTransactionCount = o
        },
        88518: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBytecode = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    a = await e.request({
                        method: "eth_getCode",
                        params: [t, o || i]
                    });
                if ("0x" !== a) return a
            }
            t.getBytecode = i
        },
        25032: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainId = void 0;
            let n = r(67256);
            async function i(e) {
                let t = await e.request({
                    method: "eth_chainId"
                });
                return (0, n.hexToNumber)(t)
            }
            t.getChainId = i
        },
        71118: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractEvents = void 0;
            let n = r(35171),
                i = r(50742),
                o = r(14287);
            async function a(e, {
                abi: t,
                address: r,
                args: a,
                blockHash: s,
                eventName: u,
                fromBlock: c,
                toBlock: l,
                strict: d
            }) {
                let f = u ? (0, n.getAbiItem)({
                        abi: t,
                        name: u
                    }) : void 0,
                    h = f ? void 0 : t.filter(e => "event" === e.type);
                return (0, i.getAction)(e, o.getLogs, "getLogs")({
                    address: r,
                    args: a,
                    blockHash: s,
                    event: f,
                    events: h,
                    fromBlock: c,
                    toBlock: l,
                    strict: d
                })
            }
            t.getContractEvents = a
        },
        63442: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFeeHistory = void 0;
            let n = r(28510),
                i = r(4548);
            async function o(e, {
                blockCount: t,
                blockNumber: r,
                blockTag: o = "latest",
                rewardPercentiles: a
            }) {
                let s = r ? (0, n.numberToHex)(r) : void 0,
                    u = await e.request({
                        method: "eth_feeHistory",
                        params: [(0, n.numberToHex)(t), s || o, a]
                    });
                return (0, i.formatFeeHistory)(u)
            }
            t.getFeeHistory = o
        },
        21664: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterChanges = void 0;
            let n = r(35362),
                i = r(91314),
                o = r(88489);
            async function a(e, {
                filter: t
            }) {
                let r = "strict" in t && t.strict;
                return (await t.request({
                    method: "eth_getFilterChanges",
                    params: [t.id]
                })).map(e => {
                    if ("string" == typeof e) return e;
                    try {
                        let {
                            eventName: n,
                            args: a
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: a,
                            eventName: n
                        })
                    } catch (a) {
                        let r, i;
                        if (a instanceof n.DecodeLogDataMismatch || a instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = a.abiItem.name, i = a.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterChanges = a
        },
        50539: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterLogs = void 0;
            let n = r(35362),
                i = r(91314),
                o = r(88489);
            async function a(e, {
                filter: t
            }) {
                let r = t.strict ? ? !1;
                return (await t.request({
                    method: "eth_getFilterLogs",
                    params: [t.id]
                })).map(e => {
                    try {
                        let {
                            eventName: n,
                            args: a
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: a,
                            eventName: n
                        })
                    } catch (a) {
                        let r, i;
                        if (a instanceof n.DecodeLogDataMismatch || a instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = a.abiItem.name, i = a.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterLogs = a
        },
        69379: function(e, t) {
            "use strict";
            async function r(e) {
                return BigInt(await e.request({
                    method: "eth_gasPrice"
                }))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getGasPrice = void 0, t.getGasPrice = r
        },
        14287: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLogs = void 0;
            let n = r(35362),
                i = r(91314),
                o = r(63406),
                a = r(28510),
                s = r(88489);
            async function u(e, {
                address: t,
                blockHash: r,
                fromBlock: u,
                toBlock: c,
                event: l,
                events: d,
                args: f,
                strict: h
            } = {}) {
                let p = h ? ? !1,
                    m = d ? ? (l ? [l] : void 0),
                    g = [];
                return m && (g = [m.flatMap(e => (0, o.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: f
                }))], l && (g = g[0])), (r ? await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: g,
                        blockHash: r
                    }]
                }) : await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: g,
                        fromBlock: "bigint" == typeof u ? (0, a.numberToHex)(u) : u,
                        toBlock: "bigint" == typeof c ? (0, a.numberToHex)(c) : c
                    }]
                })).map(e => {
                    try {
                        let {
                            eventName: t,
                            args: r
                        } = m ? (0, i.decodeEventLog)({
                            abi: m,
                            data: e.data,
                            topics: e.topics,
                            strict: p
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, s.formatLog)(e, {
                            args: r,
                            eventName: t
                        })
                    } catch (i) {
                        let t, r;
                        if (i instanceof n.DecodeLogDataMismatch || i instanceof n.DecodeLogTopicsMismatch) {
                            if (p) return;
                            t = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, s.formatLog)(e, {
                            args: r ? [] : {},
                            eventName: t
                        })
                    }
                }).filter(Boolean)
            }
            t.getLogs = u
        },
        66851: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getProof = void 0;
            let n = r(28510),
                i = r(4995);
            async function o(e, {
                address: t,
                blockNumber: r,
                blockTag: o,
                storageKeys: a
            }) {
                let s = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    u = await e.request({
                        method: "eth_getProof",
                        params: [t, a, s || (o ? ? "latest")]
                    });
                return (0, i.formatProof)(u)
            }
            t.getProof = o
        },
        80419: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getStorageAt = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest",
                slot: o
            }) {
                let a = void 0 !== r ? (0, n.numberToHex)(r) : void 0;
                return await e.request({
                    method: "eth_getStorageAt",
                    params: [t, o, a || i]
                })
            }
            t.getStorageAt = i
        },
        63222: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransaction = void 0;
            let n = r(88724),
                i = r(28510),
                o = r(56292);
            async function a(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: a,
                hash: s,
                index: u
            }) {
                let c = a || "latest",
                    l = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    d = null;
                if (s ? d = await e.request({
                        method: "eth_getTransactionByHash",
                        params: [s]
                    }) : t ? d = await e.request({
                        method: "eth_getTransactionByBlockHashAndIndex",
                        params: [t, (0, i.numberToHex)(u)]
                    }) : (l || c) && (d = await e.request({
                        method: "eth_getTransactionByBlockNumberAndIndex",
                        params: [l || c, (0, i.numberToHex)(u)]
                    })), !d) throw new n.TransactionNotFoundError({
                    blockHash: t,
                    blockNumber: r,
                    blockTag: c,
                    hash: s,
                    index: u
                });
                return (e.chain ? .formatters ? .transaction ? .format || o.formatTransaction)(d)
            }
            t.getTransaction = a
        },
        21649: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionConfirmations = void 0;
            let n = r(50742),
                i = r(70083),
                o = r(63222);
            async function a(e, {
                hash: t,
                transactionReceipt: r
            }) {
                let [a, s] = await Promise.all([(0, n.getAction)(e, i.getBlockNumber, "getBlockNumber")({}), t ? (0, n.getAction)(e, o.getTransaction, "getBlockNumber")({
                    hash: t
                }) : void 0]), u = r ? .blockNumber || s ? .blockNumber;
                return u ? a - u + 1 n : 0 n
            }
            t.getTransactionConfirmations = a
        },
        33244: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionCount = void 0;
            let n = r(67256),
                i = r(28510);
            async function o(e, {
                address: t,
                blockTag: r = "latest",
                blockNumber: o
            }) {
                let a = await e.request({
                    method: "eth_getTransactionCount",
                    params: [t, o ? (0, i.numberToHex)(o) : r]
                });
                return (0, n.hexToNumber)(a)
            }
            t.getTransactionCount = o
        },
        19672: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionReceipt = void 0;
            let n = r(88724),
                i = r(67743);
            async function o(e, {
                hash: t
            }) {
                let r = await e.request({
                    method: "eth_getTransactionReceipt",
                    params: [t]
                });
                if (!r) throw new n.TransactionReceiptNotFoundError({
                    hash: t
                });
                return (e.chain ? .formatters ? .transactionReceipt ? .format || i.formatTransactionReceipt)(r)
            }
            t.getTransactionReceipt = o
        },
        16296: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.multicall = void 0;
            let n = r(9344),
                i = r(35362),
                o = r(96477),
                a = r(85374),
                s = r(43362),
                u = r(389),
                c = r(48584),
                l = r(77803),
                d = r(50742),
                f = r(85002);
            async function h(e, t) {
                let {
                    allowFailure: r = !0,
                    batchSize: h,
                    blockNumber: p,
                    blockTag: m,
                    contracts: g,
                    multicallAddress: b
                } = t, y = h ? ? ("object" == typeof e.batch ? .multicall && e.batch.multicall.batchSize || 1024), v = b;
                if (!v) {
                    if (!e.chain) throw Error("client chain not configured. multicallAddress is required.");
                    v = (0, c.getChainContractAddress)({
                        blockNumber: p,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let w = [
                        []
                    ],
                    E = 0,
                    A = 0;
                for (let e = 0; e < g.length; e++) {
                    let {
                        abi: t,
                        address: n,
                        args: i,
                        functionName: o
                    } = g[e];
                    try {
                        let e = (0, u.encodeFunctionData)({
                            abi: t,
                            args: i,
                            functionName: o
                        });
                        A += (e.length - 2) / 2, y > 0 && A > y && w[E].length > 0 && (E++, A = (e.length - 2) / 2, w[E] = []), w[E] = [...w[E], {
                            allowFailure: !0,
                            callData: e,
                            target: n
                        }]
                    } catch (a) {
                        let e = (0, l.getContractError)(a, {
                            abi: t,
                            address: n,
                            args: i,
                            docsPath: "/docs/contract/multicall",
                            functionName: o
                        });
                        if (!r) throw e;
                        w[E] = [...w[E], {
                            allowFailure: !0,
                            callData: "0x",
                            target: n
                        }]
                    }
                }
                let P = await Promise.allSettled(w.map(t => (0, d.getAction)(e, f.readContract, "readContract")({
                        abi: n.multicall3Abi,
                        address: v,
                        args: [t],
                        blockNumber: p,
                        blockTag: m,
                        functionName: "aggregate3"
                    }))),
                    x = [];
                for (let e = 0; e < P.length; e++) {
                    let t = P[e];
                    if ("rejected" === t.status) {
                        if (!r) throw t.reason;
                        for (let r = 0; r < w[e].length; r++) x.push({
                            status: "failure",
                            error: t.reason,
                            result: void 0
                        });
                        continue
                    }
                    let n = t.value;
                    for (let t = 0; t < n.length; t++) {
                        let {
                            returnData: o,
                            success: u
                        } = n[t], {
                            callData: c
                        } = w[e][t], {
                            abi: d,
                            address: f,
                            functionName: h,
                            args: p
                        } = g[x.length];
                        try {
                            if ("0x" === c) throw new i.AbiDecodingZeroDataError;
                            if (!u) throw new a.RawContractError({
                                data: o
                            });
                            let e = (0, s.decodeFunctionResult)({
                                abi: d,
                                args: p,
                                data: o,
                                functionName: h
                            });
                            x.push(r ? {
                                result: e,
                                status: "success"
                            } : e)
                        } catch (t) {
                            let e = (0, l.getContractError)(t, {
                                abi: d,
                                address: f,
                                args: p,
                                docsPath: "/docs/contract/multicall",
                                functionName: h
                            });
                            if (!r) throw e;
                            x.push({
                                error: e,
                                result: void 0,
                                status: "failure"
                            })
                        }
                    }
                }
                if (x.length !== g.length) throw new o.BaseError("multicall results mismatch");
                return x
            }
            t.multicall = h
        },
        85002: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.readContract = void 0;
            let n = r(43362),
                i = r(389),
                o = r(77803),
                a = r(50742),
                s = r(58965);
            async function u(e, {
                abi: t,
                address: r,
                args: u,
                functionName: c,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: u,
                    functionName: c
                });
                try {
                    let {
                        data: i
                    } = await (0, a.getAction)(e, s.call, "call")({
                        data: d,
                        to: r,
                        ...l
                    });
                    return (0, n.decodeFunctionResult)({
                        abi: t,
                        args: u,
                        functionName: c,
                        data: i || "0x"
                    })
                } catch (e) {
                    throw (0, o.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: u,
                        docsPath: "/docs/contract/readContract",
                        functionName: c
                    })
                }
            }
            t.readContract = u
        },
        42471: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.simulateContract = void 0;
            let n = r(5974),
                i = r(43362),
                o = r(389),
                a = r(77803),
                s = r(50742),
                u = r(58965);
            async function c(e, {
                abi: t,
                address: r,
                args: c,
                dataSuffix: l,
                functionName: d,
                ...f
            }) {
                let h = f.account ? (0, n.parseAccount)(f.account) : void 0,
                    p = (0, o.encodeFunctionData)({
                        abi: t,
                        args: c,
                        functionName: d
                    });
                try {
                    let {
                        data: n
                    } = await (0, s.getAction)(e, u.call, "call")({
                        batch: !1,
                        data: `${p}${l?l.replace("0x",""):""}`,
                        to: r,
                        ...f
                    });
                    return {
                        result: (0, i.decodeFunctionResult)({
                            abi: t,
                            args: c,
                            functionName: d,
                            data: n || "0x"
                        }),
                        request: {
                            abi: t,
                            address: r,
                            args: c,
                            dataSuffix: l,
                            functionName: d,
                            ...f
                        }
                    }
                } catch (e) {
                    throw (0, a.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: c,
                        docsPath: "/docs/contract/simulateContract",
                        functionName: d,
                        sender: h ? .address
                    })
                }
            }
            t.simulateContract = c
        },
        63031: function(e, t) {
            "use strict";
            async function r(e, {
                filter: t
            }) {
                return t.request({
                    method: "eth_uninstallFilter",
                    params: [t.id]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uninstallFilter = void 0, t.uninstallFilter = r
        },
        9479: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyHash = void 0;
            let n = r(9344),
                i = r(63991),
                o = r(85374),
                a = r(82200),
                s = r(50742),
                u = r(95707),
                c = r(58965);
            async function l(e, {
                address: t,
                hash: r,
                signature: l,
                ...d
            }) {
                let f = (0, u.isHex)(l) ? l : (0, u.toHex)(l);
                try {
                    let {
                        data: o
                    } = await (0, s.getAction)(e, c.call, "call")({
                        data: (0, u.encodeDeployData)({
                            abi: n.universalSignatureValidatorAbi,
                            args: [t, r, f],
                            bytecode: i.universalSignatureValidatorByteCode
                        }),
                        ...d
                    });
                    return (0, a.isBytesEqual)(o ? ? "0x0", "0x1")
                } catch (e) {
                    if (e instanceof o.CallExecutionError) return !1;
                    throw e
                }
            }
            t.verifyHash = l
        },
        42654: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(95707),
                i = r(9479);
            async function o(e, {
                address: t,
                message: r,
                signature: o,
                ...a
            }) {
                let s = (0, n.hashMessage)(r);
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: s,
                    signature: o,
                    ...a
                })
            }
            t.verifyMessage = o
        },
        55610: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(44390),
                i = r(9479);
            async function o(e, {
                address: t,
                signature: r,
                message: o,
                primaryType: a,
                types: s,
                domain: u,
                ...c
            }) {
                let l = (0, n.hashTypedData)({
                    message: o,
                    primaryType: a,
                    types: s,
                    domain: u
                });
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: l,
                    signature: r,
                    ...c
                })
            }
            t.verifyTypedData = o
        },
        46227: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.waitForTransactionReceipt = void 0;
            let n = r(61611),
                i = r(88724),
                o = r(50742),
                a = r(48208),
                s = r(96302),
                u = r(12835),
                c = r(94380),
                l = r(63222),
                d = r(19672),
                f = r(61779);
            async function h(e, {
                confirmations: t = 1,
                hash: r,
                onReplaced: h,
                pollingInterval: p = e.pollingInterval,
                timeout: m
            }) {
                let g, b, y;
                let v = (0, u.stringify)(["waitForTransactionReceipt", e.uid, r]),
                    w = !1;
                return new Promise((u, E) => {
                    m && setTimeout(() => E(new i.WaitForTransactionReceiptTimeoutError({
                        hash: r
                    })), m);
                    let A = (0, a.observe)(v, {
                        onReplaced: h,
                        resolve: u,
                        reject: E
                    }, a => {
                        let u = (0, o.getAction)(e, f.watchBlockNumber, "watchBlockNumber")({
                            emitMissed: !0,
                            emitOnBegin: !0,
                            poll: !0,
                            pollingInterval: p,
                            async onBlockNumber(f) {
                                if (w) return;
                                let h = f,
                                    p = e => {
                                        u(), e(), A()
                                    };
                                try {
                                    if (y) {
                                        if (t > 1 && (!y.blockNumber || h - y.blockNumber + 1 n < t)) return;
                                        p(() => a.resolve(y));
                                        return
                                    }
                                    if (g || (w = !0, await (0, s.withRetry)(async () => {
                                            (g = await (0, o.getAction)(e, l.getTransaction, "getTransaction")({
                                                hash: r
                                            })).blockNumber && (h = g.blockNumber)
                                        }, {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6
                                        }), w = !1), y = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                            hash: r
                                        }), t > 1 && (!y.blockNumber || h - y.blockNumber + 1 n < t)) return;
                                    p(() => a.resolve(y))
                                } catch (r) {
                                    if (g && (r instanceof i.TransactionNotFoundError || r instanceof i.TransactionReceiptNotFoundError)) try {
                                        b = g, w = !0;
                                        let r = await (0, s.withRetry)(() => (0, o.getAction)(e, c.getBlock, "getBlock")({
                                            blockNumber: h,
                                            includeTransactions: !0
                                        }), {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6,
                                            shouldRetry: ({
                                                error: e
                                            }) => e instanceof n.BlockNotFoundError
                                        });
                                        w = !1;
                                        let i = r.transactions.find(({
                                            from: e,
                                            nonce: t
                                        }) => e === b.from && t === b.nonce);
                                        if (!i || (y = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                                hash: i.hash
                                            }), t > 1 && (!y.blockNumber || h - y.blockNumber + 1 n < t))) return;
                                        let u = "replaced";
                                        i.to === b.to && i.value === b.value ? u = "repriced" : i.from === i.to && 0 n === i.value && (u = "cancelled"), p(() => {
                                            a.onReplaced ? .({
                                                reason: u,
                                                replacedTransaction: b,
                                                transaction: i,
                                                transactionReceipt: y
                                            }), a.resolve(y)
                                        })
                                    } catch (e) {
                                        p(() => a.reject(e))
                                    } else p(() => a.reject(r))
                                }
                            }
                        })
                    })
                })
            }
            t.waitForTransactionReceipt = h
        },
        61779: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlockNumber = void 0;
            let n = r(67256),
                i = r(50742),
                o = r(48208),
                a = r(264),
                s = r(12835),
                u = r(70083);
            t.watchBlockNumber = function(e, {
                emitOnBegin: t = !1,
                emitMissed: r = !1,
                onBlockNumber: c,
                onError: l,
                poll: d,
                pollingInterval: f = e.pollingInterval
            }) {
                let h, p, m;
                return (void 0 !== d ? d : "webSocket" !== e.transport.type) ? (() => {
                    let n = (0, s.stringify)(["watchBlockNumber", e.uid, t, r, f]);
                    return (0, o.observe)(n, {
                        onBlockNumber: c,
                        onError: l
                    }, n => (0, a.poll)(async () => {
                        try {
                            let t = await (0, i.getAction)(e, u.getBlockNumber, "getBlockNumber")({
                                cacheTime: 0
                            });
                            if (h) {
                                if (t === h) return;
                                if (t - h > 1 && r)
                                    for (let e = h + 1 n; e < t; e++) n.onBlockNumber(e, h), h = e
                            }(!h || t > h) && (n.onBlockNumber(t, h), h = t)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: t,
                        interval: f
                    }))
                })() : (p = !0, m = () => p = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                                if (!p) return;
                                let t = (0, n.hexToBigInt)(e.result ? .number);
                                c(t, h), h = t
                            },
                            onError(e) {
                                l ? .(e)
                            }
                        });
                        m = t, p || m()
                    } catch (e) {
                        l ? .(e)
                    }
                })(), m)
            }
        },
        41855: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlocks = void 0;
            let n = r(64023),
                i = r(50742),
                o = r(48208),
                a = r(264),
                s = r(12835),
                u = r(94380);
            t.watchBlocks = function(e, {
                blockTag: t = "latest",
                emitMissed: r = !1,
                emitOnBegin: c = !1,
                onBlock: l,
                onError: d,
                includeTransactions: f,
                poll: h,
                pollingInterval: p = e.pollingInterval
            }) {
                let m, g, b;
                let y = void 0 !== h ? h : "webSocket" !== e.transport.type,
                    v = f ? ? !1;
                return y ? (() => {
                    let n = (0, s.stringify)(["watchBlocks", e.uid, r, c, v, p]);
                    return (0, o.observe)(n, {
                        onBlock: l,
                        onError: d
                    }, n => (0, a.poll)(async () => {
                        try {
                            let o = await (0, i.getAction)(e, u.getBlock, "getBlock")({
                                blockTag: t,
                                includeTransactions: v
                            });
                            if (o.number && m ? .number) {
                                if (o.number === m.number) return;
                                if (o.number - m.number > 1 && r)
                                    for (let t = m ? .number + 1 n; t < o.number; t++) {
                                        let r = await (0, i.getAction)(e, u.getBlock, "getBlock")({
                                            blockNumber: t,
                                            includeTransactions: v
                                        });
                                        n.onBlock(r, m), m = r
                                    }
                            }(!m ? .number || "pending" === t && !o ? .number || o.number && o.number > m.number) && (n.onBlock(o, m), m = o)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: c,
                        interval: p
                    }))
                })() : (g = !0, b = () => g = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(t) {
                                if (!g) return;
                                let r = (e.chain ? .formatters ? .block ? .format || n.formatBlock)(t.result);
                                l(r, m), m = r
                            },
                            onError(e) {
                                d ? .(e)
                            }
                        });
                        b = t, g || b()
                    } catch (e) {
                        d ? .(e)
                    }
                })(), b)
            }
        },
        67995: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchContractEvent = void 0;
            let n = r(48208),
                i = r(264),
                o = r(12835),
                a = r(35362),
                s = r(4808),
                u = r(91314),
                c = r(63406),
                l = r(88489),
                d = r(50742),
                f = r(29244),
                h = r(70083),
                p = r(71118),
                m = r(21664),
                g = r(63031);
            t.watchContractEvent = function(e, {
                abi: t,
                address: r,
                args: b,
                batch: y = !0,
                eventName: v,
                onError: w,
                onLogs: E,
                poll: A,
                pollingInterval: P = e.pollingInterval,
                strict: x
            }) {
                let O, _;
                return (void 0 !== A ? A : "webSocket" !== e.transport.type) ? (() => {
                    let a = (0, o.stringify)(["watchContractEvent", r, b, y, e.uid, v, P]),
                        u = x ? ? !1;
                    return (0, n.observe)(a, {
                        onLogs: E,
                        onError: w
                    }, n => {
                        let o, a;
                        let c = !1,
                            l = (0, i.poll)(async () => {
                                if (!c) {
                                    try {
                                        a = await (0, d.getAction)(e, f.createContractEventFilter, "createContractEventFilter")({
                                            abi: t,
                                            address: r,
                                            args: b,
                                            eventName: v,
                                            strict: u
                                        })
                                    } catch {}
                                    c = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (a) i = await (0, d.getAction)(e, m.getFilterChanges, "getFilterChanges")({
                                        filter: a
                                    });
                                    else {
                                        let n = await (0, d.getAction)(e, h.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, d.getAction)(e, p.getContractEvents, "getContractEvents")({
                                            abi: t,
                                            address: r,
                                            args: b,
                                            eventName: v,
                                            fromBlock: o + 1 n,
                                            toBlock: n,
                                            strict: u
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (y) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    a && e instanceof s.InvalidInputRpcError && (c = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: P
                            });
                        return async () => {
                            a && await (0, d.getAction)(e, g.uninstallFilter, "uninstallFilter")({
                                filter: a
                            }), l()
                        }
                    })
                })() : (O = !0, _ = () => O = !1, (async () => {
                    try {
                        let n = v ? (0, c.encodeEventTopics)({
                                abi: t,
                                eventName: v,
                                args: b
                            }) : [],
                            {
                                unsubscribe: i
                            } = await e.transport.subscribe({
                                params: ["logs", {
                                    address: r,
                                    topics: n
                                }],
                                onData(e) {
                                    if (!O) return;
                                    let r = e.result;
                                    try {
                                        let {
                                            eventName: e,
                                            args: n
                                        } = (0, u.decodeEventLog)({
                                            abi: t,
                                            data: r.data,
                                            topics: r.topics,
                                            strict: x
                                        }), i = (0, l.formatLog)(r, {
                                            args: n,
                                            eventName: e
                                        });
                                        E([i])
                                    } catch (i) {
                                        let e, t;
                                        if (i instanceof a.DecodeLogDataMismatch || i instanceof a.DecodeLogTopicsMismatch) {
                                            if (x) return;
                                            e = i.abiItem.name, t = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                        }
                                        let n = (0, l.formatLog)(r, {
                                            args: t ? [] : {},
                                            eventName: e
                                        });
                                        E([n])
                                    }
                                },
                                onError(e) {
                                    w ? .(e)
                                }
                            });
                        _ = i, O || _()
                    } catch (e) {
                        w ? .(e)
                    }
                })(), _)
            }
        },
        5992: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchEvent = void 0;
            let n = r(48208),
                i = r(264),
                o = r(12835),
                a = r(35362),
                s = r(4808),
                u = r(50742),
                c = r(95707),
                l = r(83573),
                d = r(70083),
                f = r(21664),
                h = r(14287),
                p = r(63031);
            t.watchEvent = function(e, {
                address: t,
                args: r,
                batch: m = !0,
                event: g,
                events: b,
                onError: y,
                onLogs: v,
                poll: w,
                pollingInterval: E = e.pollingInterval,
                strict: A
            }) {
                let P, x;
                let O = void 0 !== w ? w : "webSocket" !== e.transport.type,
                    _ = A ? ? !1;
                return O ? (() => {
                    let a = (0, o.stringify)(["watchEvent", t, r, m, e.uid, g, E]);
                    return (0, n.observe)(a, {
                        onLogs: v,
                        onError: y
                    }, n => {
                        let o, a;
                        let c = !1,
                            y = (0, i.poll)(async () => {
                                if (!c) {
                                    try {
                                        a = await (0, u.getAction)(e, l.createEventFilter, "createEventFilter")({
                                            address: t,
                                            args: r,
                                            event: g,
                                            events: b,
                                            strict: _
                                        })
                                    } catch {}
                                    c = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (a) i = await (0, u.getAction)(e, f.getFilterChanges, "getFilterChanges")({
                                        filter: a
                                    });
                                    else {
                                        let n = await (0, u.getAction)(e, d.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, u.getAction)(e, h.getLogs, "getLogs")({
                                            address: t,
                                            args: r,
                                            event: g,
                                            events: b,
                                            fromBlock: o + 1 n,
                                            toBlock: n
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (m) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    a && e instanceof s.InvalidInputRpcError && (c = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: E
                            });
                        return async () => {
                            a && await (0, u.getAction)(e, p.uninstallFilter, "uninstallFilter")({
                                filter: a
                            }), y()
                        }
                    })
                })() : (P = !0, x = () => P = !1, (async () => {
                    try {
                        let n = b ? ? (g ? [g] : void 0),
                            i = [];
                        n && (i = [n.flatMap(e => (0, c.encodeEventTopics)({
                            abi: [e],
                            eventName: e.name,
                            args: r
                        }))], g && (i = i[0]));
                        let {
                            unsubscribe: o
                        } = await e.transport.subscribe({
                            params: ["logs", {
                                address: t,
                                topics: i
                            }],
                            onData(e) {
                                if (!P) return;
                                let t = e.result;
                                try {
                                    let {
                                        eventName: e,
                                        args: r
                                    } = (0, c.decodeEventLog)({
                                        abi: n,
                                        data: t.data,
                                        topics: t.topics,
                                        strict: _
                                    }), i = (0, c.formatLog)(t, {
                                        args: r,
                                        eventName: e
                                    });
                                    v([i])
                                } catch (i) {
                                    let e, r;
                                    if (i instanceof a.DecodeLogDataMismatch || i instanceof a.DecodeLogTopicsMismatch) {
                                        if (A) return;
                                        e = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                    }
                                    let n = (0, c.formatLog)(t, {
                                        args: r ? [] : {},
                                        eventName: e
                                    });
                                    v([n])
                                }
                            },
                            onError(e) {
                                y ? .(e)
                            }
                        });
                        x = o, P || x()
                    } catch (e) {
                        y ? .(e)
                    }
                })(), x)
            }
        },
        82108: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchPendingTransactions = void 0;
            let n = r(50742),
                i = r(48208),
                o = r(264),
                a = r(12835),
                s = r(50231),
                u = r(21664),
                c = r(63031);
            t.watchPendingTransactions = function(e, {
                batch: t = !0,
                onError: r,
                onTransactions: l,
                poll: d,
                pollingInterval: f = e.pollingInterval
            }) {
                let h, p;
                return (void 0 !== d ? d : "webSocket" !== e.transport.type) ? (() => {
                    let d = (0, a.stringify)(["watchPendingTransactions", e.uid, t, f]);
                    return (0, i.observe)(d, {
                        onTransactions: l,
                        onError: r
                    }, r => {
                        let i;
                        let a = (0, o.poll)(async () => {
                            try {
                                if (!i) try {
                                    i = await (0, n.getAction)(e, s.createPendingTransactionFilter, "createPendingTransactionFilter")({});
                                    return
                                } catch (e) {
                                    throw a(), e
                                }
                                let o = await (0, n.getAction)(e, u.getFilterChanges, "getFilterChanges")({
                                    filter: i
                                });
                                if (0 === o.length) return;
                                if (t) r.onTransactions(o);
                                else
                                    for (let e of o) r.onTransactions([e])
                            } catch (e) {
                                r.onError ? .(e)
                            }
                        }, {
                            emitOnBegin: !0,
                            interval: f
                        });
                        return async () => {
                            i && await (0, n.getAction)(e, c.uninstallFilter, "uninstallFilter")({
                                filter: i
                            }), a()
                        }
                    })
                })() : (h = !0, p = () => h = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newPendingTransactions"],
                            onData(e) {
                                if (!h) return;
                                let t = e.result;
                                l([t])
                            },
                            onError(e) {
                                r ? .(e)
                            }
                        });
                        p = t, h || p()
                    } catch (e) {
                        r ? .(e)
                    }
                })(), p)
            }
        },
        20933: function(e, t) {
            "use strict";
            async function r(e, {
                hash: t
            }) {
                await e.request({
                    method: `${e.mode}_dropTransaction`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dropTransaction = void 0, t.dropTransaction = r
        },
        90879: function(e, t) {
            "use strict";
            async function r(e) {
                return e.request({
                    method: `${e.mode}_dumpState`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dumpState = void 0, t.dumpState = r
        },
        49728: function(e, t) {
            "use strict";
            async function r(e) {
                return "ganache" === e.mode ? await e.request({
                    method: "eth_mining"
                }) : await e.request({
                    method: `${e.mode}_getAutomine`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAutomine = void 0, t.getAutomine = r
        },
        81573: function(e, t) {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "txpool_content"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolContent = void 0, t.getTxpoolContent = r
        },
        51804: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolStatus = void 0;
            let n = r(67256);
            async function i(e) {
                let {
                    pending: t,
                    queued: r
                } = await e.request({
                    method: "txpool_status"
                });
                return {
                    pending: (0, n.hexToNumber)(t),
                    queued: (0, n.hexToNumber)(r)
                }
            }
            t.getTxpoolStatus = i
        },
        4835: function(e, t) {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_impersonateAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.impersonateAccount = void 0, t.impersonateAccount = r
        },
        13207: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.increaseTime = void 0;
            let n = r(28510);
            async function i(e, {
                seconds: t
            }) {
                return await e.request({
                    method: "evm_increaseTime",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.increaseTime = i
        },
        25565: function(e, t) {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "txpool_inspect"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.inspectTxpool = void 0, t.inspectTxpool = r
        },
        35190: function(e, t) {
            "use strict";
            async function r(e, {
                state: t
            }) {
                await e.request({
                    method: `${e.mode}_loadState`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.loadState = void 0, t.loadState = r
        },
        17902: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mine = void 0;
            let n = r(28510);
            async function i(e, {
                blocks: t,
                interval: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_mine",
                    params: [{
                        blocks: (0, n.numberToHex)(t)
                    }]
                }) : await e.request({
                    method: `${e.mode}_mine`,
                    params: [(0, n.numberToHex)(t), (0, n.numberToHex)(r || 0)]
                })
            }
            t.mine = i
        },
        49048: function(e, t) {
            "use strict";
            async function r(e) {
                await e.request({
                    method: `${e.mode}_removeBlockTimestampInterval`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.removeBlockTimestampInterval = void 0, t.removeBlockTimestampInterval = r
        },
        95878: function(e, t) {
            "use strict";
            async function r(e, {
                blockNumber: t,
                jsonRpcUrl: r
            } = {}) {
                await e.request({
                    method: `${e.mode}_reset`,
                    params: [{
                        forking: {
                            blockNumber: Number(t),
                            jsonRpcUrl: r
                        }
                    }]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.reset = void 0, t.reset = r
        },
        91050: function(e, t) {
            "use strict";
            async function r(e, {
                id: t
            }) {
                await e.request({
                    method: "evm_revert",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.revert = void 0, t.revert = r
        },
        32330: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendUnsignedTransaction = void 0;
            let n = r(26940),
                i = r(23974);
            async function o(e, t) {
                let {
                    accessList: r,
                    data: o,
                    from: a,
                    gas: s,
                    gasPrice: u,
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: f,
                    value: h,
                    ...p
                } = t, m = e.chain ? .formatters ? .transactionRequest ? .format, g = (m || i.formatTransactionRequest)({ ...(0, n.extract)(p, {
                        format: m
                    }),
                    accessList: r,
                    data: o,
                    from: a,
                    gas: s,
                    gasPrice: u,
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: f,
                    value: h
                });
                return await e.request({
                    method: "eth_sendUnsignedTransaction",
                    params: [g]
                })
            }
            t.sendUnsignedTransaction = o
        },
        74256: function(e, t) {
            "use strict";
            async function r(e, t) {
                "ganache" === e.mode ? t ? await e.request({
                    method: "miner_start"
                }) : await e.request({
                    method: "miner_stop"
                }) : await e.request({
                    method: "evm_setAutomine",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setAutomine = void 0, t.setAutomine = r
        },
        86504: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBalance = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                value: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_setAccountBalance",
                    params: [t, (0, n.numberToHex)(r)]
                }) : await e.request({
                    method: `${e.mode}_setBalance`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setBalance = i
        },
        80165: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockGasLimit = void 0;
            let n = r(28510);
            async function i(e, {
                gasLimit: t
            }) {
                await e.request({
                    method: "evm_setBlockGasLimit",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setBlockGasLimit = i
        },
        19197: function(e, t) {
            "use strict";
            async function r(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: `${e.mode}_setBlockTimestampInterval`,
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockTimestampInterval = void 0, t.setBlockTimestampInterval = r
        },
        58395: function(e, t) {
            "use strict";
            async function r(e, {
                address: t,
                bytecode: r
            }) {
                await e.request({
                    method: `${e.mode}_setCode`,
                    params: [t, r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCode = void 0, t.setCode = r
        },
        14387: function(e, t) {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_setCoinbase`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCoinbase = void 0, t.setCoinbase = r
        },
        65405: function(e, t) {
            "use strict";
            async function r(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: "evm_setIntervalMining",
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setIntervalMining = void 0, t.setIntervalMining = r
        },
        57962: function(e, t) {
            "use strict";
            async function r(e, t) {
                await e.request({
                    method: `${e.mode}_setLoggingEnabled`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setLoggingEnabled = void 0, t.setLoggingEnabled = r
        },
        33942: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setMinGasPrice = void 0;
            let n = r(28510);
            async function i(e, {
                gasPrice: t
            }) {
                await e.request({
                    method: `${e.mode}_setMinGasPrice`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setMinGasPrice = i
        },
        64819: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockBaseFeePerGas = void 0;
            let n = r(28510);
            async function i(e, {
                baseFeePerGas: t
            }) {
                await e.request({
                    method: `${e.mode}_setNextBlockBaseFeePerGas`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockBaseFeePerGas = i
        },
        15069: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockTimestamp = void 0;
            let n = r(28510);
            async function i(e, {
                timestamp: t
            }) {
                await e.request({
                    method: "evm_setNextBlockTimestamp",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockTimestamp = i
        },
        86864: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNonce = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                nonce: r
            }) {
                await e.request({
                    method: `${e.mode}_setNonce`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setNonce = i
        },
        438: function(e, t) {
            "use strict";
            async function r(e, t) {
                await e.request({
                    method: `${e.mode}_setRpcUrl`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setRpcUrl = void 0, t.setRpcUrl = r
        },
        18160: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setStorageAt = void 0;
            let n = r(28510);
            async function i(e, {
                address: t,
                index: r,
                value: i
            }) {
                await e.request({
                    method: `${e.mode}_setStorageAt`,
                    params: [t, "number" == typeof r ? (0, n.numberToHex)(r) : r, i]
                })
            }
            t.setStorageAt = i
        },
        86606: function(e, t) {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "evm_snapshot"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.snapshot = void 0, t.snapshot = r
        },
        37925: function(e, t) {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_stopImpersonatingAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stopImpersonatingAccount = void 0, t.stopImpersonatingAccount = r
        },
        37406: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addChain = void 0;
            let n = r(28510);
            async function i(e, {
                chain: t
            }) {
                let {
                    id: r,
                    name: i,
                    nativeCurrency: o,
                    rpcUrls: a,
                    blockExplorers: s
                } = t;
                await e.request({
                    method: "wallet_addEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(r),
                        chainName: i,
                        nativeCurrency: o,
                        rpcUrls: a.default.http,
                        blockExplorerUrls: s ? Object.values(s).map(({
                            url: e
                        }) => e) : void 0
                    }]
                })
            }
            t.addChain = i
        },
        33212: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.deployContract = void 0;
            let n = r(52974),
                i = r(60130);
            t.deployContract = function(e, {
                abi: t,
                args: r,
                bytecode: o,
                ...a
            }) {
                let s = (0, n.encodeDeployData)({
                    abi: t,
                    args: r,
                    bytecode: o
                });
                return (0, i.sendTransaction)(e, { ...a,
                    data: s
                })
            }
        },
        84874: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddresses = void 0;
            let n = r(66967);
            async function i(e) {
                return e.account ? .type === "local" ? [e.account.address] : (await e.request({
                    method: "eth_accounts"
                })).map(e => (0, n.checksumAddress)(e))
            }
            t.getAddresses = i
        },
        99015: function(e, t) {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "wallet_getPermissions"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getPermissions = void 0, t.getPermissions = r
        },
        47561: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.prepareTransactionRequest = void 0;
            let n = r(5974),
                i = r(83952),
                o = r(33944),
                a = r(94380),
                s = r(33244),
                u = r(28532),
                c = r(93220),
                l = r(50742),
                d = r(93960),
                f = r(38408);
            async function h(e, t) {
                let {
                    account: r = e.account,
                    chain: h,
                    gas: p,
                    nonce: m,
                    type: g
                } = t;
                if (!r) throw new u.AccountNotFoundError;
                let b = (0, n.parseAccount)(r),
                    y = await (0, l.getAction)(e, a.getBlock, "getBlock")({
                        blockTag: "latest"
                    }),
                    v = { ...t,
                        from: b.address
                    };
                if (void 0 === m && (v.nonce = await (0, l.getAction)(e, s.getTransactionCount, "getTransactionCount")({
                        address: b.address,
                        blockTag: "pending"
                    })), void 0 === g) try {
                    v.type = (0, f.getTransactionType)(v)
                } catch {
                    v.type = "bigint" == typeof y.baseFeePerGas ? "eip1559" : "legacy"
                }
                if ("eip1559" === v.type) {
                    let {
                        maxFeePerGas: r,
                        maxPriorityFeePerGas: n
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: y,
                        chain: h,
                        request: v
                    });
                    if (void 0 === t.maxPriorityFeePerGas && t.maxFeePerGas && t.maxFeePerGas < n) throw new c.MaxFeePerGasTooLowError({
                        maxPriorityFeePerGas: n
                    });
                    v.maxPriorityFeePerGas = n, v.maxFeePerGas = r
                } else {
                    if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas) throw new c.Eip1559FeesNotSupportedError;
                    let {
                        gasPrice: r
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: y,
                        chain: h,
                        request: v,
                        type: "legacy"
                    });
                    v.gasPrice = r
                }
                return void 0 === p && (v.gas = await (0, l.getAction)(e, o.estimateGas, "estimateGas")({ ...v,
                    account: {
                        address: b.address,
                        type: "json-rpc"
                    }
                })), (0, d.assertRequest)(v), v
            }
            t.prepareTransactionRequest = h
        },
        98458: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestAddresses = void 0;
            let n = r(66967);
            async function i(e) {
                return (await e.request({
                    method: "eth_requestAccounts"
                })).map(e => (0, n.getAddress)(e))
            }
            t.requestAddresses = i
        },
        27647: function(e, t) {
            "use strict";
            async function r(e, t) {
                return e.request({
                    method: "wallet_requestPermissions",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestPermissions = void 0, t.requestPermissions = r
        },
        71973: function(e, t) {
            "use strict";
            async function r(e, {
                serializedTransaction: t
            }) {
                return e.request({
                    method: "eth_sendRawTransaction",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendRawTransaction = void 0, t.sendRawTransaction = r
        },
        60130: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendTransaction = void 0;
            let n = r(5974),
                i = r(28532),
                o = r(33659),
                a = r(57955),
                s = r(26940),
                u = r(23974),
                c = r(50742),
                l = r(93960),
                d = r(25032),
                f = r(47561),
                h = r(71973);
            async function p(e, t) {
                let {
                    account: r = e.account,
                    chain: p = e.chain,
                    accessList: m,
                    data: g,
                    gas: b,
                    gasPrice: y,
                    maxFeePerGas: v,
                    maxPriorityFeePerGas: w,
                    nonce: E,
                    to: A,
                    value: P,
                    ...x
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/sendTransaction"
                });
                let O = (0, n.parseAccount)(r);
                try {
                    let r;
                    if ((0, l.assertRequest)(t), null !== p && (r = await (0, c.getAction)(e, d.getChainId, "getChainId")({}), (0, o.assertCurrentChain)({
                            currentChainId: r,
                            chain: p
                        })), "local" === O.type) {
                        let t = await (0, c.getAction)(e, f.prepareTransactionRequest, "prepareTransactionRequest")({
                            account: O,
                            accessList: m,
                            chain: p,
                            data: g,
                            gas: b,
                            gasPrice: y,
                            maxFeePerGas: v,
                            maxPriorityFeePerGas: w,
                            nonce: E,
                            to: A,
                            value: P,
                            ...x
                        });
                        r || (r = await (0, c.getAction)(e, d.getChainId, "getChainId")({}));
                        let n = p ? .serializers ? .transaction,
                            i = await O.signTransaction({ ...t,
                                chainId: r
                            }, {
                                serializer: n
                            });
                        return await (0, c.getAction)(e, h.sendRawTransaction, "sendRawTransaction")({
                            serializedTransaction: i
                        })
                    }
                    let n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || u.formatTransactionRequest)({ ...(0, s.extract)(x, {
                                format: n
                            }),
                            accessList: m,
                            data: g,
                            from: O.address,
                            gas: b,
                            gasPrice: y,
                            maxFeePerGas: v,
                            maxPriorityFeePerGas: w,
                            nonce: E,
                            to: A,
                            value: P
                        });
                    return await e.request({
                        method: "eth_sendTransaction",
                        params: [i]
                    })
                } catch (e) {
                    throw (0, a.getTransactionError)(e, { ...t,
                        account: O,
                        chain: t.chain || void 0
                    })
                }
            }
            t.sendTransaction = p
        },
        5262: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signMessage = void 0;
            let n = r(5974),
                i = r(28532),
                o = r(28510);
            async function a(e, {
                account: t = e.account,
                message: r
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signMessage"
                });
                let a = (0, n.parseAccount)(t);
                if ("local" === a.type) return a.signMessage({
                    message: r
                });
                let s = "string" == typeof r ? (0, o.stringToHex)(r) : r.raw instanceof Uint8Array ? (0, o.toHex)(r.raw) : r.raw;
                return e.request({
                    method: "personal_sign",
                    params: [s, a.address]
                })
            }
            t.signMessage = a
        },
        96245: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTransaction = void 0;
            let n = r(5974),
                i = r(28532),
                o = r(33659),
                a = r(23974),
                s = r(50742),
                u = r(95707),
                c = r(93960),
                l = r(25032);
            async function d(e, t) {
                let {
                    account: r = e.account,
                    chain: d = e.chain,
                    ...f
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTransaction"
                });
                let h = (0, n.parseAccount)(r);
                (0, c.assertRequest)({
                    account: h,
                    ...t
                });
                let p = await (0, s.getAction)(e, l.getChainId, "getChainId")({});
                null !== d && (0, o.assertCurrentChain)({
                    currentChainId: p,
                    chain: d
                });
                let m = d ? .formatters || e.chain ? .formatters,
                    g = m ? .transactionRequest ? .format || a.formatTransactionRequest;
                return "local" === h.type ? h.signTransaction({ ...f,
                    chainId: p
                }, {
                    serializer: e.chain ? .serializers ? .transaction
                }) : await e.request({
                    method: "eth_signTransaction",
                    params: [{ ...g(f),
                        chainId: (0, u.numberToHex)(p),
                        from: h.address
                    }]
                })
            }
            t.signTransaction = d
        },
        84544: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTypedData = void 0;
            let n = r(5974),
                i = r(28532),
                o = r(27239),
                a = r(12835),
                s = r(93901);
            async function u(e, {
                account: t = e.account,
                domain: r,
                message: u,
                primaryType: c,
                types: l
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTypedData"
                });
                let d = (0, n.parseAccount)(t),
                    f = {
                        EIP712Domain: (0, s.getTypesForEIP712Domain)({
                            domain: r
                        }),
                        ...l
                    };
                if ((0, s.validateTypedData)({
                        domain: r,
                        message: u,
                        primaryType: c,
                        types: f
                    }), "local" === d.type) return d.signTypedData({
                    domain: r,
                    primaryType: c,
                    types: f,
                    message: u
                });
                let h = (0, a.stringify)({
                    domain: r ? ? {},
                    primaryType: c,
                    types: f,
                    message: u
                }, (e, t) => (0, o.isHex)(t) ? t.toLowerCase() : t);
                return e.request({
                    method: "eth_signTypedData_v4",
                    params: [d.address, h]
                })
            }
            t.signTypedData = u
        },
        85722: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.switchChain = void 0;
            let n = r(28510);
            async function i(e, {
                id: t
            }) {
                await e.request({
                    method: "wallet_switchEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(t)
                    }]
                })
            }
            t.switchChain = i
        },
        78595: function(e, t) {
            "use strict";
            async function r(e, t) {
                return await e.request({
                    method: "wallet_watchAsset",
                    params: t
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchAsset = void 0, t.watchAsset = r
        },
        86899: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.writeContract = void 0;
            let n = r(389),
                i = r(50742),
                o = r(60130);
            async function a(e, {
                abi: t,
                address: r,
                args: a,
                dataSuffix: s,
                functionName: u,
                ...c
            }) {
                let l = (0, n.encodeFunctionData)({
                    abi: t,
                    args: a,
                    functionName: u
                });
                return await (0, i.getAction)(e, o.sendTransaction, "sendTransaction")({
                    data: `${l}${s?s.replace("0x",""):""}`,
                    to: r,
                    ...c
                })
            }
            t.writeContract = a
        },
        63604: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createClient = void 0;
            let n = r(8708),
                i = r(62475);
            t.createClient = function(e) {
                let {
                    batch: t,
                    cacheTime: r = e.pollingInterval ? ? 4e3,
                    key: o = "base",
                    name: a = "Base Client",
                    pollingInterval: s = 4e3,
                    type: u = "base"
                } = e, c = e.chain, l = e.account ? (0, n.parseAccount)(e.account) : void 0, {
                    config: d,
                    request: f,
                    value: h
                } = e.transport({
                    chain: c,
                    pollingInterval: s
                }), p = {
                    account: l,
                    batch: t,
                    cacheTime: r,
                    chain: c,
                    key: o,
                    name: a,
                    pollingInterval: s,
                    request: f,
                    transport: { ...d,
                        ...h
                    },
                    type: u,
                    uid: (0, i.uid)()
                };
                return Object.assign(p, {
                    extend: function e(t) {
                        return r => {
                            let n = r(t);
                            for (let e in p) delete n[e];
                            let i = { ...t,
                                ...n
                            };
                            return Object.assign(i, {
                                extend: e(i)
                            })
                        }
                    }(p)
                })
            }
        },
        36519: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPublicClient = void 0;
            let n = r(63604),
                i = r(14817);
            t.createPublicClient = function(e) {
                let {
                    key: t = "public",
                    name: r = "Public Client"
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "publicClient"
                }).extend(i.publicActions)
            }
        },
        15247: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTestClient = void 0;
            let n = r(63604),
                i = r(96878);
            t.createTestClient = function(e) {
                let {
                    key: t = "test",
                    name: r = "Test Client",
                    mode: o
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "testClient"
                }).extend(e => ({
                    mode: o,
                    ...(0, i.testActions)({
                        mode: o
                    })(e)
                }))
            }
        },
        77358: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createWalletClient = void 0;
            let n = r(63604),
                i = r(14832);
            t.createWalletClient = function(e) {
                let {
                    key: t = "wallet",
                    name: r = "Wallet Client",
                    transport: o
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    transport: e => o({ ...e,
                        retryCount: 0
                    }),
                    type: "walletClient"
                }).extend(i.walletActions)
            }
        },
        14817: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicActions = void 0;
            let n = r(23114),
                i = r(10081),
                o = r(92410),
                a = r(32691),
                s = r(64071),
                u = r(58965),
                c = r(67412),
                l = r(29244),
                d = r(83573),
                f = r(50231),
                h = r(3357),
                p = r(83952),
                m = r(33944),
                g = r(45942),
                b = r(74042),
                y = r(94380),
                v = r(70083),
                w = r(86291),
                E = r(88518),
                A = r(25032),
                P = r(71118),
                x = r(63442),
                O = r(21664),
                _ = r(50539),
                I = r(69379),
                T = r(14287),
                C = r(66851),
                S = r(80419),
                k = r(63222),
                M = r(21649),
                B = r(33244),
                N = r(19672),
                R = r(16296),
                D = r(85002),
                j = r(42471),
                F = r(63031),
                U = r(42654),
                L = r(55610),
                q = r(46227),
                z = r(61779),
                $ = r(41855),
                H = r(67995),
                G = r(5992),
                W = r(82108),
                K = r(47561),
                Y = r(71973);
            t.publicActions = function(e) {
                return {
                    call: t => (0, u.call)(e, t),
                    createBlockFilter: () => (0, c.createBlockFilter)(e),
                    createContractEventFilter: t => (0, l.createContractEventFilter)(e, t),
                    createEventFilter: t => (0, d.createEventFilter)(e, t),
                    createPendingTransactionFilter: () => (0, f.createPendingTransactionFilter)(e),
                    estimateContractGas: t => (0, h.estimateContractGas)(e, t),
                    estimateGas: t => (0, m.estimateGas)(e, t),
                    getBalance: t => (0, b.getBalance)(e, t),
                    getBlock: t => (0, y.getBlock)(e, t),
                    getBlockNumber: t => (0, v.getBlockNumber)(e, t),
                    getBlockTransactionCount: t => (0, w.getBlockTransactionCount)(e, t),
                    getBytecode: t => (0, E.getBytecode)(e, t),
                    getChainId: () => (0, A.getChainId)(e),
                    getContractEvents: t => (0, P.getContractEvents)(e, t),
                    getEnsAddress: t => (0, n.getEnsAddress)(e, t),
                    getEnsAvatar: t => (0, i.getEnsAvatar)(e, t),
                    getEnsName: t => (0, o.getEnsName)(e, t),
                    getEnsResolver: t => (0, a.getEnsResolver)(e, t),
                    getEnsText: t => (0, s.getEnsText)(e, t),
                    getFeeHistory: t => (0, x.getFeeHistory)(e, t),
                    estimateFeesPerGas: t => (0, p.estimateFeesPerGas)(e, t),
                    getFilterChanges: t => (0, O.getFilterChanges)(e, t),
                    getFilterLogs: t => (0, _.getFilterLogs)(e, t),
                    getGasPrice: () => (0, I.getGasPrice)(e),
                    getLogs: t => (0, T.getLogs)(e, t),
                    getProof: t => (0, C.getProof)(e, t),
                    estimateMaxPriorityFeePerGas: t => (0, g.estimateMaxPriorityFeePerGas)(e, t),
                    getStorageAt: t => (0, S.getStorageAt)(e, t),
                    getTransaction: t => (0, k.getTransaction)(e, t),
                    getTransactionConfirmations: t => (0, M.getTransactionConfirmations)(e, t),
                    getTransactionCount: t => (0, B.getTransactionCount)(e, t),
                    getTransactionReceipt: t => (0, N.getTransactionReceipt)(e, t),
                    multicall: t => (0, R.multicall)(e, t),
                    prepareTransactionRequest: t => (0, K.prepareTransactionRequest)(e, t),
                    readContract: t => (0, D.readContract)(e, t),
                    sendRawTransaction: t => (0, Y.sendRawTransaction)(e, t),
                    simulateContract: t => (0, j.simulateContract)(e, t),
                    verifyMessage: t => (0, U.verifyMessage)(e, t),
                    verifyTypedData: t => (0, L.verifyTypedData)(e, t),
                    uninstallFilter: t => (0, F.uninstallFilter)(e, t),
                    waitForTransactionReceipt: t => (0, q.waitForTransactionReceipt)(e, t),
                    watchBlocks: t => (0, $.watchBlocks)(e, t),
                    watchBlockNumber: t => (0, z.watchBlockNumber)(e, t),
                    watchContractEvent: t => (0, H.watchContractEvent)(e, t),
                    watchEvent: t => (0, G.watchEvent)(e, t),
                    watchPendingTransactions: t => (0, W.watchPendingTransactions)(e, t)
                }
            }
        },
        96878: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.testActions = void 0;
            let n = r(20933),
                i = r(90879),
                o = r(49728),
                a = r(81573),
                s = r(51804),
                u = r(4835),
                c = r(13207),
                l = r(25565),
                d = r(35190),
                f = r(17902),
                h = r(49048),
                p = r(95878),
                m = r(91050),
                g = r(32330),
                b = r(74256),
                y = r(86504),
                v = r(80165),
                w = r(19197),
                E = r(58395),
                A = r(14387),
                P = r(65405),
                x = r(57962),
                O = r(33942),
                _ = r(64819),
                I = r(15069),
                T = r(86864),
                C = r(438),
                S = r(18160),
                k = r(86606),
                M = r(37925);
            t.testActions = function({
                mode: e
            }) {
                return t => {
                    let r = t.extend(() => ({
                        mode: e
                    }));
                    return {
                        dropTransaction: e => (0, n.dropTransaction)(r, e),
                        dumpState: () => (0, i.dumpState)(r),
                        getAutomine: () => (0, o.getAutomine)(r),
                        getTxpoolContent: () => (0, a.getTxpoolContent)(r),
                        getTxpoolStatus: () => (0, s.getTxpoolStatus)(r),
                        impersonateAccount: e => (0, u.impersonateAccount)(r, e),
                        increaseTime: e => (0, c.increaseTime)(r, e),
                        inspectTxpool: () => (0, l.inspectTxpool)(r),
                        loadState: e => (0, d.loadState)(r, e),
                        mine: e => (0, f.mine)(r, e),
                        removeBlockTimestampInterval: () => (0, h.removeBlockTimestampInterval)(r),
                        reset: e => (0, p.reset)(r, e),
                        revert: e => (0, m.revert)(r, e),
                        sendUnsignedTransaction: e => (0, g.sendUnsignedTransaction)(r, e),
                        setAutomine: e => (0, b.setAutomine)(r, e),
                        setBalance: e => (0, y.setBalance)(r, e),
                        setBlockGasLimit: e => (0, v.setBlockGasLimit)(r, e),
                        setBlockTimestampInterval: e => (0, w.setBlockTimestampInterval)(r, e),
                        setCode: e => (0, E.setCode)(r, e),
                        setCoinbase: e => (0, A.setCoinbase)(r, e),
                        setIntervalMining: e => (0, P.setIntervalMining)(r, e),
                        setLoggingEnabled: e => (0, x.setLoggingEnabled)(r, e),
                        setMinGasPrice: e => (0, O.setMinGasPrice)(r, e),
                        setNextBlockBaseFeePerGas: e => (0, _.setNextBlockBaseFeePerGas)(r, e),
                        setNextBlockTimestamp: e => (0, I.setNextBlockTimestamp)(r, e),
                        setNonce: e => (0, T.setNonce)(r, e),
                        setRpcUrl: e => (0, C.setRpcUrl)(r, e),
                        setStorageAt: e => (0, S.setStorageAt)(r, e),
                        snapshot: () => (0, k.snapshot)(r),
                        stopImpersonatingAccount: e => (0, M.stopImpersonatingAccount)(r, e)
                    }
                }
            }
        },
        14832: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.walletActions = void 0;
            let n = r(25032),
                i = r(37406),
                o = r(33212),
                a = r(84874),
                s = r(99015),
                u = r(47561),
                c = r(98458),
                l = r(27647),
                d = r(71973),
                f = r(60130),
                h = r(5262),
                p = r(96245),
                m = r(84544),
                g = r(85722),
                b = r(78595),
                y = r(86899);
            t.walletActions = function(e) {
                return {
                    addChain: t => (0, i.addChain)(e, t),
                    deployContract: t => (0, o.deployContract)(e, t),
                    getAddresses: () => (0, a.getAddresses)(e),
                    getChainId: () => (0, n.getChainId)(e),
                    getPermissions: () => (0, s.getPermissions)(e),
                    prepareTransactionRequest: t => (0, u.prepareTransactionRequest)(e, t),
                    requestAddresses: () => (0, c.requestAddresses)(e),
                    requestPermissions: t => (0, l.requestPermissions)(e, t),
                    sendRawTransaction: t => (0, d.sendRawTransaction)(e, t),
                    sendTransaction: t => (0, f.sendTransaction)(e, t),
                    signMessage: t => (0, h.signMessage)(e, t),
                    signTransaction: t => (0, p.signTransaction)(e, t),
                    signTypedData: t => (0, m.signTypedData)(e, t),
                    switchChain: t => (0, g.switchChain)(e, t),
                    watchAsset: t => (0, b.watchAsset)(e, t),
                    writeContract: t => (0, y.writeContract)(e, t)
                }
            }
        },
        94465: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTransport = void 0;
            let n = r(94382);
            t.createTransport = function({
                key: e,
                name: t,
                request: r,
                retryCount: i = 3,
                retryDelay: o = 150,
                timeout: a,
                type: s
            }, u) {
                return {
                    config: {
                        key: e,
                        name: t,
                        request: r,
                        retryCount: i,
                        retryDelay: o,
                        timeout: a,
                        type: s
                    },
                    request: (0, n.buildRequest)(r, {
                        retryCount: i,
                        retryDelay: o
                    }),
                    value: u
                }
            }
        },
        16284: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.custom = void 0;
            let n = r(94465);
            t.custom = function(e, t = {}) {
                let {
                    key: r = "custom",
                    name: i = "Custom Provider",
                    retryDelay: o
                } = t;
                return ({
                    retryCount: a
                }) => (0, n.createTransport)({
                    key: r,
                    name: i,
                    request: e.request.bind(e),
                    retryCount: t.retryCount ? ? a,
                    retryDelay: o,
                    type: "custom"
                })
            }
        },
        73104: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rankTransports = t.fallback = void 0;
            let n = r(94382),
                i = r(38155),
                o = r(94465);

            function a({
                chain: e,
                interval: t = 4e3,
                onTransports: r,
                sampleCount: n = 10,
                timeout: o = 1e3,
                transports: a,
                weights: s = {}
            }) {
                let {
                    stability: u = .7,
                    latency: c = .3
                } = s, l = [], d = async () => {
                    let s = await Promise.all(a.map(async t => {
                        let r, n;
                        let i = t({
                                chain: e,
                                retryCount: 0,
                                timeout: o
                            }),
                            a = Date.now();
                        try {
                            await i.request({
                                method: "net_listening"
                            }), n = 1
                        } catch {
                            n = 0
                        } finally {
                            r = Date.now()
                        }
                        return {
                            latency: r - a,
                            success: n
                        }
                    }));
                    l.push(s), l.length > n && l.shift();
                    let f = Math.max(...l.map(e => Math.max(...e.map(({
                        latency: e
                    }) => e))));
                    r(a.map((e, t) => {
                        let r = l.map(e => e[t].latency),
                            n = r.reduce((e, t) => e + t, 0) / r.length,
                            i = l.map(e => e[t].success),
                            o = i.reduce((e, t) => e + t, 0) / i.length;
                        return 0 === o ? [0, t] : [c * (1 - n / f) + u * o, t]
                    }).sort((e, t) => t[0] - e[0]).map(([, e]) => a[e])), await (0, i.wait)(t), d()
                };
                d()
            }
            t.fallback = function(e, t = {}) {
                let {
                    key: r = "fallback",
                    name: i = "Fallback",
                    rank: s = !1,
                    retryCount: u,
                    retryDelay: c
                } = t;
                return ({
                    chain: t,
                    pollingInterval: l = 4e3,
                    timeout: d
                }) => {
                    let f = e,
                        h = () => {},
                        p = (0, o.createTransport)({
                            key: r,
                            name: i,
                            async request({
                                method: e,
                                params: r
                            }) {
                                let i = async (o = 0) => {
                                    let a = f[o]({
                                        chain: t,
                                        retryCount: 0,
                                        timeout: d
                                    });
                                    try {
                                        let t = await a.request({
                                            method: e,
                                            params: r
                                        });
                                        return h({
                                            method: e,
                                            params: r,
                                            response: t,
                                            transport: a,
                                            status: "success"
                                        }), t
                                    } catch (t) {
                                        if (h({
                                                error: t,
                                                method: e,
                                                params: r,
                                                transport: a,
                                                status: "error"
                                            }), (0, n.isDeterministicError)(t) || o === f.length - 1) throw t;
                                        return i(o + 1)
                                    }
                                };
                                return i()
                            },
                            retryCount: u,
                            retryDelay: c,
                            type: "fallback"
                        }, {
                            onResponse: e => h = e,
                            transports: f.map(e => e({
                                chain: t,
                                retryCount: 0
                            }))
                        });
                    if (s) {
                        let e = "object" == typeof s ? s : {};
                        a({
                            chain: t,
                            interval: e.interval ? ? l,
                            onTransports: e => f = e,
                            sampleCount: e.sampleCount,
                            timeout: e.timeout,
                            transports: f,
                            weights: e.weights
                        })
                    }
                    return p
                }
            }, t.rankTransports = a
        },
        98473: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.http = void 0;
            let n = r(62377),
                i = r(41348),
                o = r(62752),
                a = r(37078),
                s = r(94465);
            t.http = function(e, t = {}) {
                let {
                    batch: r,
                    fetchOptions: u,
                    key: c = "http",
                    name: l = "HTTP JSON-RPC",
                    retryDelay: d
                } = t;
                return ({
                    chain: f,
                    retryCount: h,
                    timeout: p
                }) => {
                    let {
                        batchSize: m = 1e3,
                        wait: g = 0
                    } = "object" == typeof r ? r : {}, b = t.retryCount ? ? h, y = p ? ? t.timeout ? ? 1e4, v = e || f ? .rpcUrls.default.http[0];
                    if (!v) throw new i.UrlRequiredError;
                    return (0, s.createTransport)({
                        key: c,
                        name: l,
                        async request({
                            method: t,
                            params: i
                        }) {
                            let s = {
                                    method: t,
                                    params: i
                                },
                                {
                                    schedule: c
                                } = (0, o.createBatchScheduler)({
                                    id: `${e}`,
                                    wait: g,
                                    shouldSplitBatch: e => e.length > m,
                                    fn: e => a.rpc.http(v, {
                                        body: e,
                                        fetchOptions: u,
                                        timeout: y
                                    }),
                                    sort: (e, t) => e.id - t.id
                                }),
                                l = async e => r ? c(e) : [await a.rpc.http(v, {
                                    body: e,
                                    fetchOptions: u,
                                    timeout: y
                                })],
                                [{
                                    error: d,
                                    result: f
                                }] = await l(s);
                            if (d) throw new n.RpcRequestError({
                                body: s,
                                error: d,
                                url: v
                            });
                            return f
                        },
                        retryCount: b,
                        retryDelay: d,
                        timeout: y,
                        type: "http"
                    }, {
                        fetchOptions: u,
                        url: e
                    })
                }
            }
        },
        11145: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.webSocket = void 0;
            let n = r(62377),
                i = r(41348),
                o = r(37078),
                a = r(94465);
            t.webSocket = function(e, t = {}) {
                let {
                    key: r = "webSocket",
                    name: s = "WebSocket JSON-RPC",
                    retryDelay: u
                } = t;
                return ({
                    chain: c,
                    retryCount: l,
                    timeout: d
                }) => {
                    let f = t.retryCount ? ? l,
                        h = d ? ? t.timeout ? ? 1e4,
                        p = e || c ? .rpcUrls.default.webSocket ? .[0];
                    if (!p) throw new i.UrlRequiredError;
                    return (0, a.createTransport)({
                        key: r,
                        name: s,
                        async request({
                            method: e,
                            params: t
                        }) {
                            let r = {
                                    method: e,
                                    params: t
                                },
                                i = await (0, o.getSocket)(p),
                                {
                                    error: a,
                                    result: s
                                } = await o.rpc.webSocketAsync(i, {
                                    body: r,
                                    timeout: h
                                });
                            if (a) throw new n.RpcRequestError({
                                body: r,
                                error: a,
                                url: p
                            });
                            return s
                        },
                        retryCount: f,
                        retryDelay: u,
                        timeout: h,
                        type: "webSocket"
                    }, {
                        getSocket: () => (0, o.getSocket)(p),
                        async subscribe({
                            params: e,
                            onData: t,
                            onError: r
                        }) {
                            let n = await (0, o.getSocket)(p),
                                {
                                    result: i
                                } = await new Promise((i, a) => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_subscribe",
                                        params: e
                                    },
                                    onResponse(e) {
                                        if (e.error) {
                                            a(e.error), r ? .(e.error);
                                            return
                                        }
                                        if ("number" == typeof e.id) {
                                            i(e);
                                            return
                                        }
                                        "eth_subscription" === e.method && t(e.params)
                                    }
                                }));
                            return {
                                subscriptionId: i,
                                unsubscribe: async () => new Promise(e => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_unsubscribe",
                                        params: [i]
                                    },
                                    onResponse: e
                                }))
                            }
                        }
                    })
                }
            }
        },
        9344: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorAbi = t.smartAccountAbi = t.addressResolverAbi = t.textResolverAbi = t.universalResolverReverseAbi = t.universalResolverResolveAbi = t.multicall3Abi = void 0, t.multicall3Abi = [{
                inputs: [{
                    components: [{
                        name: "target",
                        type: "address"
                    }, {
                        name: "allowFailure",
                        type: "bool"
                    }, {
                        name: "callData",
                        type: "bytes"
                    }],
                    name: "calls",
                    type: "tuple[]"
                }],
                name: "aggregate3",
                outputs: [{
                    components: [{
                        name: "success",
                        type: "bool"
                    }, {
                        name: "returnData",
                        type: "bytes"
                    }],
                    name: "returnData",
                    type: "tuple[]"
                }],
                stateMutability: "view",
                type: "function"
            }];
            let r = [{
                inputs: [],
                name: "ResolverNotFound",
                type: "error"
            }, {
                inputs: [],
                name: "ResolverWildcardNotSupported",
                type: "error"
            }];
            t.universalResolverResolveAbi = [...r, {
                name: "resolve",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes"
                }, {
                    name: "data",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }, {
                    name: "address",
                    type: "address"
                }]
            }], t.universalResolverReverseAbi = [...r, {
                name: "reverse",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    type: "bytes",
                    name: "reverseName"
                }],
                outputs: [{
                    type: "string",
                    name: "resolvedName"
                }, {
                    type: "address",
                    name: "resolvedAddress"
                }, {
                    type: "address",
                    name: "reverseResolver"
                }, {
                    type: "address",
                    name: "resolver"
                }]
            }], t.textResolverAbi = [{
                name: "text",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "key",
                    type: "string"
                }],
                outputs: [{
                    name: "",
                    type: "string"
                }]
            }], t.addressResolverAbi = [{
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }],
                outputs: [{
                    name: "",
                    type: "address"
                }]
            }, {
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "coinType",
                    type: "uint256"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }]
            }], t.smartAccountAbi = [{
                name: "isValidSignature",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "hash",
                    type: "bytes32"
                }, {
                    name: "signature",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes4"
                }]
            }], t.universalSignatureValidatorAbi = [{
                inputs: [{
                    internalType: "address",
                    name: "_signer",
                    type: "address"
                }, {
                    internalType: "bytes32",
                    name: "_hash",
                    type: "bytes32"
                }, {
                    internalType: "bytes",
                    name: "_signature",
                    type: "bytes"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }]
        },
        67978: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroAddress = void 0, t.zeroAddress = "0x0000000000000000000000000000000000000000"
        },
        15716: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroHash = void 0, t.zeroHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        519: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.aggregate3Signature = void 0, t.aggregate3Signature = "0x82ad56cb"
        },
        63991: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorByteCode = void 0, t.universalSignatureValidatorByteCode = "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572"
        },
        89976: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = void 0, t.maxInt8 = 2 n ** (8 n - 1 n) - 1 n, t.maxInt16 = 2 n ** (16 n - 1 n) - 1 n, t.maxInt24 = 2 n ** (24 n - 1 n) - 1 n, t.maxInt32 = 2 n ** (32 n - 1 n) - 1 n, t.maxInt40 = 2 n ** (40 n - 1 n) - 1 n, t.maxInt48 = 2 n ** (48 n - 1 n) - 1 n, t.maxInt56 = 2 n ** (56 n - 1 n) - 1 n, t.maxInt64 = 2 n ** (64 n - 1 n) - 1 n, t.maxInt72 = 2 n ** (72 n - 1 n) - 1 n, t.maxInt80 = 2 n ** (80 n - 1 n) - 1 n, t.maxInt88 = 2 n ** (88 n - 1 n) - 1 n, t.maxInt96 = 2 n ** (96 n - 1 n) - 1 n, t.maxInt104 = 2 n ** (104 n - 1 n) - 1 n, t.maxInt112 = 2 n ** (112 n - 1 n) - 1 n, t.maxInt120 = 2 n ** (120 n - 1 n) - 1 n, t.maxInt128 = 2 n ** (128 n - 1 n) - 1 n, t.maxInt136 = 2 n ** (136 n - 1 n) - 1 n, t.maxInt144 = 2 n ** (144 n - 1 n) - 1 n, t.maxInt152 = 2 n ** (152 n - 1 n) - 1 n, t.maxInt160 = 2 n ** (160 n - 1 n) - 1 n, t.maxInt168 = 2 n ** (168 n - 1 n) - 1 n, t.maxInt176 = 2 n ** (176 n - 1 n) - 1 n, t.maxInt184 = 2 n ** (184 n - 1 n) - 1 n, t.maxInt192 = 2 n ** (192 n - 1 n) - 1 n, t.maxInt200 = 2 n ** (200 n - 1 n) - 1 n, t.maxInt208 = 2 n ** (208 n - 1 n) - 1 n, t.maxInt216 = 2 n ** (216 n - 1 n) - 1 n, t.maxInt224 = 2 n ** (224 n - 1 n) - 1 n, t.maxInt232 = 2 n ** (232 n - 1 n) - 1 n, t.maxInt240 = 2 n ** (240 n - 1 n) - 1 n, t.maxInt248 = 2 n ** (248 n - 1 n) - 1 n, t.maxInt256 = 2 n ** (256 n - 1 n) - 1 n, t.minInt8 = -(2 n ** (8 n - 1 n)), t.minInt16 = -(2 n ** (16 n - 1 n)), t.minInt24 = -(2 n ** (24 n - 1 n)), t.minInt32 = -(2 n ** (32 n - 1 n)), t.minInt40 = -(2 n ** (40 n - 1 n)), t.minInt48 = -(2 n ** (48 n - 1 n)), t.minInt56 = -(2 n ** (56 n - 1 n)), t.minInt64 = -(2 n ** (64 n - 1 n)), t.minInt72 = -(2 n ** (72 n - 1 n)), t.minInt80 = -(2 n ** (80 n - 1 n)), t.minInt88 = -(2 n ** (88 n - 1 n)), t.minInt96 = -(2 n ** (96 n - 1 n)), t.minInt104 = -(2 n ** (104 n - 1 n)), t.minInt112 = -(2 n ** (112 n - 1 n)), t.minInt120 = -(2 n ** (120 n - 1 n)), t.minInt128 = -(2 n ** (128 n - 1 n)), t.minInt136 = -(2 n ** (136 n - 1 n)), t.minInt144 = -(2 n ** (144 n - 1 n)), t.minInt152 = -(2 n ** (152 n - 1 n)), t.minInt160 = -(2 n ** (160 n - 1 n)), t.minInt168 = -(2 n ** (168 n - 1 n)), t.minInt176 = -(2 n ** (176 n - 1 n)), t.minInt184 = -(2 n ** (184 n - 1 n)), t.minInt192 = -(2 n ** (192 n - 1 n)), t.minInt200 = -(2 n ** (200 n - 1 n)), t.minInt208 = -(2 n ** (208 n - 1 n)), t.minInt216 = -(2 n ** (216 n - 1 n)), t.minInt224 = -(2 n ** (224 n - 1 n)), t.minInt232 = -(2 n ** (232 n - 1 n)), t.minInt240 = -(2 n ** (240 n - 1 n)), t.minInt248 = -(2 n ** (248 n - 1 n)), t.minInt256 = -(2 n ** (256 n - 1 n)), t.maxUint8 = 2 n ** 8 n - 1 n, t.maxUint16 = 2 n ** 16 n - 1 n, t.maxUint24 = 2 n ** 24 n - 1 n, t.maxUint32 = 2 n ** 32 n - 1 n, t.maxUint40 = 2 n ** 40 n - 1 n, t.maxUint48 = 2 n ** 48 n - 1 n, t.maxUint56 = 2 n ** 56 n - 1 n, t.maxUint64 = 2 n ** 64 n - 1 n, t.maxUint72 = 2 n ** 72 n - 1 n, t.maxUint80 = 2 n ** 80 n - 1 n, t.maxUint88 = 2 n ** 88 n - 1 n, t.maxUint96 = 2 n ** 96 n - 1 n, t.maxUint104 = 2 n ** 104 n - 1 n, t.maxUint112 = 2 n ** 112 n - 1 n, t.maxUint120 = 2 n ** 120 n - 1 n, t.maxUint128 = 2 n ** 128 n - 1 n, t.maxUint136 = 2 n ** 136 n - 1 n, t.maxUint144 = 2 n ** 144 n - 1 n, t.maxUint152 = 2 n ** 152 n - 1 n, t.maxUint160 = 2 n ** 160 n - 1 n, t.maxUint168 = 2 n ** 168 n - 1 n, t.maxUint176 = 2 n ** 176 n - 1 n, t.maxUint184 = 2 n ** 184 n - 1 n, t.maxUint192 = 2 n ** 192 n - 1 n, t.maxUint200 = 2 n ** 200 n - 1 n, t.maxUint208 = 2 n ** 208 n - 1 n, t.maxUint216 = 2 n ** 216 n - 1 n, t.maxUint224 = 2 n ** 224 n - 1 n, t.maxUint232 = 2 n ** 232 n - 1 n, t.maxUint240 = 2 n ** 240 n - 1 n, t.maxUint248 = 2 n ** 248 n - 1 n, t.maxUint256 = 2 n ** 256 n - 1 n
        },
        85492: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.solidityPanic = t.solidityError = t.panicReasons = void 0, t.panicReasons = {
                1: "An `assert` condition failed.",
                17: "Arithmic operation resulted in underflow or overflow.",
                18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                33: "Attempted to convert to an invalid type.",
                34: "Attempted to access a storage byte array that is incorrectly encoded.",
                49: "Performed `.pop()` on an empty array",
                50: "Array index is out of bounds.",
                65: "Allocated too much memory or created an array which is too large.",
                81: "Attempted to call a zero-initialized variable of internal function type."
            }, t.solidityError = {
                inputs: [{
                    name: "message",
                    type: "string"
                }],
                name: "Error",
                type: "error"
            }, t.solidityPanic = {
                inputs: [{
                    name: "reason",
                    type: "uint256"
                }],
                name: "Panic",
                type: "error"
            }
        },
        14157: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.presignMessagePrefix = void 0, t.presignMessagePrefix = "\x19Ethereum Signed Message:\n"
        },
        4865: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.weiUnits = t.gweiUnits = t.etherUnits = void 0, t.etherUnits = {
                gwei: 9,
                wei: 18
            }, t.gweiUnits = {
                ether: -9,
                wei: 9
            }, t.weiUnits = {
                ether: -18,
                gwei: -9
            }
        },
        35362: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiDecodingTypeError = t.InvalidAbiEncodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiItemAmbiguityError = t.AbiFunctionSignatureNotFoundError = t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingLengthMismatchError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = void 0;
            let n = r(37300),
                i = r(65945),
                o = r(96477);
            class a extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorNotFoundError"
                    })
                }
            }
            t.AbiConstructorNotFoundError = a;
            class s extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            }
            t.AbiConstructorParamsNotFoundError = s;
            class u extends o.BaseError {
                constructor({
                    data: e,
                    size: t
                }) {
                    super(`Data size of ${t} bytes is invalid.
Size must be in increments of 32 bytes (size % 32 === 0).`, {
                        metaMessages: [`Data: ${e} (${t} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeInvalidError"
                    })
                }
            }
            t.AbiDecodingDataSizeInvalidError = u;
            class c extends o.BaseError {
                constructor({
                    data: e,
                    params: t,
                    size: r
                }) {
                    super(`Data size of ${r} bytes is too small for given parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(t,{includeName:!0})})`, `Data:   ${e} (${r} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e, this.params = t, this.size = r
                }
            }
            t.AbiDecodingDataSizeTooSmallError = c;
            class l extends o.BaseError {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            }
            t.AbiDecodingZeroDataError = l;
            class d extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t,
                    type: r
                }) {
                    super(`ABI encoding array length mismatch for type ${r}.
Expected length: ${e}
Given length: ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            }
            t.AbiEncodingArrayLengthMismatchError = d;
            class f extends o.BaseError {
                constructor({
                    expectedSize: e,
                    value: t
                }) {
                    super(`Size of bytes "${t}" (bytes${(0,i.size)(t)}) does not match expected size (bytes${e}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            }
            t.AbiEncodingBytesSizeMismatchError = f;
            class h extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t
                }) {
                    super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            }
            t.AbiEncodingLengthMismatchError = h;
            class p extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Arguments (\`args\`) were provided to "${e}", but "${e}" on the ABI does not contain any parameters (\`inputs\`).
Cannot encode error result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the inputs exist on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorInputsNotFoundError"
                    })
                }
            }
            t.AbiErrorInputsNotFoundError = p;
            class m extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Error ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorNotFoundError"
                    })
                }
            }
            t.AbiErrorNotFoundError = m;
            class g extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = e
                }
            }
            t.AbiErrorSignatureNotFoundError = g;
            class b extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            }
            t.AbiEventSignatureEmptyTopicsError = b;
            class y extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            }
            t.AbiEventSignatureNotFoundError = y;
            class v extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Event ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            }
            t.AbiEventNotFoundError = v;
            class w extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Function ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            }
            t.AbiFunctionNotFoundError = w;
            class E extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            }
            t.AbiFunctionOutputsNotFoundError = E;
            class A extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded function signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionSignatureNotFoundError"
                    })
                }
            }
            t.AbiFunctionSignatureNotFoundError = A;
            class P extends o.BaseError {
                constructor(e, t) {
                    super("Found ambiguous types in overloaded ABI items.", {
                        metaMessages: [`\`${e.type}\` in \`${(0,n.formatAbiItem)(e.abiItem)}\`, and`, `\`${t.type}\` in \`${(0,n.formatAbiItem)(t.abiItem)}\``, "", "These types encode differently and cannot be distinguished at runtime.", "Remove one of the ambiguous items in the ABI."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiItemAmbiguityError"
                    })
                }
            }
            t.AbiItemAmbiguityError = P;
            class x extends o.BaseError {
                constructor({
                    expectedSize: e,
                    givenSize: t
                }) {
                    super(`Expected bytes${e}, got bytes${t}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            }
            t.BytesSizeMismatchError = x;
            class O extends o.BaseError {
                constructor({
                    abiItem: e,
                    data: t,
                    params: r,
                    size: i
                }) {
                    super(`Data size of ${i} bytes is too small for non-indexed event parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(r,{includeName:!0})})`, `Data:   ${t} (${i} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e, this.data = t, this.params = r, this.size = i
                }
            }
            t.DecodeLogDataMismatch = O;
            class _ extends o.BaseError {
                constructor({
                    abiItem: e,
                    param: t
                }) {
                    super(`Expected a topic for indexed event parameter${t.name?` "${t.name}"`:""} on event "${(0,n.formatAbiItem)(e,{includeName:!0})}".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e
                }
            }
            t.DecodeLogTopicsMismatch = _;
            class I extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            }
            t.InvalidAbiEncodingTypeError = I;
            class T extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            }
            t.InvalidAbiDecodingTypeError = T;
            class C extends o.BaseError {
                constructor(e) {
                    super(`Value "${e}" is not a valid array.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            }
            t.InvalidArrayError = C;
            class S extends o.BaseError {
                constructor(e) {
                    super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            }
            t.InvalidDefinitionTypeError = S;
            class k extends o.BaseError {
                constructor(e) {
                    super(`Type "${e}" is not supported for packed encoding.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedPackedAbiType"
                    })
                }
            }
            t.UnsupportedPackedAbiType = k
        },
        28532: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AccountNotFoundError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    docsPath: e
                } = {}) {
                    super("Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.", {
                        docsPath: e,
                        docsSlug: "account"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AccountNotFoundError"
                    })
                }
            }
            t.AccountNotFoundError = i
        },
        99913: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAddressError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    address: e
                }) {
                    super(`Address "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAddressError"
                    })
                }
            }
            t.InvalidAddressError = i
        },
        96477: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = r(89162);
            class i extends Error {
                constructor(e, t = {}) {
                    super(), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ViemError"
                    }), Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0, n.getVersion)()
                    });
                    let r = t.cause instanceof i ? t.cause.details : t.cause ? .message ? t.cause.message : t.details,
                        o = t.cause instanceof i && t.cause.docsPath || t.docsPath;
                    this.message = [e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...o ? [`Docs: https://viem.sh${o}.html${t.docsSlug?`#${t.docsSlug}`:""}`] : [], ...r ? [`Details: ${r}`] : [], `Version: ${this.version}`].join("\n"), t.cause && (this.cause = t.cause), this.details = r, this.docsPath = o, this.metaMessages = t.metaMessages, this.shortMessage = e
                }
                walk(e) {
                    return function e(t, r) {
                        return r ? .(t) ? t : t && "object" == typeof t && "cause" in t ? e(t.cause, r) : r ? null : t
                    }(this, e)
                }
            }
            t.BaseError = i
        },
        61611: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BlockNotFoundError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    blockHash: e,
                    blockNumber: t
                }) {
                    let r = "Block";
                    e && (r = `Block at hash "${e}"`), t && (r = `Block at number "${t}"`), super(`${r} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BlockNotFoundError"
                    })
                }
            }
            t.BlockNotFoundError = i
        },
        5440: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OffchainLookupSenderMismatchError = t.OffchainLookupResponseMalformedError = t.OffchainLookupError = void 0;
            let n = r(12835),
                i = r(96477),
                o = r(89162);
            class a extends i.BaseError {
                constructor({
                    callbackSelector: e,
                    cause: t,
                    data: r,
                    extraData: n,
                    sender: i,
                    urls: a
                }) {
                    super(t.shortMessage || "An error occurred while fetching for an offchain result.", {
                        cause: t,
                        metaMessages: [...t.metaMessages || [], t.metaMessages ? .length ? "" : [], "Offchain Gateway Call:", a && ["  Gateway URL(s):", ...a.map(e => `    ${(0,o.getUrl)(e)}`)], `  Sender: ${i}`, `  Data: ${r}`, `  Callback selector: ${e}`, `  Extra data: ${n}`].flat()
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupError"
                    })
                }
            }
            t.OffchainLookupError = a;
            class s extends i.BaseError {
                constructor({
                    result: e,
                    url: t
                }) {
                    super("Offchain gateway response is malformed. Response data must be a hex value.", {
                        metaMessages: [`Gateway URL: ${(0,o.getUrl)(t)}`, `Response: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupResponseMalformedError"
                    })
                }
            }
            t.OffchainLookupResponseMalformedError = s;
            class u extends i.BaseError {
                constructor({
                    sender: e,
                    to: t
                }) {
                    super("Reverted sender address does not match target contract address (`to`).", {
                        metaMessages: [`Contract address: ${t}`, `OffchainLookup sender address: ${e}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupSenderMismatchError"
                    })
                }
            }
            t.OffchainLookupSenderMismatchError = u
        },
        2439: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    blockNumber: e,
                    chain: t,
                    contract: r
                }) {
                    super(`Chain "${t.name}" does not support contract "${r.name}".`, {
                        metaMessages: ["This could be due to any of the following:", ...e && r.blockCreated && r.blockCreated > e ? [`- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${e}).`] : [`- The chain does not have the contract "${r.name}" configured.`]]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDoesNotSupportContract"
                    })
                }
            }
            t.ChainDoesNotSupportContract = i;
            class o extends n.BaseError {
                constructor({
                    chain: e,
                    currentChainId: t
                }) {
                    super(`The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`, {
                        metaMessages: [`Current Chain ID:  ${t}`, `Expected Chain ID: ${e.id} – ${e.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            }
            t.ChainMismatchError = o;
            class a extends n.BaseError {
                constructor() {
                    super("No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            }
            t.ChainNotFoundError = a;
            class s extends n.BaseError {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            }
            t.ClientChainNotConfiguredError = s;
            class u extends n.BaseError {
                constructor({
                    chainId: e
                }) {
                    super(`Chain ID "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidChainIdError"
                    })
                }
            }
            t.InvalidChainIdError = u
        },
        85374: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = void 0;
            let n = r(5974),
                i = r(85492),
                o = r(50422),
                a = r(37300),
                s = r(3242),
                u = r(35171),
                c = r(87948),
                l = r(53241),
                d = r(35362),
                f = r(96477),
                h = r(88724),
                p = r(89162);
            class m extends f.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: i,
                    data: o,
                    gas: a,
                    gasPrice: s,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: p,
                    value: m
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Raw Call Arguments:", (0, h.prettyPrint)({
                            from: (t ? (0, n.parseAccount)(t) : void 0) ? .address,
                            to: p,
                            value: void 0 !== m && `${(0,c.formatEther)(m)} ${i?.nativeCurrency?.symbol||"ETH"}`,
                            data: o,
                            gas: a,
                            gasPrice: void 0 !== s && `${(0,l.formatGwei)(s)} gwei`,
                            maxFeePerGas: void 0 !== u && `${(0,l.formatGwei)(u)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,l.formatGwei)(d)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CallExecutionError"
                    }), this.cause = e
                }
            }
            t.CallExecutionError = m;
            class g extends f.BaseError {
                constructor(e, {
                    abi: t,
                    args: r,
                    contractAddress: n,
                    docsPath: i,
                    functionName: o,
                    sender: c
                }) {
                    let l = (0, u.getAbiItem)({
                            abi: t,
                            args: r,
                            name: o
                        }),
                        d = l ? (0, s.formatAbiItemWithArgs)({
                            abiItem: l,
                            args: r,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0;
                    super(e.shortMessage || `An unknown error occurred while executing the contract function "${o}".`, {
                        cause: e,
                        docsPath: i,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Contract Call:", (0, h.prettyPrint)({
                            address: n && (0, p.getContractAddress)(n),
                            function: l ? (0, a.formatAbiItem)(l, {
                                includeName: !0
                            }) : void 0,
                            args: d && "()" !== d && `${[...Array(o?.length??0).keys()].map(()=>" ").join("")}${d}`,
                            sender: c
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = t, this.args = r, this.cause = e, this.contractAddress = n, this.functionName = o, this.sender = c
                }
            }
            t.ContractFunctionExecutionError = g;
            class b extends f.BaseError {
                constructor({
                    abi: e,
                    data: t,
                    functionName: r,
                    message: n
                }) {
                    let u, c, l, f, h;
                    if (t && "0x" !== t) try {
                        let {
                            abiItem: r,
                            errorName: n,
                            args: u
                        } = h = (0, o.decodeErrorResult)({
                            abi: e,
                            data: t
                        });
                        if ("Error" === n) l = u[0];
                        else if ("Panic" === n) {
                            let [e] = u;
                            l = i.panicReasons[e]
                        } else {
                            let e = r ? (0, a.formatAbiItem)(r, {
                                    includeName: !0
                                }) : void 0,
                                t = r && u ? (0, s.formatAbiItemWithArgs)({
                                    abiItem: r,
                                    args: u,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            c = [e ? `Error: ${e}` : "", t && "()" !== t ? `       ${[...Array(n?.length??0).keys()].map(()=>" ").join("")}${t}` : ""]
                        }
                    } catch (e) {
                        u = e
                    } else n && (l = n);
                    u instanceof d.AbiErrorSignatureNotFoundError && (f = u.signature, c = [`Unable to decode signature "${f}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${f}.`]), super(l && "execution reverted" !== l || f ? [`The contract function "${r}" reverted with the following ${f?"signature":"reason"}:`, l || f].join("\n") : `The contract function "${r}" reverted.`, {
                        cause: u,
                        metaMessages: c
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = h, this.reason = l, this.signature = f
                }
            }
            t.ContractFunctionRevertedError = b;
            class y extends f.BaseError {
                constructor({
                    functionName: e
                }) {
                    super(`The contract function "${e}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${e}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            }
            t.ContractFunctionZeroDataError = y;
            class v extends f.BaseError {
                constructor({
                    data: e,
                    message: t
                }) {
                    super(t || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e
                }
            }
            t.RawContractError = v
        },
        14278: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PositionOutOfBoundsError = t.NegativeOffsetError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    offset: e
                }) {
                    super(`Offset \`${e}\` cannot be negative.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NegativeOffsetError"
                    })
                }
            }
            t.NegativeOffsetError = i;
            class o extends n.BaseError {
                constructor({
                    length: e,
                    position: t
                }) {
                    super(`Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "PositionOutOfBoundsError"
                    })
                }
            }
            t.PositionOutOfBoundsError = o
        },
        65566: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeExceedsPaddingSizeError = t.SliceOffsetOutOfBoundsError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    offset: e,
                    position: t,
                    size: r
                }) {
                    super(`Slice ${"start"===t?"starting":"ending"} at offset "${e}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SliceOffsetOutOfBoundsError"
                    })
                }
            }
            t.SliceOffsetOutOfBoundsError = i;
            class o extends n.BaseError {
                constructor({
                    size: e,
                    targetSize: t,
                    type: r
                }) {
                    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${t}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            }
            t.SizeExceedsPaddingSizeError = o
        },
        22962: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = t.InvalidHexBooleanError = t.InvalidBytesBooleanError = t.IntegerOutOfRangeError = t.DataLengthTooShortError = t.DataLengthTooLongError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    consumed: e,
                    length: t
                }) {
                    super(`Consumed bytes (${e}) is shorter than data length (${t-1}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DataLengthTooLongError"
                    })
                }
            }
            t.DataLengthTooLongError = i;
            class o extends n.BaseError {
                constructor({
                    length: e,
                    dataLength: t
                }) {
                    super(`Data length (${t-1}) is shorter than consumed bytes length (${e-1}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DataLengthTooShortError"
                    })
                }
            }
            t.DataLengthTooShortError = o;
            class a extends n.BaseError {
                constructor({
                    max: e,
                    min: t,
                    signed: r,
                    size: n,
                    value: i
                }) {
                    super(`Number "${i}" is not in safe ${n?`${8*n}-bit ${r?"signed":"unsigned"} `:""}integer range ${e?`(${t} to ${e})`:`(above ${t})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            }
            t.IntegerOutOfRangeError = a;
            class s extends n.BaseError {
                constructor(e) {
                    super(`Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidBytesBooleanError"
                    })
                }
            }
            t.InvalidBytesBooleanError = s;
            class u extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            }
            t.InvalidHexBooleanError = u;
            class c extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is an odd length (${e.length}). It must be an even length.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexValueError"
                    })
                }
            }
            t.InvalidHexValueError = c;
            class l extends n.BaseError {
                constructor({
                    nextOffset: e,
                    offset: t
                }) {
                    super(`Next offset (${e}) is greater than previous offset + consumed bytes (${t})`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffsetOutOfBoundsError"
                    })
                }
            }
            t.OffsetOutOfBoundsError = l;
            class d extends n.BaseError {
                constructor({
                    givenSize: e,
                    maxSize: t
                }) {
                    super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            }
            t.SizeOverflowError = d
        },
        65124: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarUriResolutionError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarInvalidMetadataError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor({
                    data: e
                }) {
                    super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                        metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidMetadataError"
                    })
                }
            }
            t.EnsAvatarInvalidMetadataError = i;
            class o extends n.BaseError {
                constructor({
                    reason: e
                }) {
                    super(`ENS NFT avatar URI is invalid. ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            }
            t.EnsAvatarInvalidNftUriError = o;
            class a extends n.BaseError {
                constructor({
                    uri: e
                }) {
                    super(`Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            }
            t.EnsAvatarUriResolutionError = a;
            class s extends n.BaseError {
                constructor({
                    namespace: e
                }) {
                    super(`ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            }
            t.EnsAvatarUnsupportedNamespaceError = s
        },
        68834: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EstimateGasExecutionError = void 0;
            let n = r(87948),
                i = r(53241),
                o = r(96477),
                a = r(88724);
            class s extends o.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: s,
                    gas: u,
                    gasPrice: c,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: h,
                    value: p
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Estimate Gas Arguments:", (0, a.prettyPrint)({
                            from: t ? .address,
                            to: h,
                            value: void 0 !== p && `${(0,n.formatEther)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                            data: s,
                            gas: u,
                            gasPrice: void 0 !== c && `${(0,i.formatGwei)(c)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,i.formatGwei)(d)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EstimateGasExecutionError"
                    }), this.cause = e
                }
            }
            t.EstimateGasExecutionError = s
        },
        93220: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = void 0;
            let n = r(53241),
                i = r(96477);
            class o extends i.BaseError {
                constructor() {
                    super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BaseFeeScalarError"
                    })
                }
            }
            t.BaseFeeScalarError = o;
            class a extends i.BaseError {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            }
            t.Eip1559FeesNotSupportedError = a;
            class s extends i.BaseError {
                constructor({
                    maxPriorityFeePerGas: e
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,n.formatGwei)(e)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            }
            t.MaxFeePerGasTooLowError = s
        },
        3973: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FilterTypeNotSupportedError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor(e) {
                    super(`Filter type "${e}" is not supported.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FilterTypeNotSupportedError"
                    })
                }
            }
            t.FilterTypeNotSupportedError = i
        },
        8922: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownNodeError = t.TipAboveFeeCapError = t.TransactionTypeNotSupportedError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.NonceMaxValueError = t.NonceTooLowError = t.NonceTooHighError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = void 0;
            let n = r(53241),
                i = r(96477);
            class o extends i.BaseError {
                constructor({
                    cause: e,
                    message: t
                } = {}) {
                    let r = t ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                    super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ExecutionRevertedError"
                    })
                }
            }
            Object.defineProperty(o, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(o, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            }), t.ExecutionRevertedError = o;
            class a extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            }
            Object.defineProperty(a, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            }), t.FeeCapTooHighError = a;
            class s extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            }
            Object.defineProperty(s, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            }), t.FeeCapTooLowError = s;
            class u extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is higher than the next one expected.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            }
            Object.defineProperty(u, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            }), t.NonceTooHighError = u;
            class c extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            }
            Object.defineProperty(c, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            }), t.NonceTooLowError = c;
            class l extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            }
            Object.defineProperty(l, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            }), t.NonceMaxValueError = l;
            class d extends i.BaseError {
                constructor({
                    cause: e
                } = {}) {
                    super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.", {
                        cause: e,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            }
            Object.defineProperty(d, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            }), t.InsufficientFundsError = d;
            class f extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            }
            Object.defineProperty(f, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            }), t.IntrinsicGasTooHighError = f;
            class h extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction is too low.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            }
            Object.defineProperty(h, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            }), t.IntrinsicGasTooLowError = h;
            class p extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            }
            Object.defineProperty(p, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            }), t.TransactionTypeNotSupportedError = p;
            class m extends i.BaseError {
                constructor({
                    cause: e,
                    maxPriorityFeePerGas: t,
                    maxFeePerGas: r
                } = {}) {
                    super(`The provided tip (\`maxPriorityFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${r?` = ${(0,n.formatGwei)(r)} gwei`:""}).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            }
            Object.defineProperty(m, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            }), t.TipAboveFeeCapError = m;
            class g extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super(`An error occurred while executing: ${e?.shortMessage}`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            }
            t.UnknownNodeError = g
        },
        62377: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TimeoutError = t.RpcRequestError = t.WebSocketRequestError = t.HttpRequestError = void 0;
            let n = r(12835),
                i = r(96477),
                o = r(89162);
            class a extends i.BaseError {
                constructor({
                    body: e,
                    details: t,
                    headers: r,
                    status: i,
                    url: a
                }) {
                    super("HTTP request failed.", {
                        details: t,
                        metaMessages: [i && `Status: ${i}`, `URL: ${(0,o.getUrl)(a)}`, e && `Request body: ${(0,n.stringify)(e)}`].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "HttpRequestError"
                    }), Object.defineProperty(this, "body", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "headers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "status", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "url", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.body = e, this.headers = r, this.status = i, this.url = a
                }
            }
            t.HttpRequestError = a;
            class s extends i.BaseError {
                constructor({
                    body: e,
                    details: t,
                    url: r
                }) {
                    super("WebSocket request failed.", {
                        details: t,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            }
            t.WebSocketRequestError = s;
            class u extends i.BaseError {
                constructor({
                    body: e,
                    error: t,
                    url: r
                }) {
                    super("RPC Request failed.", {
                        cause: t,
                        details: t.message,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = t.code
                }
            }
            t.RpcRequestError = u;
            class c extends i.BaseError {
                constructor({
                    body: e,
                    url: t
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,o.getUrl)(t)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            }
            t.TimeoutError = c
        },
        4808: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownRpcError = t.SwitchChainError = t.ChainDisconnectedError = t.ProviderDisconnectedError = t.UnsupportedProviderMethodError = t.UnauthorizedProviderError = t.UserRejectedRequestError = t.JsonRpcVersionUnsupportedError = t.LimitExceededRpcError = t.MethodNotSupportedRpcError = t.TransactionRejectedRpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.InvalidParamsRpcError = t.MethodNotFoundRpcError = t.InvalidRequestRpcError = t.ParseRpcError = t.ProviderRpcError = t.RpcError = void 0;
            let n = r(96477),
                i = r(62377);
            class o extends n.BaseError {
                constructor(e, {
                    code: t,
                    docsPath: r,
                    metaMessages: n,
                    shortMessage: o
                }) {
                    super(o, {
                        cause: e,
                        docsPath: r,
                        metaMessages: n || e ? .metaMessages
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.name = e.name, this.code = e instanceof i.RpcRequestError ? e.code : t ? ? -1
                }
            }
            t.RpcError = o;
            class a extends o {
                constructor(e, t) {
                    super(e, t), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t.data
                }
            }
            t.ProviderRpcError = a;
            class s extends o {
                constructor(e) {
                    super(e, {
                        code: s.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            }
            Object.defineProperty(s, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            }), t.ParseRpcError = s;
            class u extends o {
                constructor(e) {
                    super(e, {
                        code: u.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            }
            Object.defineProperty(u, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            }), t.InvalidRequestRpcError = u;
            class c extends o {
                constructor(e) {
                    super(e, {
                        code: c.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(c, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            }), t.MethodNotFoundRpcError = c;
            class l extends o {
                constructor(e) {
                    super(e, {
                        code: l.code,
                        shortMessage: "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            }
            Object.defineProperty(l, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            }), t.InvalidParamsRpcError = l;
            class d extends o {
                constructor(e) {
                    super(e, {
                        code: d.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            }
            Object.defineProperty(d, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            }), t.InternalRpcError = d;
            class f extends o {
                constructor(e) {
                    super(e, {
                        code: f.code,
                        shortMessage: "Missing or invalid parameters.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            }
            Object.defineProperty(f, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            }), t.InvalidInputRpcError = f;
            class h extends o {
                constructor(e) {
                    super(e, {
                        code: h.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(h, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            }), t.ResourceNotFoundRpcError = h;
            class p extends o {
                constructor(e) {
                    super(e, {
                        code: p.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            }
            Object.defineProperty(p, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            }), t.ResourceUnavailableRpcError = p;
            class m extends o {
                constructor(e) {
                    super(e, {
                        code: m.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            }
            Object.defineProperty(m, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            }), t.TransactionRejectedRpcError = m;
            class g extends o {
                constructor(e) {
                    super(e, {
                        code: g.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            }
            Object.defineProperty(g, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            }), t.MethodNotSupportedRpcError = g;
            class b extends o {
                constructor(e) {
                    super(e, {
                        code: b.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            }
            Object.defineProperty(b, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            }), t.LimitExceededRpcError = b;
            class y extends o {
                constructor(e) {
                    super(e, {
                        code: y.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            }
            Object.defineProperty(y, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            }), t.JsonRpcVersionUnsupportedError = y;
            class v extends a {
                constructor(e) {
                    super(e, {
                        code: v.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            }
            Object.defineProperty(v, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            }), t.UserRejectedRequestError = v;
            class w extends a {
                constructor(e) {
                    super(e, {
                        code: w.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            }
            Object.defineProperty(w, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            }), t.UnauthorizedProviderError = w;
            class E extends a {
                constructor(e) {
                    super(e, {
                        code: E.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            }
            Object.defineProperty(E, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            }), t.UnsupportedProviderMethodError = E;
            class A extends a {
                constructor(e) {
                    super(e, {
                        code: A.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            }
            Object.defineProperty(A, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            }), t.ProviderDisconnectedError = A;
            class P extends a {
                constructor(e) {
                    super(e, {
                        code: P.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            }
            Object.defineProperty(P, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            }), t.ChainDisconnectedError = P;
            class x extends a {
                constructor(e) {
                    super(e, {
                        code: x.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            }
            Object.defineProperty(x, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            }), t.SwitchChainError = x;
            class O extends o {
                constructor(e) {
                    super(e, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            }
            t.UnknownRpcError = O
        },
        88724: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.prettyPrint = void 0;
            let n = r(87948),
                i = r(53241),
                o = r(96477);

            function a(e) {
                let t = Object.entries(e).map(([e, t]) => void 0 === t || !1 === t ? null : [e, t]).filter(Boolean),
                    r = t.reduce((e, [t]) => Math.max(e, t.length), 0);
                return t.map(([e, t]) => `  ${`${e}:`.padEnd(r+1)}  ${t}`).join("\n")
            }
            t.prettyPrint = a;
            class s extends o.BaseError {
                constructor() {
                    super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            }
            t.FeeConflictError = s;
            class u extends o.BaseError {
                constructor({
                    v: e
                }) {
                    super(`Invalid \`v\` value "${e}". Expected 27 or 28.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidLegacyVError"
                    })
                }
            }
            t.InvalidLegacyVError = u;
            class c extends o.BaseError {
                constructor({
                    transaction: e
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", a(e), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            }
            t.InvalidSerializableTransactionError = c;
            class l extends o.BaseError {
                constructor({
                    serializedType: e
                }) {
                    super(`Serialized transaction type "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionType"
                    }), Object.defineProperty(this, "serializedType", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedType = e
                }
            }
            t.InvalidSerializedTransactionTypeError = l;
            class d extends o.BaseError {
                constructor({
                    attributes: e,
                    serializedTransaction: t,
                    type: r
                }) {
                    let n = Object.entries(e).map(([e, t]) => void 0 === t ? e : void 0).filter(Boolean);
                    super(`Invalid serialized transaction of type "${r}" was provided.`, {
                        metaMessages: [`Serialized Transaction: "${t}"`, n.length > 0 ? `Missing Attributes: ${n.join(", ")}` : ""].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionError"
                    }), Object.defineProperty(this, "serializedTransaction", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "type", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedTransaction = t, this.type = r
                }
            }
            t.InvalidSerializedTransactionError = d;
            class f extends o.BaseError {
                constructor({
                    storageKey: e
                }) {
                    super(`Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor((e.length-2)/2)} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStorageKeySizeError"
                    })
                }
            }
            t.InvalidStorageKeySizeError = f;
            class h extends o.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: s,
                    gas: u,
                    gasPrice: c,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: h,
                    value: p
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Request Arguments:", a({
                            chain: o && `${o?.name} (id: ${o?.id})`,
                            from: t ? .address,
                            to: h,
                            value: void 0 !== p && `${(0,n.formatEther)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                            data: s,
                            gas: u,
                            gasPrice: void 0 !== c && `${(0,i.formatGwei)(c)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,i.formatGwei)(d)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = e
                }
            }
            t.TransactionExecutionError = h;
            class p extends o.BaseError {
                constructor({
                    blockHash: e,
                    blockNumber: t,
                    blockTag: r,
                    hash: n,
                    index: i
                }) {
                    let o = "Transaction";
                    r && void 0 !== i && (o = `Transaction at block time "${r}" at index "${i}"`), e && void 0 !== i && (o = `Transaction at block hash "${e}" at index "${i}"`), t && void 0 !== i && (o = `Transaction at block number "${t}" at index "${i}"`), n && (o = `Transaction with hash "${n}"`), super(`${o} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            }
            t.TransactionNotFoundError = p;
            class m extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            }
            t.TransactionReceiptNotFoundError = m;
            class g extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Timed out while waiting for transaction with hash "${e}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            }
            t.WaitForTransactionReceiptTimeoutError = g
        },
        41348: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UrlRequiredError = void 0;
            let n = r(96477);
            class i extends n.BaseError {
                constructor() {
                    super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                        docsPath: "/docs/clients/intro"
                    })
                }
            }
            t.UrlRequiredError = i
        },
        89162: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getVersion = t.getUrl = t.getContractAddress = void 0;
            let n = r(74775);
            t.getContractAddress = e => e, t.getUrl = e => e, t.getVersion = () => `viem@${n.version}`
        },
        74775: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "1.21.3"
        },
        84496: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = t.weiUnits = t.gweiUnits = t.etherUnits = t.zeroAddress = t.multicall3Abi = t.webSocket = t.createWalletClient = t.createTransport = t.walletActions = t.testActions = t.publicActions = t.createTestClient = t.createPublicClient = t.http = t.fallback = t.custom = t.createClient = t.getContract = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.UnknownSignatureError = t.UnknownTypeError = t.SolidityProtectedKeywordError = t.InvalidStructSignatureError = t.InvalidSignatureError = t.InvalidParenthesisError = t.InvalidParameterError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.InvalidAbiItemError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = t.CircularReferenceError = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = void 0, t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiEventNotFoundError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingLengthMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = t.presignMessagePrefix = t.zeroHash = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = void 0, t.InvalidHexBooleanError = t.IntegerOutOfRangeError = t.InvalidBytesBooleanError = t.DataLengthTooShortError = t.DataLengthTooLongError = t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = t.UserRejectedRequestError = t.UnsupportedProviderMethodError = t.UnknownRpcError = t.UnauthorizedProviderError = t.TransactionRejectedRpcError = t.SwitchChainError = t.RpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.ProviderRpcError = t.ProviderDisconnectedError = t.ParseRpcError = t.MethodNotSupportedRpcError = t.MethodNotFoundRpcError = t.LimitExceededRpcError = t.JsonRpcVersionUnsupportedError = t.InvalidRequestRpcError = t.InvalidParamsRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.ChainDisconnectedError = t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = t.BlockNotFoundError = t.BaseError = t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiEncodingTypeError = t.InvalidAbiDecodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiFunctionSignatureNotFoundError = void 0, t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeDeployData = t.decodeAbiParameters = t.formatLog = t.formatBlock = t.defineBlock = t.namehash = t.labelhash = t.UrlRequiredError = t.SliceOffsetOutOfBoundsError = t.SizeExceedsPaddingSizeError = t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializedTransactionError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.InvalidAddressError = t.WebSocketRequestError = t.TimeoutError = t.RpcRequestError = t.HttpRequestError = t.FilterTypeNotSupportedError = t.UnknownNodeError = t.TransactionTypeNotSupportedError = t.TipAboveFeeCapError = t.NonceTooLowError = t.NonceTooHighError = t.NonceMaxValueError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = t.EstimateGasExecutionError = t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarUriResolutionError = t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = void 0, t.toHex = t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toBytes = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.verifyTypedData = t.verifyMessage = t.toRlp = t.hexToRlp = t.bytesToRlp = t.signatureToHex = t.compactSignatureToHex = t.signatureToCompactSignature = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hexToSignature = t.hexToCompactSignature = t.compactSignatureToSignature = t.hashTypedData = t.hashDomain = t.getTransactionType = t.getSerializedTransactionType = t.getCreateAddress = t.getCreate2Address = t.getContractAddress = t.getAbiItem = t.rpcTransactionType = t.formatTransactionRequest = t.defineTransactionRequest = t.formatTransactionReceipt = t.defineTransactionReceipt = t.transactionType = t.formatTransaction = t.defineTransaction = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = void 0, t.parseUnits = t.parseTransaction = t.parseGwei = t.parseEther = t.padHex = t.padBytes = t.pad = t.ripemd160 = t.sha256 = t.keccak256 = t.isHex = t.isHash = t.isBytes = t.isAddressEqual = t.isAddress = t.hashMessage = t.getFunctionSignature = t.getFunctionSelector = t.getEventSignature = t.getEventSelector = t.getContractError = t.getAddress = t.checksumAddress = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.formatUnits = t.formatGwei = t.formatEther = t.encodePacked = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.concatHex = t.concatBytes = t.concat = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = void 0, t.getTypesForEIP712Domain = t.domainSeparator = t.validateTypedData = t.trim = t.stringify = t.sliceHex = t.sliceBytes = t.slice = t.size = t.serializeTransaction = t.serializeAccessList = void 0;
            var n = r(40609);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return n.CircularReferenceError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidModifierError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParenthesisError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidSignatureError
                }
            }), Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return n.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownTypeError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownSignatureError
                }
            }), Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return n.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameters
                }
            });
            var i = r(49504);
            Object.defineProperty(t, "getContract", {
                enumerable: !0,
                get: function() {
                    return i.getContract
                }
            });
            var o = r(63604);
            Object.defineProperty(t, "createClient", {
                enumerable: !0,
                get: function() {
                    return o.createClient
                }
            });
            var a = r(16284);
            Object.defineProperty(t, "custom", {
                enumerable: !0,
                get: function() {
                    return a.custom
                }
            });
            var s = r(73104);
            Object.defineProperty(t, "fallback", {
                enumerable: !0,
                get: function() {
                    return s.fallback
                }
            });
            var u = r(98473);
            Object.defineProperty(t, "http", {
                enumerable: !0,
                get: function() {
                    return u.http
                }
            });
            var c = r(36519);
            Object.defineProperty(t, "createPublicClient", {
                enumerable: !0,
                get: function() {
                    return c.createPublicClient
                }
            });
            var l = r(15247);
            Object.defineProperty(t, "createTestClient", {
                enumerable: !0,
                get: function() {
                    return l.createTestClient
                }
            });
            var d = r(14817);
            Object.defineProperty(t, "publicActions", {
                enumerable: !0,
                get: function() {
                    return d.publicActions
                }
            });
            var f = r(96878);
            Object.defineProperty(t, "testActions", {
                enumerable: !0,
                get: function() {
                    return f.testActions
                }
            });
            var h = r(14832);
            Object.defineProperty(t, "walletActions", {
                enumerable: !0,
                get: function() {
                    return h.walletActions
                }
            });
            var p = r(94465);
            Object.defineProperty(t, "createTransport", {
                enumerable: !0,
                get: function() {
                    return p.createTransport
                }
            });
            var m = r(77358);
            Object.defineProperty(t, "createWalletClient", {
                enumerable: !0,
                get: function() {
                    return m.createWalletClient
                }
            });
            var g = r(11145);
            Object.defineProperty(t, "webSocket", {
                enumerable: !0,
                get: function() {
                    return g.webSocket
                }
            });
            var b = r(9344);
            Object.defineProperty(t, "multicall3Abi", {
                enumerable: !0,
                get: function() {
                    return b.multicall3Abi
                }
            });
            var y = r(67978);
            Object.defineProperty(t, "zeroAddress", {
                enumerable: !0,
                get: function() {
                    return y.zeroAddress
                }
            });
            var v = r(4865);
            Object.defineProperty(t, "etherUnits", {
                enumerable: !0,
                get: function() {
                    return v.etherUnits
                }
            }), Object.defineProperty(t, "gweiUnits", {
                enumerable: !0,
                get: function() {
                    return v.gweiUnits
                }
            }), Object.defineProperty(t, "weiUnits", {
                enumerable: !0,
                get: function() {
                    return v.weiUnits
                }
            });
            var w = r(89976);
            Object.defineProperty(t, "maxInt8", {
                enumerable: !0,
                get: function() {
                    return w.maxInt8
                }
            }), Object.defineProperty(t, "maxInt16", {
                enumerable: !0,
                get: function() {
                    return w.maxInt16
                }
            }), Object.defineProperty(t, "maxInt24", {
                enumerable: !0,
                get: function() {
                    return w.maxInt24
                }
            }), Object.defineProperty(t, "maxInt32", {
                enumerable: !0,
                get: function() {
                    return w.maxInt32
                }
            }), Object.defineProperty(t, "maxInt40", {
                enumerable: !0,
                get: function() {
                    return w.maxInt40
                }
            }), Object.defineProperty(t, "maxInt48", {
                enumerable: !0,
                get: function() {
                    return w.maxInt48
                }
            }), Object.defineProperty(t, "maxInt56", {
                enumerable: !0,
                get: function() {
                    return w.maxInt56
                }
            }), Object.defineProperty(t, "maxInt64", {
                enumerable: !0,
                get: function() {
                    return w.maxInt64
                }
            }), Object.defineProperty(t, "maxInt72", {
                enumerable: !0,
                get: function() {
                    return w.maxInt72
                }
            }), Object.defineProperty(t, "maxInt80", {
                enumerable: !0,
                get: function() {
                    return w.maxInt80
                }
            }), Object.defineProperty(t, "maxInt88", {
                enumerable: !0,
                get: function() {
                    return w.maxInt88
                }
            }), Object.defineProperty(t, "maxInt96", {
                enumerable: !0,
                get: function() {
                    return w.maxInt96
                }
            }), Object.defineProperty(t, "maxInt104", {
                enumerable: !0,
                get: function() {
                    return w.maxInt104
                }
            }), Object.defineProperty(t, "maxInt112", {
                enumerable: !0,
                get: function() {
                    return w.maxInt112
                }
            }), Object.defineProperty(t, "maxInt120", {
                enumerable: !0,
                get: function() {
                    return w.maxInt120
                }
            }), Object.defineProperty(t, "maxInt128", {
                enumerable: !0,
                get: function() {
                    return w.maxInt128
                }
            }), Object.defineProperty(t, "maxInt136", {
                enumerable: !0,
                get: function() {
                    return w.maxInt136
                }
            }), Object.defineProperty(t, "maxInt144", {
                enumerable: !0,
                get: function() {
                    return w.maxInt144
                }
            }), Object.defineProperty(t, "maxInt152", {
                enumerable: !0,
                get: function() {
                    return w.maxInt152
                }
            }), Object.defineProperty(t, "maxInt160", {
                enumerable: !0,
                get: function() {
                    return w.maxInt160
                }
            }), Object.defineProperty(t, "maxInt168", {
                enumerable: !0,
                get: function() {
                    return w.maxInt168
                }
            }), Object.defineProperty(t, "maxInt176", {
                enumerable: !0,
                get: function() {
                    return w.maxInt176
                }
            }), Object.defineProperty(t, "maxInt184", {
                enumerable: !0,
                get: function() {
                    return w.maxInt184
                }
            }), Object.defineProperty(t, "maxInt192", {
                enumerable: !0,
                get: function() {
                    return w.maxInt192
                }
            }), Object.defineProperty(t, "maxInt200", {
                enumerable: !0,
                get: function() {
                    return w.maxInt200
                }
            }), Object.defineProperty(t, "maxInt208", {
                enumerable: !0,
                get: function() {
                    return w.maxInt208
                }
            }), Object.defineProperty(t, "maxInt216", {
                enumerable: !0,
                get: function() {
                    return w.maxInt216
                }
            }), Object.defineProperty(t, "maxInt224", {
                enumerable: !0,
                get: function() {
                    return w.maxInt224
                }
            }), Object.defineProperty(t, "maxInt232", {
                enumerable: !0,
                get: function() {
                    return w.maxInt232
                }
            }), Object.defineProperty(t, "maxInt240", {
                enumerable: !0,
                get: function() {
                    return w.maxInt240
                }
            }), Object.defineProperty(t, "maxInt248", {
                enumerable: !0,
                get: function() {
                    return w.maxInt248
                }
            }), Object.defineProperty(t, "maxInt256", {
                enumerable: !0,
                get: function() {
                    return w.maxInt256
                }
            }), Object.defineProperty(t, "maxUint8", {
                enumerable: !0,
                get: function() {
                    return w.maxUint8
                }
            }), Object.defineProperty(t, "maxUint16", {
                enumerable: !0,
                get: function() {
                    return w.maxUint16
                }
            }), Object.defineProperty(t, "maxUint24", {
                enumerable: !0,
                get: function() {
                    return w.maxUint24
                }
            }), Object.defineProperty(t, "maxUint32", {
                enumerable: !0,
                get: function() {
                    return w.maxUint32
                }
            }), Object.defineProperty(t, "maxUint40", {
                enumerable: !0,
                get: function() {
                    return w.maxUint40
                }
            }), Object.defineProperty(t, "maxUint48", {
                enumerable: !0,
                get: function() {
                    return w.maxUint48
                }
            }), Object.defineProperty(t, "maxUint56", {
                enumerable: !0,
                get: function() {
                    return w.maxUint56
                }
            }), Object.defineProperty(t, "maxUint64", {
                enumerable: !0,
                get: function() {
                    return w.maxUint64
                }
            }), Object.defineProperty(t, "maxUint72", {
                enumerable: !0,
                get: function() {
                    return w.maxUint72
                }
            }), Object.defineProperty(t, "maxUint80", {
                enumerable: !0,
                get: function() {
                    return w.maxUint80
                }
            }), Object.defineProperty(t, "maxUint88", {
                enumerable: !0,
                get: function() {
                    return w.maxUint88
                }
            }), Object.defineProperty(t, "maxUint96", {
                enumerable: !0,
                get: function() {
                    return w.maxUint96
                }
            }), Object.defineProperty(t, "maxUint104", {
                enumerable: !0,
                get: function() {
                    return w.maxUint104
                }
            }), Object.defineProperty(t, "maxUint112", {
                enumerable: !0,
                get: function() {
                    return w.maxUint112
                }
            }), Object.defineProperty(t, "maxUint120", {
                enumerable: !0,
                get: function() {
                    return w.maxUint120
                }
            }), Object.defineProperty(t, "maxUint128", {
                enumerable: !0,
                get: function() {
                    return w.maxUint128
                }
            }), Object.defineProperty(t, "maxUint136", {
                enumerable: !0,
                get: function() {
                    return w.maxUint136
                }
            }), Object.defineProperty(t, "maxUint144", {
                enumerable: !0,
                get: function() {
                    return w.maxUint144
                }
            }), Object.defineProperty(t, "maxUint152", {
                enumerable: !0,
                get: function() {
                    return w.maxUint152
                }
            }), Object.defineProperty(t, "maxUint160", {
                enumerable: !0,
                get: function() {
                    return w.maxUint160
                }
            }), Object.defineProperty(t, "maxUint168", {
                enumerable: !0,
                get: function() {
                    return w.maxUint168
                }
            }), Object.defineProperty(t, "maxUint176", {
                enumerable: !0,
                get: function() {
                    return w.maxUint176
                }
            }), Object.defineProperty(t, "maxUint184", {
                enumerable: !0,
                get: function() {
                    return w.maxUint184
                }
            }), Object.defineProperty(t, "maxUint192", {
                enumerable: !0,
                get: function() {
                    return w.maxUint192
                }
            }), Object.defineProperty(t, "maxUint200", {
                enumerable: !0,
                get: function() {
                    return w.maxUint200
                }
            }), Object.defineProperty(t, "maxUint208", {
                enumerable: !0,
                get: function() {
                    return w.maxUint208
                }
            }), Object.defineProperty(t, "maxUint216", {
                enumerable: !0,
                get: function() {
                    return w.maxUint216
                }
            }), Object.defineProperty(t, "maxUint224", {
                enumerable: !0,
                get: function() {
                    return w.maxUint224
                }
            }), Object.defineProperty(t, "maxUint232", {
                enumerable: !0,
                get: function() {
                    return w.maxUint232
                }
            }), Object.defineProperty(t, "maxUint240", {
                enumerable: !0,
                get: function() {
                    return w.maxUint240
                }
            }), Object.defineProperty(t, "maxUint248", {
                enumerable: !0,
                get: function() {
                    return w.maxUint248
                }
            }), Object.defineProperty(t, "maxUint256", {
                enumerable: !0,
                get: function() {
                    return w.maxUint256
                }
            }), Object.defineProperty(t, "minInt8", {
                enumerable: !0,
                get: function() {
                    return w.minInt8
                }
            }), Object.defineProperty(t, "minInt16", {
                enumerable: !0,
                get: function() {
                    return w.minInt16
                }
            }), Object.defineProperty(t, "minInt24", {
                enumerable: !0,
                get: function() {
                    return w.minInt24
                }
            }), Object.defineProperty(t, "minInt32", {
                enumerable: !0,
                get: function() {
                    return w.minInt32
                }
            }), Object.defineProperty(t, "minInt40", {
                enumerable: !0,
                get: function() {
                    return w.minInt40
                }
            }), Object.defineProperty(t, "minInt48", {
                enumerable: !0,
                get: function() {
                    return w.minInt48
                }
            }), Object.defineProperty(t, "minInt56", {
                enumerable: !0,
                get: function() {
                    return w.minInt56
                }
            }), Object.defineProperty(t, "minInt64", {
                enumerable: !0,
                get: function() {
                    return w.minInt64
                }
            }), Object.defineProperty(t, "minInt72", {
                enumerable: !0,
                get: function() {
                    return w.minInt72
                }
            }), Object.defineProperty(t, "minInt80", {
                enumerable: !0,
                get: function() {
                    return w.minInt80
                }
            }), Object.defineProperty(t, "minInt88", {
                enumerable: !0,
                get: function() {
                    return w.minInt88
                }
            }), Object.defineProperty(t, "minInt96", {
                enumerable: !0,
                get: function() {
                    return w.minInt96
                }
            }), Object.defineProperty(t, "minInt104", {
                enumerable: !0,
                get: function() {
                    return w.minInt104
                }
            }), Object.defineProperty(t, "minInt112", {
                enumerable: !0,
                get: function() {
                    return w.minInt112
                }
            }), Object.defineProperty(t, "minInt120", {
                enumerable: !0,
                get: function() {
                    return w.minInt120
                }
            }), Object.defineProperty(t, "minInt128", {
                enumerable: !0,
                get: function() {
                    return w.minInt128
                }
            }), Object.defineProperty(t, "minInt136", {
                enumerable: !0,
                get: function() {
                    return w.minInt136
                }
            }), Object.defineProperty(t, "minInt144", {
                enumerable: !0,
                get: function() {
                    return w.minInt144
                }
            }), Object.defineProperty(t, "minInt152", {
                enumerable: !0,
                get: function() {
                    return w.minInt152
                }
            }), Object.defineProperty(t, "minInt160", {
                enumerable: !0,
                get: function() {
                    return w.minInt160
                }
            }), Object.defineProperty(t, "minInt168", {
                enumerable: !0,
                get: function() {
                    return w.minInt168
                }
            }), Object.defineProperty(t, "minInt176", {
                enumerable: !0,
                get: function() {
                    return w.minInt176
                }
            }), Object.defineProperty(t, "minInt184", {
                enumerable: !0,
                get: function() {
                    return w.minInt184
                }
            }), Object.defineProperty(t, "minInt192", {
                enumerable: !0,
                get: function() {
                    return w.minInt192
                }
            }), Object.defineProperty(t, "minInt200", {
                enumerable: !0,
                get: function() {
                    return w.minInt200
                }
            }), Object.defineProperty(t, "minInt208", {
                enumerable: !0,
                get: function() {
                    return w.minInt208
                }
            }), Object.defineProperty(t, "minInt216", {
                enumerable: !0,
                get: function() {
                    return w.minInt216
                }
            }), Object.defineProperty(t, "minInt224", {
                enumerable: !0,
                get: function() {
                    return w.minInt224
                }
            }), Object.defineProperty(t, "minInt232", {
                enumerable: !0,
                get: function() {
                    return w.minInt232
                }
            }), Object.defineProperty(t, "minInt240", {
                enumerable: !0,
                get: function() {
                    return w.minInt240
                }
            }), Object.defineProperty(t, "minInt248", {
                enumerable: !0,
                get: function() {
                    return w.minInt248
                }
            }), Object.defineProperty(t, "minInt256", {
                enumerable: !0,
                get: function() {
                    return w.minInt256
                }
            });
            var E = r(15716);
            Object.defineProperty(t, "zeroHash", {
                enumerable: !0,
                get: function() {
                    return E.zeroHash
                }
            });
            var A = r(14157);
            Object.defineProperty(t, "presignMessagePrefix", {
                enumerable: !0,
                get: function() {
                    return A.presignMessagePrefix
                }
            });
            var P = r(35362);
            Object.defineProperty(t, "AbiConstructorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiConstructorNotFoundError
                }
            }), Object.defineProperty(t, "AbiConstructorParamsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiConstructorParamsNotFoundError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeInvalidError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingDataSizeInvalidError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeTooSmallError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingDataSizeTooSmallError
                }
            }), Object.defineProperty(t, "AbiDecodingZeroDataError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingZeroDataError
                }
            }), Object.defineProperty(t, "AbiEncodingArrayLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingArrayLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingBytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingBytesSizeMismatchError
                }
            }), Object.defineProperty(t, "AbiErrorInputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorInputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventSignatureEmptyTopicsError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventSignatureEmptyTopicsError
                }
            }), Object.defineProperty(t, "AbiEventSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionOutputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionOutputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionSignatureNotFoundError
                }
            }), Object.defineProperty(t, "BytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.BytesSizeMismatchError
                }
            }), Object.defineProperty(t, "DecodeLogDataMismatch", {
                enumerable: !0,
                get: function() {
                    return P.DecodeLogDataMismatch
                }
            }), Object.defineProperty(t, "DecodeLogTopicsMismatch", {
                enumerable: !0,
                get: function() {
                    return P.DecodeLogTopicsMismatch
                }
            }), Object.defineProperty(t, "InvalidAbiDecodingTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidAbiDecodingTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiEncodingTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidAbiEncodingTypeError
                }
            }), Object.defineProperty(t, "InvalidArrayError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidArrayError
                }
            }), Object.defineProperty(t, "InvalidDefinitionTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidDefinitionTypeError
                }
            }), Object.defineProperty(t, "UnsupportedPackedAbiType", {
                enumerable: !0,
                get: function() {
                    return P.UnsupportedPackedAbiType
                }
            });
            var x = r(96477);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return x.BaseError
                }
            });
            var O = r(61611);
            Object.defineProperty(t, "BlockNotFoundError", {
                enumerable: !0,
                get: function() {
                    return O.BlockNotFoundError
                }
            });
            var _ = r(85374);
            Object.defineProperty(t, "CallExecutionError", {
                enumerable: !0,
                get: function() {
                    return _.CallExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionExecutionError", {
                enumerable: !0,
                get: function() {
                    return _.ContractFunctionExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionRevertedError", {
                enumerable: !0,
                get: function() {
                    return _.ContractFunctionRevertedError
                }
            }), Object.defineProperty(t, "ContractFunctionZeroDataError", {
                enumerable: !0,
                get: function() {
                    return _.ContractFunctionZeroDataError
                }
            }), Object.defineProperty(t, "RawContractError", {
                enumerable: !0,
                get: function() {
                    return _.RawContractError
                }
            });
            var I = r(93220);
            Object.defineProperty(t, "BaseFeeScalarError", {
                enumerable: !0,
                get: function() {
                    return I.BaseFeeScalarError
                }
            }), Object.defineProperty(t, "Eip1559FeesNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return I.Eip1559FeesNotSupportedError
                }
            }), Object.defineProperty(t, "MaxFeePerGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return I.MaxFeePerGasTooLowError
                }
            });
            var T = r(4808);
            Object.defineProperty(t, "ChainDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return T.ChainDisconnectedError
                }
            }), Object.defineProperty(t, "InternalRpcError", {
                enumerable: !0,
                get: function() {
                    return T.InternalRpcError
                }
            }), Object.defineProperty(t, "InvalidInputRpcError", {
                enumerable: !0,
                get: function() {
                    return T.InvalidInputRpcError
                }
            }), Object.defineProperty(t, "InvalidParamsRpcError", {
                enumerable: !0,
                get: function() {
                    return T.InvalidParamsRpcError
                }
            }), Object.defineProperty(t, "InvalidRequestRpcError", {
                enumerable: !0,
                get: function() {
                    return T.InvalidRequestRpcError
                }
            }), Object.defineProperty(t, "JsonRpcVersionUnsupportedError", {
                enumerable: !0,
                get: function() {
                    return T.JsonRpcVersionUnsupportedError
                }
            }), Object.defineProperty(t, "LimitExceededRpcError", {
                enumerable: !0,
                get: function() {
                    return T.LimitExceededRpcError
                }
            }), Object.defineProperty(t, "MethodNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return T.MethodNotFoundRpcError
                }
            }), Object.defineProperty(t, "MethodNotSupportedRpcError", {
                enumerable: !0,
                get: function() {
                    return T.MethodNotSupportedRpcError
                }
            }), Object.defineProperty(t, "ParseRpcError", {
                enumerable: !0,
                get: function() {
                    return T.ParseRpcError
                }
            }), Object.defineProperty(t, "ProviderDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return T.ProviderDisconnectedError
                }
            }), Object.defineProperty(t, "ProviderRpcError", {
                enumerable: !0,
                get: function() {
                    return T.ProviderRpcError
                }
            }), Object.defineProperty(t, "ResourceNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return T.ResourceNotFoundRpcError
                }
            }), Object.defineProperty(t, "ResourceUnavailableRpcError", {
                enumerable: !0,
                get: function() {
                    return T.ResourceUnavailableRpcError
                }
            }), Object.defineProperty(t, "RpcError", {
                enumerable: !0,
                get: function() {
                    return T.RpcError
                }
            }), Object.defineProperty(t, "SwitchChainError", {
                enumerable: !0,
                get: function() {
                    return T.SwitchChainError
                }
            }), Object.defineProperty(t, "TransactionRejectedRpcError", {
                enumerable: !0,
                get: function() {
                    return T.TransactionRejectedRpcError
                }
            }), Object.defineProperty(t, "UnauthorizedProviderError", {
                enumerable: !0,
                get: function() {
                    return T.UnauthorizedProviderError
                }
            }), Object.defineProperty(t, "UnknownRpcError", {
                enumerable: !0,
                get: function() {
                    return T.UnknownRpcError
                }
            }), Object.defineProperty(t, "UnsupportedProviderMethodError", {
                enumerable: !0,
                get: function() {
                    return T.UnsupportedProviderMethodError
                }
            }), Object.defineProperty(t, "UserRejectedRequestError", {
                enumerable: !0,
                get: function() {
                    return T.UserRejectedRequestError
                }
            });
            var C = r(2439);
            Object.defineProperty(t, "ChainDoesNotSupportContract", {
                enumerable: !0,
                get: function() {
                    return C.ChainDoesNotSupportContract
                }
            }), Object.defineProperty(t, "ChainMismatchError", {
                enumerable: !0,
                get: function() {
                    return C.ChainMismatchError
                }
            }), Object.defineProperty(t, "ChainNotFoundError", {
                enumerable: !0,
                get: function() {
                    return C.ChainNotFoundError
                }
            }), Object.defineProperty(t, "ClientChainNotConfiguredError", {
                enumerable: !0,
                get: function() {
                    return C.ClientChainNotConfiguredError
                }
            }), Object.defineProperty(t, "InvalidChainIdError", {
                enumerable: !0,
                get: function() {
                    return C.InvalidChainIdError
                }
            });
            var S = r(22962);
            Object.defineProperty(t, "DataLengthTooLongError", {
                enumerable: !0,
                get: function() {
                    return S.DataLengthTooLongError
                }
            }), Object.defineProperty(t, "DataLengthTooShortError", {
                enumerable: !0,
                get: function() {
                    return S.DataLengthTooShortError
                }
            }), Object.defineProperty(t, "InvalidBytesBooleanError", {
                enumerable: !0,
                get: function() {
                    return S.InvalidBytesBooleanError
                }
            }), Object.defineProperty(t, "IntegerOutOfRangeError", {
                enumerable: !0,
                get: function() {
                    return S.IntegerOutOfRangeError
                }
            }), Object.defineProperty(t, "InvalidHexBooleanError", {
                enumerable: !0,
                get: function() {
                    return S.InvalidHexBooleanError
                }
            }), Object.defineProperty(t, "InvalidHexValueError", {
                enumerable: !0,
                get: function() {
                    return S.InvalidHexValueError
                }
            }), Object.defineProperty(t, "OffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return S.OffsetOutOfBoundsError
                }
            }), Object.defineProperty(t, "SizeOverflowError", {
                enumerable: !0,
                get: function() {
                    return S.SizeOverflowError
                }
            });
            var k = r(65124);
            Object.defineProperty(t, "EnsAvatarUriResolutionError", {
                enumerable: !0,
                get: function() {
                    return k.EnsAvatarUriResolutionError
                }
            }), Object.defineProperty(t, "EnsAvatarInvalidNftUriError", {
                enumerable: !0,
                get: function() {
                    return k.EnsAvatarInvalidNftUriError
                }
            }), Object.defineProperty(t, "EnsAvatarUnsupportedNamespaceError", {
                enumerable: !0,
                get: function() {
                    return k.EnsAvatarUnsupportedNamespaceError
                }
            });
            var M = r(68834);
            Object.defineProperty(t, "EstimateGasExecutionError", {
                enumerable: !0,
                get: function() {
                    return M.EstimateGasExecutionError
                }
            });
            var B = r(8922);
            Object.defineProperty(t, "ExecutionRevertedError", {
                enumerable: !0,
                get: function() {
                    return B.ExecutionRevertedError
                }
            }), Object.defineProperty(t, "FeeCapTooHighError", {
                enumerable: !0,
                get: function() {
                    return B.FeeCapTooHighError
                }
            }), Object.defineProperty(t, "FeeCapTooLowError", {
                enumerable: !0,
                get: function() {
                    return B.FeeCapTooLowError
                }
            }), Object.defineProperty(t, "InsufficientFundsError", {
                enumerable: !0,
                get: function() {
                    return B.InsufficientFundsError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooHighError", {
                enumerable: !0,
                get: function() {
                    return B.IntrinsicGasTooHighError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return B.IntrinsicGasTooLowError
                }
            }), Object.defineProperty(t, "NonceMaxValueError", {
                enumerable: !0,
                get: function() {
                    return B.NonceMaxValueError
                }
            }), Object.defineProperty(t, "NonceTooHighError", {
                enumerable: !0,
                get: function() {
                    return B.NonceTooHighError
                }
            }), Object.defineProperty(t, "NonceTooLowError", {
                enumerable: !0,
                get: function() {
                    return B.NonceTooLowError
                }
            }), Object.defineProperty(t, "TipAboveFeeCapError", {
                enumerable: !0,
                get: function() {
                    return B.TipAboveFeeCapError
                }
            }), Object.defineProperty(t, "TransactionTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return B.TransactionTypeNotSupportedError
                }
            }), Object.defineProperty(t, "UnknownNodeError", {
                enumerable: !0,
                get: function() {
                    return B.UnknownNodeError
                }
            });
            var N = r(3973);
            Object.defineProperty(t, "FilterTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return N.FilterTypeNotSupportedError
                }
            });
            var R = r(62377);
            Object.defineProperty(t, "HttpRequestError", {
                enumerable: !0,
                get: function() {
                    return R.HttpRequestError
                }
            }), Object.defineProperty(t, "RpcRequestError", {
                enumerable: !0,
                get: function() {
                    return R.RpcRequestError
                }
            }), Object.defineProperty(t, "TimeoutError", {
                enumerable: !0,
                get: function() {
                    return R.TimeoutError
                }
            }), Object.defineProperty(t, "WebSocketRequestError", {
                enumerable: !0,
                get: function() {
                    return R.WebSocketRequestError
                }
            });
            var D = r(99913);
            Object.defineProperty(t, "InvalidAddressError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidAddressError
                }
            });
            var j = r(88724);
            Object.defineProperty(t, "FeeConflictError", {
                enumerable: !0,
                get: function() {
                    return j.FeeConflictError
                }
            }), Object.defineProperty(t, "InvalidLegacyVError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidLegacyVError
                }
            }), Object.defineProperty(t, "InvalidSerializableTransactionError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidSerializableTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidSerializedTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionTypeError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidSerializedTransactionTypeError
                }
            }), Object.defineProperty(t, "InvalidStorageKeySizeError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidStorageKeySizeError
                }
            }), Object.defineProperty(t, "TransactionExecutionError", {
                enumerable: !0,
                get: function() {
                    return j.TransactionExecutionError
                }
            }), Object.defineProperty(t, "TransactionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return j.TransactionNotFoundError
                }
            }), Object.defineProperty(t, "TransactionReceiptNotFoundError", {
                enumerable: !0,
                get: function() {
                    return j.TransactionReceiptNotFoundError
                }
            }), Object.defineProperty(t, "WaitForTransactionReceiptTimeoutError", {
                enumerable: !0,
                get: function() {
                    return j.WaitForTransactionReceiptTimeoutError
                }
            });
            var F = r(65566);
            Object.defineProperty(t, "SizeExceedsPaddingSizeError", {
                enumerable: !0,
                get: function() {
                    return F.SizeExceedsPaddingSizeError
                }
            }), Object.defineProperty(t, "SliceOffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return F.SliceOffsetOutOfBoundsError
                }
            });
            var U = r(41348);
            Object.defineProperty(t, "UrlRequiredError", {
                enumerable: !0,
                get: function() {
                    return U.UrlRequiredError
                }
            });
            var L = r(91176);
            Object.defineProperty(t, "labelhash", {
                enumerable: !0,
                get: function() {
                    return L.labelhash
                }
            });
            var q = r(38765);
            Object.defineProperty(t, "namehash", {
                enumerable: !0,
                get: function() {
                    return q.namehash
                }
            });
            var z = r(64023);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return z.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return z.formatBlock
                }
            });
            var $ = r(88489);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return $.formatLog
                }
            });
            var H = r(94460);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return H.decodeAbiParameters
                }
            });
            var G = r(75201);
            Object.defineProperty(t, "decodeDeployData", {
                enumerable: !0,
                get: function() {
                    return G.decodeDeployData
                }
            });
            var W = r(50422);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return W.decodeErrorResult
                }
            });
            var K = r(91314);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return K.decodeEventLog
                }
            });
            var Y = r(35690);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return Y.decodeFunctionData
                }
            });
            var V = r(43362);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return V.decodeFunctionResult
                }
            });
            var Q = r(9215);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return Q.encodeAbiParameters
                }
            });
            var J = r(52974);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return J.encodeDeployData
                }
            });
            var Z = r(72772);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return Z.encodeErrorResult
                }
            });
            var X = r(63406);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return X.encodeEventTopics
                }
            });
            var ee = r(389);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return ee.encodeFunctionData
                }
            });
            var et = r(79530);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return et.encodeFunctionResult
                }
            });
            var er = r(56292);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return er.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return er.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return er.transactionType
                }
            });
            var en = r(67743);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return en.defineTransactionReceipt
                }
            }), Object.defineProperty(t, "formatTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return en.formatTransactionReceipt
                }
            });
            var ei = r(23974);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ei.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ei.formatTransactionRequest
                }
            }), Object.defineProperty(t, "rpcTransactionType", {
                enumerable: !0,
                get: function() {
                    return ei.rpcTransactionType
                }
            });
            var eo = r(35171);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return eo.getAbiItem
                }
            });
            var ea = r(55088);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return ea.getContractAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return ea.getCreate2Address
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return ea.getCreateAddress
                }
            });
            var es = r(79118);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return es.getSerializedTransactionType
                }
            });
            var eu = r(38408);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return eu.getTransactionType
                }
            });
            var ec = r(44390);
            Object.defineProperty(t, "hashDomain", {
                enumerable: !0,
                get: function() {
                    return ec.hashDomain
                }
            }), Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return ec.hashTypedData
                }
            });
            var el = r(59705);
            Object.defineProperty(t, "compactSignatureToSignature", {
                enumerable: !0,
                get: function() {
                    return el.compactSignatureToSignature
                }
            });
            var ed = r(45763);
            Object.defineProperty(t, "hexToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return ed.hexToCompactSignature
                }
            });
            var ef = r(3980);
            Object.defineProperty(t, "hexToSignature", {
                enumerable: !0,
                get: function() {
                    return ef.hexToSignature
                }
            });
            var eh = r(56911);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return eh.recoverAddress
                }
            });
            var ep = r(10907);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return ep.recoverMessageAddress
                }
            });
            var em = r(65794);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return em.recoverPublicKey
                }
            });
            var eg = r(29204);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return eg.recoverTypedDataAddress
                }
            });
            var eb = r(26021);
            Object.defineProperty(t, "signatureToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return eb.signatureToCompactSignature
                }
            });
            var ey = r(97116);
            Object.defineProperty(t, "compactSignatureToHex", {
                enumerable: !0,
                get: function() {
                    return ey.compactSignatureToHex
                }
            });
            var ev = r(58810);
            Object.defineProperty(t, "signatureToHex", {
                enumerable: !0,
                get: function() {
                    return ev.signatureToHex
                }
            });
            var ew = r(44918);
            Object.defineProperty(t, "bytesToRlp", {
                enumerable: !0,
                get: function() {
                    return ew.bytesToRlp
                }
            }), Object.defineProperty(t, "hexToRlp", {
                enumerable: !0,
                get: function() {
                    return ew.hexToRlp
                }
            }), Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return ew.toRlp
                }
            });
            var eE = r(21574);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return eE.verifyMessage
                }
            });
            var eA = r(80704);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return eA.verifyTypedData
                }
            });
            var eP = r(93960);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eP.assertRequest
                }
            });
            var ex = r(96590);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionLegacy
                }
            });
            var eO = r(48638);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return eO.boolToBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return eO.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return eO.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return eO.stringToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return eO.toBytes
                }
            });
            var e_ = r(28510);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return e_.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return e_.bytesToHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return e_.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return e_.stringToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return e_.toHex
                }
            });
            var eI = r(94371);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return eI.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return eI.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return eI.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return eI.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return eI.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return eI.fromBytes
                }
            });
            var eT = r(98204);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return eT.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return eT.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return eT.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return eT.offchainLookupSignature
                }
            });
            var eC = r(65133);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return eC.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return eC.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return eC.concatHex
                }
            });
            var eS = r(33659);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return eS.assertCurrentChain
                }
            });
            var ek = r(6923);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return ek.defineChain
                }
            });
            var eM = r(22341);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return eM.extractChain
                }
            });
            var eB = r(48584);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return eB.getChainContractAddress
                }
            });
            var eN = r(15335);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return eN.encodePacked
                }
            });
            var eR = r(87948);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eR.formatEther
                }
            });
            var eD = r(53241);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return eD.formatGwei
                }
            });
            var ej = r(36070);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return ej.formatUnits
                }
            });
            var eF = r(67256);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return eF.fromHex
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return eF.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return eF.hexToBool
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return eF.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return eF.hexToString
                }
            });
            var eU = r(65064);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return eU.fromRlp
                }
            });
            var eL = r(66967);
            Object.defineProperty(t, "checksumAddress", {
                enumerable: !0,
                get: function() {
                    return eL.checksumAddress
                }
            }), Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return eL.getAddress
                }
            });
            var eq = r(77803);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return eq.getContractError
                }
            });
            var ez = r(87859);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return ez.getEventSelector
                }
            });
            var e$ = r(40115);
            Object.defineProperty(t, "getEventSignature", {
                enumerable: !0,
                get: function() {
                    return e$.getEventSignature
                }
            });
            var eH = r(40069);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return eH.getFunctionSelector
                }
            });
            var eG = r(26606);
            Object.defineProperty(t, "getFunctionSignature", {
                enumerable: !0,
                get: function() {
                    return eG.getFunctionSignature
                }
            });
            var eW = r(39256);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return eW.hashMessage
                }
            });
            var eK = r(92061);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return eK.isAddress
                }
            });
            var eY = r(88804);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return eY.isAddressEqual
                }
            });
            var eV = r(56335);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return eV.isBytes
                }
            });
            var eQ = r(8353);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return eQ.isHash
                }
            });
            var eJ = r(27239);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return eJ.isHex
                }
            });
            var eZ = r(15146);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return eZ.keccak256
                }
            });
            var eX = r(29695);
            Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return eX.sha256
                }
            });
            var e0 = r(79096);
            Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return e0.ripemd160
                }
            });
            var e1 = r(38402);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return e1.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return e1.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return e1.padHex
                }
            });
            var e2 = r(72850);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return e2.parseEther
                }
            });
            var e6 = r(55536);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return e6.parseGwei
                }
            });
            var e3 = r(71240);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return e3.parseTransaction
                }
            });
            var e5 = r(22066);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return e5.parseUnits
                }
            });
            var e8 = r(31733);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return e8.serializeAccessList
                }
            });
            var e4 = r(3375);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return e4.serializeTransaction
                }
            });
            var e9 = r(65945);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return e9.size
                }
            });
            var e7 = r(27186);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return e7.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return e7.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return e7.sliceHex
                }
            });
            var te = r(12835);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return te.stringify
                }
            });
            var tt = r(14772);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return tt.trim
                }
            });
            var tr = r(93901);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return tr.validateTypedData
                }
            }), Object.defineProperty(t, "domainSeparator", {
                enumerable: !0,
                get: function() {
                    return tr.domainSeparator
                }
            }), Object.defineProperty(t, "getTypesForEIP712Domain", {
                enumerable: !0,
                get: function() {
                    return tr.getTypesForEIP712Domain
                }
            })
        },
        94460: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeAbiParameters = void 0;
            let n = r(35362),
                i = r(66967),
                o = r(65945),
                a = r(27186),
                s = r(14772),
                u = r(67256),
                c = r(9215);

            function l(e) {
                let {
                    type: t
                } = e;
                if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
                if ("tuple" === t) return e.components ? .some(l);
                let r = (0, c.getArrayComponents)(e.type);
                return !!(r && l({ ...e,
                    type: r[1]
                }))
            }
            t.decodeAbiParameters = function(e, t) {
                if ("0x" === t && e.length > 0) throw new n.AbiDecodingZeroDataError;
                if ((0, o.size)(t) && 32 > (0, o.size)(t)) throw new n.AbiDecodingDataSizeTooSmallError({
                    data: t,
                    params: e,
                    size: (0, o.size)(t)
                });
                return function({
                    data: e,
                    params: t
                }) {
                    let r = [],
                        d = 0;
                    for (let f = 0; f < t.length; f++) {
                        if (d >= (0, o.size)(e)) throw new n.AbiDecodingDataSizeTooSmallError({
                            data: e,
                            params: t,
                            size: (0, o.size)(e)
                        });
                        let {
                            consumed: h,
                            value: p
                        } = function e({
                            data: t,
                            param: r,
                            position: o
                        }) {
                            let d = (0, c.getArrayComponents)(r.type);
                            if (d) {
                                let [n, i] = d;
                                return function(t, {
                                    param: r,
                                    length: n,
                                    position: i
                                }) {
                                    if (!n) {
                                        let n = (0, u.hexToNumber)((0, a.slice)(t, i, i + 32, {
                                                strict: !0
                                            })),
                                            o = (0, u.hexToNumber)((0, a.slice)(t, n, n + 32, {
                                                strict: !0
                                            })),
                                            s = 0,
                                            c = [];
                                        for (let i = 0; i < o; ++i) {
                                            let i = e({
                                                data: (0, a.slice)(t, n + 32),
                                                param: r,
                                                position: s
                                            });
                                            s += i.consumed, c.push(i.value)
                                        }
                                        return {
                                            value: c,
                                            consumed: 32
                                        }
                                    }
                                    if (l(r)) {
                                        let o = (0, c.getArrayComponents)(r.type),
                                            s = !o ? .[0],
                                            l = 0,
                                            d = [];
                                        for (let o = 0; o < n; ++o) {
                                            let n = (0, u.hexToNumber)((0, a.slice)(t, i, i + 32, {
                                                    strict: !0
                                                })),
                                                c = e({
                                                    data: (0, a.slice)(t, n),
                                                    param: r,
                                                    position: s ? l : 32 * o
                                                });
                                            l += c.consumed, d.push(c.value)
                                        }
                                        return {
                                            value: d,
                                            consumed: 32
                                        }
                                    }
                                    let o = 0,
                                        s = [];
                                    for (let a = 0; a < n; ++a) {
                                        let n = e({
                                            data: t,
                                            param: r,
                                            position: i + o
                                        });
                                        o += n.consumed, s.push(n.value)
                                    }
                                    return {
                                        value: s,
                                        consumed: o
                                    }
                                }(t, {
                                    length: n,
                                    param: { ...r,
                                        type: i
                                    },
                                    position: o
                                })
                            }
                            if ("tuple" === r.type) return function(t, {
                                param: r,
                                position: n
                            }) {
                                let i = 0 === r.components.length || r.components.some(({
                                        name: e
                                    }) => !e),
                                    o = i ? [] : {},
                                    s = 0;
                                if (l(r)) {
                                    let c = (0, u.hexToNumber)((0, a.slice)(t, n, n + 32, {
                                        strict: !0
                                    }));
                                    for (let n = 0; n < r.components.length; ++n) {
                                        let u = r.components[n],
                                            l = e({
                                                data: (0, a.slice)(t, c),
                                                param: u,
                                                position: s
                                            });
                                        s += l.consumed, o[i ? n : u ? .name] = l.value
                                    }
                                    return {
                                        consumed: 32,
                                        value: o
                                    }
                                }
                                for (let a = 0; a < r.components.length; ++a) {
                                    let u = r.components[a],
                                        c = e({
                                            data: t,
                                            param: u,
                                            position: n + s
                                        });
                                    s += c.consumed, o[i ? a : u ? .name] = c.value
                                }
                                return {
                                    consumed: s,
                                    value: o
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            if ("string" === r.type) return function(e, {
                                position: t
                            }) {
                                let r = (0, u.hexToNumber)((0, a.slice)(e, t, t + 32, {
                                        strict: !0
                                    })),
                                    n = (0, u.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                        strict: !0
                                    }));
                                return 0 === n ? {
                                    consumed: 32,
                                    value: ""
                                } : {
                                    consumed: 32,
                                    value: (0, u.hexToString)((0, s.trim)((0, a.slice)(e, r + 32, r + 32 + n, {
                                        strict: !0
                                    })))
                                }
                            }(t, {
                                position: o
                            });
                            if (r.type.startsWith("bytes")) return function(e, {
                                param: t,
                                position: r
                            }) {
                                let [n, i] = t.type.split("bytes");
                                if (!i) {
                                    let t = (0, u.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                            strict: !0
                                        })),
                                        n = (0, u.hexToNumber)((0, a.slice)(e, t, t + 32, {
                                            strict: !0
                                        }));
                                    return 0 === n ? {
                                        consumed: 32,
                                        value: "0x"
                                    } : {
                                        consumed: 32,
                                        value: (0, a.slice)(e, t + 32, t + 32 + n, {
                                            strict: !0
                                        })
                                    }
                                }
                                return {
                                    consumed: 32,
                                    value: (0, a.slice)(e, r, r + parseInt(i), {
                                        strict: !0
                                    })
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            let f = (0, a.slice)(t, o, o + 32, {
                                strict: !0
                            });
                            if (r.type.startsWith("uint") || r.type.startsWith("int")) return function(e, {
                                param: t
                            }) {
                                let r = t.type.startsWith("int");
                                return {
                                    consumed: 32,
                                    value: parseInt(t.type.split("int")[1] || "256") > 48 ? (0, u.hexToBigInt)(e, {
                                        signed: r
                                    }) : (0, u.hexToNumber)(e, {
                                        signed: r
                                    })
                                }
                            }(f, {
                                param: r
                            });
                            if ("address" === r.type) return {
                                consumed: 32,
                                value: (0, i.checksumAddress)((0, a.slice)(f, -20))
                            };
                            if ("bool" === r.type) return {
                                consumed: 32,
                                value: (0, u.hexToBool)(f)
                            };
                            throw new n.InvalidAbiDecodingTypeError(r.type, {
                                docsPath: "/docs/contract/decodeAbiParameters"
                            })
                        }({
                            data: e,
                            param: t[f],
                            position: d
                        });
                        r.push(p), d += h
                    }
                    return r
                }({
                    data: t,
                    params: e
                })
            }
        },
        75201: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeDeployData = void 0;
            let n = r(35362),
                i = r(94460),
                o = "/docs/contract/decodeDeployData";
            t.decodeDeployData = function({
                abi: e,
                bytecode: t,
                data: r
            }) {
                if (r === t) return {
                    bytecode: t
                };
                let a = e.find(e => "type" in e && "constructor" === e.type);
                if (!a) throw new n.AbiConstructorNotFoundError({
                    docsPath: o
                });
                if (!("inputs" in a) || !a.inputs || 0 === a.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: o
                });
                return {
                    args: (0, i.decodeAbiParameters)(a.inputs, `0x${r.replace(t,"")}`),
                    bytecode: t
                }
            }
        },
        50422: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeErrorResult = void 0;
            let n = r(85492),
                i = r(35362),
                o = r(27186),
                a = r(40069),
                s = r(94460),
                u = r(37300);
            t.decodeErrorResult = function({
                abi: e,
                data: t
            }) {
                let r = (0, o.slice)(t, 0, 4);
                if ("0x" === r) throw new i.AbiDecodingZeroDataError;
                let c = [...e || [], n.solidityError, n.solidityPanic].find(e => "error" === e.type && r === (0, a.getFunctionSelector)((0, u.formatAbiItem)(e)));
                if (!c) throw new i.AbiErrorSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: c,
                    args: "inputs" in c && c.inputs && c.inputs.length > 0 ? (0, s.decodeAbiParameters)(c.inputs, (0, o.slice)(t, 4)) : void 0,
                    errorName: c.name
                }
            }
        },
        91314: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeEventLog = void 0;
            let n = r(35362),
                i = r(87859),
                o = r(94460),
                a = r(37300),
                s = "/docs/contract/decodeEventLog";
            t.decodeEventLog = function({
                abi: e,
                data: t,
                strict: r,
                topics: u
            }) {
                let c = r ? ? !0,
                    [l, ...d] = u;
                if (!l) throw new n.AbiEventSignatureEmptyTopicsError({
                    docsPath: s
                });
                let f = e.find(e => "event" === e.type && l === (0, i.getEventSelector)((0, a.formatAbiItem)(e)));
                if (!(f && "name" in f) || "event" !== f.type) throw new n.AbiEventSignatureNotFoundError(l, {
                    docsPath: s
                });
                let {
                    name: h,
                    inputs: p
                } = f, m = p ? .some(e => !("name" in e && e.name)), g = m ? [] : {}, b = p.filter(e => "indexed" in e && e.indexed);
                for (let e = 0; e < b.length; e++) {
                    let t = b[e],
                        r = d[e];
                    if (!r) throw new n.DecodeLogTopicsMismatch({
                        abiItem: f,
                        param: t
                    });
                    g[t.name || e] = function({
                        param: e,
                        value: t
                    }) {
                        return "string" === e.type || "bytes" === e.type || "tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/) ? t : ((0, o.decodeAbiParameters)([e], t) || [])[0]
                    }({
                        param: t,
                        value: r
                    })
                }
                let y = p.filter(e => !("indexed" in e && e.indexed));
                if (y.length > 0) {
                    if (t && "0x" !== t) try {
                        let e = (0, o.decodeAbiParameters)(y, t);
                        if (e) {
                            if (m) g = [...g, ...e];
                            else
                                for (let t = 0; t < y.length; t++) g[y[t].name] = e[t]
                        }
                    } catch (e) {
                        if (c) {
                            if (e instanceof n.AbiDecodingDataSizeTooSmallError) throw new n.DecodeLogDataMismatch({
                                abiItem: f,
                                data: e.data,
                                params: e.params,
                                size: e.size
                            });
                            throw e
                        }
                    } else if (c) throw new n.DecodeLogDataMismatch({
                        abiItem: f,
                        data: "0x",
                        params: y,
                        size: 0
                    })
                }
                return {
                    eventName: h,
                    args: Object.values(g).length > 0 ? g : void 0
                }
            }
        },
        35690: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionData = void 0;
            let n = r(35362),
                i = r(27186),
                o = r(40069),
                a = r(94460),
                s = r(37300);
            t.decodeFunctionData = function({
                abi: e,
                data: t
            }) {
                let r = (0, i.slice)(t, 0, 4),
                    u = e.find(e => "function" === e.type && r === (0, o.getFunctionSelector)((0, s.formatAbiItem)(e)));
                if (!u) throw new n.AbiFunctionSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeFunctionData"
                });
                return {
                    functionName: u.name,
                    args: "inputs" in u && u.inputs && u.inputs.length > 0 ? (0, a.decodeAbiParameters)(u.inputs, (0, i.slice)(t, 4)) : void 0
                }
            }
        },
        43362: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionResult = void 0;
            let n = r(35362),
                i = r(94460),
                o = r(35171),
                a = "/docs/contract/decodeFunctionResult";
            t.decodeFunctionResult = function({
                abi: e,
                args: t,
                functionName: r,
                data: s
            }) {
                let u = e[0];
                if (r && !(u = (0, o.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: a
                });
                if ("function" !== u.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: a
                });
                if (!u.outputs) throw new n.AbiFunctionOutputsNotFoundError(u.name, {
                    docsPath: a
                });
                let c = (0, i.decodeAbiParameters)(u.outputs, s);
                return c && c.length > 1 ? c : c && 1 === c.length ? c[0] : void 0
            }
        },
        9215: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getArrayComponents = t.encodeAbiParameters = void 0;
            let n = r(35362),
                i = r(99913),
                o = r(92061),
                a = r(65133),
                s = r(38402),
                u = r(65945),
                c = r(27186),
                l = r(28510);

            function d(e) {
                let t = 0;
                for (let r = 0; r < e.length; r++) {
                    let {
                        dynamic: n,
                        encoded: i
                    } = e[r];
                    n ? t += 32 : t += (0, u.size)(i)
                }
                let r = [],
                    n = [],
                    i = 0;
                for (let o = 0; o < e.length; o++) {
                    let {
                        dynamic: a,
                        encoded: s
                    } = e[o];
                    a ? (r.push((0, l.numberToHex)(t + i, {
                        size: 32
                    })), n.push(s), i += (0, u.size)(s)) : r.push(s)
                }
                return (0, a.concat)([...r, ...n])
            }

            function f(e) {
                let t = e.match(/^(.*)\[(\d+)?\]$/);
                return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0
            }
            t.encodeAbiParameters = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = d(function({
                    params: e,
                    values: t
                }) {
                    let r = [];
                    for (let h = 0; h < e.length; h++) r.push(function e({
                        param: t,
                        value: r
                    }) {
                        let h = f(t.type);
                        if (h) {
                            let [i, o] = h;
                            return function(t, {
                                length: r,
                                param: i
                            }) {
                                let o = null === r;
                                if (!Array.isArray(t)) throw new n.InvalidArrayError(t);
                                if (!o && t.length !== r) throw new n.AbiEncodingArrayLengthMismatchError({
                                    expectedLength: r,
                                    givenLength: t.length,
                                    type: `${i.type}[${r}]`
                                });
                                let s = !1,
                                    u = [];
                                for (let r = 0; r < t.length; r++) {
                                    let n = e({
                                        param: i,
                                        value: t[r]
                                    });
                                    n.dynamic && (s = !0), u.push(n)
                                }
                                if (o || s) {
                                    let e = d(u);
                                    if (o) {
                                        let t = (0, l.numberToHex)(u.length, {
                                            size: 32
                                        });
                                        return {
                                            dynamic: !0,
                                            encoded: u.length > 0 ? (0, a.concat)([t, e]) : t
                                        }
                                    }
                                    if (s) return {
                                        dynamic: !0,
                                        encoded: e
                                    }
                                }
                                return {
                                    dynamic: !1,
                                    encoded: (0, a.concat)(u.map(({
                                        encoded: e
                                    }) => e))
                                }
                            }(r, {
                                length: i,
                                param: { ...t,
                                    type: o
                                }
                            })
                        }
                        if ("tuple" === t.type) return function(t, {
                            param: r
                        }) {
                            let n = !1,
                                i = [];
                            for (let o = 0; o < r.components.length; o++) {
                                let a = r.components[o],
                                    s = Array.isArray(t) ? o : a.name,
                                    u = e({
                                        param: a,
                                        value: t[s]
                                    });
                                i.push(u), u.dynamic && (n = !0)
                            }
                            return {
                                dynamic: n,
                                encoded: n ? d(i) : (0, a.concat)(i.map(({
                                    encoded: e
                                }) => e))
                            }
                        }(r, {
                            param: t
                        });
                        if ("address" === t.type) return function(e) {
                            if (!(0, o.isAddress)(e)) throw new i.InvalidAddressError({
                                address: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, s.padHex)(e.toLowerCase())
                            }
                        }(r);
                        if ("bool" === t.type) return {
                            dynamic: !1,
                            encoded: (0, s.padHex)((0, l.boolToHex)(r))
                        };
                        if (t.type.startsWith("uint") || t.type.startsWith("int")) return function(e, {
                            signed: t
                        }) {
                            return {
                                dynamic: !1,
                                encoded: (0, l.numberToHex)(e, {
                                    size: 32,
                                    signed: t
                                })
                            }
                        }(r, {
                            signed: t.type.startsWith("int")
                        });
                        if (t.type.startsWith("bytes")) return function(e, {
                            param: t
                        }) {
                            let [, r] = t.type.split("bytes"), i = (0, u.size)(e);
                            if (!r) {
                                let t = e;
                                return i % 32 != 0 && (t = (0, s.padHex)(t, {
                                    dir: "right",
                                    size: 32 * Math.ceil((e.length - 2) / 2 / 32)
                                })), {
                                    dynamic: !0,
                                    encoded: (0, a.concat)([(0, s.padHex)((0, l.numberToHex)(i, {
                                        size: 32
                                    })), t])
                                }
                            }
                            if (i !== parseInt(r)) throw new n.AbiEncodingBytesSizeMismatchError({
                                expectedSize: parseInt(r),
                                value: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, s.padHex)(e, {
                                    dir: "right"
                                })
                            }
                        }(r, {
                            param: t
                        });
                        if ("string" === t.type) return function(e) {
                            let t = (0, l.stringToHex)(e),
                                r = Math.ceil((0, u.size)(t) / 32),
                                n = [];
                            for (let e = 0; e < r; e++) n.push((0, s.padHex)((0, c.slice)(t, 32 * e, (e + 1) * 32), {
                                dir: "right"
                            }));
                            return {
                                dynamic: !0,
                                encoded: (0, a.concat)([(0, s.padHex)((0, l.numberToHex)((0, u.size)(t), {
                                    size: 32
                                })), ...n])
                            }
                        }(r);
                        throw new n.InvalidAbiEncodingTypeError(t.type, {
                            docsPath: "/docs/contract/encodeAbiParameters"
                        })
                    }({
                        param: e[h],
                        value: t[h]
                    }));
                    return r
                }({
                    params: e,
                    values: t
                }));
                return 0 === r.length ? "0x" : r
            }, t.getArrayComponents = f
        },
        52974: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeDeployData = void 0;
            let n = r(35362),
                i = r(65133),
                o = r(9215),
                a = "/docs/contract/encodeDeployData";
            t.encodeDeployData = function({
                abi: e,
                args: t,
                bytecode: r
            }) {
                if (!t || 0 === t.length) return r;
                let s = e.find(e => "type" in e && "constructor" === e.type);
                if (!s) throw new n.AbiConstructorNotFoundError({
                    docsPath: a
                });
                if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: a
                });
                let u = (0, o.encodeAbiParameters)(s.inputs, t);
                return (0, i.concatHex)([r, u])
            }
        },
        72772: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeErrorResult = void 0;
            let n = r(35362),
                i = r(65133),
                o = r(40069),
                a = r(9215),
                s = r(37300),
                u = r(35171),
                c = "/docs/contract/encodeErrorResult";
            t.encodeErrorResult = function({
                abi: e,
                errorName: t,
                args: r
            }) {
                let l = e[0];
                if (t && !(l = (0, u.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiErrorNotFoundError(t, {
                    docsPath: c
                });
                if ("error" !== l.type) throw new n.AbiErrorNotFoundError(void 0, {
                    docsPath: c
                });
                let d = (0, s.formatAbiItem)(l),
                    f = (0, o.getFunctionSelector)(d),
                    h = "0x";
                if (r && r.length > 0) {
                    if (!l.inputs) throw new n.AbiErrorInputsNotFoundError(l.name, {
                        docsPath: c
                    });
                    h = (0, a.encodeAbiParameters)(l.inputs, r)
                }
                return (0, i.concatHex)([f, h])
            }
        },
        63406: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeEventTopics = void 0;
            let n = r(35362),
                i = r(3973),
                o = r(48638),
                a = r(87859),
                s = r(15146),
                u = r(9215),
                c = r(37300),
                l = r(35171);

            function d({
                param: e,
                value: t
            }) {
                if ("string" === e.type || "bytes" === e.type) return (0, s.keccak256)((0, o.toBytes)(t));
                if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/)) throw new i.FilterTypeNotSupportedError(e.type);
                return (0, u.encodeAbiParameters)([e], [t])
            }
            t.encodeEventTopics = function({
                abi: e,
                eventName: t,
                args: r
            }) {
                let i = e[0];
                if (t && !(i = (0, l.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiEventNotFoundError(t, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== i.type) throw new n.AbiEventNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                let o = (0, c.formatAbiItem)(i),
                    s = (0, a.getEventSelector)(o),
                    u = [];
                if (r && "inputs" in i) {
                    let e = i.inputs ? .filter(e => "indexed" in e && e.indexed),
                        t = Array.isArray(r) ? r : Object.values(r).length > 0 ? e ? .map(e => r[e.name]) ? ? [] : [];
                    t.length > 0 && (u = e ? .map((e, r) => Array.isArray(t[r]) ? t[r].map((n, i) => d({
                        param: e,
                        value: t[r][i]
                    })) : t[r] ? d({
                        param: e,
                        value: t[r]
                    }) : null) ? ? [])
                }
                return [s, ...u]
            }
        },
        389: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionData = void 0;
            let n = r(35362),
                i = r(65133),
                o = r(40069),
                a = r(9215),
                s = r(37300),
                u = r(35171);
            t.encodeFunctionData = function({
                abi: e,
                args: t,
                functionName: r
            }) {
                let c = e[0];
                if (r && !(c = (0, u.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== c.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                let l = (0, s.formatAbiItem)(c),
                    d = (0, o.getFunctionSelector)(l),
                    f = "inputs" in c && c.inputs ? (0, a.encodeAbiParameters)(c.inputs, t ? ? []) : void 0;
                return (0, i.concatHex)([d, f ? ? "0x"])
            }
        },
        79530: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionResult = void 0;
            let n = r(35362),
                i = r(9215),
                o = r(35171);
            t.encodeFunctionResult = function({
                abi: e,
                functionName: t,
                result: r
            }) {
                let a = e[0];
                if (t && !(a = (0, o.getAbiItem)({
                        abi: e,
                        name: t
                    }))) throw new n.AbiFunctionNotFoundError(t, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if ("function" !== a.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if (!a.outputs) throw new n.AbiFunctionOutputsNotFoundError(a.name, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                let s = Array.isArray(r) ? r : [r];
                return 0 !== a.outputs.length || s[0] || (s = []), (0, i.encodeAbiParameters)(a.outputs, s)
            }
        },
        15335: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodePacked = void 0;
            let n = r(35362),
                i = r(99913),
                o = r(92061),
                a = r(65133),
                s = r(38402),
                u = r(28510),
                c = r(94088);
            t.encodePacked = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = [];
                for (let l = 0; l < e.length; l++) {
                    let d = e[l],
                        f = t[l];
                    r.push(function e(t, r, l = !1) {
                        if ("address" === t) {
                            if (!(0, o.isAddress)(r)) throw new i.InvalidAddressError({
                                address: r
                            });
                            return (0, s.pad)(r.toLowerCase(), {
                                size: l ? 32 : null
                            })
                        }
                        if ("string" === t) return (0, u.stringToHex)(r);
                        if ("bytes" === t) return r;
                        if ("bool" === t) return (0, s.pad)((0, u.boolToHex)(r), {
                            size: l ? 32 : 1
                        });
                        let d = t.match(c.integerRegex);
                        if (d) {
                            let [e, t, n = "256"] = d, i = parseInt(n) / 8;
                            return (0, u.numberToHex)(r, {
                                size: l ? 32 : i,
                                signed: "int" === t
                            })
                        }
                        let f = t.match(c.bytesRegex);
                        if (f) {
                            let [e, t] = f;
                            if (parseInt(t) !== (r.length - 2) / 2) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(t),
                                givenSize: (r.length - 2) / 2
                            });
                            return (0, s.pad)(r, {
                                dir: "right",
                                size: l ? 32 : null
                            })
                        }
                        let h = t.match(c.arrayRegex);
                        if (h && Array.isArray(r)) {
                            let [t, n] = h, i = [];
                            for (let t = 0; t < r.length; t++) i.push(e(n, r[t], !0));
                            return 0 === i.length ? "0x" : (0, a.concatHex)(i)
                        }
                        throw new n.UnsupportedPackedAbiType(t)
                    }(d, f))
                }
                return (0, a.concatHex)(r)
            }
        },
        37300: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParams = t.formatAbiItem = void 0;
            let n = r(35362);

            function i(e, {
                includeName: t = !1
            } = {}) {
                return e ? e.map(e => (function(e, {
                    includeName: t
                }) {
                    return e.type.startsWith("tuple") ? `(${i(e.components,{includeName:t})})${e.type.slice(5)}` : e.type + (t && e.name ? ` ${e.name}` : "")
                })(e, {
                    includeName: t
                })).join(t ? ", " : ",") : ""
            }
            t.formatAbiItem = function(e, {
                includeName: t = !1
            } = {}) {
                if ("function" !== e.type && "event" !== e.type && "error" !== e.type) throw new n.InvalidDefinitionTypeError(e.type);
                return `${e.name}(${i(e.inputs,{includeName:t})})`
            }, t.formatAbiParams = i
        },
        3242: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItemWithArgs = void 0;
            let n = r(12835);
            t.formatAbiItemWithArgs = function({
                abiItem: e,
                args: t,
                includeFunctionName: r = !0,
                includeName: i = !1
            }) {
                if ("name" in e && "inputs" in e && e.inputs) return `${r?e.name:""}(${e.inputs.map((e,r)=>`${i&&e.name?`${e.name}: `:""}${"object"==typeof t[r]?(0,n.stringify)(t[r]):t[r]}`).join(", ")})`
            }
        },
        35171: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAmbiguousTypes = t.isArgOfType = t.getAbiItem = void 0;
            let n = r(35362),
                i = r(27239),
                o = r(87859),
                a = r(40069),
                s = r(92061);

            function u(e, t) {
                let r = typeof e,
                    n = t.type;
                switch (n) {
                    case "address":
                        return (0, s.isAddress)(e);
                    case "bool":
                        return "boolean" === r;
                    case "function":
                    case "string":
                        return "string" === r;
                    default:
                        if ("tuple" === n && "components" in t) return Object.values(t.components).every((t, r) => u(Object.values(e)[r], t));
                        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(n)) return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(n)) return "string" === r || e instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(n)) return Array.isArray(e) && e.every(e => u(e, { ...t,
                            type: n.replace(/(\[[0-9]{0,}\])$/, "")
                        }));
                        return !1
                }
            }

            function c(e, t, r) {
                for (let n in e) {
                    let i = e[n],
                        o = t[n];
                    if ("tuple" === i.type && "tuple" === o.type && "components" in i && "components" in o) return c(i.components, o.components, r[n]);
                    let a = [i.type, o.type];
                    if (a.includes("address") && a.includes("bytes20") || (a.includes("address") && a.includes("string") || a.includes("address") && a.includes("bytes")) && (0, s.isAddress)(r[n])) return a
                }
            }
            t.getAbiItem = function({
                abi: e,
                args: t = [],
                name: r
            }) {
                let s;
                let l = (0, i.isHex)(r, {
                        strict: !1
                    }),
                    d = e.filter(e => l ? "function" === e.type ? (0, a.getFunctionSelector)(e) === r : "event" === e.type && (0, o.getEventSelector)(e) === r : "name" in e && e.name === r);
                if (0 !== d.length) {
                    if (1 === d.length) return d[0];
                    for (let e of d)
                        if ("inputs" in e) {
                            if (!t || 0 === t.length) {
                                if (!e.inputs || 0 === e.inputs.length) return e;
                                continue
                            }
                            if (e.inputs && 0 !== e.inputs.length && e.inputs.length === t.length && t.every((t, r) => {
                                    let n = "inputs" in e && e.inputs[r];
                                    return !!n && u(t, n)
                                })) {
                                if (s && "inputs" in s && s.inputs) {
                                    let r = c(e.inputs, s.inputs, t);
                                    if (r) throw new n.AbiItemAmbiguityError({
                                        abiItem: e,
                                        type: r[0]
                                    }, {
                                        abiItem: s,
                                        type: r[1]
                                    })
                                }
                                s = e
                            }
                        }
                    return s || d[0]
                }
            }, t.isArgOfType = u, t.getAmbiguousTypes = c
        },
        8708: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = t.parseAccount = void 0;
            var n = r(5974);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return n.parseAccount
                }
            });
            var i = r(20461);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return i.publicKeyToAddress
                }
            })
        },
        66967: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddress = t.checksumAddress = void 0;
            let n = r(99913),
                i = r(48638),
                o = r(15146),
                a = r(92061);

            function s(e, t) {
                let r = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
                    n = (0, o.keccak256)((0, i.stringToBytes)(r), "bytes"),
                    a = (t ? r.substring(`${t}0x`.length) : r).split("");
                for (let e = 0; e < 40; e += 2) n[e >> 1] >> 4 >= 8 && a[e] && (a[e] = a[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && a[e + 1] && (a[e + 1] = a[e + 1].toUpperCase());
                return `0x${a.join("")}`
            }
            t.checksumAddress = s, t.getAddress = function(e, t) {
                if (!(0, a.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                return s(e, t)
            }
        },
        55088: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCreate2Address = t.getCreateAddress = t.getContractAddress = void 0;
            let n = r(65133),
                i = r(56335),
                o = r(38402),
                a = r(27186),
                s = r(48638),
                u = r(44918),
                c = r(15146),
                l = r(66967);

            function d(e) {
                let t = (0, s.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, s.toBytes)(e.nonce);
                return 0 === r[0] && (r = new Uint8Array([])), (0, l.getAddress)(`0x${(0,c.keccak256)((0,u.toRlp)([t,r],"bytes")).slice(26)}`)
            }

            function f(e) {
                let t = (0, s.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, o.pad)((0, i.isBytes)(e.salt) ? e.salt : (0, s.toBytes)(e.salt), {
                        size: 32
                    }),
                    u = "bytecodeHash" in e ? (0, i.isBytes)(e.bytecodeHash) ? e.bytecodeHash : (0, s.toBytes)(e.bytecodeHash) : (0, c.keccak256)(e.bytecode, "bytes");
                return (0, l.getAddress)((0, a.slice)((0, c.keccak256)((0, n.concat)([(0, s.toBytes)("0xff"), t, r, u])), 12))
            }
            t.getContractAddress = function(e) {
                return "CREATE2" === e.opcode ? f(e) : d(e)
            }, t.getCreateAddress = d, t.getCreate2Address = f
        },
        92061: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddress = void 0;
            let r = /^0x[a-fA-F0-9]{40}$/;
            t.isAddress = function(e) {
                return r.test(e)
            }
        },
        88804: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddressEqual = void 0;
            let n = r(99913),
                i = r(92061);
            t.isAddressEqual = function(e, t) {
                if (!(0, i.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                if (!(0, i.isAddress)(t)) throw new n.InvalidAddressError({
                    address: t
                });
                return e.toLowerCase() === t.toLowerCase()
            }
        },
        94382: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildRequest = t.isDeterministicError = void 0;
            let n = r(96477),
                i = r(62377),
                o = r(4808),
                a = r(96302);
            t.isDeterministicError = e => "code" in e ? -1 !== e.code && -32004 !== e.code && -32005 !== e.code && -32042 !== e.code && -32603 !== e.code : e instanceof i.HttpRequestError && !!e.status && 403 !== e.status && 408 !== e.status && 413 !== e.status && 429 !== e.status && 500 !== e.status && 502 !== e.status && 503 !== e.status && 504 !== e.status, t.buildRequest = function(e, {
                retryDelay: r = 150,
                retryCount: s = 3
            } = {}) {
                return async u => (0, a.withRetry)(async () => {
                    try {
                        return await e(u)
                    } catch (e) {
                        switch (e.code) {
                            case o.ParseRpcError.code:
                                throw new o.ParseRpcError(e);
                            case o.InvalidRequestRpcError.code:
                                throw new o.InvalidRequestRpcError(e);
                            case o.MethodNotFoundRpcError.code:
                                throw new o.MethodNotFoundRpcError(e);
                            case o.InvalidParamsRpcError.code:
                                throw new o.InvalidParamsRpcError(e);
                            case o.InternalRpcError.code:
                                throw new o.InternalRpcError(e);
                            case o.InvalidInputRpcError.code:
                                throw new o.InvalidInputRpcError(e);
                            case o.ResourceNotFoundRpcError.code:
                                throw new o.ResourceNotFoundRpcError(e);
                            case o.ResourceUnavailableRpcError.code:
                                throw new o.ResourceUnavailableRpcError(e);
                            case o.TransactionRejectedRpcError.code:
                                throw new o.TransactionRejectedRpcError(e);
                            case o.MethodNotSupportedRpcError.code:
                                throw new o.MethodNotSupportedRpcError(e);
                            case o.LimitExceededRpcError.code:
                                throw new o.LimitExceededRpcError(e);
                            case o.JsonRpcVersionUnsupportedError.code:
                                throw new o.JsonRpcVersionUnsupportedError(e);
                            case o.UserRejectedRequestError.code:
                                throw new o.UserRejectedRequestError(e);
                            case o.UnauthorizedProviderError.code:
                                throw new o.UnauthorizedProviderError(e);
                            case o.UnsupportedProviderMethodError.code:
                                throw new o.UnsupportedProviderMethodError(e);
                            case o.ProviderDisconnectedError.code:
                                throw new o.ProviderDisconnectedError(e);
                            case o.ChainDisconnectedError.code:
                                throw new o.ChainDisconnectedError(e);
                            case o.SwitchChainError.code:
                                throw new o.SwitchChainError(e);
                            case 5e3:
                                throw new o.UserRejectedRequestError(e);
                            default:
                                if (e instanceof n.BaseError) throw e;
                                throw new o.UnknownRpcError(e)
                        }
                    }
                }, {
                    delay: ({
                        count: e,
                        error: t
                    }) => {
                        if (t && t instanceof i.HttpRequestError) {
                            let e = t ? .headers ? .get("Retry-After");
                            if (e ? .match(/\d/)) return 1e3 * parseInt(e)
                        }
                        return ~~(1 << e) * r
                    },
                    retryCount: s,
                    shouldRetry: ({
                        error: e
                    }) => !(0, t.isDeterministicError)(e)
                })
            }
        },
        98204: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ccipFetch = t.offchainLookup = t.offchainLookupAbiItem = t.offchainLookupSignature = void 0;
            let n = r(58965),
                i = r(5440),
                o = r(62377),
                a = r(50422),
                s = r(9215),
                u = r(88804),
                c = r(65133),
                l = r(27239),
                d = r(12835);
            async function f(e, {
                blockNumber: r,
                blockTag: o,
                data: l,
                to: d
            }) {
                let {
                    args: f
                } = (0, a.decodeErrorResult)({
                    data: l,
                    abi: [t.offchainLookupAbiItem]
                }), [p, m, g, b, y] = f;
                try {
                    if (!(0, u.isAddressEqual)(d, p)) throw new i.OffchainLookupSenderMismatchError({
                        sender: p,
                        to: d
                    });
                    let t = await h({
                            data: g,
                            sender: p,
                            urls: m
                        }),
                        {
                            data: a
                        } = await (0, n.call)(e, {
                            blockNumber: r,
                            blockTag: o,
                            data: (0, c.concat)([b, (0, s.encodeAbiParameters)([{
                                type: "bytes"
                            }, {
                                type: "bytes"
                            }], [t, y])]),
                            to: d
                        });
                    return a
                } catch (e) {
                    throw new i.OffchainLookupError({
                        callbackSelector: b,
                        cause: e,
                        data: l,
                        extraData: y,
                        sender: p,
                        urls: m
                    })
                }
            }
            async function h({
                data: e,
                sender: t,
                urls: r
            }) {
                let n = Error("An unknown error occurred.");
                for (let a = 0; a < r.length; a++) {
                    let s = r[a],
                        u = s.includes("{data}") ? "GET" : "POST",
                        c = "POST" === u ? {
                            data: e,
                            sender: t
                        } : void 0;
                    try {
                        let r;
                        let a = await fetch(s.replace("{sender}", t).replace("{data}", e), {
                            body: JSON.stringify(c),
                            method: u
                        });
                        if (r = a.headers.get("Content-Type") ? .startsWith("application/json") ? (await a.json()).data : await a.text(), !a.ok) {
                            n = new o.HttpRequestError({
                                body: c,
                                details: r ? .error ? (0, d.stringify)(r.error) : a.statusText,
                                headers: a.headers,
                                status: a.status,
                                url: s
                            });
                            continue
                        }
                        if (!(0, l.isHex)(r)) {
                            n = new i.OffchainLookupResponseMalformedError({
                                result: r,
                                url: s
                            });
                            continue
                        }
                        return r
                    } catch (e) {
                        n = new o.HttpRequestError({
                            body: c,
                            details: e.message,
                            url: s
                        })
                    }
                }
                throw n
            }
            t.offchainLookupSignature = "0x556f1830", t.offchainLookupAbiItem = {
                name: "OffchainLookup",
                type: "error",
                inputs: [{
                    name: "sender",
                    type: "address"
                }, {
                    name: "urls",
                    type: "string[]"
                }, {
                    name: "callData",
                    type: "bytes"
                }, {
                    name: "callbackFunction",
                    type: "bytes4"
                }, {
                    name: "extraData",
                    type: "bytes"
                }]
            }, t.offchainLookup = f, t.ccipFetch = h
        },
        33659: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertCurrentChain = void 0;
            let n = r(2439);
            t.assertCurrentChain = function({
                chain: e,
                currentChainId: t
            }) {
                if (!e) throw new n.ChainNotFoundError;
                if (t !== e.id) throw new n.ChainMismatchError({
                    chain: e,
                    currentChainId: t
                })
            }
        },
        6923: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineChain = void 0, t.defineChain = function(e, t = {}) {
                let {
                    fees: r = e.fees,
                    formatters: n = e.formatters,
                    serializers: i = e.serializers
                } = t;
                return { ...e,
                    fees: r,
                    formatters: n,
                    serializers: i
                }
            }
        },
        22341: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractChain = void 0, t.extractChain = function({
                chains: e,
                id: t
            }) {
                return e.find(e => e.id === t)
            }
        },
        48584: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainContractAddress = void 0;
            let n = r(2439);
            t.getChainContractAddress = function({
                blockNumber: e,
                chain: t,
                contract: r
            }) {
                let i = t ? .contracts ? .[r];
                if (!i) throw new n.ChainDoesNotSupportContract({
                    chain: t,
                    contract: {
                        name: r
                    }
                });
                if (e && i.blockCreated && i.blockCreated > e) throw new n.ChainDoesNotSupportContract({
                    blockNumber: e,
                    chain: t,
                    contract: {
                        name: r,
                        blockCreated: i.blockCreated
                    }
                });
                return i.address
            }
        },
        16822: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.extractFunctionParts = void 0;
            let r = /((function|event)\s)?(.*)(\((.*)\))/;

            function n(e) {
                let t = e.match(r);
                return {
                    type: t ? .[2] || void 0,
                    name: t ? .[3],
                    params: t ? .[5] || void 0
                }
            }
            t.extractFunctionParts = n, t.extractFunctionName = function(e) {
                return n(e).name
            }, t.extractFunctionParams = function(e) {
                let t = n(e).params,
                    r = t ? .split(",").map(e => e.trim().split(" "));
                return r ? .map(e => ({
                    type: e[0],
                    name: "indexed" === e[1] ? e[2] : e[1],
                    ..."indexed" === e[1] ? {
                        indexed: !0
                    } : {}
                }))
            }, t.extractFunctionType = function(e) {
                return n(e).type
            }
        },
        52352: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCursor = void 0;
            let n = r(14278),
                i = {
                    bytes: new Uint8Array,
                    dataView: new DataView(new ArrayBuffer(0)),
                    position: 0,
                    assertPosition(e) {
                        if (e < 0 || e > this.bytes.length - 1) throw new n.PositionOutOfBoundsError({
                            length: this.bytes.length,
                            position: e
                        })
                    },
                    decrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position - e;
                        this.assertPosition(t), this.position = t
                    },
                    incrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position + e;
                        this.assertPosition(t), this.position = t
                    },
                    inspectByte(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectBytes(e, t) {
                        let r = t ? ? this.position;
                        return this.assertPosition(r + e - 1), this.bytes.subarray(r, r + e)
                    },
                    inspectUint8(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectUint16(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 1), this.dataView.getUint16(t)
                    },
                    inspectUint24(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 2), (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
                    },
                    inspectUint32(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 3), this.dataView.getUint32(t)
                    },
                    pushByte(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushBytes(e) {
                        this.assertPosition(this.position + e.length - 1), this.bytes.set(e, this.position), this.position += e.length
                    },
                    pushUint8(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushUint16(e) {
                        this.assertPosition(this.position + 1), this.dataView.setUint16(this.position, e), this.position += 2
                    },
                    pushUint24(e) {
                        this.assertPosition(this.position + 2), this.dataView.setUint16(this.position, e >> 8), this.dataView.setUint8(this.position + 2, 255 & e), this.position += 3
                    },
                    pushUint32(e) {
                        this.assertPosition(this.position + 3), this.dataView.setUint32(this.position, e), this.position += 4
                    },
                    readByte() {
                        let e = this.inspectByte();
                        return this.position++, e
                    },
                    readBytes(e) {
                        let t = this.inspectBytes(e);
                        return this.position += e, t
                    },
                    readUint8() {
                        let e = this.inspectUint8();
                        return this.position += 1, e
                    },
                    readUint16() {
                        let e = this.inspectUint16();
                        return this.position += 2, e
                    },
                    readUint24() {
                        let e = this.inspectUint24();
                        return this.position += 3, e
                    },
                    readUint32() {
                        let e = this.inspectUint32();
                        return this.position += 4, e
                    },
                    setPosition(e) {
                        this.assertPosition(e), this.position = e
                    }
                };
            t.createCursor = function(e) {
                let t = Object.create(i);
                return t.bytes = e, t.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength), t
            }
        },
        65133: function(e, t) {
            "use strict";

            function r(e) {
                let t = 0;
                for (let r of e) t += r.length;
                let r = new Uint8Array(t),
                    n = 0;
                for (let t of e) r.set(t, n), n += t.length;
                return r
            }

            function n(e) {
                return `0x${e.reduce((e,t)=>e+t.replace("0x",""),"")}`
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concatHex = t.concatBytes = t.concat = void 0, t.concat = function(e) {
                return "string" == typeof e[0] ? n(e) : r(e)
            }, t.concatBytes = r, t.concatHex = n
        },
        56335: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytes = void 0, t.isBytes = function(e) {
                return !!e && "object" == typeof e && "BYTES_PER_ELEMENT" in e && 1 === e.BYTES_PER_ELEMENT && "Uint8Array" === e.constructor.name
            }
        },
        82200: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytesEqual = void 0;
            let n = r(28153),
                i = r(48638),
                o = r(27239);
            t.isBytesEqual = function(e, t) {
                let r = (0, o.isHex)(e) ? (0, i.toBytes)(e) : e,
                    a = (0, o.isHex)(t) ? (0, i.toBytes)(t) : t;
                return (0, n.equalBytes)(r, a)
            }
        },
        27239: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHex = void 0, t.isHex = function(e, {
                strict: t = !0
            } = {}) {
                return !!e && "string" == typeof e && (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
            }
        },
        38402: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.padBytes = t.padHex = t.pad = void 0;
            let n = r(65566);

            function i(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                let i = e.replace("0x", "");
                if (i.length > 2 * r) throw new n.SizeExceedsPaddingSizeError({
                    size: Math.ceil(i.length / 2),
                    targetSize: r,
                    type: "hex"
                });
                return `0x${i["right"===t?"padEnd":"padStart"](2*r,"0")}`
            }

            function o(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                if (e.length > r) throw new n.SizeExceedsPaddingSizeError({
                    size: e.length,
                    targetSize: r,
                    type: "bytes"
                });
                let i = new Uint8Array(r);
                for (let n = 0; n < r; n++) {
                    let o = "right" === t;
                    i[o ? n : r - n - 1] = e[o ? n : e.length - n - 1]
                }
                return i
            }
            t.pad = function(e, {
                dir: t,
                size: r = 32
            } = {}) {
                return "string" == typeof e ? i(e, {
                    dir: t,
                    size: r
                }) : o(e, {
                    dir: t,
                    size: r
                })
            }, t.padHex = i, t.padBytes = o
        },
        65945: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.size = void 0;
            let n = r(27239);
            t.size = function(e) {
                return (0, n.isHex)(e, {
                    strict: !1
                }) ? Math.ceil((e.length - 2) / 2) : e.length
            }
        },
        27186: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sliceHex = t.sliceBytes = t.slice = void 0;
            let n = r(65566),
                i = r(27239),
                o = r(65945);

            function a(e, t) {
                if ("number" == typeof t && t > 0 && t > (0, o.size)(e) - 1) throw new n.SliceOffsetOutOfBoundsError({
                    offset: t,
                    position: "start",
                    size: (0, o.size)(e)
                })
            }

            function s(e, t, r) {
                if ("number" == typeof t && "number" == typeof r && (0, o.size)(e) !== r - t) throw new n.SliceOffsetOutOfBoundsError({
                    offset: r,
                    position: "end",
                    size: (0, o.size)(e)
                })
            }

            function u(e, t, r, {
                strict: n
            } = {}) {
                a(e, t);
                let i = e.slice(t, r);
                return n && s(i, t, r), i
            }

            function c(e, t, r, {
                strict: n
            } = {}) {
                a(e, t);
                let i = `0x${e.replace("0x","").slice((t??0)*2,(r??e.length)*2)}`;
                return n && s(i, t, r), i
            }
            t.slice = function(e, t, r, {
                strict: n
            } = {}) {
                return (0, i.isHex)(e, {
                    strict: !1
                }) ? c(e, t, r, {
                    strict: n
                }) : u(e, t, r, {
                    strict: n
                })
            }, t.sliceBytes = u, t.sliceHex = c
        },
        14772: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.trim = void 0, t.trim = function(e, {
                dir: t = "left"
            } = {}) {
                let r = "string" == typeof e ? e.replace("0x", "") : e,
                    n = 0;
                for (let e = 0; e < r.length - 1 && "0" === r["left" === t ? e : r.length - e - 1].toString(); e++) n++;
                return (r = "left" === t ? r.slice(n) : r.slice(0, r.length - n), "string" == typeof e) ? (1 === r.length && "right" === t && (r = `${r}0`), `0x${r.length%2==1?`0${r}`:r}`) : r
            }
        },
        94371: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigInt = t.fromBytes = void 0;
            let n = r(22962),
                i = r(14772),
                o = r(67256),
                a = r(28510);

            function s(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, a.bytesToHex)(e, t);
                return (0, o.hexToBigInt)(r)
            }

            function u(e, t = {}) {
                let r = e;
                if (void 0 !== t.size && ((0, o.assertSize)(r, {
                        size: t.size
                    }), r = (0, i.trim)(r)), r.length > 1 || r[0] > 1) throw new n.InvalidBytesBooleanError(r);
                return !!r[0]
            }

            function c(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, a.bytesToHex)(e, t);
                return (0, o.hexToNumber)(r)
            }

            function l(e, t = {}) {
                let r = e;
                return void 0 !== t.size && ((0, o.assertSize)(r, {
                    size: t.size
                }), r = (0, i.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.fromBytes = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? c(e, r) : "bigint" === n ? s(e, r) : "boolean" === n ? u(e, r) : "string" === n ? l(e, r) : (0, a.bytesToHex)(e, r)
            }, t.bytesToBigInt = s, t.bytesToBool = u, t.bytesToNumber = c, t.bytesToString = l
        },
        67256: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.assertSize = void 0;
            let n = r(22962),
                i = r(65945),
                o = r(14772),
                a = r(48638);

            function s(e, {
                size: t
            }) {
                if ((0, i.size)(e) > t) throw new n.SizeOverflowError({
                    givenSize: (0, i.size)(e),
                    maxSize: t
                })
            }

            function u(e, t = {}) {
                let {
                    signed: r
                } = t;
                t.size && s(e, {
                    size: t.size
                });
                let n = BigInt(e);
                if (!r) return n;
                let i = (e.length - 2) / 2;
                return n <= (1 n << 8 n * BigInt(i) - 1 n) - 1 n ? n : n - BigInt(`0x${"f".padStart(2*i,"f")}`) - 1 n
            }

            function c(e, t = {}) {
                let r = e;
                if (t.size && (s(r, {
                        size: t.size
                    }), r = (0, o.trim)(r)), "0x00" === (0, o.trim)(r)) return !1;
                if ("0x01" === (0, o.trim)(r)) return !0;
                throw new n.InvalidHexBooleanError(r)
            }

            function l(e, t = {}) {
                return Number(u(e, t))
            }

            function d(e, t = {}) {
                let r = (0, a.hexToBytes)(e);
                return t.size && (s(r, {
                    size: t.size
                }), r = (0, o.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.assertSize = s, t.fromHex = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? l(e, r) : "bigint" === n ? u(e, r) : "string" === n ? d(e, r) : "boolean" === n ? c(e, r) : (0, a.hexToBytes)(e, r)
            }, t.hexToBigInt = u, t.hexToBool = c, t.hexToNumber = l, t.hexToString = d
        },
        65064: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rlpToHex = t.rlpToBytes = t.fromRlp = void 0;
            let n = r(96477),
                i = r(22962),
                o = r(52352),
                a = r(48638),
                s = r(28510);

            function u(e, t = "hex") {
                let r = (() => {
                    if ("string" == typeof e) {
                        if (e.length > 3 && e.length % 2 != 0) throw new i.InvalidHexValueError(e);
                        return (0, a.hexToBytes)(e)
                    }
                    return e
                })();
                return function e(t, r = "hex") {
                    if (0 === t.bytes.length) return "hex" === r ? (0, s.bytesToHex)(t.bytes) : t.bytes;
                    let n = t.readByte();
                    if (n < 128 && t.decrementPosition(1), n < 192) {
                        let e = c(t, n, 128),
                            i = t.readBytes(e);
                        return "hex" === r ? (0, s.bytesToHex)(i) : i
                    }
                    let i = c(t, n, 192);
                    return function(t, r, n) {
                        let i = t.position,
                            o = [];
                        for (; t.position - i < r;) o.push(e(t, n));
                        return o
                    }(t, i, r)
                }((0, o.createCursor)(r), t)
            }

            function c(e, t, r) {
                if (128 === r && t < 128) return 1;
                if (t <= r + 55) return t - r;
                if (t === r + 55 + 1) return e.readUint8();
                if (t === r + 55 + 2) return e.readUint16();
                if (t === r + 55 + 3) return e.readUint24();
                if (t === r + 55 + 4) return e.readUint32();
                throw new n.BaseError("Invalid RLP prefix")
            }
            t.fromRlp = u, t.rlpToBytes = function(e, t = "bytes") {
                return u(e, t)
            }, t.rlpToHex = function(e, t = "hex") {
                return u(e, t)
            }
        },
        48638: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.toBytes = void 0;
            let n = r(96477),
                i = r(27239),
                o = r(38402),
                a = r(67256),
                s = r(28510),
                u = new TextEncoder;

            function c(e, t = {}) {
                let r = new Uint8Array(1);
                return (r[0] = Number(e), "number" == typeof t.size) ? ((0, a.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    size: t.size
                })) : r
            }
            t.toBytes = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? h(e, t) : "boolean" == typeof e ? c(e, t) : (0, i.isHex)(e) ? f(e, t) : p(e, t)
            }, t.boolToBytes = c;
            let l = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function d(e) {
                return e >= l.zero && e <= l.nine ? e - l.zero : e >= l.A && e <= l.F ? e - (l.A - 10) : e >= l.a && e <= l.f ? e - (l.a - 10) : void 0
            }

            function f(e, t = {}) {
                let r = e;
                t.size && ((0, a.assertSize)(r, {
                    size: t.size
                }), r = (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                }));
                let i = r.slice(2);
                i.length % 2 && (i = `0${i}`);
                let s = i.length / 2,
                    u = new Uint8Array(s);
                for (let e = 0, t = 0; e < s; e++) {
                    let r = d(i.charCodeAt(t++)),
                        o = d(i.charCodeAt(t++));
                    if (void 0 === r || void 0 === o) throw new n.BaseError(`Invalid byte sequence ("${i[t-2]}${i[t-1]}" in "${i}").`);
                    u[e] = 16 * r + o
                }
                return u
            }

            function h(e, t) {
                return f((0, s.numberToHex)(e, t))
            }

            function p(e, t = {}) {
                let r = u.encode(e);
                return "number" == typeof t.size ? ((0, a.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                })) : r
            }
            t.hexToBytes = f, t.numberToBytes = h, t.stringToBytes = p
        },
        28510: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toHex = void 0;
            let n = r(22962),
                i = r(38402),
                o = r(67256),
                a = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function s(e, t = {}) {
                let r = `0x${Number(e)}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(r, {
                    size: t.size
                }), (0, i.pad)(r, {
                    size: t.size
                })) : r
            }

            function u(e, t = {}) {
                let r = "";
                for (let t = 0; t < e.length; t++) r += a[e[t]];
                let n = `0x${r}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(n, {
                    size: t.size
                }), (0, i.pad)(n, {
                    dir: "right",
                    size: t.size
                })) : n
            }

            function c(e, t = {}) {
                let r;
                let {
                    signed: o,
                    size: a
                } = t, s = BigInt(e);
                a ? r = o ? (1 n << 8 n * BigInt(a) - 1 n) - 1 n : 2 n ** (8 n * BigInt(a)) - 1 n : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
                let u = "bigint" == typeof r && o ? -r - 1 n : 0;
                if (r && s > r || s < u) {
                    let t = "bigint" == typeof e ? "n" : "";
                    throw new n.IntegerOutOfRangeError({
                        max: r ? `${r}${t}` : void 0,
                        min: `${u}${t}`,
                        signed: o,
                        size: a,
                        value: `${e}${t}`
                    })
                }
                let c = `0x${(o&&s<0?(1n<<BigInt(8*a))+BigInt(s):s).toString(16)}`;
                return a ? (0, i.pad)(c, {
                    size: a
                }) : c
            }
            t.toHex = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? c(e, t) : "string" == typeof e ? d(e, t) : "boolean" == typeof e ? s(e, t) : u(e, t)
            }, t.boolToHex = s, t.bytesToHex = u, t.numberToHex = c;
            let l = new TextEncoder;

            function d(e, t = {}) {
                return u(l.encode(e), t)
            }
            t.stringToHex = d
        },
        44918: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToRlp = t.bytesToRlp = t.toRlp = void 0;
            let n = r(84496),
                i = r(52352),
                o = r(48638),
                a = r(28510);

            function s(e, t = "hex") {
                let r = function e(t) {
                        return Array.isArray(t) ? function(e) {
                            let t = e.reduce((e, t) => e + t.length, 0),
                                r = u(t);
                            return {
                                length: t <= 55 ? 1 + t : 1 + r + t,
                                encode(n) {
                                    for (let {
                                            encode: i
                                        } of (t <= 55 ? n.pushByte(192 + t) : (n.pushByte(247 + r), 1 === r ? n.pushUint8(t) : 2 === r ? n.pushUint16(t) : 3 === r ? n.pushUint24(t) : n.pushUint32(t)), e)) i(n)
                                }
                            }
                        }(t.map(t => e(t))) : function(e) {
                            let t = "string" == typeof e ? (0, o.hexToBytes)(e) : e,
                                r = u(t.length);
                            return {
                                length: 1 === t.length && t[0] < 128 ? 1 : t.length <= 55 ? 1 + t.length : 1 + r + t.length,
                                encode(e) {
                                    1 === t.length && t[0] < 128 || (t.length <= 55 ? e.pushByte(128 + t.length) : (e.pushByte(183 + r), 1 === r ? e.pushUint8(t.length) : 2 === r ? e.pushUint16(t.length) : 3 === r ? e.pushUint24(t.length) : e.pushUint32(t.length))), e.pushBytes(t)
                                }
                            }
                        }(t)
                    }(e),
                    n = (0, i.createCursor)(new Uint8Array(r.length));
                return (r.encode(n), "hex" === t) ? (0, a.bytesToHex)(n.bytes) : n.bytes
            }

            function u(e) {
                if (e < 256) return 1;
                if (e < 65536) return 2;
                if (e < 16777216) return 3;
                if (e < 4294967296) return 4;
                throw new n.BaseError("Length is too large.")
            }
            t.toRlp = s, t.bytesToRlp = function(e, t = "bytes") {
                return s(e, t)
            }, t.hexToRlp = function(e, t = "hex") {
                return s(e, t)
            }
        },
        81026: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAvatarRecord = void 0;
            let n = r(90903);
            async function i(e, {
                gatewayUrls: t,
                record: r
            }) {
                return /eip155:/i.test(r) ? o(e, {
                    gatewayUrls: t,
                    record: r
                }) : (0, n.parseAvatarUri)({
                    uri: r,
                    gatewayUrls: t
                })
            }
            async function o(e, {
                gatewayUrls: t,
                record: r
            }) {
                let i = (0, n.parseNftUri)(r),
                    o = await (0, n.getNftTokenUri)(e, {
                        nft: i
                    }),
                    {
                        uri: a,
                        isOnChain: s,
                        isEncoded: u
                    } = (0, n.resolveAvatarUri)({
                        uri: o,
                        gatewayUrls: t
                    });
                if (s && (a.includes("data:application/json;base64,") || a.startsWith("{"))) {
                    let e = JSON.parse(u ? atob(a.replace("data:application/json;base64,", "")) : a);
                    return (0, n.parseAvatarUri)({
                        uri: (0, n.getJsonImage)(e),
                        gatewayUrls: t
                    })
                }
                let c = i.tokenID;
                return "erc1155" === i.namespace && (c = c.replace("0x", "").padStart(64, "0")), (0, n.getMetadataAvatarUri)({
                    gatewayUrls: t,
                    uri: a.replace(/(?:0x)?{id}/, c)
                })
            }
            t.parseAvatarRecord = i
        },
        90903: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNftTokenUri = t.parseNftUri = t.parseAvatarUri = t.getMetadataAvatarUri = t.getJsonImage = t.resolveAvatarUri = t.getGateway = t.isImageUri = void 0;
            let n = r(85002),
                i = r(65124),
                o = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
                a = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
                s = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                u = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
            async function c(e) {
                try {
                    let t = await fetch(e, {
                        method: "HEAD"
                    });
                    if (200 === t.status) {
                        let e = t.headers.get("content-type");
                        return e ? .startsWith("image/")
                    }
                    return !1
                } catch (t) {
                    if ("object" == typeof t && void 0 !== t.response || !globalThis.hasOwnProperty("Image")) return !1;
                    return new Promise(t => {
                        let r = new Image;
                        r.onload = () => {
                            t(!0)
                        }, r.onerror = () => {
                            t(!1)
                        }, r.src = e
                    })
                }
            }

            function l(e, t) {
                return e ? e.endsWith("/") ? e.slice(0, -1) : e : t
            }

            function d({
                uri: e,
                gatewayUrls: t
            }) {
                let r = s.test(e);
                if (r) return {
                    uri: e,
                    isOnChain: !0,
                    isEncoded: r
                };
                let n = l(t ? .ipfs, "https://ipfs.io"),
                    c = l(t ? .arweave, "https://arweave.net"),
                    d = e.match(o),
                    {
                        protocol: f,
                        subpath: h,
                        target: p,
                        subtarget: m = ""
                    } = d ? .groups || {},
                    g = "ipns:/" === f || "ipns/" === h,
                    b = "ipfs:/" === f || "ipfs/" === h || a.test(e);
                if (e.startsWith("http") && !g && !b) {
                    let r = e;
                    return t ? .arweave && (r = e.replace(/https:\/\/arweave.net/g, t ? .arweave)), {
                        uri: r,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((g || b) && p) return {
                    uri: `${n}/${g?"ipns":"ipfs"}/${p}${m}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === f && p) return {
                    uri: `${c}/${p}${m||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let y = e.replace(u, "");
                if (y.startsWith("<svg") && (y = `data:image/svg+xml;base64,${btoa(y)}`), y.startsWith("data:") || y.startsWith("{")) return {
                    uri: y,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new i.EnsAvatarUriResolutionError({
                    uri: e
                })
            }

            function f(e) {
                if ("object" != typeof e || !("image" in e) && !("image_url" in e) && !("image_data" in e)) throw new i.EnsAvatarInvalidMetadataError({
                    data: e
                });
                return e.image || e.image_url || e.image_data
            }
            async function h({
                gatewayUrls: e,
                uri: t
            }) {
                try {
                    let r = await fetch(t).then(e => e.json());
                    return await p({
                        gatewayUrls: e,
                        uri: f(r)
                    })
                } catch {
                    throw new i.EnsAvatarUriResolutionError({
                        uri: t
                    })
                }
            }
            async function p({
                gatewayUrls: e,
                uri: t
            }) {
                let {
                    uri: r,
                    isOnChain: n
                } = d({
                    uri: t,
                    gatewayUrls: e
                });
                if (n || await c(r)) return r;
                throw new i.EnsAvatarUriResolutionError({
                    uri: t
                })
            }
            async function m(e, {
                nft: t
            }) {
                if ("erc721" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "tokenURI",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "tokenId",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "tokenURI",
                    args: [BigInt(t.tokenID)]
                });
                if ("erc1155" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "uri",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "_id",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "uri",
                    args: [BigInt(t.tokenID)]
                });
                throw new i.EnsAvatarUnsupportedNamespaceError({
                    namespace: t.namespace
                })
            }
            t.isImageUri = c, t.getGateway = l, t.resolveAvatarUri = d, t.getJsonImage = f, t.getMetadataAvatarUri = h, t.parseAvatarUri = p, t.parseNftUri = function(e) {
                let t = e;
                t.startsWith("did:nft:") && (t = t.replace("did:nft:", "").replace(/_/g, "/"));
                let [r, n, o] = t.split("/"), [a, s] = r.split(":"), [u, c] = n.split(":");
                if (!a || "eip155" !== a.toLowerCase()) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Only EIP-155 supported"
                });
                if (!s) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Chain ID not found"
                });
                if (!c) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Contract address not found"
                });
                if (!o) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Token ID not found"
                });
                if (!u) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "ERC namespace not found"
                });
                return {
                    chainID: parseInt(s),
                    namespace: u.toLowerCase(),
                    contractAddress: c,
                    tokenID: o
                }
            }, t.getNftTokenUri = m
        },
        32240: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeLabelhash = void 0, t.encodeLabelhash = function(e) {
                return `[${e.slice(2)}]`
            }
        },
        6019: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodedLabelToLabelhash = void 0;
            let n = r(27239);
            t.encodedLabelToLabelhash = function(e) {
                if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]")) return null;
                let t = `0x${e.slice(1,65)}`;
                return (0, n.isHex)(t) ? t : null
            }
        },
        37679: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isNullUniversalResolverError = void 0;
            let n = r(85492),
                i = r(96477),
                o = r(85374);
            t.isNullUniversalResolverError = function(e, t) {
                if (!(e instanceof i.BaseError)) return !1;
                let r = e.walk(e => e instanceof o.ContractFunctionRevertedError);
                return r instanceof o.ContractFunctionRevertedError && (!!(r.data ? .errorName === "ResolverNotFound" || r.data ? .errorName === "ResolverWildcardNotSupported" || r.reason ? .includes("Wildcard on non-extended resolvers is not supported")) || "reverse" === t && r.reason === n.panicReasons[50])
            }
        },
        91176: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.labelhash = void 0;
            let n = r(48638),
                i = r(28510),
                o = r(15146),
                a = r(6019);
            t.labelhash = function(e) {
                let t = new Uint8Array(32).fill(0);
                return e ? (0, a.encodedLabelToLabelhash)(e) || (0, o.keccak256)((0, n.stringToBytes)(e)) : (0, i.bytesToHex)(t)
            }
        },
        38765: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.namehash = void 0;
            let n = r(65133),
                i = r(48638),
                o = r(28510),
                a = r(15146),
                s = r(6019);
            t.namehash = function(e) {
                let t = new Uint8Array(32).fill(0);
                if (!e) return (0, o.bytesToHex)(t);
                let r = e.split(".");
                for (let e = r.length - 1; e >= 0; e -= 1) {
                    let o = (0, s.encodedLabelToLabelhash)(r[e]),
                        u = o ? (0, i.toBytes)(o) : (0, a.keccak256)((0, i.stringToBytes)(r[e]), "bytes");
                    t = (0, a.keccak256)((0, n.concat)([t, u]), "bytes")
                }
                return (0, o.bytesToHex)(t)
            }
        },
        76933: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.packetToBytes = void 0;
            let n = r(48638),
                i = r(32240),
                o = r(91176);
            t.packetToBytes = function(e) {
                let t = e.replace(/^\.|\.$/gm, "");
                if (0 === t.length) return new Uint8Array(1);
                let r = new Uint8Array((0, n.stringToBytes)(t).byteLength + 2),
                    a = 0,
                    s = t.split(".");
                for (let e = 0; e < s.length; e++) {
                    let t = (0, n.stringToBytes)(s[e]);
                    t.byteLength > 255 && (t = (0, n.stringToBytes)((0, i.encodeLabelhash)((0, o.labelhash)(s[e])))), r[a] = t.length, r.set(t, a + 1), a += t.length + 1
                }
                return r.byteLength !== a + 1 ? r.slice(0, a + 1) : r
            }
        },
        59399: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCallError = void 0;
            let n = r(85374),
                i = r(8922),
                o = r(71058);
            t.getCallError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.CallExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        77803: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractError = void 0;
            let n = r(35362),
                i = r(96477),
                o = r(85374),
                a = r(4808);
            t.getContractError = function(e, {
                abi: t,
                address: r,
                args: s,
                docsPath: u,
                functionName: c,
                sender: l
            }) {
                let {
                    code: d,
                    data: f,
                    message: h,
                    shortMessage: p
                } = e instanceof o.RawContractError ? e : e instanceof i.BaseError ? e.walk(e => "data" in e) || e.walk() : {}, m = e instanceof n.AbiDecodingZeroDataError ? new o.ContractFunctionZeroDataError({
                    functionName: c
                }) : [3, a.InternalRpcError.code].includes(d) && (f || h || p) ? new o.ContractFunctionRevertedError({
                    abi: t,
                    data: "object" == typeof f ? f.data : f,
                    functionName: c,
                    message: p ? ? h
                }) : e;
                return new o.ContractFunctionExecutionError(m, {
                    abi: t,
                    args: s,
                    contractAddress: r,
                    docsPath: u,
                    functionName: c,
                    sender: l
                })
            }
        },
        74158: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEstimateGasError = void 0;
            let n = r(68834),
                i = r(8922),
                o = r(71058);
            t.getEstimateGasError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.EstimateGasExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        71058: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNodeError = t.containsNodeError = void 0;
            let n = r(96477),
                i = r(8922),
                o = r(62377),
                a = r(4808);
            t.containsNodeError = function(e) {
                return e instanceof a.TransactionRejectedRpcError || e instanceof a.InvalidInputRpcError || e instanceof o.RpcRequestError && e.code === i.ExecutionRevertedError.code
            }, t.getNodeError = function(e, t) {
                let r = (e.details || "").toLowerCase(),
                    o = e.walk(e => e.code === i.ExecutionRevertedError.code);
                return o instanceof n.BaseError ? new i.ExecutionRevertedError({
                    cause: e,
                    message: o.details
                }) : i.ExecutionRevertedError.nodeMessage.test(r) ? new i.ExecutionRevertedError({
                    cause: e,
                    message: e.details
                }) : i.FeeCapTooHighError.nodeMessage.test(r) ? new i.FeeCapTooHighError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.FeeCapTooLowError.nodeMessage.test(r) ? new i.FeeCapTooLowError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.NonceTooHighError.nodeMessage.test(r) ? new i.NonceTooHighError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceTooLowError.nodeMessage.test(r) ? new i.NonceTooLowError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceMaxValueError.nodeMessage.test(r) ? new i.NonceMaxValueError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.InsufficientFundsError.nodeMessage.test(r) ? new i.InsufficientFundsError({
                    cause: e
                }) : i.IntrinsicGasTooHighError.nodeMessage.test(r) ? new i.IntrinsicGasTooHighError({
                    cause: e,
                    gas: t ? .gas
                }) : i.IntrinsicGasTooLowError.nodeMessage.test(r) ? new i.IntrinsicGasTooLowError({
                    cause: e,
                    gas: t ? .gas
                }) : i.TransactionTypeNotSupportedError.nodeMessage.test(r) ? new i.TransactionTypeNotSupportedError({
                    cause: e
                }) : i.TipAboveFeeCapError.nodeMessage.test(r) ? new i.TipAboveFeeCapError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas,
                    maxPriorityFeePerGas: t ? .maxPriorityFeePerGas
                }) : new i.UnknownNodeError({
                    cause: e
                })
            }
        },
        57955: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionError = void 0;
            let n = r(8922),
                i = r(88724),
                o = r(71058);
            t.getTransactionError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof n.UnknownNodeError ? e : t
                })();
                return new i.TransactionExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        49132: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createFilterRequestScope = void 0, t.createFilterRequestScope = function(e, {
                method: t
            }) {
                let r = {};
                return "fallback" === e.transport.type && e.transport.onResponse ? .(({
                    method: e,
                    response: n,
                    status: i,
                    transport: o
                }) => {
                    "success" === i && t === e && (r[n] = o.request)
                }), t => r[t] || e.request
            }
        },
        64023: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineBlock = t.formatBlock = void 0;
            let n = r(31084),
                i = r(56292);

            function o(e) {
                let t = e.transactions ? .map(e => "string" == typeof e ? e : i.formatTransaction(e));
                return { ...e,
                    baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
                    difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
                    gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
                    hash: e.hash ? e.hash : null,
                    logsBloom: e.logsBloom ? e.logsBloom : null,
                    nonce: e.nonce ? e.nonce : null,
                    number: e.number ? BigInt(e.number) : null,
                    size: e.size ? BigInt(e.size) : void 0,
                    timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
                    transactions: t,
                    totalDifficulty: e.totalDifficulty ? BigInt(e.totalDifficulty) : null
                }
            }
            t.formatBlock = o, t.defineBlock = (0, n.defineFormatter)("block", o)
        },
        26940: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extract = void 0, t.extract = function(e, {
                format: t
            }) {
                if (!t) return {};
                let r = {};
                return function t(n) {
                    for (let i of Object.keys(n)) i in e && (r[i] = e[i]), n[i] && "object" == typeof n[i] && !Array.isArray(n[i]) && t(n[i])
                }(t(e || {})), r
            }
        },
        4548: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatFeeHistory = void 0, t.formatFeeHistory = function(e) {
                return {
                    baseFeePerGas: e.baseFeePerGas.map(e => BigInt(e)),
                    gasUsedRatio: e.gasUsedRatio,
                    oldestBlock: BigInt(e.oldestBlock),
                    reward: e.reward ? .map(e => e.map(e => BigInt(e)))
                }
            }
        },
        31084: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineFormatter = void 0, t.defineFormatter = function(e, t) {
                return ({
                    exclude: r,
                    format: n
                }) => ({
                    exclude: r,
                    format: e => {
                        let i = t(e);
                        if (r)
                            for (let e of r) delete i[e];
                        return { ...i,
                            ...n(e)
                        }
                    },
                    type: e
                })
            }
        },
        88489: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatLog = void 0, t.formatLog = function(e, {
                args: t,
                eventName: r
            } = {}) {
                return { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    logIndex: e.logIndex ? Number(e.logIndex) : null,
                    transactionHash: e.transactionHash ? e.transactionHash : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    ...r ? {
                        args: t,
                        eventName: r
                    } : {}
                }
            }
        },
        4995: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatProof = void 0;
            let n = r(95707);
            t.formatProof = function(e) {
                return { ...e,
                    balance: e.balance ? BigInt(e.balance) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    storageProof: e.storageProof ? e.storageProof.map(e => ({ ...e,
                        value: BigInt(e.value)
                    })) : void 0
                }
            }
        },
        56292: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransaction = t.formatTransaction = t.transactionType = void 0;
            let n = r(67256),
                i = r(31084);

            function o(e) {
                let r = { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    chainId: e.chainId ? (0, n.hexToNumber)(e.chainId) : void 0,
                    gas: e.gas ? BigInt(e.gas) : void 0,
                    gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
                    maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: e.maxPriorityFeePerGas ? BigInt(e.maxPriorityFeePerGas) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    type: e.type ? t.transactionType[e.type] : void 0,
                    typeHex: e.type ? e.type : void 0,
                    value: e.value ? BigInt(e.value) : void 0,
                    v: e.v ? BigInt(e.v) : void 0
                };
                return r.yParity = (() => {
                    if (e.yParity) return Number(e.yParity);
                    if ("bigint" == typeof r.v) {
                        if (0 n === r.v || 27 n === r.v) return 0;
                        if (1 n === r.v || 28 n === r.v) return 1;
                        if (r.v >= 35 n) return r.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === r.type && (delete r.accessList, delete r.maxFeePerGas, delete r.maxPriorityFeePerGas, delete r.yParity), "eip2930" === r.type && (delete r.maxFeePerGas, delete r.maxPriorityFeePerGas), r
            }
            t.transactionType = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            }, t.formatTransaction = o, t.defineTransaction = (0, i.defineFormatter)("transaction", o)
        },
        67743: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionReceipt = t.formatTransactionReceipt = void 0;
            let n = r(67256),
                i = r(31084),
                o = r(88489),
                a = r(56292),
                s = {
                    "0x0": "reverted",
                    "0x1": "success"
                };

            function u(e) {
                return { ...e,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    contractAddress: e.contractAddress ? e.contractAddress : null,
                    cumulativeGasUsed: e.cumulativeGasUsed ? BigInt(e.cumulativeGasUsed) : null,
                    effectiveGasPrice: e.effectiveGasPrice ? BigInt(e.effectiveGasPrice) : null,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
                    logs: e.logs ? e.logs.map(e => (0, o.formatLog)(e)) : null,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? (0, n.hexToNumber)(e.transactionIndex) : null,
                    status: e.status ? s[e.status] : null,
                    type: e.type ? a.transactionType[e.type] || e.type : null
                }
            }
            t.formatTransactionReceipt = u, t.defineTransactionReceipt = (0, i.defineFormatter)("transactionReceipt", u)
        },
        23974: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionRequest = t.formatTransactionRequest = t.rpcTransactionType = void 0;
            let n = r(28510),
                i = r(31084);

            function o(e) {
                return { ...e,
                    gas: void 0 !== e.gas ? (0, n.numberToHex)(e.gas) : void 0,
                    gasPrice: void 0 !== e.gasPrice ? (0, n.numberToHex)(e.gasPrice) : void 0,
                    maxFeePerGas: void 0 !== e.maxFeePerGas ? (0, n.numberToHex)(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: void 0 !== e.maxPriorityFeePerGas ? (0, n.numberToHex)(e.maxPriorityFeePerGas) : void 0,
                    nonce: void 0 !== e.nonce ? (0, n.numberToHex)(e.nonce) : void 0,
                    type: void 0 !== e.type ? t.rpcTransactionType[e.type] : void 0,
                    value: void 0 !== e.value ? (0, n.numberToHex)(e.value) : void 0
                }
            }
            t.rpcTransactionType = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            }, t.formatTransactionRequest = o, t.defineTransactionRequest = (0, i.defineFormatter)("transactionRequest", o)
        },
        50742: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAction = void 0, t.getAction = function(e, t, r) {
                return n => e[t.name || r] ? .(n) ? ? t(e, n)
            }
        },
        87859: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSelector = void 0;
            let n = r(48638),
                i = r(40115),
                o = r(15146),
                a = e => (0, o.keccak256)((0, n.toBytes)(e));
            t.getEventSelector = e => a((0, i.getEventSignature)(e))
        },
        40115: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSignature = void 0;
            let n = r(26606);
            t.getEventSignature = e => (0, n.getFunctionSignature)(e)
        },
        40069: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSelector = void 0;
            let n = r(27186),
                i = r(48638),
                o = r(26606),
                a = r(15146),
                s = e => (0, a.keccak256)((0, i.toBytes)(e));
            t.getFunctionSelector = e => (0, n.slice)(s((0, o.getFunctionSignature)(e)), 0, 4)
        },
        26606: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSignature = void 0;
            let n = r(40609),
                i = r(57712);
            t.getFunctionSignature = e => {
                let t = "string" == typeof e ? e : (0, n.formatAbiItem)(e);
                return (0, i.normalizeSignature)(t)
            }
        },
        8353: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHash = void 0;
            let n = r(27239),
                i = r(65945);
            t.isHash = function(e) {
                return (0, n.isHex)(e) && 32 === (0, i.size)(e)
            }
        },
        15146: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.keccak256 = void 0;
            let n = r(52975),
                i = r(27239),
                o = r(48638),
                a = r(28510);
            t.keccak256 = function(e, t) {
                let r = (0, n.keccak_256)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, a.toHex)(r)
            }
        },
        57712: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.normalizeSignature = void 0;
            let n = r(96477);
            t.normalizeSignature = function(e) {
                let t = !0,
                    r = "",
                    i = 0,
                    o = "",
                    a = !1;
                for (let n = 0; n < e.length; n++) {
                    let s = e[n];
                    if (["(", ")", ","].includes(s) && (t = !0), "(" === s && i++, ")" === s && i--, t) {
                        if (0 === i) {
                            if (" " === s && ["event", "function", ""].includes(o)) o = "";
                            else if (o += s, ")" === s) {
                                a = !0;
                                break
                            }
                            continue
                        }
                        if (" " === s) {
                            "," !== e[n - 1] && "," !== r && ",(" !== r && (r = "", t = !1);
                            continue
                        }
                        o += s, r += s
                    }
                }
                if (!a) throw new n.BaseError("Unable to normalize signature.");
                return o
            }
        },
        79096: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = void 0;
            let n = r(57430),
                i = r(27239),
                o = r(48638),
                a = r(28510);
            t.ripemd160 = function(e, t) {
                let r = (0, n.ripemd160)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, a.toHex)(r)
            }
        },
        29695: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha256 = void 0;
            let n = r(44212),
                i = r(27239),
                o = r(48638),
                a = r(28510);
            t.sha256 = function(e, t) {
                let r = (0, n.sha256)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, a.toHex)(r)
            }
        },
        95707: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concat = t.extractFunctionParts = t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.isAddressEqual = t.isAddress = t.getAddress = t.getCreate2Address = t.getCreateAddress = t.getContractAddress = t.publicKeyToAddress = t.parseAccount = t.formatAbiParams = t.formatAbiItem = t.formatAbiItemWithArgs = t.encodePacked = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.getAbiItem = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeAbiParameters = t.validateTypedData = t.stringify = t.rpc = t.getSocket = t.integerRegex = t.bytesRegex = t.arrayRegex = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.buildRequest = t.isDeterministicError = void 0, t.getEstimateGasError = t.getContractError = t.getCallError = t.getNodeError = t.containsNodeError = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBigInt = t.hexToBool = t.fromHex = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = t.stringToHex = t.numberToHex = t.toHex = t.bytesToHex = t.boolToHex = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.toBytes = t.boolToBytes = t.toRlp = t.extract = t.formatTransactionRequest = t.defineTransactionRequest = t.defineTransactionReceipt = t.formatLog = t.transactionType = t.formatTransaction = t.defineTransaction = t.formatBlock = t.defineBlock = t.trim = t.sliceHex = t.sliceBytes = t.slice = t.size = t.padHex = t.padBytes = t.pad = t.isHex = t.isBytes = t.concatHex = t.concatBytes = void 0, t.parseGwei = t.parseEther = t.parseUnits = t.formatUnits = t.formatGwei = t.formatEther = t.serializeAccessList = t.serializeTransaction = t.prepareTransactionRequest = t.parseTransaction = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.getTransactionType = t.getSerializedTransactionType = t.hashMessage = t.verifyTypedData = t.verifyMessage = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hashTypedData = t.ripemd160 = t.sha256 = t.keccak256 = t.isHash = t.getFunctionSelector = t.getEventSelector = t.defineFormatter = t.getTransactionError = void 0;
            var n = r(94382);
            Object.defineProperty(t, "isDeterministicError", {
                enumerable: !0,
                get: function() {
                    return n.isDeterministicError
                }
            }), Object.defineProperty(t, "buildRequest", {
                enumerable: !0,
                get: function() {
                    return n.buildRequest
                }
            });
            var i = r(98204);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return i.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupSignature
                }
            });
            var o = r(33659);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return o.assertCurrentChain
                }
            });
            var a = r(6923);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return a.defineChain
                }
            });
            var s = r(22341);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return s.extractChain
                }
            });
            var u = r(48584);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return u.getChainContractAddress
                }
            });
            var c = r(94088);
            Object.defineProperty(t, "arrayRegex", {
                enumerable: !0,
                get: function() {
                    return c.arrayRegex
                }
            }), Object.defineProperty(t, "bytesRegex", {
                enumerable: !0,
                get: function() {
                    return c.bytesRegex
                }
            }), Object.defineProperty(t, "integerRegex", {
                enumerable: !0,
                get: function() {
                    return c.integerRegex
                }
            });
            var l = r(37078);
            Object.defineProperty(t, "getSocket", {
                enumerable: !0,
                get: function() {
                    return l.getSocket
                }
            }), Object.defineProperty(t, "rpc", {
                enumerable: !0,
                get: function() {
                    return l.rpc
                }
            });
            var d = r(12835);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return d.stringify
                }
            });
            var f = r(93901);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return f.validateTypedData
                }
            });
            var h = r(94460);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return h.decodeAbiParameters
                }
            });
            var p = r(50422);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return p.decodeErrorResult
                }
            });
            var m = r(91314);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return m.decodeEventLog
                }
            });
            var g = r(35690);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return g.decodeFunctionData
                }
            });
            var b = r(43362);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return b.decodeFunctionResult
                }
            });
            var y = r(9215);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return y.encodeAbiParameters
                }
            });
            var v = r(52974);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return v.encodeDeployData
                }
            });
            var w = r(72772);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return w.encodeErrorResult
                }
            });
            var E = r(63406);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return E.encodeEventTopics
                }
            });
            var A = r(389);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return A.encodeFunctionData
                }
            });
            var P = r(79530);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return P.encodeFunctionResult
                }
            });
            var x = r(35171);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return x.getAbiItem
                }
            });
            var O = r(40609);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return O.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return O.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return O.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return O.parseAbiParameters
                }
            });
            var _ = r(15335);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return _.encodePacked
                }
            });
            var I = r(3242);
            Object.defineProperty(t, "formatAbiItemWithArgs", {
                enumerable: !0,
                get: function() {
                    return I.formatAbiItemWithArgs
                }
            });
            var T = r(37300);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return T.formatAbiItem
                }
            }), Object.defineProperty(t, "formatAbiParams", {
                enumerable: !0,
                get: function() {
                    return T.formatAbiParams
                }
            });
            var C = r(5974);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return C.parseAccount
                }
            });
            var S = r(20461);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return S.publicKeyToAddress
                }
            });
            var k = r(55088);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return k.getContractAddress
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return k.getCreateAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return k.getCreate2Address
                }
            });
            var M = r(66967);
            Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return M.getAddress
                }
            });
            var B = r(92061);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return B.isAddress
                }
            });
            var N = r(88804);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return N.isAddressEqual
                }
            });
            var R = r(16822);
            Object.defineProperty(t, "extractFunctionName", {
                enumerable: !0,
                get: function() {
                    return R.extractFunctionName
                }
            }), Object.defineProperty(t, "extractFunctionParams", {
                enumerable: !0,
                get: function() {
                    return R.extractFunctionParams
                }
            }), Object.defineProperty(t, "extractFunctionType", {
                enumerable: !0,
                get: function() {
                    return R.extractFunctionType
                }
            }), Object.defineProperty(t, "extractFunctionParts", {
                enumerable: !0,
                get: function() {
                    return R.extractFunctionParts
                }
            });
            var D = r(65133);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return D.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return D.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return D.concatHex
                }
            });
            var j = r(56335);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return j.isBytes
                }
            });
            var F = r(27239);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return F.isHex
                }
            });
            var U = r(38402);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return U.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return U.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return U.padHex
                }
            });
            var L = r(65945);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return L.size
                }
            });
            var q = r(27186);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return q.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return q.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return q.sliceHex
                }
            });
            var z = r(14772);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return z.trim
                }
            });
            var $ = r(64023);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return $.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return $.formatBlock
                }
            });
            var H = r(56292);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return H.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return H.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return H.transactionType
                }
            });
            var G = r(88489);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return G.formatLog
                }
            });
            var W = r(67743);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return W.defineTransactionReceipt
                }
            });
            var K = r(23974);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return K.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return K.formatTransactionRequest
                }
            });
            var Y = r(26940);
            Object.defineProperty(t, "extract", {
                enumerable: !0,
                get: function() {
                    return Y.extract
                }
            });
            var V = r(44918);
            Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return V.toRlp
                }
            });
            var Q = r(48638);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return Q.boolToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return Q.toBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return Q.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return Q.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return Q.stringToBytes
                }
            });
            var J = r(28510);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return J.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return J.bytesToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return J.toHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return J.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return J.stringToHex
                }
            });
            var Z = r(94371);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return Z.fromBytes
                }
            });
            var X = r(67256);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return X.fromHex
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return X.hexToBool
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return X.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return X.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return X.hexToString
                }
            });
            var ee = r(65064);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return ee.fromRlp
                }
            });
            var et = r(71058);
            Object.defineProperty(t, "containsNodeError", {
                enumerable: !0,
                get: function() {
                    return et.containsNodeError
                }
            }), Object.defineProperty(t, "getNodeError", {
                enumerable: !0,
                get: function() {
                    return et.getNodeError
                }
            });
            var er = r(59399);
            Object.defineProperty(t, "getCallError", {
                enumerable: !0,
                get: function() {
                    return er.getCallError
                }
            });
            var en = r(77803);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return en.getContractError
                }
            });
            var ei = r(74158);
            Object.defineProperty(t, "getEstimateGasError", {
                enumerable: !0,
                get: function() {
                    return ei.getEstimateGasError
                }
            });
            var eo = r(57955);
            Object.defineProperty(t, "getTransactionError", {
                enumerable: !0,
                get: function() {
                    return eo.getTransactionError
                }
            });
            var ea = r(31084);
            Object.defineProperty(t, "defineFormatter", {
                enumerable: !0,
                get: function() {
                    return ea.defineFormatter
                }
            });
            var es = r(87859);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return es.getEventSelector
                }
            });
            var eu = r(40069);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return eu.getFunctionSelector
                }
            });
            var ec = r(8353);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return ec.isHash
                }
            });
            var el = r(15146);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return el.keccak256
                }
            });
            var ed = r(29695);
            Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return ed.sha256
                }
            });
            var ef = r(79096);
            Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return ef.ripemd160
                }
            });
            var eh = r(44390);
            Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return eh.hashTypedData
                }
            });
            var ep = r(56911);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return ep.recoverAddress
                }
            });
            var em = r(10907);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return em.recoverMessageAddress
                }
            });
            var eg = r(65794);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return eg.recoverPublicKey
                }
            });
            var eb = r(29204);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return eb.recoverTypedDataAddress
                }
            });
            var ey = r(21574);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return ey.verifyMessage
                }
            });
            var ev = r(80704);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return ev.verifyTypedData
                }
            });
            var ew = r(39256);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return ew.hashMessage
                }
            });
            var eE = r(79118);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return eE.getSerializedTransactionType
                }
            });
            var eA = r(38408);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return eA.getTransactionType
                }
            });
            var eP = r(93960);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eP.assertRequest
                }
            });
            var ex = r(96590);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionLegacy
                }
            });
            var eO = r(71240);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return eO.parseTransaction
                }
            });
            var e_ = r(47561);
            Object.defineProperty(t, "prepareTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return e_.prepareTransactionRequest
                }
            });
            var eI = r(3375);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return eI.serializeTransaction
                }
            });
            var eT = r(31733);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return eT.serializeAccessList
                }
            });
            var eC = r(87948);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eC.formatEther
                }
            });
            var eS = r(53241);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return eS.formatGwei
                }
            });
            var ek = r(36070);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return ek.formatUnits
                }
            });
            var eM = r(22066);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return eM.parseUnits
                }
            });
            var eB = r(72850);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return eB.parseEther
                }
            });
            var eN = r(55536);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return eN.parseGwei
                }
            })
        },
        48208: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.observe = t.cleanupCache = t.listenersCache = void 0, t.listenersCache = new Map, t.cleanupCache = new Map;
            let r = 0;
            t.observe = function(e, n, i) {
                let o = ++r,
                    a = () => t.listenersCache.get(e) || [],
                    s = () => {
                        let r = a();
                        t.listenersCache.set(e, r.filter(e => e.id !== o))
                    },
                    u = () => {
                        let r = t.cleanupCache.get(e);
                        1 === a().length && r && r(), s()
                    },
                    c = a();
                if (t.listenersCache.set(e, [...c, {
                        id: o,
                        fns: n
                    }]), c && c.length > 0) return u;
                let l = {};
                for (let e in n) l[e] = (...t) => {
                    let r = a();
                    if (0 !== r.length)
                        for (let n of r) n.fns[e] ? .(...t)
                };
                let d = i(l);
                return "function" == typeof d && t.cleanupCache.set(e, d), u
            }
        },
        264: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.poll = void 0;
            let n = r(38155);
            t.poll = function(e, {
                emitOnBegin: t,
                initialWaitTime: r,
                interval: i
            }) {
                let o = !0,
                    a = () => o = !1;
                return (async () => {
                    let s;
                    t && (s = await e({
                        unpoll: a
                    }));
                    let u = await r ? .(s) ? ? i;
                    await (0, n.wait)(u);
                    let c = async () => {
                        o && (await e({
                            unpoll: a
                        }), await (0, n.wait)(i), c())
                    };
                    c()
                })(), a
            }
        },
        62752: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBatchScheduler = void 0;
            let r = new Map;
            t.createBatchScheduler = function({
                fn: e,
                id: t,
                shouldSplitBatch: n,
                wait: i = 0,
                sort: o
            }) {
                let a = async () => {
                        let t = c();
                        s();
                        let r = t.map(({
                            args: e
                        }) => e);
                        0 !== r.length && e(r).then(e => {
                            o && Array.isArray(e) && e.sort(o);
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.resolve ? .([e[r], e])
                            }
                        }).catch(e => {
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.reject ? .(e)
                            }
                        })
                    },
                    s = () => r.delete(t),
                    u = () => c().map(({
                        args: e
                    }) => e),
                    c = () => r.get(t) || [],
                    l = e => r.set(t, [...c(), e]);
                return {
                    flush: s,
                    async schedule(e) {
                        let t = {},
                            r = new Promise((e, r) => {
                                t.resolve = e, t.reject = r
                            });
                        return (n ? .([...u(), e]) && a(), c().length > 0) ? l({
                            args: e,
                            pendingPromise: t
                        }) : (l({
                            args: e,
                            pendingPromise: t
                        }), setTimeout(a, i)), r
                    }
                }
            }
        },
        84982: function(e, t) {
            "use strict";

            function r(e) {
                let r = (e, t) => ({
                        clear: () => t.delete(e),
                        get: () => t.get(e),
                        set: r => t.set(e, r)
                    }),
                    n = r(e, t.promiseCache),
                    i = r(e, t.responseCache);
                return {
                    clear: () => {
                        n.clear(), i.clear()
                    },
                    promise: n,
                    response: i
                }
            }
            async function n(e, {
                cacheKey: t,
                cacheTime: n = 1 / 0
            }) {
                let i = r(t),
                    o = i.response.get();
                if (o && n > 0 && new Date().getTime() - o.created.getTime() < n) return o.data;
                let a = i.promise.get();
                a || (a = e(), i.promise.set(a));
                try {
                    let e = await a;
                    return i.response.set({
                        created: new Date,
                        data: e
                    }), e
                } finally {
                    i.promise.clear()
                }
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withCache = t.getCache = t.responseCache = t.promiseCache = void 0, t.promiseCache = new Map, t.responseCache = new Map, t.getCache = r, t.withCache = n
        },
        96302: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withRetry = void 0;
            let n = r(38155);
            t.withRetry = function(e, {
                delay: t = 100,
                retryCount: r = 2,
                shouldRetry: i = () => !0
            } = {}) {
                return new Promise((o, a) => {
                    let s = async ({
                        count: u = 0
                    } = {}) => {
                        let c = async ({
                            error: e
                        }) => {
                            let r = "function" == typeof t ? t({
                                count: u,
                                error: e
                            }) : t;
                            r && await (0, n.wait)(r), s({
                                count: u + 1
                            })
                        };
                        try {
                            let t = await e();
                            o(t)
                        } catch (e) {
                            if (u < r && await i({
                                    count: u,
                                    error: e
                                })) return c({
                                error: e
                            });
                            a(e)
                        }
                    };
                    s()
                })
            }
        },
        94830: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withTimeout = void 0, t.withTimeout = function(e, {
                errorInstance: t = Error("timed out"),
                timeout: r,
                signal: n
            }) {
                return new Promise((i, o) => {
                    (async () => {
                        let a;
                        try {
                            let s = new AbortController;
                            r > 0 && (a = setTimeout(() => {
                                n ? s.abort() : o(t)
                            }, r)), i(await e({
                                signal: s ? .signal
                            }))
                        } catch (e) {
                            "AbortError" === e.name && o(t), o(e)
                        } finally {
                            clearTimeout(a)
                        }
                    })()
                })
            }
        },
        94088: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.integerRegex = t.bytesRegex = t.arrayRegex = void 0, t.arrayRegex = /^(.*)\[([0-9]*)\]$/, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/
        },
        37078: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rpc = t.getSocket = t.socketsCache = void 0;
            let n = r(15864),
                i = r(62377),
                o = r(62752),
                a = r(94830),
                s = r(12835),
                u = 0;
            async function c(e, {
                body: t,
                fetchOptions: r = {},
                timeout: n = 1e4
            }) {
                let {
                    headers: o,
                    method: c,
                    signal: l
                } = r;
                try {
                    let d;
                    let f = await (0, a.withTimeout)(async ({
                        signal: i
                    }) => await fetch(e, { ...r,
                        body: Array.isArray(t) ? (0, s.stringify)(t.map(e => ({
                            jsonrpc: "2.0",
                            id: e.id ? ? u++,
                            ...e
                        }))) : (0, s.stringify)({
                            jsonrpc: "2.0",
                            id: t.id ? ? u++,
                            ...t
                        }),
                        headers: { ...o,
                            "Content-Type": "application/json"
                        },
                        method: c || "POST",
                        signal: l || (n > 0 ? i : void 0)
                    }), {
                        errorInstance: new i.TimeoutError({
                            body: t,
                            url: e
                        }),
                        timeout: n,
                        signal: !0
                    });
                    if (d = f.headers.get("Content-Type") ? .startsWith("application/json") ? await f.json() : await f.text(), !f.ok) throw new i.HttpRequestError({
                        body: t,
                        details: (0, s.stringify)(d.error) || f.statusText,
                        headers: f.headers,
                        status: f.status,
                        url: e
                    });
                    return d
                } catch (r) {
                    if (r instanceof i.HttpRequestError || r instanceof i.TimeoutError) throw r;
                    throw new i.HttpRequestError({
                        body: t,
                        details: r.message,
                        url: e
                    })
                }
            }
            async function l(e) {
                let r = t.socketsCache.get(e);
                if (r) return r;
                let {
                    schedule: i
                } = (0, o.createBatchScheduler)({
                    id: e,
                    fn: async () => {
                        let i = new n.WebSocket(e),
                            o = new Map,
                            a = new Map,
                            s = ({
                                data: e
                            }) => {
                                let t = JSON.parse(e),
                                    r = "eth_subscription" === t.method,
                                    n = r ? t.params.subscription : t.id,
                                    i = r ? a : o,
                                    s = i.get(n);
                                s && s({
                                    data: e
                                }), r || i.delete(n)
                            },
                            u = () => {
                                t.socketsCache.delete(e), i.removeEventListener("close", u), i.removeEventListener("message", s)
                            };
                        return i.addEventListener("close", u), i.addEventListener("message", s), i.readyState === n.WebSocket.CONNECTING && await new Promise((e, t) => {
                            i && (i.onopen = e, i.onerror = t)
                        }), r = Object.assign(i, {
                            requests: o,
                            subscriptions: a
                        }), t.socketsCache.set(e, r), [r]
                    }
                }), [a, [s]] = await i();
                return s
            }
            async function d(e, {
                body: r,
                timeout: n = 1e4
            }) {
                return (0, a.withTimeout)(() => new Promise(n => t.rpc.webSocket(e, {
                    body: r,
                    onResponse: n
                })), {
                    errorInstance: new i.TimeoutError({
                        body: r,
                        url: e.url
                    }),
                    timeout: n
                })
            }
            t.socketsCache = new Map, t.getSocket = l, t.rpc = {
                http: c,
                webSocket: function(e, {
                    body: t,
                    onResponse: r
                }) {
                    if (e.readyState === e.CLOSED || e.readyState === e.CLOSING) throw new i.WebSocketRequestError({
                        body: t,
                        url: e.url,
                        details: "Socket is closed."
                    });
                    let n = u++,
                        o = ({
                            data: i
                        }) => {
                            let a = JSON.parse(i);
                            ("number" != typeof a.id || n === a.id) && (r ? .(a), "eth_subscribe" === t.method && "string" == typeof a.result && e.subscriptions.set(a.result, o), "eth_unsubscribe" === t.method && e.subscriptions.delete(t.params ? .[0]))
                        };
                    return e.requests.set(n, o), e.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...t,
                        id: n
                    })), e
                },
                webSocketAsync: d
            }
        },
        97116: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToHex = void 0;
            let n = r(46701),
                i = r(67256);
            t.compactSignatureToHex = function({
                r: e,
                yParityAndS: t
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}`
            }
        },
        59705: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToSignature = void 0;
            let n = r(48638),
                i = r(28510);
            t.compactSignatureToSignature = function({
                r: e,
                yParityAndS: t
            }) {
                let r = (0, n.hexToBytes)(t),
                    o = 128 & r[0] ? 28 n : 27 n;
                return 28 n === o && (r[0] &= 127), {
                    r: e,
                    s: (0, i.bytesToHex)(r),
                    v: o
                }
            }
        },
        39256: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashMessage = void 0;
            let n = r(14157),
                i = r(65133),
                o = r(48638),
                a = r(15146);
            t.hashMessage = function(e, t) {
                let r = "string" == typeof e ? (0, o.stringToBytes)(e) : e.raw instanceof Uint8Array ? e.raw : (0, o.toBytes)(e.raw),
                    s = (0, o.stringToBytes)(`${n.presignMessagePrefix}${r.length}`);
                return (0, a.keccak256)((0, i.concat)([s, r]), t)
            }
        },
        44390: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashDomain = t.hashTypedData = void 0;
            let n = r(9215),
                i = r(65133),
                o = r(28510),
                a = r(15146),
                s = r(93901);

            function u({
                domain: e,
                types: t
            }) {
                return c({
                    data: e,
                    primaryType: "EIP712Domain",
                    types: t
                })
            }

            function c({
                data: e,
                primaryType: t,
                types: r
            }) {
                let i = function e({
                    data: t,
                    primaryType: r,
                    types: i
                }) {
                    let s = [{
                            type: "bytes32"
                        }],
                        u = [function({
                            primaryType: e,
                            types: t
                        }) {
                            let r = (0, o.toHex)(function({
                                primaryType: e,
                                types: t
                            }) {
                                let r = "",
                                    n = function e({
                                        primaryType: t,
                                        types: r
                                    }, n = new Set) {
                                        let i = t.match(/^\w*/u),
                                            o = i ? .[0];
                                        if (n.has(o) || void 0 === r[o]) return n;
                                        for (let t of (n.add(o), r[o])) e({
                                            primaryType: t.type,
                                            types: r
                                        }, n);
                                        return n
                                    }({
                                        primaryType: e,
                                        types: t
                                    });
                                for (let i of (n.delete(e), [e, ...Array.from(n).sort()])) r += `${i}(${t[i].map(({name:e,type:t})=>`
                                $ {
                                    t
                                }
                                $ {
                                    e
                                }
                                `).join(",")})`;
                                return r
                            }({
                                primaryType: e,
                                types: t
                            }));
                            return (0, a.keccak256)(r)
                        }({
                            primaryType: r,
                            types: i
                        })];
                    for (let c of i[r]) {
                        let [r, l] = function t({
                            types: r,
                            name: i,
                            type: s,
                            value: u
                        }) {
                            if (void 0 !== r[s]) return [{
                                type: "bytes32"
                            }, (0, a.keccak256)(e({
                                data: u,
                                primaryType: s,
                                types: r
                            }))];
                            if ("bytes" === s) {
                                let e = u.length % 2 ? "0" : "";
                                return u = `0x${e+u.slice(2)}`, [{
                                    type: "bytes32"
                                }, (0, a.keccak256)(u)]
                            }
                            if ("string" === s) return [{
                                type: "bytes32"
                            }, (0, a.keccak256)((0, o.toHex)(u))];
                            if (s.lastIndexOf("]") === s.length - 1) {
                                let e = s.slice(0, s.lastIndexOf("[")),
                                    o = u.map(n => t({
                                        name: i,
                                        type: e,
                                        types: r,
                                        value: n
                                    }));
                                return [{
                                    type: "bytes32"
                                }, (0, a.keccak256)((0, n.encodeAbiParameters)(o.map(([e]) => e), o.map(([, e]) => e)))]
                            }
                            return [{
                                type: s
                            }, u]
                        }({
                            types: i,
                            name: c.name,
                            type: c.type,
                            value: t[c.name]
                        });
                        s.push(r), u.push(l)
                    }
                    return (0, n.encodeAbiParameters)(s, u)
                }({
                    data: e,
                    primaryType: t,
                    types: r
                });
                return (0, a.keccak256)(i)
            }
            t.hashTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: n
            }) {
                let o = void 0 === e ? {} : e,
                    l = {
                        EIP712Domain: (0, s.getTypesForEIP712Domain)({
                            domain: o
                        }),
                        ...n
                    };
                (0, s.validateTypedData)({
                    domain: o,
                    message: t,
                    primaryType: r,
                    types: l
                });
                let d = ["0x1901"];
                return o && d.push(u({
                    domain: o,
                    types: l
                })), "EIP712Domain" !== r && d.push(c({
                    data: t,
                    primaryType: r,
                    types: l
                })), (0, a.keccak256)((0, i.concat)(d))
            }, t.hashDomain = u
        },
        45763: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToCompactSignature = void 0;
            let n = r(46701),
                i = r(28510);
            t.hexToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130));
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    yParityAndS: (0, i.numberToHex)(r, {
                        size: 32
                    })
                }
            }
        },
        3980: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToSignature = void 0;
            let n = r(46701),
                i = r(28510);
            t.hexToSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130)), o = BigInt(`0x${e.slice(130)}`);
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    s: (0, i.numberToHex)(r, {
                        size: 32
                    }),
                    v: o
                }
            }
        },
        56911: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverAddress = void 0;
            let n = r(20461),
                i = r(65794);
            async function o({
                hash: e,
                signature: t
            }) {
                return (0, n.publicKeyToAddress)(await (0, i.recoverPublicKey)({
                    hash: e,
                    signature: t
                }))
            }
            t.recoverAddress = o
        },
        10907: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverMessageAddress = void 0;
            let n = r(39256),
                i = r(56911);
            async function o({
                message: e,
                signature: t
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashMessage)(e),
                    signature: t
                })
            }
            t.recoverMessageAddress = o
        },
        65794: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverPublicKey = void 0;
            let n = r(27239),
                i = r(67256),
                o = r(28510);
            async function a({
                hash: e,
                signature: t
            }) {
                let a = (0, n.isHex)(t) ? t : (0, o.toHex)(t),
                    s = (0, n.isHex)(e) ? e : (0, o.toHex)(e),
                    u = (0, i.hexToNumber)(`0x${a.slice(130)}`);
                (0 === u || 1 === u) && (u += 27);
                let {
                    secp256k1: c
                } = await Promise.resolve().then(() => r(46701)), l = c.Signature.fromCompact(a.substring(2, 130)).addRecoveryBit(u - 27).recoverPublicKey(s.substring(2)).toHex(!1);
                return `0x${l}`
            }
            t.recoverPublicKey = a
        },
        29204: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverTypedDataAddress = void 0;
            let n = r(44390),
                i = r(56911);
            async function o({
                domain: e,
                message: t,
                primaryType: r,
                signature: o,
                types: a
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashTypedData)({
                        domain: e,
                        message: t,
                        primaryType: r,
                        types: a
                    }),
                    signature: o
                })
            }
            t.recoverTypedDataAddress = o
        },
        26021: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToCompactSignature = void 0;
            let n = r(95707);
            t.signatureToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r,
                    v: i
                } = e, o = r;
                if (1 n === i - 27 n) {
                    let e = (0, n.hexToBytes)(r);
                    e[0] |= 128, o = (0, n.bytesToHex)(e)
                }
                return {
                    r: t,
                    yParityAndS: o
                }
            }
        },
        58810: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToHex = void 0;
            let n = r(46701),
                i = r(67256),
                o = r(28510);
            t.signatureToHex = function({
                r: e,
                s: t,
                v: r
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}${(0,o.toHex)(r).slice(2)}`
            }
        },
        21574: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(66967),
                i = r(88804),
                o = r(10907);
            async function a({
                address: e,
                message: t,
                signature: r
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverMessageAddress)({
                    message: t,
                    signature: r
                }))
            }
            t.verifyMessage = a
        },
        80704: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(66967),
                i = r(88804),
                o = r(29204);
            async function a({
                address: e,
                domain: t,
                message: r,
                primaryType: a,
                signature: s,
                types: u
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverTypedDataAddress)({
                    domain: t,
                    message: r,
                    primaryType: a,
                    signature: s,
                    types: u
                }))
            }
            t.verifyTypedData = a
        },
        12835: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringify = void 0, t.stringify = (e, t, r) => JSON.stringify(e, (e, r) => {
                let n = "bigint" == typeof r ? r.toString() : r;
                return "function" == typeof t ? t(e, n) : n
            }, r)
        },
        93960: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertRequest = void 0;
            let n = r(5974),
                i = r(99913),
                o = r(8922),
                a = r(88724),
                s = r(92061);
            t.assertRequest = function(e) {
                let {
                    account: t,
                    gasPrice: r,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c,
                    to: l
                } = e, d = t ? (0, n.parseAccount)(t) : void 0;
                if (d && !(0, s.isAddress)(d.address)) throw new i.InvalidAddressError({
                    address: d.address
                });
                if (l && !(0, s.isAddress)(l)) throw new i.InvalidAddressError({
                    address: l
                });
                if (void 0 !== r && (void 0 !== u || void 0 !== c)) throw new a.FeeConflictError;
                if (u && u > 2 n ** 256 n - 1 n) throw new o.FeeCapTooHighError({
                    maxFeePerGas: u
                });
                if (c && u && c > u) throw new o.TipAboveFeeCapError({
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c
                })
            }
        },
        96590: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = void 0;
            let n = r(99913),
                i = r(96477),
                o = r(2439),
                a = r(8922),
                s = r(92061);
            t.assertTransactionEIP1559 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: u,
                    maxFeePerGas: c,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (u) throw new i.BaseError("`gasPrice` is not a valid EIP-1559 Transaction attribute.");
                if (c && c > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: c
                });
                if (r && c && r > c) throw new a.TipAboveFeeCapError({
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: r
                })
            }, t.assertTransactionEIP2930 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: u,
                    maxFeePerGas: c,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (r || c) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");
                if (u && u > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: u
                })
            }, t.assertTransactionLegacy = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: u,
                    maxFeePerGas: c,
                    to: l,
                    accessList: d
                } = e;
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (void 0 !== t && t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (r || c) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");
                if (u && u > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: u
                });
                if (d) throw new i.BaseError("`accessList` is not a valid Legacy Transaction attribute.")
            }
        },
        79118: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSerializedTransactionType = void 0;
            let n = r(88724),
                i = r(27186),
                o = r(67256);
            t.getSerializedTransactionType = function(e) {
                let t = (0, i.sliceHex)(e, 0, 1);
                if ("0x02" === t) return "eip1559";
                if ("0x01" === t) return "eip2930";
                if ("0x" !== t && (0, o.hexToNumber)(t) >= 192) return "legacy";
                throw new n.InvalidSerializedTransactionTypeError({
                    serializedType: t
                })
            }
        },
        38408: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionType = void 0;
            let n = r(88724);
            t.getTransactionType = function(e) {
                if (e.type) return e.type;
                if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas) return "eip1559";
                if (void 0 !== e.gasPrice) return void 0 !== e.accessList ? "eip2930" : "legacy";
                throw new n.InvalidSerializableTransactionError({
                    transaction: e
                })
            }
        },
        71240: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccessList = t.toTransactionArray = t.parseTransaction = void 0;
            let n = r(99913),
                i = r(88724),
                o = r(92061),
                a = r(27239),
                s = r(38402),
                u = r(14772),
                c = r(67256),
                l = r(65064),
                d = r(8353),
                f = r(96590),
                h = r(79118);

            function p(e) {
                return (0, l.fromRlp)(`0x${e.slice(4)}`, "hex")
            }

            function m(e) {
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let [i, a] = e[r];
                    if (!(0, o.isAddress)(i)) throw new n.InvalidAddressError({
                        address: i
                    });
                    t.push({
                        address: i,
                        storageKeys: a.map(e => (0, d.isHash)(e) ? e : (0, u.trim)(e))
                    })
                }
                return t
            }

            function g(e) {
                let t = e.slice(-3),
                    r = "0x" === t[0] || 0 n === (0, c.hexToBigInt)(t[0]) ? 27 n : 28 n;
                return {
                    r: (0, s.padHex)(t[1], {
                        size: 32
                    }),
                    s: (0, s.padHex)(t[2], {
                        size: 32
                    }),
                    v: r,
                    yParity: 27 n === r ? 0 : 1
                }
            }
            t.parseTransaction = function(e) {
                let t = (0, h.getSerializedTransactionType)(e);
                return "eip1559" === t ? function(e) {
                    let t = p(e),
                        [r, n, o, s, u, l, d, h, b, y, v, w] = t;
                    if (!(9 === t.length || 12 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            maxPriorityFeePerGas: o,
                            maxFeePerGas: s,
                            gas: u,
                            to: l,
                            value: d,
                            data: h,
                            accessList: b,
                            ...t.length > 9 ? {
                                v: y,
                                r: v,
                                s: w
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip1559"
                    });
                    let E = {
                        chainId: (0, c.hexToNumber)(r),
                        type: "eip1559"
                    };
                    return (0, a.isHex)(l) && "0x" !== l && (E.to = l), (0, a.isHex)(u) && "0x" !== u && (E.gas = (0, c.hexToBigInt)(u)), (0, a.isHex)(h) && "0x" !== h && (E.data = h), (0, a.isHex)(n) && "0x" !== n && (E.nonce = (0, c.hexToNumber)(n)), (0, a.isHex)(d) && "0x" !== d && (E.value = (0, c.hexToBigInt)(d)), (0, a.isHex)(s) && "0x" !== s && (E.maxFeePerGas = (0, c.hexToBigInt)(s)), (0, a.isHex)(o) && "0x" !== o && (E.maxPriorityFeePerGas = (0, c.hexToBigInt)(o)), 0 !== b.length && "0x" !== b && (E.accessList = m(b)), (0, f.assertTransactionEIP1559)(E), { ...12 === t.length ? g(t) : void 0,
                        ...E
                    }
                }(e) : "eip2930" === t ? function(e) {
                    let t = p(e),
                        [r, n, o, s, u, l, d, h, b, y, v] = t;
                    if (!(8 === t.length || 11 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            gasPrice: o,
                            gas: s,
                            to: u,
                            value: l,
                            data: d,
                            accessList: h,
                            ...t.length > 8 ? {
                                v: b,
                                r: y,
                                s: v
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip2930"
                    });
                    let w = {
                        chainId: (0, c.hexToNumber)(r),
                        type: "eip2930"
                    };
                    return (0, a.isHex)(u) && "0x" !== u && (w.to = u), (0, a.isHex)(s) && "0x" !== s && (w.gas = (0, c.hexToBigInt)(s)), (0, a.isHex)(d) && "0x" !== d && (w.data = d), (0, a.isHex)(n) && "0x" !== n && (w.nonce = (0, c.hexToNumber)(n)), (0, a.isHex)(l) && "0x" !== l && (w.value = (0, c.hexToBigInt)(l)), (0, a.isHex)(o) && "0x" !== o && (w.gasPrice = (0, c.hexToBigInt)(o)), 0 !== h.length && "0x" !== h && (w.accessList = m(h)), (0, f.assertTransactionEIP2930)(w), { ...11 === t.length ? g(t) : void 0,
                        ...w
                    }
                }(e) : function(e) {
                    let t = (0, l.fromRlp)(e, "hex"),
                        [r, n, o, s, u, d, h, p, m] = t;
                    if (!(6 === t.length || 9 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            nonce: r,
                            gasPrice: n,
                            gas: o,
                            to: s,
                            value: u,
                            data: d,
                            ...t.length > 6 ? {
                                v: h,
                                r: p,
                                s: m
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "legacy"
                    });
                    let g = {
                        type: "legacy"
                    };
                    if ((0, a.isHex)(s) && "0x" !== s && (g.to = s), (0, a.isHex)(o) && "0x" !== o && (g.gas = (0, c.hexToBigInt)(o)), (0, a.isHex)(d) && "0x" !== d && (g.data = d), (0, a.isHex)(r) && "0x" !== r && (g.nonce = (0, c.hexToNumber)(r)), (0, a.isHex)(u) && "0x" !== u && (g.value = (0, c.hexToBigInt)(u)), (0, a.isHex)(n) && "0x" !== n && (g.gasPrice = (0, c.hexToBigInt)(n)), (0, f.assertTransactionLegacy)(g), 6 === t.length) return g;
                    let b = (0, a.isHex)(h) && "0x" !== h ? (0, c.hexToBigInt)(h) : 0 n;
                    if ("0x" === m && "0x" === p) return b > 0 && (g.chainId = Number(b)), g;
                    let y = Number((b - 35 n) / 2 n);
                    if (y > 0) g.chainId = y;
                    else if (27 n !== b && 28 n !== b) throw new i.InvalidLegacyVError({
                        v: b
                    });
                    return g.v = b, g.s = m, g.r = p, g
                }(e)
            }, t.toTransactionArray = p, t.parseAccessList = m
        },
        31733: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeAccessList = void 0;
            let n = r(99913),
                i = r(88724),
                o = r(92061);
            t.serializeAccessList = function(e) {
                if (!e || 0 === e.length) return [];
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let {
                        address: a,
                        storageKeys: s
                    } = e[r];
                    for (let e = 0; e < s.length; e++)
                        if (s[e].length - 2 != 64) throw new i.InvalidStorageKeySizeError({
                            storageKey: s[e]
                        });
                    if (!(0, o.isAddress)(a)) throw new n.InvalidAddressError({
                        address: a
                    });
                    t.push([a, s])
                }
                return t
            }
        },
        3375: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeTransaction = void 0;
            let n = r(88724),
                i = r(65133),
                o = r(14772),
                a = r(28510),
                s = r(44918),
                u = r(96590),
                c = r(38408),
                l = r(31733);
            t.serializeTransaction = function(e, t) {
                let r = (0, c.getTransactionType)(e);
                return "eip1559" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        nonce: c,
                        to: d,
                        value: f,
                        maxFeePerGas: h,
                        maxPriorityFeePerGas: p,
                        accessList: m,
                        data: g
                    } = e;
                    (0, u.assertTransactionEIP1559)(e);
                    let b = (0, l.serializeAccessList)(m),
                        y = [(0, a.toHex)(r), c ? (0, a.toHex)(c) : "0x", p ? (0, a.toHex)(p) : "0x", h ? (0, a.toHex)(h) : "0x", n ? (0, a.toHex)(n) : "0x", d ? ? "0x", f ? (0, a.toHex)(f) : "0x", g ? ? "0x", b];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, a.toHex)(1) : 27 n === t.v ? "0x" : (0, a.toHex)(1);
                        y.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x02", (0, s.toRlp)(y)])
                }(e, t) : "eip2930" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        data: c,
                        nonce: d,
                        to: f,
                        value: h,
                        accessList: p,
                        gasPrice: m
                    } = e;
                    (0, u.assertTransactionEIP2930)(e);
                    let g = (0, l.serializeAccessList)(p),
                        b = [(0, a.toHex)(r), d ? (0, a.toHex)(d) : "0x", m ? (0, a.toHex)(m) : "0x", n ? (0, a.toHex)(n) : "0x", f ? ? "0x", h ? (0, a.toHex)(h) : "0x", c ? ? "0x", g];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, a.toHex)(1) : 27 n === t.v ? "0x" : (0, a.toHex)(1);
                        b.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x01", (0, s.toRlp)(b)])
                }(e, t) : function(e, t) {
                    let {
                        chainId: r = 0,
                        gas: i,
                        data: o,
                        nonce: c,
                        to: l,
                        value: d,
                        gasPrice: f
                    } = e;
                    (0, u.assertTransactionLegacy)(e);
                    let h = [c ? (0, a.toHex)(c) : "0x", f ? (0, a.toHex)(f) : "0x", i ? (0, a.toHex)(i) : "0x", l ? ? "0x", d ? (0, a.toHex)(d) : "0x", o ? ? "0x"];
                    if (t) {
                        let e = (() => {
                            if (r > 0) return BigInt(2 * r) + BigInt(35 n + t.v - 27 n);
                            if (t.v >= 35 n) return (t.v - 35 n) / 2 n > 0 ? t.v : 27 n + (35 n === t.v ? 0 n : 1 n);
                            let e = 27 n + (27 n === t.v ? 0 n : 1 n);
                            if (t.v !== e) throw new n.InvalidLegacyVError({
                                v: t.v
                            });
                            return e
                        })();
                        h = [...h, (0, a.toHex)(e), t.r, t.s]
                    } else r > 0 && (h = [...h, (0, a.toHex)(r), "0x", "0x"]);
                    return (0, s.toRlp)(h)
                }(e, t)
            }
        },
        93901: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.domainSeparator = t.getTypesForEIP712Domain = t.validateTypedData = void 0;
            let n = r(35362),
                i = r(99913),
                o = r(92061),
                a = r(65945),
                s = r(28510),
                u = r(94088),
                c = r(44390);

            function l({
                domain: e
            }) {
                return ["string" == typeof e ? .name && {
                    name: "name",
                    type: "string"
                }, e ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof e ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, e ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, e ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }
            t.validateTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: c
            }) {
                let l = (e, t) => {
                    for (let r of e) {
                        let {
                            name: e,
                            type: d
                        } = r, f = t[e], h = d.match(u.integerRegex);
                        if (h && ("number" == typeof f || "bigint" == typeof f)) {
                            let [e, t, r] = h;
                            (0, s.numberToHex)(f, {
                                signed: "int" === t,
                                size: parseInt(r) / 8
                            })
                        }
                        if ("address" === d && "string" == typeof f && !(0, o.isAddress)(f)) throw new i.InvalidAddressError({
                            address: f
                        });
                        let p = d.match(u.bytesRegex);
                        if (p) {
                            let [e, t] = p;
                            if (t && (0, a.size)(f) !== parseInt(t)) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(t),
                                givenSize: (0, a.size)(f)
                            })
                        }
                        let m = c[d];
                        m && l(m, f)
                    }
                };
                c.EIP712Domain && e && l(c.EIP712Domain, e), "EIP712Domain" !== r && l(c[r], t)
            }, t.getTypesForEIP712Domain = l, t.domainSeparator = function({
                domain: e
            }) {
                return (0, c.hashDomain)({
                    domain: e,
                    types: {
                        EIP712Domain: l({
                            domain: e
                        })
                    }
                })
            }
        },
        62475: function(e, t) {
            "use strict";
            let r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uid = void 0;
            let n = 256;
            t.uid = function(e = 11) {
                if (!r || n + e > 512) {
                    r = "", n = 0;
                    for (let e = 0; e < 256; e++) r += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                }
                return r.substring(n, n++ + e)
            }
        },
        87948: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatEther = void 0;
            let n = r(4865),
                i = r(36070);
            t.formatEther = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.etherUnits[t])
            }
        },
        53241: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatGwei = void 0;
            let n = r(4865),
                i = r(36070);
            t.formatGwei = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.gweiUnits[t])
            }
        },
        36070: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatUnits = void 0, t.formatUnits = function(e, t) {
                let r = e.toString(),
                    n = r.startsWith("-");
                n && (r = r.slice(1));
                let [i, o] = [(r = r.padStart(t, "0")).slice(0, r.length - t), r.slice(r.length - t)];
                return o = o.replace(/(0+)$/, ""), `${n?"-":""}${i||"0"}${o?`.${o}`:""}`
            }
        },
        72850: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseEther = void 0;
            let n = r(4865),
                i = r(22066);
            t.parseEther = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.etherUnits[t])
            }
        },
        55536: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseGwei = void 0;
            let n = r(4865),
                i = r(22066);
            t.parseGwei = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.gweiUnits[t])
            }
        },
        22066: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseUnits = void 0, t.parseUnits = function(e, t) {
                let [r, n = "0"] = e.split("."), i = r.startsWith("-");
                if (i && (r = r.slice(1)), n = n.replace(/(0+)$/, ""), 0 === t) 1 === Math.round(Number(`.${n}`)) && (r = `${BigInt(r)+1n}`), n = "";
                else if (n.length > t) {
                    let [e, i, o] = [n.slice(0, t - 1), n.slice(t - 1, t), n.slice(t)], a = Math.round(Number(`${i}.${o}`));
                    (n = a > 9 ? `${BigInt(e)+BigInt(1)}0`.padStart(e.length + 1, "0") : `${e}${a}`).length > t && (n = n.slice(1), r = `${BigInt(r)+1n}`), n = n.slice(0, t)
                } else n = n.padEnd(t, "0");
                return BigInt(`${i?"-":""}${r}${n}`)
            }
        },
        38155: function(e, t) {
            "use strict";
            async function r(e) {
                return new Promise(t => setTimeout(t, e))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wait = void 0, t.wait = r
        },
        14430: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = r(7470);
            class i extends Error {
                constructor(e, t = {}) {
                    let r = t.cause instanceof i ? t.cause.details : t.cause ? .message ? t.cause.message : t.details,
                        o = t.cause instanceof i && t.cause.docsPath || t.docsPath;
                    super([e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...o ? [`Docs: https://abitype.dev${o}`] : [], ...r ? [`Details: ${r}`] : [], `Version: abitype@${n.version}`].join("\n")), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiTypeError"
                    }), t.cause && (this.cause = t.cause), this.details = r, this.docsPath = o, this.metaMessages = t.metaMessages, this.shortMessage = e
                }
            }
            t.BaseError = i
        },
        9538: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownSolidityTypeError = t.UnknownTypeError = t.InvalidAbiItemError = void 0;
            let n = r(14430);
            class i extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Failed to parse ABI item.", {
                        details: `parseAbiItem(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiitem-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiItemError"
                    })
                }
            }
            t.InvalidAbiItemError = i;
            class o extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownTypeError"
                    })
                }
            }
            t.UnknownTypeError = o;
            class a extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSolidityTypeError"
                    })
                }
            }
            t.UnknownSolidityTypeError = a
        },
        11517: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAbiTypeParameterError = t.InvalidFunctionModifierError = t.InvalidModifierError = t.SolidityProtectedKeywordError = t.InvalidParameterError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = void 0;
            let n = r(14430);
            class i extends n.BaseError {
                constructor({
                    param: e
                }) {
                    super("Failed to parse ABI parameter.", {
                        details: `parseAbiParameter(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiparameter-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiParameterError"
                    })
                }
            }
            t.InvalidAbiParameterError = i;
            class o extends n.BaseError {
                constructor({
                    params: e
                }) {
                    super("Failed to parse ABI parameters.", {
                        details: `parseAbiParameters(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiparameters-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiParametersError"
                    })
                }
            }
            t.InvalidAbiParametersError = o;
            class a extends n.BaseError {
                constructor({
                    param: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParameterError"
                    })
                }
            }
            t.InvalidParameterError = a;
            class s extends n.BaseError {
                constructor({
                    param: e,
                    name: t
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SolidityProtectedKeywordError"
                    })
                }
            }
            t.SolidityProtectedKeywordError = s;
            class u extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: r
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${r}" not allowed${t?` in "${t}" type`:""}.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidModifierError"
                    })
                }
            }
            t.InvalidModifierError = u;
            class c extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: r
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${r}" not allowed${t?` in "${t}" type`:""}.`, `Data location can only be specified for array, struct, or mapping types, but "${r}" was given.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidFunctionModifierError"
                    })
                }
            }
            t.InvalidFunctionModifierError = c;
            class l extends n.BaseError {
                constructor({
                    abiParameter: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: JSON.stringify(e, null, 2),
                        metaMessages: ["ABI parameter type is invalid."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiTypeParameterError"
                    })
                }
            }
            t.InvalidAbiTypeParameterError = l
        },
        81025: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidStructSignatureError = t.UnknownSignatureError = t.InvalidSignatureError = void 0;
            let n = r(14430);
            class i extends n.BaseError {
                constructor({
                    signature: e,
                    type: t
                }) {
                    super(`Invalid ${t} signature.`, {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSignatureError"
                    })
                }
            }
            t.InvalidSignatureError = i;
            class o extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Unknown signature.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSignatureError"
                    })
                }
            }
            t.UnknownSignatureError = o;
            class a extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Invalid struct signature.", {
                        details: e,
                        metaMessages: ["No properties exist."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStructSignatureError"
                    })
                }
            }
            t.InvalidStructSignatureError = a
        },
        7109: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidParenthesisError = void 0;
            let n = r(14430);
            class i extends n.BaseError {
                constructor({
                    current: e,
                    depth: t
                }) {
                    super("Unbalanced parentheses.", {
                        metaMessages: [`"${e.trim()}" has too many ${t>0?"opening":"closing"} parentheses.`],
                        details: `Depth "${t}"`
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParenthesisError"
                    })
                }
            }
            t.InvalidParenthesisError = i
        },
        36076: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = void 0;
            let n = r(14430);
            class i extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Circular reference detected.", {
                        metaMessages: [`Struct "${e}" is a circular reference.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CircularReferenceError"
                    })
                }
            }
            t.CircularReferenceError = i
        },
        84194: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbi = void 0;
            let n = r(75485);
            t.formatAbi = function(e) {
                let t = [],
                    r = e.length;
                for (let i = 0; i < r; i++) {
                    let r = e[i],
                        o = (0, n.formatAbiItem)(r);
                    t.push(o)
                }
                return t
            }
        },
        75485: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItem = void 0;
            let n = r(41087);
            t.formatAbiItem = function(e) {
                return "function" === e.type ? `function ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})${e.stateMutability&&"nonpayable"!==e.stateMutability?` ${e.stateMutability}`:""}${e.outputs.length?` returns (${(0,n.formatAbiParameters)(e.outputs)})`:""}` : "event" === e.type ? `event ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "error" === e.type ? `error ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "constructor" === e.type ? `constructor(${(0,n.formatAbiParameters)(e.inputs)})${"payable"===e.stateMutability?" payable":""}` : "fallback" === e.type ? "fallback()" : "receive() external payable"
            }
        },
        50235: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameter = void 0;
            let n = r(13903),
                i = /^tuple(?<array>(\[(\d*)\])*)$/;
            t.formatAbiParameter = function e(t) {
                let r = t.type;
                if (i.test(t.type) && "components" in t) {
                    r = "(";
                    let o = t.components.length;
                    for (let n = 0; n < o; n++) r += e(t.components[n]), n < o - 1 && (r += ", ");
                    let a = (0, n.execTyped)(i, t.type);
                    return r += `)${a?.array??""}`, e({ ...t,
                        type: r
                    })
                }
                return ("indexed" in t && t.indexed && (r = `${r} indexed`), t.name) ? `${r} ${t.name}` : r
            }
        },
        41087: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameters = void 0;
            let n = r(50235);
            t.formatAbiParameters = function(e) {
                let t = "",
                    r = e.length;
                for (let i = 0; i < r; i++) {
                    let o = e[i];
                    t += (0, n.formatAbiParameter)(o), i !== r - 1 && (t += ", ")
                }
                return t
            }
        },
        18084: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbi = void 0;
            let n = r(90285),
                i = r(64510),
                o = r(54073);
            t.parseAbi = function(e) {
                let t = (0, i.parseStructs)(e),
                    r = [],
                    a = e.length;
                for (let i = 0; i < a; i++) {
                    let a = e[i];
                    (0, n.isStructSignature)(a) || r.push((0, o.parseSignature)(a, t))
                }
                return r
            }
        },
        73293: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiItem = void 0;
            let n = r(40609),
                i = r(90285),
                o = r(64510),
                a = r(54073);
            t.parseAbiItem = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseSignature)(e);
                else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if (!(0, i.isStructSignature)(n)) {
                            t = (0, a.parseSignature)(n, r);
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiItemError({
                    signature: e
                });
                return t
            }
        },
        78455: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameter = void 0;
            let n = r(40609),
                i = r(90285),
                o = r(64510),
                a = r(54073);
            t.parseAbiParameter = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseAbiParameter)(e, {
                    modifiers: i.modifiers
                });
                else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if (!(0, i.isStructSignature)(n)) {
                            t = (0, a.parseAbiParameter)(n, {
                                modifiers: i.modifiers,
                                structs: r
                            });
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiParameterError({
                    param: e
                });
                return t
            }
        },
        83427: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameters = void 0;
            let n = r(40609),
                i = r(90285),
                o = r(64510),
                a = r(54073),
                s = r(54073);
            t.parseAbiParameters = function(e) {
                let t = [];
                if ("string" == typeof e) {
                    let r = (0, a.splitParameters)(e),
                        n = r.length;
                    for (let e = 0; e < n; e++) t.push((0, s.parseAbiParameter)(r[e], {
                        modifiers: i.modifiers
                    }))
                } else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if ((0, i.isStructSignature)(n)) continue;
                        let u = (0, a.splitParameters)(n),
                            c = u.length;
                        for (let e = 0; e < c; e++) t.push((0, s.parseAbiParameter)(u[e], {
                            modifiers: i.modifiers,
                            structs: r
                        }))
                    }
                }
                if (0 === t.length) throw new n.InvalidAbiParametersError({
                    params: e
                });
                return t
            }
        },
        82812: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parameterCache = t.getParameterCacheKey = void 0, t.getParameterCacheKey = function(e, t) {
                return t ? `${t}:${e}` : e
            }, t.parameterCache = new Map([
                ["address", {
                    type: "address"
                }],
                ["bool", {
                    type: "bool"
                }],
                ["bytes", {
                    type: "bytes"
                }],
                ["bytes32", {
                    type: "bytes32"
                }],
                ["int", {
                    type: "int256"
                }],
                ["int256", {
                    type: "int256"
                }],
                ["string", {
                    type: "string"
                }],
                ["uint", {
                    type: "uint256"
                }],
                ["uint8", {
                    type: "uint8"
                }],
                ["uint16", {
                    type: "uint16"
                }],
                ["uint24", {
                    type: "uint24"
                }],
                ["uint32", {
                    type: "uint32"
                }],
                ["uint64", {
                    type: "uint64"
                }],
                ["uint96", {
                    type: "uint96"
                }],
                ["uint112", {
                    type: "uint112"
                }],
                ["uint160", {
                    type: "uint160"
                }],
                ["uint192", {
                    type: "uint192"
                }],
                ["uint256", {
                    type: "uint256"
                }],
                ["address owner", {
                    type: "address",
                    name: "owner"
                }],
                ["address to", {
                    type: "address",
                    name: "to"
                }],
                ["bool approved", {
                    type: "bool",
                    name: "approved"
                }],
                ["bytes _data", {
                    type: "bytes",
                    name: "_data"
                }],
                ["bytes data", {
                    type: "bytes",
                    name: "data"
                }],
                ["bytes signature", {
                    type: "bytes",
                    name: "signature"
                }],
                ["bytes32 hash", {
                    type: "bytes32",
                    name: "hash"
                }],
                ["bytes32 r", {
                    type: "bytes32",
                    name: "r"
                }],
                ["bytes32 root", {
                    type: "bytes32",
                    name: "root"
                }],
                ["bytes32 s", {
                    type: "bytes32",
                    name: "s"
                }],
                ["string name", {
                    type: "string",
                    name: "name"
                }],
                ["string symbol", {
                    type: "string",
                    name: "symbol"
                }],
                ["string tokenURI", {
                    type: "string",
                    name: "tokenURI"
                }],
                ["uint tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint8 v", {
                    type: "uint8",
                    name: "v"
                }],
                ["uint256 balance", {
                    type: "uint256",
                    name: "balance"
                }],
                ["uint256 tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint256 value", {
                    type: "uint256",
                    name: "value"
                }],
                ["event:address indexed from", {
                    type: "address",
                    name: "from",
                    indexed: !0
                }],
                ["event:address indexed to", {
                    type: "address",
                    name: "to",
                    indexed: !0
                }],
                ["event:uint indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }],
                ["event:uint256 indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }]
            ])
        },
        90285: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.functionModifiers = t.eventModifiers = t.modifiers = t.isReceiveSignature = t.isFallbackSignature = t.execConstructorSignature = t.isConstructorSignature = t.execStructSignature = t.isStructSignature = t.execFunctionSignature = t.isFunctionSignature = t.execEventSignature = t.isEventSignature = t.execErrorSignature = t.isErrorSignature = void 0;
            let n = r(13903),
                i = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
            t.isErrorSignature = function(e) {
                return i.test(e)
            }, t.execErrorSignature = function(e) {
                return (0, n.execTyped)(i, e)
            };
            let o = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
            t.isEventSignature = function(e) {
                return o.test(e)
            }, t.execEventSignature = function(e) {
                return (0, n.execTyped)(o, e)
            };
            let a = /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/;
            t.isFunctionSignature = function(e) {
                return a.test(e)
            }, t.execFunctionSignature = function(e) {
                return (0, n.execTyped)(a, e)
            };
            let s = /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/;
            t.isStructSignature = function(e) {
                return s.test(e)
            }, t.execStructSignature = function(e) {
                return (0, n.execTyped)(s, e)
            };
            let u = /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
            t.isConstructorSignature = function(e) {
                return u.test(e)
            }, t.execConstructorSignature = function(e) {
                return (0, n.execTyped)(u, e)
            };
            let c = /^fallback\(\)$/;
            t.isFallbackSignature = function(e) {
                return c.test(e)
            };
            let l = /^receive\(\) external payable$/;
            t.isReceiveSignature = function(e) {
                return l.test(e)
            }, t.modifiers = new Set(["memory", "indexed", "storage", "calldata"]), t.eventModifiers = new Set(["indexed"]), t.functionModifiers = new Set(["calldata", "memory", "storage"])
        },
        64510: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseStructs = void 0;
            let n = r(13903),
                i = r(9538),
                o = r(11517),
                a = r(81025),
                s = r(36076),
                u = r(90285),
                c = r(54073);
            t.parseStructs = function(e) {
                let t = {},
                    r = e.length;
                for (let n = 0; n < r; n++) {
                    let r = e[n];
                    if (!(0, u.isStructSignature)(r)) continue;
                    let i = (0, u.execStructSignature)(r);
                    if (!i) throw new a.InvalidSignatureError({
                        signature: r,
                        type: "struct"
                    });
                    let o = i.properties.split(";"),
                        s = [],
                        l = o.length;
                    for (let e = 0; e < l; e++) {
                        let t = o[e].trim();
                        if (!t) continue;
                        let r = (0, c.parseAbiParameter)(t, {
                            type: "struct"
                        });
                        s.push(r)
                    }
                    if (!s.length) throw new a.InvalidStructSignatureError({
                        signature: r
                    });
                    t[i.name] = s
                }
                let d = {},
                    f = Object.entries(t),
                    h = f.length;
                for (let e = 0; e < h; e++) {
                    let [r, a] = f[e];
                    d[r] = function e(t, r, a = new Set) {
                        let u = [],
                            d = t.length;
                        for (let f = 0; f < d; f++) {
                            let d = t[f];
                            if (n.isTupleRegex.test(d.type)) u.push(d);
                            else {
                                let t = (0, n.execTyped)(l, d.type);
                                if (!t ? .type) throw new o.InvalidAbiTypeParameterError({
                                    abiParameter: d
                                });
                                let {
                                    array: f,
                                    type: h
                                } = t;
                                if (h in r) {
                                    if (a.has(h)) throw new s.CircularReferenceError({
                                        type: h
                                    });
                                    u.push({ ...d,
                                        type: `tuple${f??""}`,
                                        components: e(r[h] ? ? [], r, new Set([...a, h]))
                                    })
                                } else if ((0, c.isSolidityType)(h)) u.push(d);
                                else throw new i.UnknownTypeError({
                                    type: h
                                })
                            }
                        }
                        return u
                    }(a, t)
                }
                return d
            };
            let l = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/
        },
        54073: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isValidDataLocation = t.isSolidityKeyword = t.isSolidityType = t.splitParameters = t.parseAbiParameter = t.parseSignature = void 0;
            let n = r(13903),
                i = r(9538),
                o = r(11517),
                a = r(81025),
                s = r(7109),
                u = r(82812),
                c = r(90285);
            t.parseSignature = function(e, t = {}) {
                if ((0, c.isFunctionSignature)(e)) {
                    let r = (0, c.execFunctionSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "function"
                    });
                    let n = p(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(h(n[e], {
                        modifiers: c.functionModifiers,
                        structs: t,
                        type: "function"
                    }));
                    let s = [];
                    if (r.returns) {
                        let e = p(r.returns),
                            n = e.length;
                        for (let r = 0; r < n; r++) s.push(h(e[r], {
                            modifiers: c.functionModifiers,
                            structs: t,
                            type: "function"
                        }))
                    }
                    return {
                        name: r.name,
                        type: "function",
                        stateMutability: r.stateMutability ? ? "nonpayable",
                        inputs: i,
                        outputs: s
                    }
                }
                if ((0, c.isEventSignature)(e)) {
                    let r = (0, c.execEventSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "event"
                    });
                    let n = p(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(h(n[e], {
                        modifiers: c.eventModifiers,
                        structs: t,
                        type: "event"
                    }));
                    return {
                        name: r.name,
                        type: "event",
                        inputs: i
                    }
                }
                if ((0, c.isErrorSignature)(e)) {
                    let r = (0, c.execErrorSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "error"
                    });
                    let n = p(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(h(n[e], {
                        structs: t,
                        type: "error"
                    }));
                    return {
                        name: r.name,
                        type: "error",
                        inputs: i
                    }
                }
                if ((0, c.isConstructorSignature)(e)) {
                    let r = (0, c.execConstructorSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "constructor"
                    });
                    let n = p(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(h(n[e], {
                        structs: t,
                        type: "constructor"
                    }));
                    return {
                        type: "constructor",
                        stateMutability: r.stateMutability ? ? "nonpayable",
                        inputs: i
                    }
                }
                if ((0, c.isFallbackSignature)(e)) return {
                    type: "fallback"
                };
                if ((0, c.isReceiveSignature)(e)) return {
                    type: "receive",
                    stateMutability: "payable"
                };
                throw new a.UnknownSignatureError({
                    signature: e
                })
            };
            let l = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
                d = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
                f = /^u?int$/;

            function h(e, t) {
                let r;
                let a = (0, u.getParameterCacheKey)(e, t ? .type);
                if (u.parameterCache.has(a)) return u.parameterCache.get(a);
                let s = n.isTupleRegex.test(e),
                    g = (0, n.execTyped)(s ? d : l, e);
                if (!g) throw new o.InvalidParameterError({
                    param: e
                });
                if (g.name && b(g.name)) throw new o.SolidityProtectedKeywordError({
                    param: e,
                    name: g.name
                });
                let v = g.name ? {
                        name: g.name
                    } : {},
                    w = "indexed" === g.modifier ? {
                        indexed: !0
                    } : {},
                    E = t ? .structs ? ? {},
                    A = {};
                if (s) {
                    r = "tuple";
                    let e = p(g.type),
                        t = [],
                        n = e.length;
                    for (let r = 0; r < n; r++) t.push(h(e[r], {
                        structs: E
                    }));
                    A = {
                        components: t
                    }
                } else if (g.type in E) r = "tuple", A = {
                    components: E[g.type]
                };
                else if (f.test(g.type)) r = `${g.type}256`;
                else if (r = g.type, t ? .type !== "struct" && !m(r)) throw new i.UnknownSolidityTypeError({
                    type: r
                });
                if (g.modifier) {
                    if (!t ? .modifiers ? .has ? .(g.modifier)) throw new o.InvalidModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: g.modifier
                    });
                    if (c.functionModifiers.has(g.modifier) && !y(r, !!g.array)) throw new o.InvalidFunctionModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: g.modifier
                    })
                }
                let P = {
                    type: `${r}${g.array??""}`,
                    ...v,
                    ...w,
                    ...A
                };
                return u.parameterCache.set(a, P), P
            }

            function p(e, t = [], r = "", n = 0) {
                if ("" === e) {
                    if ("" === r) return t;
                    if (0 !== n) throw new s.InvalidParenthesisError({
                        current: r,
                        depth: n
                    });
                    return t.push(r.trim()), t
                }
                let i = e.length;
                for (let o = 0; o < i; o++) {
                    let i = e[o],
                        a = e.slice(o + 1);
                    switch (i) {
                        case ",":
                            return 0 === n ? p(a, [...t, r.trim()]) : p(a, t, `${r}${i}`, n);
                        case "(":
                            return p(a, t, `${r}${i}`, n + 1);
                        case ")":
                            return p(a, t, `${r}${i}`, n - 1);
                        default:
                            return p(a, t, `${r}${i}`, n)
                    }
                }
                return []
            }

            function m(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || n.bytesRegex.test(e) || n.integerRegex.test(e)
            }
            t.parseAbiParameter = h, t.splitParameters = p, t.isSolidityType = m;
            let g = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;

            function b(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || "tuple" === e || n.bytesRegex.test(e) || n.integerRegex.test(e) || g.test(e)
            }

            function y(e, t) {
                return t || "bytes" === e || "string" === e || "tuple" === e
            }
            t.isSolidityKeyword = b, t.isValidDataLocation = y
        },
        40609: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = t.InvalidParenthesisError = t.UnknownSignatureError = t.InvalidSignatureError = t.InvalidStructSignatureError = t.InvalidAbiParameterError = t.InvalidAbiParametersError = t.InvalidParameterError = t.SolidityProtectedKeywordError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.UnknownSolidityTypeError = t.InvalidAbiItemError = t.UnknownTypeError = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.formatAbiParameters = t.formatAbiParameter = t.formatAbiItem = t.formatAbi = t.narrow = t.BaseError = void 0;
            var n = r(14430);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return n.BaseError
                }
            });
            var i = r(40842);
            Object.defineProperty(t, "narrow", {
                enumerable: !0,
                get: function() {
                    return i.narrow
                }
            });
            var o = r(84194);
            Object.defineProperty(t, "formatAbi", {
                enumerable: !0,
                get: function() {
                    return o.formatAbi
                }
            });
            var a = r(75485);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return a.formatAbiItem
                }
            });
            var s = r(50235);
            Object.defineProperty(t, "formatAbiParameter", {
                enumerable: !0,
                get: function() {
                    return s.formatAbiParameter
                }
            });
            var u = r(41087);
            Object.defineProperty(t, "formatAbiParameters", {
                enumerable: !0,
                get: function() {
                    return u.formatAbiParameters
                }
            });
            var c = r(18084);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return c.parseAbi
                }
            });
            var l = r(73293);
            Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return l.parseAbiItem
                }
            });
            var d = r(78455);
            Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return d.parseAbiParameter
                }
            });
            var f = r(83427);
            Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return f.parseAbiParameters
                }
            });
            var h = r(9538);
            Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return h.UnknownTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return h.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "UnknownSolidityTypeError", {
                enumerable: !0,
                get: function() {
                    return h.UnknownSolidityTypeError
                }
            });
            var p = r(11517);
            Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidModifierError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return p.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidAbiParameterError
                }
            });
            var m = r(81025);
            Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return m.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return m.InvalidSignatureError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return m.UnknownSignatureError
                }
            });
            var g = r(7109);
            Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return g.InvalidParenthesisError
                }
            });
            var b = r(36076);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return b.CircularReferenceError
                }
            })
        },
        40842: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.narrow = void 0, t.narrow = function(e) {
                return e
            }
        },
        13903: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isTupleRegex = t.integerRegex = t.bytesRegex = t.execTyped = void 0, t.execTyped = function(e, t) {
                let r = e.exec(t);
                return r ? .groups
            }, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/, t.isTupleRegex = /^\(.+?\).*?$/
        },
        7470: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "0.9.8"
        },
        44483: function(e, t, r) {
            "use strict";
            r.d(t, {
                I: function() {
                    return n
                }
            });
            var n = '{\n  "connect_wallet": {\n    "label": "Connect Wallet",\n    "wrong_network": {\n      "label": "Wrong network"\n    }\n  },\n\n  "intro": {\n    "title": "What is a Wallet?",\n    "description": "A wallet is used to send, receive, store, and display digital assets. It\'s also a new way to log in, without needing to create new accounts and passwords on every website.",\n    "digital_asset": {\n      "title": "A Home for your Digital Assets",\n      "description": "Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs."\n    },\n    "login": {\n      "title": "A New Way to Log In",\n      "description": "Instead of creating new accounts and passwords on every website, just connect your wallet."\n    },\n    "get": {\n      "label": "Get a Wallet"\n    },\n    "learn_more": {\n      "label": "Learn More"\n    }\n  },\n\n  "sign_in": {\n    "label": "Verify your account",\n    "description": "To finish connecting, you must sign a message in your wallet to verify that you are the owner of this account.",\n    "message": {\n      "send": "Sign message",\n      "preparing": "Preparing message...",\n      "cancel": "Cancel",\n      "preparing_error": "Error preparing message, please retry!"\n    },\n    "signature": {\n      "waiting": "Waiting for signature...",\n      "verifying": "Verifying signature...",\n      "signing_error": "Error signing message, please retry!",\n      "verifying_error": "Error verifying signature, please retry!",\n      "oops_error": "Oops, something went wrong!"\n    }\n  },\n\n  "connect": {\n    "label": "Connect",\n    "title": "Connect a Wallet",\n    "new_to_ethereum": {\n      "description": "New to Ethereum wallets?",\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "learn_more": {\n      "label": "Learn more"\n    },\n    "recent": "Recent",\n    "status": {\n      "opening": "Opening %{wallet}...",\n      "connecting": "Connecting",\n      "connect_mobile": "Continue in %{wallet}",\n      "not_installed": "%{wallet} is not installed",\n      "not_available": "%{wallet} is not available",\n      "confirm": "Confirm connection in the extension",\n      "confirm_mobile": "Accept connection request in the wallet"\n    },\n    "secondary_action": {\n      "get": {\n        "description": "Don\'t have %{wallet}?",\n        "label": "GET"\n      },\n      "install": {\n        "label": "INSTALL"\n      },\n      "retry": {\n        "label": "RETRY"\n      }\n    },\n    "walletconnect": {\n      "description": {\n        "full": "Need the official WalletConnect modal?",\n        "compact": "Need the WalletConnect modal?"\n      },\n      "open": {\n        "label": "OPEN"\n      }\n    }\n  },\n\n  "connect_scan": {\n    "title": "Scan with %{wallet}",\n    "fallback_title": "Scan with your phone"\n  },\n\n  "connector_group": {\n    "recommended": "Recommended",\n    "other": "Other",\n    "popular": "Popular",\n    "more": "More",\n    "others": "Others"\n  },\n\n  "get": {\n    "title": "Get a Wallet",\n    "action": {\n      "label": "GET"\n    },\n    "mobile": {\n      "description": "Mobile Wallet"\n    },\n    "extension": {\n      "description": "Browser Extension"\n    },\n    "mobile_and_extension": {\n      "description": "Mobile Wallet and Extension"\n    },\n    "mobile_and_desktop": {\n      "description": "Mobile and Desktop Wallet"\n    },\n    "looking_for": {\n      "title": "Not what you\'re looking for?",\n      "mobile": {\n        "description": "Select a wallet on the main screen to get started with a different wallet provider."\n      },\n      "desktop": {\n        "compact_description": "Select a wallet on the main screen to get started with a different wallet provider.",\n        "wide_description": "Select a wallet on the left to get started with a different wallet provider."\n      }\n    }\n  },\n\n  "get_options": {\n    "title": "Get started with %{wallet}",\n    "short_title": "Get %{wallet}",\n    "mobile": {\n      "title": "%{wallet} for Mobile",\n      "description": "Use the mobile wallet to explore the world of Ethereum.",\n      "download": {\n        "label": "Get the app"\n      }\n    },\n    "extension": {\n      "title": "%{wallet} for %{browser}",\n      "description": "Access your wallet right from your favorite web browser.",\n      "download": {\n        "label": "Add to %{browser}"\n      }\n    },\n    "desktop": {\n      "title": "%{wallet} for %{platform}",\n      "description": "Access your wallet natively from your powerful desktop.",\n      "download": {\n        "label": "Add to %{platform}"\n      }\n    }\n  },\n\n  "get_mobile": {\n    "title": "Install %{wallet}",\n    "description": "Scan with your phone to download on iOS or Android",\n    "continue": {\n      "label": "Continue"\n    }\n  },\n\n  "get_instructions": {\n    "mobile": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "extension": {\n      "refresh": {\n        "label": "Refresh"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "desktop": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    }\n  },\n\n  "chains": {\n    "title": "Switch Networks",\n    "wrong_network": "Wrong network detected, switch or disconnect to continue.",\n    "confirm": "Confirm in Wallet",\n    "switching_not_supported": "Your wallet does not support switching networks from %{appName}. Try switching networks from within your wallet instead.",\n    "switching_not_supported_fallback": "Your wallet does not support switching networks from this app. Try switching networks from within your wallet instead.",\n    "disconnect": "Disconnect",\n    "connected": "Connected"\n  },\n\n  "profile": {\n    "disconnect": {\n      "label": "Disconnect"\n    },\n    "copy_address": {\n      "label": "Copy Address",\n      "copied": "Copied!"\n    },\n    "explorer": {\n      "label": "View more on explorer"\n    },\n    "transactions": {\n      "description": "%{appName} transactions will appear here...",\n      "description_fallback": "Your transactions will appear here...",\n      "recent": {\n        "title": "Recent Transactions"\n      },\n      "clear": {\n        "label": "Clear All"\n      }\n    }\n  },\n\n  "wallet_connectors": {\n    "argent": {\n      "qr_code": {\n        "step1": {\n          "description": "Put Argent on your home screen for faster access to your wallet.",\n          "title": "Open the Argent app"\n        },\n        "step2": {\n          "description": "Create a wallet and username, or import an existing wallet.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the Scan QR button"\n        }\n      }\n    },\n\n    "bifrost": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bifrost Wallet on your home screen for quicker access.",\n          "title": "Open the Bifrost Wallet app"\n        },\n        "step2": {\n          "description": "Create or import a wallet using your recovery phrase.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "bitget": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bitget Wallet on your home screen for quicker access.",\n          "title": "Open the Bitget Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitget Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitget Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "bitski": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitski to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitski extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "coin98": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coin98 Wallet on your home screen for faster access to your wallet.",\n          "title": "Open the Coin98 Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "Click at the top right of your browser and pin Coin98 Wallet for easy access.",\n          "title": "Install the Coin98 Wallet extension"\n        },\n        "step2": {\n          "description": "Create a new wallet or import an existing one.",\n          "title": "Create or Import a wallet"\n        },\n        "step3": {\n          "description": "Once you set up Coin98 Wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "coinbase": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coinbase Wallet on your home screen for quicker access.",\n          "title": "Open the Coinbase Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using the cloud backup feature.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Coinbase Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "core": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Core on your home screen for faster access to your wallet.",\n          "title": "Open the Core app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Core to your taskbar for quicker access to your wallet.",\n          "title": "Install the Core extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "fox": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting FoxWallet on your home screen for quicker access.",\n          "title": "Open the FoxWallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "frontier": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Frontier Wallet on your home screen for quicker access.",\n          "title": "Open the Frontier Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frontier Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Frontier Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "im_token": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the imToken app",\n          "description": "Put imToken app on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap Scanner Icon in top right corner",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "metamask": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the MetaMask app",\n          "description": "We recommend putting MetaMask on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the MetaMask extension",\n          "description": "We recommend pinning MetaMask to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "okx": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the OKX Wallet app",\n          "description": "We recommend putting OKX Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the OKX Wallet extension",\n          "description": "We recommend pinning OKX Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "omni": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Omni app",\n          "description": "Add Omni to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your home screen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "token_pocket": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the TokenPocket app",\n          "description": "We recommend putting TokenPocket on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the TokenPocket extension",\n          "description": "We recommend pinning TokenPocket to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "trust": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Trust Wallet app",\n          "description": "Put Trust Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Trust Wallet extension",\n          "description": "Click at the top right of your browser and pin Trust Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up Trust Wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "uniswap": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Uniswap app",\n          "description": "Add Uniswap Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "zerion": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Zerion app",\n          "description": "We recommend putting Zerion on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Zerion extension",\n          "description": "We recommend pinning Zerion to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rainbow": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Rainbow app",\n          "description": "We recommend putting Rainbow on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "You can easily backup your wallet using our backup feature on your phone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "enkrypt": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Enkrypt Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Enkrypt Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "frame": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frame to your taskbar for quicker access to your wallet.",\n          "title": "Install Frame & the companion extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "one_key": {\n      "extension": {\n        "step1": {\n          "title": "Install the OneKey Wallet extension",\n          "description": "We recommend pinning OneKey Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "phantom": {\n      "extension": {\n        "step1": {\n          "title": "Install the Phantom extension",\n          "description": "We recommend pinning Phantom to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rabby": {\n      "extension": {\n        "step1": {\n          "title": "Install the Rabby extension",\n          "description": "We recommend pinning Rabby to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safeheron": {\n      "extension": {\n        "step1": {\n          "title": "Install the Core extension",\n          "description": "We recommend pinning Safeheron to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "taho": {\n      "extension": {\n        "step1": {\n          "title": "Install the Taho extension",\n          "description": "We recommend pinning Taho to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "talisman": {\n      "extension": {\n        "step1": {\n          "title": "Install the Talisman extension",\n          "description": "We recommend pinning Talisman to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import an Ethereum Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "xdefi": {\n      "extension": {\n        "step1": {\n          "title": "Install the XDEFI Wallet extension",\n          "description": "We recommend pinning XDEFI Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "zeal": {\n      "extension": {\n        "step1": {\n          "title": "Install the Zeal extension",\n          "description": "We recommend pinning Zeal to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safepal": {\n      "extension": {\n        "step1": {\n          "title": "Install the SafePal Wallet extension",\n          "description": "Click at the top right of your browser and pin SafePal Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up SafePal Wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SafePal Wallet app",\n          "description": "Put SafePal Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "desig": {\n      "extension": {\n        "step1": {\n          "title": "Install the Desig extension",\n          "description": "We recommend pinning Desig to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "subwallet": {\n      "extension": {\n        "step1": {\n          "title": "Install the SubWallet extension",\n          "description": "We recommend pinning SubWallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SubWallet app",\n          "description": "We recommend putting SubWallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "clv": {\n      "extension": {\n        "step1": {\n          "title": "Install the CLV Wallet extension",\n          "description": "We recommend pinning CLV Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the CLV Wallet app",\n          "description": "We recommend putting CLV Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "okto": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Okto app",\n          "description": "Add Okto to your home screen for quick access"\n        },\n        "step2": {\n          "title": "Create an MPC Wallet",\n          "description": "Create an account and generate a wallet"\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Tap the Scan QR icon at the top right and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "ledger": {\n      "desktop": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "Set up a new Ledger or connect to an existing one."\n        },\n        "step3": {\n          "title": "Connect",\n          "description": "A connection prompt will appear for you to connect your wallet."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "You can either sync with the desktop app or connect your Ledger."\n        },\n        "step3": {\n          "title": "Scan the code",\n          "description": "Tap WalletConnect then Switch to Scanner. After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    }\n  }\n}\n'
        },
        28598: function(e, t, r) {
            "use strict";
            r.d(t, {
                $: function() {
                    return s
                }
            });
            var n = r(20070),
                i = "#1A1B1F",
                o = {
                    blue: {
                        accentColor: "#3898FF",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#4BD166",
                        accentColorForeground: i
                    },
                    orange: {
                        accentColor: "#FF983D",
                        accentColorForeground: i
                    },
                    pink: {
                        accentColor: "#FF7AB8",
                        accentColorForeground: i
                    },
                    purple: {
                        accentColor: "#7A70FF",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FF6257",
                        accentColorForeground: "#FFF"
                    }
                },
                a = o.blue,
                s = function() {
                    let {
                        accentColor: e = a.accentColor,
                        accentColorForeground: t = a.accentColorForeground,
                        ...r
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return { ...(0, n.w)(r),
                        colors: {
                            accentColor: e,
                            accentColorForeground: t,
                            actionButtonBorder: "rgba(255, 255, 255, 0.04)",
                            actionButtonBorderMobile: "rgba(255, 255, 255, 0.08)",
                            actionButtonSecondaryBackground: "rgba(255, 255, 255, 0.08)",
                            closeButton: "rgba(224, 232, 255, 0.6)",
                            closeButtonBackground: "rgba(255, 255, 255, 0.08)",
                            connectButtonBackground: i,
                            connectButtonBackgroundError: "#FF494A",
                            connectButtonInnerBackground: "linear-gradient(0deg, rgba(255, 255, 255, 0.075), rgba(255, 255, 255, 0.15))",
                            connectButtonText: "#FFF",
                            connectButtonTextError: "#FFF",
                            connectionIndicator: "#30E000",
                            downloadBottomCardBackground: "linear-gradient(126deg, rgba(0, 0, 0, 0) 9.49%, rgba(120, 120, 120, 0.2) 71.04%), #1A1B1F",
                            downloadTopCardBackground: "linear-gradient(126deg, rgba(120, 120, 120, 0.2) 9.49%, rgba(0, 0, 0, 0) 71.04%), #1A1B1F",
                            error: "#FF494A",
                            generalBorder: "rgba(255, 255, 255, 0.08)",
                            generalBorderDim: "rgba(255, 255, 255, 0.04)",
                            menuItemBackground: "rgba(224, 232, 255, 0.1)",
                            modalBackdrop: "rgba(0, 0, 0, 0.5)",
                            modalBackground: "#1A1B1F",
                            modalBorder: "rgba(255, 255, 255, 0.08)",
                            modalText: "#FFF",
                            modalTextDim: "rgba(224, 232, 255, 0.3)",
                            modalTextSecondary: "rgba(255, 255, 255, 0.6)",
                            profileAction: "rgba(224, 232, 255, 0.1)",
                            profileActionHover: "rgba(224, 232, 255, 0.2)",
                            profileForeground: "rgba(224, 232, 255, 0.05)",
                            selectedOptionBorder: "rgba(224, 232, 255, 0.1)",
                            standby: "#FFD641"
                        },
                        shadows: {
                            connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                            dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                            profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                            selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                            selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                            walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                        }
                    }
                };
            s.accentColors = o
        },
        38507: function(e, t, r) {
            "use strict";
            r.d(t, {
                W: function() {
                    return a
                }
            });
            var n = r(20070),
                i = {
                    blue: {
                        accentColor: "#0E76FD",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#1DB847",
                        accentColorForeground: "#FFF"
                    },
                    orange: {
                        accentColor: "#FF801F",
                        accentColorForeground: "#FFF"
                    },
                    pink: {
                        accentColor: "#FF5CA0",
                        accentColorForeground: "#FFF"
                    },
                    purple: {
                        accentColor: "#5F5AFA",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FA423C",
                        accentColorForeground: "#FFF"
                    }
                },
                o = i.blue,
                a = function() {
                    let {
                        accentColor: e = o.accentColor,
                        accentColorForeground: t = o.accentColorForeground,
                        ...r
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return { ...(0, n.w)(r),
                        colors: {
                            accentColor: e,
                            accentColorForeground: t,
                            actionButtonBorder: "rgba(0, 0, 0, 0.04)",
                            actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
                            actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
                            closeButton: "rgba(60, 66, 66, 0.8)",
                            closeButtonBackground: "rgba(0, 0, 0, 0.06)",
                            connectButtonBackground: "#FFF",
                            connectButtonBackgroundError: "#FF494A",
                            connectButtonInnerBackground: "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
                            connectButtonText: "#25292E",
                            connectButtonTextError: "#FFF",
                            connectionIndicator: "#30E000",
                            downloadBottomCardBackground: "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
                            downloadTopCardBackground: "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
                            error: "#FF494A",
                            generalBorder: "rgba(0, 0, 0, 0.06)",
                            generalBorderDim: "rgba(0, 0, 0, 0.03)",
                            menuItemBackground: "rgba(60, 66, 66, 0.1)",
                            modalBackdrop: "rgba(0, 0, 0, 0.3)",
                            modalBackground: "#FFF",
                            modalBorder: "transparent",
                            modalText: "#25292E",
                            modalTextDim: "rgba(60, 66, 66, 0.3)",
                            modalTextSecondary: "rgba(60, 66, 66, 0.6)",
                            profileAction: "#FFF",
                            profileActionHover: "rgba(255, 255, 255, 0.5)",
                            profileForeground: "rgba(60, 66, 66, 0.06)",
                            selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
                            standby: "#FFD641"
                        },
                        shadows: {
                            connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                            dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                            profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                            selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                            selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
                            walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                        }
                    }
                };
            a.accentColors = i
        },
        20070: function(e, t, r) {
            "use strict";
            r.d(t, {
                w: function() {
                    return s
                }
            });
            var n = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                i = {
                    rounded: 'SFRounded, ui-rounded, "SF Pro Rounded", '.concat(n),
                    system: n
                },
                o = {
                    large: {
                        actionButton: "9999px",
                        connectButton: "12px",
                        modal: "24px",
                        modalMobile: "28px"
                    },
                    medium: {
                        actionButton: "10px",
                        connectButton: "8px",
                        modal: "16px",
                        modalMobile: "18px"
                    },
                    none: {
                        actionButton: "0px",
                        connectButton: "0px",
                        modal: "0px",
                        modalMobile: "0px"
                    },
                    small: {
                        actionButton: "4px",
                        connectButton: "4px",
                        modal: "8px",
                        modalMobile: "8px"
                    }
                },
                a = {
                    large: {
                        modalOverlay: "blur(20px)"
                    },
                    none: {
                        modalOverlay: "blur(0px)"
                    },
                    small: {
                        modalOverlay: "blur(4px)"
                    }
                },
                s = e => {
                    let {
                        borderRadius: t = "large",
                        fontStack: r = "rounded",
                        overlayBlur: n = "none"
                    } = e;
                    return {
                        blurs: {
                            modalOverlay: a[n].modalOverlay
                        },
                        fonts: {
                            body: i[r]
                        },
                        radii: {
                            actionButton: o[t].actionButton,
                            connectButton: o[t].connectButton,
                            menuButton: o[t].connectButton,
                            modal: o[t].modal,
                            modalMobile: o[t].modalMobile
                        }
                    }
                }
        },
        96219: function(e, t, r) {
            "use strict";
            r.d(t, {
                Ho: function() {
                    return n.bP
                },
                St: function() {
                    return n.bY
                },
                dr: function() {
                    return n.bX
                },
                iV: function() {
                    return n.bU
                }
            });
            var n = r(94808);
            r(2265), r(54887)
        },
        37626: function(e, t, r) {
            "use strict";

            function n(e) {
                return "string" == typeof e ? Number.parseInt(e, "0x" === e.trim().substring(0, 2) ? 16 : 10) : "bigint" == typeof e ? Number(e) : e
            }
            r.d(t, {
                J: function() {
                    return n
                }
            })
        },
        99640: function(e, t, r) {
            "use strict";
            r.d(t, {
                _: function() {
                    return f
                }
            });
            var n, i = r(54812),
                o = r(37626),
                a = r(21872),
                s = r(99112),
                u = r(96329),
                c = r(14696),
                l = r(69532),
                d = r(95046),
                f = class extends a.wR {
                    constructor({
                        chains: e,
                        options: t
                    } = {}) {
                        let r = {
                            shimDisconnect: !0,
                            getProvider() {
                                if ("undefined" == typeof window) return;
                                let e = window.ethereum;
                                return e ? .providers && e.providers.length > 0 ? e.providers[0] : e
                            },
                            ...t
                        };
                        super({
                            chains: e,
                            options: r
                        }), this.id = "injected", (0, a.Ko)(this, n, void 0), this.shimDisconnectKey = `${this.id}.shimDisconnect`, this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, s.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = (0, o.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = async e => {
                            !(1013 === e.code && await this.getProvider() && await this.getAccount()) && (this.emit("disconnect"), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                        };
                        let i = r.getProvider();
                        if ("string" == typeof r.name) this.name = r.name;
                        else if (i) {
                            let e = function(e) {
                                if (!e) return "Injected";
                                let t = e => e.isApexWallet ? "Apex Wallet" : e.isAvalanche ? "Core Wallet" : e.isBackpack ? "Backpack" : e.isBifrost ? "Bifrost Wallet" : e.isBitKeep ? "BitKeep" : e.isBitski ? "Bitski" : e.isBlockWallet ? "BlockWallet" : e.isBraveWallet ? "Brave Wallet" : e.isCoin98 ? "Coin98 Wallet" : e.isCoinbaseWallet ? "Coinbase Wallet" : e.isDawn ? "Dawn Wallet" : e.isDefiant ? "Defiant" : e.isDesig ? "Desig Wallet" : e.isEnkrypt ? "Enkrypt" : e.isExodus ? "Exodus" : e.isFordefi ? "Fordefi" : e.isFrame ? "Frame" : e.isFrontier ? "Frontier Wallet" : e.isGamestop ? "GameStop Wallet" : e.isHaqqWallet ? "HAQQ Wallet" : e.isHyperPay ? "HyperPay Wallet" : e.isImToken ? "ImToken" : e.isHaloWallet ? "Halo Wallet" : e.isKuCoinWallet ? "KuCoin Wallet" : e.isMathWallet ? "MathWallet" : e.isNovaWallet ? "Nova Wallet" : e.isOkxWallet || e.isOKExWallet ? "OKX Wallet" : e.isOktoWallet ? "Okto Wallet" : e.isOneInchIOSWallet || e.isOneInchAndroidWallet ? "1inch Wallet" : e.isOneKey ? "OneKey Wallet" : e.isOpera ? "Opera" : e.isPhantom ? "Phantom" : e.isPortal ? "Ripio Portal" : e.isRabby ? "Rabby Wallet" : e.isRainbow ? "Rainbow" : e.isSafePal ? "SafePal Wallet" : e.isStatus ? "Status" : e.isSubWallet ? "SubWallet" : e.isTalisman ? "Talisman" : e.isTally ? "Taho" : e.isTokenPocket ? "TokenPocket" : e.isTokenary ? "Tokenary" : e.isTrust || e.isTrustWallet ? "Trust Wallet" : e.isTTWallet ? "TTWallet" : e.isXDEFI ? "XDEFI Wallet" : e.isZeal ? "Zeal" : e.isZerion ? "Zerion" : e.isMetaMask ? "MetaMask" : void 0;
                                if (e.providers ? .length) {
                                    let r = new Set,
                                        n = 1;
                                    for (let i of e.providers) {
                                        let e = t(i);
                                        e || (e = `Unknown Wallet #${n}`, n += 1), r.add(e)
                                    }
                                    let i = [...r];
                                    return i.length ? i : i[0] ? ? "Injected"
                                }
                                return t(e) ? ? "Injected"
                            }(i);
                            r.name ? this.name = r.name(e) : "string" == typeof e ? this.name = e : this.name = e[0]
                        } else this.name = "Injected";
                        this.ready = !!i
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = await this.getProvider();
                            if (!t) throw new i.N;
                            t.on && (t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect)), this.emit("message", {
                                type: "connecting"
                            });
                            let r = await t.request({
                                    method: "eth_requestAccounts"
                                }),
                                n = (0, s.K)(r[0]),
                                o = await this.getChainId(),
                                a = this.isChainUnsupported(o);
                            return e && o !== e && (o = (await this.switchChain(e)).id, a = this.isChainUnsupported(o)), this.options.shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                                account: n,
                                chain: {
                                    id: o,
                                    unsupported: a
                                }
                            }
                        } catch (e) {
                            if (this.isUserRejectedRequestError(e)) throw new u.ab(e);
                            if (-32002 === e.code) throw new u.pT(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        e ? .removeListener && (e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                    }
                    async getAccount() {
                        let e = await this.getProvider();
                        if (!e) throw new i.N;
                        let t = await e.request({
                            method: "eth_accounts"
                        });
                        return (0, s.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        if (!e) throw new i.N;
                        return e.request({
                            method: "eth_chainId"
                        }).then(o.J)
                    }
                    async getProvider() {
                        let e = this.options.getProvider();
                        return e && (0, a.qx)(this, n, e), (0, a.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider(), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, c.K)({
                            account: r,
                            chain: n,
                            transport: (0, l.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            if (this.options.shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) return !1;
                            if (!await this.getProvider()) throw new i.N;
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = await this.getProvider();
                        if (!t) throw new i.N;
                        let r = (0, d.eC)(e);
                        try {
                            return await Promise.all([t.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: r
                                }]
                            }), new Promise(t => this.on("change", ({
                                chain: r
                            }) => {
                                r ? .id === e && t()
                            }))]), this.chains.find(t => t.id === e) ? ? {
                                id: e,
                                name: `Chain ${r}`,
                                network: `${r}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    },
                                    public: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (o) {
                            let n = this.chains.find(t => t.id === e);
                            if (!n) throw new i.B({
                                chainId: e,
                                connectorId: this.id
                            });
                            if (4902 === o.code || o ? .data ? .originalError ? .code === 4902) try {
                                if (await t.request({
                                        method: "wallet_addEthereumChain",
                                        params: [{
                                            chainId: r,
                                            chainName: n.name,
                                            nativeCurrency: n.nativeCurrency,
                                            rpcUrls: [n.rpcUrls.public ? .http[0] ? ? ""],
                                            blockExplorerUrls: this.getBlockExplorerUrls(n)
                                        }]
                                    }), await this.getChainId() !== e) throw new u.ab(Error("User rejected switch after adding network."));
                                return n
                            } catch (e) {
                                throw new u.ab(e)
                            }
                            if (this.isUserRejectedRequestError(o)) throw new u.ab(o);
                            throw new u.x3(o)
                        }
                    }
                    async watchAsset({
                        address: e,
                        decimals: t = 18,
                        image: r,
                        symbol: n
                    }) {
                        let o = await this.getProvider();
                        if (!o) throw new i.N;
                        return o.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    decimals: t,
                                    image: r,
                                    symbol: n
                                }
                            }
                        })
                    }
                    isUserRejectedRequestError(e) {
                        return 4001 === e.code
                    }
                };
            n = new WeakMap
        },
        54812: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return n
                },
                N: function() {
                    return i
                }
            });
            var n = class extends Error {
                    constructor({
                        chainId: e,
                        connectorId: t
                    }) {
                        super(`Chain "${e}" not configured for connector "${t}".`), this.name = "ChainNotConfiguredForConnectorError"
                    }
                },
                i = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorNotFoundError", this.message = "Connector not found"
                    }
                }
        },
        21872: function(e, t, r) {
            "use strict";
            r.d(t, {
                wR: function() {
                    return d
                },
                Ko: function() {
                    return u
                },
                ac: function() {
                    return s
                },
                U9: function() {
                    return l
                },
                qx: function() {
                    return c
                }
            });
            var n = r(43872),
                i = r(16491);
            let o = (0, r(95258).a)({
                id: 5,
                network: "goerli",
                name: "Goerli",
                nativeCurrency: {
                    name: "Goerli Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-goerli.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-goerli.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://goerli.infura.io/v3"],
                        webSocket: ["wss://goerli.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    },
                    public: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0x56522D00C410a43BFfDF00a9A569489297385790",
                        blockCreated: 8765204
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 6507670
                    }
                },
                testnet: !0
            });
            var a = (e, t, r) => {
                    if (!t.has(e)) throw TypeError("Cannot " + r)
                },
                s = (e, t, r) => (a(e, t, "read from private field"), r ? r.call(e) : t.get(e)),
                u = (e, t, r) => {
                    if (t.has(e)) throw TypeError("Cannot add the same private member more than once");
                    t instanceof WeakSet ? t.add(e) : t.set(e, r)
                },
                c = (e, t, r, n) => (a(e, t, "write to private field"), n ? n.call(e, r) : t.set(e, r), r),
                l = (e, t, r) => (a(e, t, "access private method"), r),
                d = class extends n {
                    constructor({
                        chains: e = [i.R, o],
                        options: t
                    }) {
                        super(), this.chains = e, this.options = t
                    }
                    getBlockExplorerUrls(e) {
                        let {
                            default: t,
                            ...r
                        } = e.blockExplorers ? ? {};
                        if (t) return [t.url, ...Object.values(r).map(e => e.url)]
                    }
                    isChainUnsupported(e) {
                        return !this.chains.some(t => t.id === e)
                    }
                    setStorage(e) {
                        this.storage = e
                    }
                }
        },
        27964: function(e, t, r) {
            "use strict";
            r.d(t, {
                D: function() {
                    return h
                }
            });
            var n, i, o = r(54812),
                a = r(37626),
                s = r(21872),
                u = r(99112),
                c = r(96329),
                l = r(14696),
                d = r(69532),
                f = r(95046),
                h = class extends s.wR {
                    constructor({
                        chains: e,
                        options: t
                    }) {
                        super({
                            chains: e,
                            options: {
                                reloadOnDisconnect: !1,
                                ...t
                            }
                        }), this.id = "coinbaseWallet", this.name = "Coinbase Wallet", this.ready = !0, (0, s.Ko)(this, n, void 0), (0, s.Ko)(this, i, void 0), this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, u.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = (0, a.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            this.emit("disconnect")
                        }
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = await this.getProvider();
                            t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect), this.emit("message", {
                                type: "connecting"
                            });
                            let r = await t.enable(),
                                n = (0, u.K)(r[0]),
                                i = await this.getChainId(),
                                o = this.isChainUnsupported(i);
                            return e && i !== e && (i = (await this.switchChain(e)).id, o = this.isChainUnsupported(i)), {
                                account: n,
                                chain: {
                                    id: i,
                                    unsupported: o
                                }
                            }
                        } catch (e) {
                            if (/(user closed modal|accounts received is empty)/i.test(e.message)) throw new c.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        if (!(0, s.ac)(this, i)) return;
                        let e = await this.getProvider();
                        e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), e.disconnect(), e.close()
                    }
                    async getAccount() {
                        let e = await this.getProvider(),
                            t = await e.request({
                                method: "eth_accounts"
                            });
                        return (0, u.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        return (0, a.J)(e.chainId)
                    }
                    async getProvider() {
                        if (!(0, s.ac)(this, i)) {
                            let e = (await Promise.all([r.e(6080), r.e(6942)]).then(r.t.bind(r, 86080, 19))).default;
                            "function" != typeof e && "function" == typeof e.default && (e = e.default), (0, s.qx)(this, n, new e(this.options));
                            let t = s.ac(this, n).walletExtension ? .getChainId(),
                                o = this.chains.find(e => this.options.chainId ? e.id === this.options.chainId : e.id === t) || this.chains[0],
                                a = this.options.chainId || o ? .id,
                                u = this.options.jsonRpcUrl || o ? .rpcUrls.default.http[0];
                            (0, s.qx)(this, i, (0, s.ac)(this, n).makeWeb3Provider(u, a))
                        }
                        return (0, s.ac)(this, i)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider(), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, l.K)({
                            account: r,
                            chain: n,
                            transport: (0, d.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = await this.getProvider(),
                            r = (0, f.eC)(e);
                        try {
                            return await t.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: r
                                }]
                            }), this.chains.find(t => t.id === e) ? ? {
                                id: e,
                                name: `Chain ${r}`,
                                network: `${r}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    },
                                    public: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (i) {
                            let n = this.chains.find(t => t.id === e);
                            if (!n) throw new o.B({
                                chainId: e,
                                connectorId: this.id
                            });
                            if (4902 === i.code) try {
                                return await t.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: r,
                                        chainName: n.name,
                                        nativeCurrency: n.nativeCurrency,
                                        rpcUrls: [n.rpcUrls.public ? .http[0] ? ? ""],
                                        blockExplorerUrls: this.getBlockExplorerUrls(n)
                                    }]
                                }), n
                            } catch (e) {
                                throw new c.ab(e)
                            }
                            throw new c.x3(i)
                        }
                    }
                    async watchAsset({
                        address: e,
                        decimals: t = 18,
                        image: r,
                        symbol: n
                    }) {
                        return (await this.getProvider()).request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    decimals: t,
                                    image: r,
                                    symbol: n
                                }
                            }
                        })
                    }
                };
            n = new WeakMap, i = new WeakMap
        },
        83834: function(e, t, r) {
            "use strict";
            r.d(t, {
                i: function() {
                    return c
                }
            });
            var n, i = r(99640),
                o = r(54812),
                a = r(21872),
                s = r(96329),
                u = r(99112),
                c = class extends i._ {
                    constructor({
                        chains: e,
                        options: t
                    } = {}) {
                        let r = {
                            name: "MetaMask",
                            shimDisconnect: !0,
                            getProvider() {
                                function e(e) {
                                    if (e ? .isMetaMask && (!e.isBraveWallet || e._events || e._state) && !e.isApexWallet && !e.isAvalanche && !e.isBitKeep && !e.isBlockWallet && !e.isCoin98 && !e.isFordefi && !e.isMathWallet && !e.isOkxWallet && !e.isOKExWallet && !e.isOneInchIOSWallet && !e.isOneInchAndroidWallet && !e.isOpera && !e.isPortal && !e.isRabby && !e.isDefiant && !e.isTokenPocket && !e.isTokenary && !e.isZeal && !e.isZerion) return e
                                }
                                if ("undefined" == typeof window) return;
                                let t = window.ethereum;
                                return t ? .providers ? t.providers.find(e) : e(t)
                            },
                            ...t
                        };
                        super({
                            chains: e,
                            options: r
                        }), this.id = "metaMask", this.shimDisconnectKey = `${this.id}.shimDisconnect`, (0, a.Ko)(this, n, void 0), (0, a.qx)(this, n, r.UNSTABLE_shimOnConnectSelectAccount)
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = await this.getProvider();
                            if (!t) throw new o.N;
                            t.on && (t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect)), this.emit("message", {
                                type: "connecting"
                            });
                            let r = null;
                            if ((0, a.ac)(this, n) && this.options ? .shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey) && (r = await this.getAccount().catch(() => null))) try {
                                await t.request({
                                    method: "wallet_requestPermissions",
                                    params: [{
                                        eth_accounts: {}
                                    }]
                                }), r = await this.getAccount()
                            } catch (e) {
                                if (this.isUserRejectedRequestError(e)) throw new s.ab(e);
                                if (e.code === new s.pT(e).code) throw e
                            }
                            if (!r) {
                                let e = await t.request({
                                    method: "eth_requestAccounts"
                                });
                                r = (0, u.K)(e[0])
                            }
                            let i = await this.getChainId(),
                                c = this.isChainUnsupported(i);
                            return e && i !== e && (i = (await this.switchChain(e)).id, c = this.isChainUnsupported(i)), this.options ? .shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                                account: r,
                                chain: {
                                    id: i,
                                    unsupported: c
                                },
                                provider: t
                            }
                        } catch (e) {
                            if (this.isUserRejectedRequestError(e)) throw new s.ab(e);
                            if (-32002 === e.code) throw new s.pT(e);
                            throw e
                        }
                    }
                };
            n = new WeakMap
        },
        67969: function(e, t, r) {
            "use strict";
            r.d(t, {
                J: function() {
                    return h
                }
            });
            var n, i, o = r(54812),
                a = r(37626),
                s = r(21872),
                u = r(64022),
                c = r(86325),
                l = r(99112),
                d = r(14696),
                f = r(69532),
                h = class extends s.wR {
                    constructor({
                        chains: e,
                        options: t
                    }) {
                        let r = {
                            shimDisconnect: !1,
                            ...t
                        };
                        super({
                            chains: e,
                            options: r
                        }), this.id = "safe", this.name = "Safe", this.ready = "undefined" != typeof window && window ? .parent !== window, (0, s.Ko)(this, n, void 0), (0, s.Ko)(this, i, void 0), this.shimDisconnectKey = `${this.id}.shimDisconnect`;
                        let o = c;
                        "function" != typeof c && "function" == typeof c.default && (o = c.default), (0, s.qx)(this, i, new o(r))
                    }
                    async connect() {
                        let e = await this.getProvider();
                        if (!e) throw new o.N;
                        e.on && (e.on("accountsChanged", this.onAccountsChanged), e.on("chainChanged", this.onChainChanged), e.on("disconnect", this.onDisconnect)), this.emit("message", {
                            type: "connecting"
                        });
                        let t = await this.getAccount(),
                            r = await this.getChainId();
                        return this.options.shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                            account: t,
                            chain: {
                                id: r,
                                unsupported: this.isChainUnsupported(r)
                            }
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        e ? .removeListener && (e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                    }
                    async getAccount() {
                        let e = await this.getProvider();
                        if (!e) throw new o.N;
                        let t = await e.request({
                            method: "eth_accounts"
                        });
                        return (0, l.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        if (!e) throw new o.N;
                        return (0, a.J)(e.chainId)
                    }
                    async getProvider() {
                        if (!(0, s.ac)(this, n)) {
                            let e = await (0, s.ac)(this, i).safe.getInfo();
                            if (!e) throw Error("Could not load Safe information");
                            (0, s.qx)(this, n, new u.N(e, (0, s.ac)(this, i)))
                        }
                        return (0, s.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let t = await this.getProvider(),
                            r = await this.getAccount(),
                            n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, d.K)({
                            account: r,
                            chain: n,
                            transport: (0, f.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            if (this.options.shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) return !1;
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                    onAccountsChanged(e) {}
                    onChainChanged(e) {}
                    onDisconnect() {
                        this.emit("disconnect")
                    }
                };
            n = new WeakMap, i = new WeakMap
        },
        76042: function(e, t, r) {
            "use strict";
            r.d(t, {
                z: function() {
                    return B
                }
            });
            var n, i, o, a, s, u, c, l, d, f, h, p, m, g, b, y, v, w, E, A, P = r(21872),
                x = r(77500),
                O = r(99112),
                _ = r(96329),
                I = r(14696),
                T = r(69532),
                C = r(95046),
                S = "eip155",
                k = "requestedChains",
                M = "wallet_addEthereumChain",
                B = class extends P.wR {
                    constructor(e) {
                        super({ ...e,
                            options: {
                                isNewChainsStale: !0,
                                ...e.options
                            }
                        }), (0, P.Ko)(this, o), (0, P.Ko)(this, s), (0, P.Ko)(this, c), (0, P.Ko)(this, d), (0, P.Ko)(this, h), (0, P.Ko)(this, m), (0, P.Ko)(this, b), (0, P.Ko)(this, v), (0, P.Ko)(this, E), this.id = "walletConnect", this.name = "WalletConnect", this.ready = !0, (0, P.Ko)(this, n, void 0), (0, P.Ko)(this, i, void 0), this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, O.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = Number(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            (0, P.U9)(this, m, g).call(this, []), this.emit("disconnect")
                        }, this.onDisplayUri = e => {
                            this.emit("message", {
                                type: "display_uri",
                                data: e
                            })
                        }, this.onConnect = () => {
                            this.emit("connect", {})
                        }, (0, P.U9)(this, o, a).call(this)
                    }
                    async connect({
                        chainId: e,
                        pairingTopic: t
                    } = {}) {
                        try {
                            let r = e;
                            if (!r) {
                                let e = this.storage ? .getItem("store"),
                                    t = e ? .state ? .data ? .chain ? .id;
                                r = t && !this.isChainUnsupported(t) ? t : this.chains[0] ? .id
                            }
                            if (!r) throw Error("No chains found on connector.");
                            let n = await this.getProvider();
                            (0, P.U9)(this, d, f).call(this);
                            let i = (0, P.U9)(this, c, l).call(this);
                            if (n.session && i && await n.disconnect(), !n.session || i) {
                                let e = this.chains.filter(e => e.id !== r).map(e => e.id);
                                this.emit("message", {
                                    type: "connecting"
                                }), await n.connect({
                                    pairingTopic: t,
                                    optionalChains: [r, ...e]
                                }), (0, P.U9)(this, m, g).call(this, this.chains.map(({
                                    id: e
                                }) => e))
                            }
                            let o = await n.enable(),
                                a = (0, O.K)(o[0]),
                                s = await this.getChainId(),
                                u = this.isChainUnsupported(s);
                            return {
                                account: a,
                                chain: {
                                    id: s,
                                    unsupported: u
                                }
                            }
                        } catch (e) {
                            if (/user rejected/i.test(e ? .message)) throw new _.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        try {
                            await e.disconnect()
                        } catch (e) {
                            if (!/No matching key/i.test(e.message)) throw e
                        } finally {
                            (0, P.U9)(this, h, p).call(this), (0, P.U9)(this, m, g).call(this, [])
                        }
                    }
                    async getAccount() {
                        let {
                            accounts: e
                        } = await this.getProvider();
                        return (0, O.K)(e[0])
                    }
                    async getChainId() {
                        let {
                            chainId: e
                        } = await this.getProvider();
                        return e
                    }
                    async getProvider({
                        chainId: e
                    } = {}) {
                        return (0, P.ac)(this, n) || await (0, P.U9)(this, o, a).call(this), e && await this.switchChain(e), (0, P.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, I.K)({
                            account: r,
                            chain: n,
                            transport: (0, T.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let [e, t] = await Promise.all([this.getAccount(), this.getProvider()]), r = (0, P.U9)(this, c, l).call(this);
                            if (!e) return !1;
                            if (r && t.session) {
                                try {
                                    await t.disconnect()
                                } catch {}
                                return !1
                            }
                            return !0
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = this.chains.find(t => t.id === e);
                        if (!t) throw new _.x3(Error("chain not found on connector."));
                        try {
                            let r = await this.getProvider(),
                                n = (0, P.U9)(this, v, w).call(this),
                                i = (0, P.U9)(this, E, A).call(this);
                            if (!n.includes(e) && i.includes(M)) {
                                await r.request({
                                    method: M,
                                    params: [{
                                        chainId: (0, C.eC)(t.id),
                                        blockExplorerUrls: [t.blockExplorers ? .default ? .url],
                                        chainName: t.name,
                                        nativeCurrency: t.nativeCurrency,
                                        rpcUrls: [...t.rpcUrls.default.http]
                                    }]
                                });
                                let n = (0, P.U9)(this, b, y).call(this);
                                n.push(e), (0, P.U9)(this, m, g).call(this, n)
                            }
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: (0, C.eC)(e)
                                }]
                            }), t
                        } catch (t) {
                            let e = "string" == typeof t ? t : t ? .message;
                            if (/user rejected request/i.test(e)) throw new _.ab(t);
                            throw new _.x3(t)
                        }
                    }
                };
            n = new WeakMap, i = new WeakMap, o = new WeakSet, a = async function() {
                return (0, P.ac)(this, i) || "undefined" == typeof window || (0, P.qx)(this, i, (0, P.U9)(this, s, u).call(this)), (0, P.ac)(this, i)
            }, s = new WeakSet, u = async function() {
                let {
                    EthereumProvider: e
                } = await Promise.all([r.e(6814), r.e(6730)]).then(r.bind(r, 96730)), t = this.chains.map(({
                    id: e
                }) => e);
                if (t.length) {
                    let {
                        projectId: r,
                        showQrModal: i = !0,
                        qrModalOptions: o,
                        metadata: a,
                        relayUrl: s
                    } = this.options;
                    (0, P.qx)(this, n, await e.init({
                        showQrModal: i,
                        qrModalOptions: o,
                        projectId: r,
                        optionalChains: t,
                        rpcMap: Object.fromEntries(this.chains.map(e => [e.id, e.rpcUrls.default.http[0]])),
                        metadata: a,
                        relayUrl: s
                    }))
                }
            }, c = new WeakSet, l = function() {
                if ((0, P.U9)(this, E, A).call(this).includes(M) || !this.options.isNewChainsStale) return !1;
                let e = (0, P.U9)(this, b, y).call(this),
                    t = this.chains.map(({
                        id: e
                    }) => e),
                    r = (0, P.U9)(this, v, w).call(this);
                return (!r.length || !!r.some(e => t.includes(e))) && !t.every(t => e.includes(t))
            }, d = new WeakSet, f = function() {
                (0, P.ac)(this, n) && ((0, P.U9)(this, h, p).call(this), (0, P.ac)(this, n).on("accountsChanged", this.onAccountsChanged), (0, P.ac)(this, n).on("chainChanged", this.onChainChanged), (0, P.ac)(this, n).on("disconnect", this.onDisconnect), (0, P.ac)(this, n).on("session_delete", this.onDisconnect), (0, P.ac)(this, n).on("display_uri", this.onDisplayUri), (0, P.ac)(this, n).on("connect", this.onConnect))
            }, h = new WeakSet, p = function() {
                (0, P.ac)(this, n) && ((0, P.ac)(this, n).removeListener("accountsChanged", this.onAccountsChanged), (0, P.ac)(this, n).removeListener("chainChanged", this.onChainChanged), (0, P.ac)(this, n).removeListener("disconnect", this.onDisconnect), (0, P.ac)(this, n).removeListener("session_delete", this.onDisconnect), (0, P.ac)(this, n).removeListener("display_uri", this.onDisplayUri), (0, P.ac)(this, n).removeListener("connect", this.onConnect))
            }, m = new WeakSet, g = function(e) {
                this.storage ? .setItem(k, e)
            }, b = new WeakSet, y = function() {
                return this.storage ? .getItem(k) ? ? []
            }, v = new WeakSet, w = function() {
                if (!(0, P.ac)(this, n)) return [];
                let e = P.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, x.fK)(e);
                return t[S] ? .chains ? .map(e => parseInt(e.split(":")[1] || "")) ? ? []
            }, E = new WeakSet, A = function() {
                if (!(0, P.ac)(this, n)) return [];
                let e = P.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, x.fK)(e);
                return t[S] ? .methods ? ? []
            }
        },
        39025: function(e, t, r) {
            "use strict";
            r.d(t, {
                O: function() {
                    return p
                }
            });
            var n, i, o, a = r(37626),
                s = r(21872),
                u = r(99112),
                c = r(96329),
                l = r(14696),
                d = r(69532),
                f = r(95046),
                h = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i,
                p = class extends s.wR {
                    constructor() {
                        super(...arguments), (0, s.Ko)(this, i), this.id = "walletConnectLegacy", this.name = "WalletConnectLegacy", this.ready = !0, (0, s.Ko)(this, n, void 0), this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, u.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = (0, a.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            this.emit("disconnect")
                        }
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = e;
                            if (!t) {
                                let e = this.storage ? .getItem("store"),
                                    r = e ? .state ? .data ? .chain ? .id;
                                r && !this.isChainUnsupported(r) && (t = r)
                            }
                            let r = await this.getProvider({
                                chainId: t,
                                create: !0
                            });
                            r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect), setTimeout(() => this.emit("message", {
                                type: "connecting"
                            }), 0);
                            let n = await r.enable(),
                                a = (0, u.K)(n[0]),
                                c = await this.getChainId(),
                                l = this.isChainUnsupported(c),
                                d = r.connector ? .peerMeta ? .name ? ? "";
                            return h.test(d) && (this.switchChain = (0, s.U9)(this, i, o)), {
                                account: a,
                                chain: {
                                    id: c,
                                    unsupported: l
                                }
                            }
                        } catch (e) {
                            if (/user closed modal/i.test(e.message)) throw new c.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        await e.disconnect(), e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), "undefined" != typeof localStorage && localStorage.removeItem("walletconnect")
                    }
                    async getAccount() {
                        let e = (await this.getProvider()).accounts;
                        return (0, u.K)(e[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        return (0, a.J)(e.chainId)
                    }
                    async getProvider({
                        chainId: e,
                        create: t
                    } = {}) {
                        if (!(0, s.ac)(this, n) || e || t) {
                            let t = this.options ? .infuraId ? {} : this.chains.reduce((e, t) => ({ ...e,
                                    [t.id]: t.rpcUrls.default.http[0]
                                }), {}),
                                i = (await Promise.all([r.e(6814), r.e(9232)]).then(r.bind(r, 29232))).default;
                            (0, s.qx)(this, n, new i({ ...this.options,
                                chainId: e,
                                rpc: { ...t,
                                    ...this.options ? .rpc
                                }
                            })), (0, s.ac)(this, n).http = await (0, s.ac)(this, n).setHttpProvider(e)
                        }
                        return (0, s.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, l.K)({
                            account: r,
                            chain: n,
                            transport: (0, d.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            return !!await this.getAccount()
                        } catch {
                            return !1
                        }
                    }
                };
            n = new WeakMap, i = new WeakSet, o = async function(e) {
                let t = await this.getProvider(),
                    r = (0, f.eC)(e);
                try {
                    return await Promise.race([t.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: r
                        }]
                    }), new Promise(t => this.on("change", ({
                        chain: r
                    }) => {
                        r ? .id === e && t(e)
                    }))]), this.chains.find(t => t.id === e) ? ? {
                        id: e,
                        name: `Chain ${r}`,
                        network: `${r}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    }
                } catch (t) {
                    let e = "string" == typeof t ? t : t ? .message;
                    if (/user rejected request/i.test(e)) throw new c.ab(t);
                    throw new c.x3(t)
                }
            }
        },
        26686: function(e, t, r) {
            "use strict";
            r.d(t, {
                QB: function() {
                    return tU
                },
                $j: function() {
                    return t2
                },
                _g: function() {
                    return t0
                },
                o6: function() {
                    return tJ
                },
                vZ: function() {
                    return function e(t, r) {
                        if (t === r) return !0;
                        if (t && r && "object" == typeof t && "object" == typeof r) {
                            let n, i;
                            if (t.constructor !== r.constructor) return !1;
                            if (Array.isArray(t) && Array.isArray(r)) {
                                if ((n = t.length) != r.length) return !1;
                                for (i = n; 0 != i--;)
                                    if (!e(t[i], r[i])) return !1;
                                return !0
                            }
                            if (t.valueOf !== Object.prototype.valueOf) return t.valueOf() === r.valueOf();
                            if (t.toString !== Object.prototype.toString) return t.toString() === r.toString();
                            let o = Object.keys(t);
                            if ((n = o.length) !== Object.keys(r).length) return !1;
                            for (i = n; 0 != i--;)
                                if (!Object.prototype.hasOwnProperty.call(r, o[i])) return !1;
                            for (i = n; 0 != i--;) {
                                let n = o[i];
                                if (n && !e(t[n], r[n])) return !1
                            }
                            return !0
                        }
                        return t != t && r != r
                    }
                },
                zP: function() {
                    return t6
                },
                EG: function() {
                    return ri
                },
                RQ: function() {
                    return rh
                },
                w6: function() {
                    return rd
                },
                Lk: function() {
                    return rf
                },
                D0: function() {
                    return ro
                },
                Hy: function() {
                    return ra
                },
                uV: function() {
                    return t8
                },
                jr: function() {
                    return t9
                },
                wp: function() {
                    return tQ
                },
                JH: function() {
                    return rn
                },
                l: function() {
                    return rs
                },
                If: function() {
                    return ru
                },
                uH: function() {
                    return rc
                },
                QC: function() {
                    return rl
                },
                pC: function() {
                    return t7
                },
                fq: function() {
                    return re
                }
            });
            var n, i, o, a, s, u = r(99640),
                c = (e, t, r) => {
                    if (!t.has(e)) throw TypeError("Cannot " + r)
                },
                l = (e, t, r) => (c(e, t, "read from private field"), r ? r.call(e) : t.get(e)),
                d = (e, t, r) => {
                    if (t.has(e)) throw TypeError("Cannot add the same private member more than once");
                    t instanceof WeakSet ? t.add(e) : t.set(e, r)
                },
                f = (e, t, r, n) => (c(e, t, "write to private field"), n ? n.call(e, r) : t.set(e, r), r),
                h = (e, t, r) => (c(e, t, "access private method"), r),
                p = r(500),
                m = r(21620),
                g = r(97225),
                b = r(14503),
                y = r(18543),
                v = r(77955),
                w = r(95046),
                E = r(47807),
                A = r(48926),
                P = r(58591);

            function x(e, t) {
                if (!(e instanceof A.G)) return !1;
                let r = e.walk(e => e instanceof P.Lu);
                return r instanceof P.Lu && (!!(r.data ? .errorName === "ResolverNotFound" || r.data ? .errorName === "ResolverWildcardNotSupported" || r.reason ? .includes("Wildcard on non-extended resolvers is not supported")) || "reverse" === t && r.reason === E.$[50])
            }
            var O = r(53932),
                _ = r(82361),
                I = r(28540),
                T = r(40369);

            function C(e) {
                if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]")) return null;
                let t = `0x${e.slice(1,65)}`;
                return (0, T.v)(t) ? t : null
            }

            function S(e) {
                let t = new Uint8Array(32).fill(0);
                if (!e) return (0, w.ci)(t);
                let r = e.split(".");
                for (let e = r.length - 1; e >= 0; e -= 1) {
                    let n = C(r[e]),
                        i = n ? (0, _.O0)(n) : (0, I.w)((0, _.qX)(r[e]), "bytes");
                    t = (0, I.w)((0, O.zo)([t, i]), "bytes")
                }
                return (0, w.ci)(t)
            }

            function k(e) {
                let t = e.replace(/^\.|\.$/gm, "");
                if (0 === t.length) return new Uint8Array(1);
                let r = new Uint8Array((0, _.qX)(t).byteLength + 2),
                    n = 0,
                    i = t.split(".");
                for (let e = 0; e < i.length; e++) {
                    let t = (0, _.qX)(i[e]);
                    if (t.byteLength > 255) {
                        var o;
                        t = (0, _.qX)((o = function(e) {
                            let t = new Uint8Array(32).fill(0);
                            return e ? C(e) || (0, I.w)((0, _.qX)(e)) : (0, w.ci)(t)
                        }(i[e]), `[${o.slice(2)}]`))
                    }
                    r[n] = t.length, r.set(t, n + 1), n += t.length + 1
                }
                return r.byteLength !== n + 1 ? r.slice(0, n + 1) : r
            }
            var M = r(93413),
                B = r(52186),
                N = r(96329);

            function R(e, {
                abi: t,
                address: r,
                args: n,
                docsPath: i,
                functionName: o,
                sender: a
            }) {
                let {
                    code: s,
                    data: u,
                    message: c,
                    shortMessage: l
                } = e instanceof P.VQ ? e : e instanceof A.G ? e.walk(e => "data" in e) || e.walk() : {}, d = e instanceof B.wb ? new P.Dk({
                    functionName: o
                }) : [3, N.XS.code].includes(s) && (u || c || l) ? new P.Lu({
                    abi: t,
                    data: "object" == typeof u ? u.data : u,
                    functionName: o,
                    message: l ? ? c
                }) : e;
                return new P.uq(d, {
                    abi: t,
                    args: n,
                    contractAddress: r,
                    docsPath: i,
                    functionName: o,
                    sender: a
                })
            }
            var D = r(51362);
            async function j(e, {
                abi: t,
                address: r,
                args: n,
                functionName: i,
                ...o
            }) {
                let a = (0, b.R)({
                    abi: t,
                    args: n,
                    functionName: i
                });
                try {
                    let {
                        data: s
                    } = await (0, M.s)(e, D.R, "call")({
                        data: a,
                        to: r,
                        ...o
                    });
                    return (0, g.k)({
                        abi: t,
                        args: n,
                        functionName: i,
                        data: s || "0x"
                    })
                } catch (e) {
                    throw R(e, {
                        abi: t,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/readContract",
                        functionName: i
                    })
                }
            }
            async function F(e, {
                blockNumber: t,
                blockTag: r,
                coinType: n,
                name: i,
                universalResolverAddress: o
            }) {
                let a = o;
                if (!a) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    a = (0, y.L)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let o = (0, b.R)({
                            abi: m.X$,
                            functionName: "addr",
                            ...null != n ? {
                                args: [S(i), BigInt(n)]
                            } : {
                                args: [S(i)]
                            }
                        }),
                        s = await (0, M.s)(e, j, "readContract")({
                            address: a,
                            abi: m.k3,
                            functionName: "resolve",
                            args: [(0, w.NC)(k(i)), o],
                            blockNumber: t,
                            blockTag: r
                        });
                    if ("0x" === s[0]) return null;
                    let u = (0, g.k)({
                        abi: m.X$,
                        args: null != n ? [S(i), BigInt(n)] : void 0,
                        functionName: "addr",
                        data: s[0]
                    });
                    if ("0x" === u || "0x00" === (0, v.f)(u)) return null;
                    return u
                } catch (e) {
                    if (x(e, "resolve")) return null;
                    throw e
                }
            }
            class U extends A.G {
                constructor({
                    data: e
                }) {
                    super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                        metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidMetadataError"
                    })
                }
            }
            class L extends A.G {
                constructor({
                    reason: e
                }) {
                    super(`ENS NFT avatar URI is invalid. ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            }
            class q extends A.G {
                constructor({
                    uri: e
                }) {
                    super(`Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            }
            class z extends A.G {
                constructor({
                    namespace: e
                }) {
                    super(`ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            }
            let $ = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
                H = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
                G = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                W = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
            async function K(e) {
                try {
                    let t = await fetch(e, {
                        method: "HEAD"
                    });
                    if (200 === t.status) {
                        let e = t.headers.get("content-type");
                        return e ? .startsWith("image/")
                    }
                    return !1
                } catch (t) {
                    if ("object" == typeof t && void 0 !== t.response || !globalThis.hasOwnProperty("Image")) return !1;
                    return new Promise(t => {
                        let r = new Image;
                        r.onload = () => {
                            t(!0)
                        }, r.onerror = () => {
                            t(!1)
                        }, r.src = e
                    })
                }
            }

            function Y(e, t) {
                return e ? e.endsWith("/") ? e.slice(0, -1) : e : t
            }

            function V({
                uri: e,
                gatewayUrls: t
            }) {
                let r = G.test(e);
                if (r) return {
                    uri: e,
                    isOnChain: !0,
                    isEncoded: r
                };
                let n = Y(t ? .ipfs, "https://ipfs.io"),
                    i = Y(t ? .arweave, "https://arweave.net"),
                    o = e.match($),
                    {
                        protocol: a,
                        subpath: s,
                        target: u,
                        subtarget: c = ""
                    } = o ? .groups || {},
                    l = "ipns:/" === a || "ipns/" === s,
                    d = "ipfs:/" === a || "ipfs/" === s || H.test(e);
                if (e.startsWith("http") && !l && !d) {
                    let r = e;
                    return t ? .arweave && (r = e.replace(/https:\/\/arweave.net/g, t ? .arweave)), {
                        uri: r,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((l || d) && u) return {
                    uri: `${n}/${l?"ipns":"ipfs"}/${u}${c}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === a && u) return {
                    uri: `${i}/${u}${c||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let f = e.replace(W, "");
                if (f.startsWith("<svg") && (f = `data:image/svg+xml;base64,${btoa(f)}`), f.startsWith("data:") || f.startsWith("{")) return {
                    uri: f,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new q({
                    uri: e
                })
            }

            function Q(e) {
                if ("object" != typeof e || !("image" in e) && !("image_url" in e) && !("image_data" in e)) throw new U({
                    data: e
                });
                return e.image || e.image_url || e.image_data
            }
            async function J({
                gatewayUrls: e,
                uri: t
            }) {
                try {
                    let r = await fetch(t).then(e => e.json());
                    return await Z({
                        gatewayUrls: e,
                        uri: Q(r)
                    })
                } catch {
                    throw new q({
                        uri: t
                    })
                }
            }
            async function Z({
                gatewayUrls: e,
                uri: t
            }) {
                let {
                    uri: r,
                    isOnChain: n
                } = V({
                    uri: t,
                    gatewayUrls: e
                });
                if (n || await K(r)) return r;
                throw new q({
                    uri: t
                })
            }
            async function X(e, {
                nft: t
            }) {
                if ("erc721" === t.namespace) return j(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "tokenURI",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "tokenId",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "tokenURI",
                    args: [BigInt(t.tokenID)]
                });
                if ("erc1155" === t.namespace) return j(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "uri",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "_id",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "uri",
                    args: [BigInt(t.tokenID)]
                });
                throw new z({
                    namespace: t.namespace
                })
            }
            async function ee(e, {
                gatewayUrls: t,
                record: r
            }) {
                return /eip155:/i.test(r) ? et(e, {
                    gatewayUrls: t,
                    record: r
                }) : Z({
                    uri: r,
                    gatewayUrls: t
                })
            }
            async function et(e, {
                gatewayUrls: t,
                record: r
            }) {
                let n = function(e) {
                        let t = e;
                        t.startsWith("did:nft:") && (t = t.replace("did:nft:", "").replace(/_/g, "/"));
                        let [r, n, i] = t.split("/"), [o, a] = r.split(":"), [s, u] = n.split(":");
                        if (!o || "eip155" !== o.toLowerCase()) throw new L({
                            reason: "Only EIP-155 supported"
                        });
                        if (!a) throw new L({
                            reason: "Chain ID not found"
                        });
                        if (!u) throw new L({
                            reason: "Contract address not found"
                        });
                        if (!i) throw new L({
                            reason: "Token ID not found"
                        });
                        if (!s) throw new L({
                            reason: "ERC namespace not found"
                        });
                        return {
                            chainID: parseInt(a),
                            namespace: s.toLowerCase(),
                            contractAddress: u,
                            tokenID: i
                        }
                    }(r),
                    {
                        uri: i,
                        isOnChain: o,
                        isEncoded: a
                    } = V({
                        uri: await X(e, {
                            nft: n
                        }),
                        gatewayUrls: t
                    });
                if (o && (i.includes("data:application/json;base64,") || i.startsWith("{"))) return Z({
                    uri: Q(JSON.parse(a ? atob(i.replace("data:application/json;base64,", "")) : i)),
                    gatewayUrls: t
                });
                let s = n.tokenID;
                return "erc1155" === n.namespace && (s = s.replace("0x", "").padStart(64, "0")), J({
                    gatewayUrls: t,
                    uri: i.replace(/(?:0x)?{id}/, s)
                })
            }
            async function er(e, {
                blockNumber: t,
                blockTag: r,
                name: n,
                key: i,
                universalResolverAddress: o
            }) {
                let a = o;
                if (!a) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    a = (0, y.L)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let o = await (0, M.s)(e, j, "readContract")({
                        address: a,
                        abi: m.k3,
                        functionName: "resolve",
                        args: [(0, w.NC)(k(n)), (0, b.R)({
                            abi: m.nZ,
                            functionName: "text",
                            args: [S(n), i]
                        })],
                        blockNumber: t,
                        blockTag: r
                    });
                    if ("0x" === o[0]) return null;
                    let s = (0, g.k)({
                        abi: m.nZ,
                        functionName: "text",
                        data: o[0]
                    });
                    return "" === s ? null : s
                } catch (e) {
                    if (x(e, "resolve")) return null;
                    throw e
                }
            }
            async function en(e, {
                blockNumber: t,
                blockTag: r,
                gatewayUrls: n,
                name: i,
                universalResolverAddress: o
            }) {
                let a = await (0, M.s)(e, er, "getEnsText")({
                    blockNumber: t,
                    blockTag: r,
                    key: "avatar",
                    name: i,
                    universalResolverAddress: o
                });
                if (!a) return null;
                try {
                    return await ee(e, {
                        record: a,
                        gatewayUrls: n
                    })
                } catch {
                    return null
                }
            }
            async function ei(e, {
                address: t,
                blockNumber: r,
                blockTag: n,
                universalResolverAddress: i
            }) {
                let o = i;
                if (!o) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    o = (0, y.L)({
                        blockNumber: r,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let a = `${t.toLowerCase().substring(2)}.addr.reverse`;
                try {
                    let [i, s] = await (0, M.s)(e, j, "readContract")({
                        address: o,
                        abi: m.du,
                        functionName: "reverse",
                        args: [(0, w.NC)(k(a))],
                        blockNumber: r,
                        blockTag: n
                    });
                    if (t.toLowerCase() !== s.toLowerCase()) return null;
                    return i
                } catch (e) {
                    if (x(e, "reverse")) return null;
                    throw e
                }
            }
            async function eo(e, {
                blockNumber: t,
                blockTag: r,
                name: n,
                universalResolverAddress: i
            }) {
                let o = i;
                if (!o) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    o = (0, y.L)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let [a] = await (0, M.s)(e, j, "readContract")({
                    address: o,
                    abi: [{
                        inputs: [{
                            type: "bytes"
                        }],
                        name: "findResolver",
                        outputs: [{
                            type: "address"
                        }, {
                            type: "bytes32"
                        }],
                        stateMutability: "view",
                        type: "function"
                    }],
                    functionName: "findResolver",
                    args: [(0, w.NC)(k(n))],
                    blockNumber: t,
                    blockTag: r
                });
                return a
            }

            function ea(e, {
                method: t
            }) {
                let r = {};
                return "fallback" === e.transport.type && e.transport.onResponse ? .(({
                    method: e,
                    response: n,
                    status: i,
                    transport: o
                }) => {
                    "success" === i && t === e && (r[n] = o.request)
                }), t => r[t] || e.request
            }
            async function es(e) {
                let t = ea(e, {
                        method: "eth_newBlockFilter"
                    }),
                    r = await e.request({
                        method: "eth_newBlockFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "block"
                }
            }
            class eu extends A.G {
                constructor(e) {
                    super(`Filter type "${e}" is not supported.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FilterTypeNotSupportedError"
                    })
                }
            }
            var ec = r(79660),
                el = r(39480),
                ed = r(20101),
                ef = r(18748);

            function eh({
                abi: e,
                eventName: t,
                args: r
            }) {
                let n = e[0];
                if (t && !(n = (0, ef.mE)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new B.mv(t, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== n.type) throw new B.mv(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                let i = (0, ed.t)(n),
                    o = (0, ec.e)(i),
                    a = [];
                if (r && "inputs" in n) {
                    let e = n.inputs ? .filter(e => "indexed" in e && e.indexed),
                        t = Array.isArray(r) ? r : Object.values(r).length > 0 ? e ? .map(e => r[e.name]) ? ? [] : [];
                    t.length > 0 && (a = e ? .map((e, r) => Array.isArray(t[r]) ? t[r].map((n, i) => ep({
                        param: e,
                        value: t[r][i]
                    })) : t[r] ? ep({
                        param: e,
                        value: t[r]
                    }) : null) ? ? [])
                }
                return [o, ...a]
            }

            function ep({
                param: e,
                value: t
            }) {
                if ("string" === e.type || "bytes" === e.type) return (0, I.w)((0, _.O0)(t));
                if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/)) throw new eu(e.type);
                return (0, el.E)([e], [t])
            }
            async function em(e, {
                address: t,
                abi: r,
                args: n,
                eventName: i,
                fromBlock: o,
                strict: a,
                toBlock: s
            }) {
                let u = ea(e, {
                        method: "eth_newFilter"
                    }),
                    c = i ? eh({
                        abi: r,
                        args: n,
                        eventName: i
                    }) : void 0,
                    l = await e.request({
                        method: "eth_newFilter",
                        params: [{
                            address: t,
                            fromBlock: "bigint" == typeof o ? (0, w.eC)(o) : o,
                            toBlock: "bigint" == typeof s ? (0, w.eC)(s) : s,
                            topics: c
                        }]
                    });
                return {
                    abi: r,
                    args: n,
                    eventName: i,
                    id: l,
                    request: u(l),
                    strict: a,
                    type: "event"
                }
            }
            async function eg(e, {
                address: t,
                args: r,
                event: n,
                events: i,
                fromBlock: o,
                strict: a,
                toBlock: s
            } = {}) {
                let u = i ? ? (n ? [n] : void 0),
                    c = ea(e, {
                        method: "eth_newFilter"
                    }),
                    l = [];
                u && (l = [u.flatMap(e => eh({
                    abi: [e],
                    eventName: e.name,
                    args: r
                }))], n && (l = l[0]));
                let d = await e.request({
                    method: "eth_newFilter",
                    params: [{
                        address: t,
                        fromBlock: "bigint" == typeof o ? (0, w.eC)(o) : o,
                        toBlock: "bigint" == typeof s ? (0, w.eC)(s) : s,
                        ...l.length ? {
                            topics: l
                        } : {}
                    }]
                });
                return {
                    abi: u,
                    args: r,
                    eventName: n ? n.name : void 0,
                    fromBlock: o,
                    id: d,
                    request: c(d),
                    strict: a,
                    toBlock: s,
                    type: "event"
                }
            }
            async function eb(e) {
                let t = ea(e, {
                        method: "eth_newPendingTransactionFilter"
                    }),
                    r = await e.request({
                        method: "eth_newPendingTransactionFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "transaction"
                }
            }
            var ey = r(96104),
                ev = r(60730);
            async function ew(e, {
                abi: t,
                address: r,
                args: n,
                functionName: i,
                ...o
            }) {
                let a = (0, b.R)({
                    abi: t,
                    args: n,
                    functionName: i
                });
                try {
                    return await (0, M.s)(e, ev.Q, "estimateGas")({
                        data: a,
                        to: r,
                        ...o
                    })
                } catch (a) {
                    let e = o.account ? (0, ey.T)(o.account) : void 0;
                    throw R(a, {
                        abi: t,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/estimateContractGas",
                        functionName: i,
                        sender: e ? .address
                    })
                }
            }
            var eE = r(42665),
                eA = r(72127);
            async function eP(e, {
                address: t,
                blockNumber: r,
                blockTag: n = "latest"
            }) {
                let i = r ? (0, w.eC)(r) : void 0;
                return BigInt(await e.request({
                    method: "eth_getBalance",
                    params: [t, i || n]
                }))
            }
            var ex = r(49235);
            let eO = new Map,
                e_ = new Map;
            async function eI(e, {
                cacheKey: t,
                cacheTime: r = 1 / 0
            }) {
                let n = function(e) {
                        let t = (e, t) => ({
                                clear: () => t.delete(e),
                                get: () => t.get(e),
                                set: r => t.set(e, r)
                            }),
                            r = t(e, eO),
                            n = t(e, e_);
                        return {
                            clear: () => {
                                r.clear(), n.clear()
                            },
                            promise: r,
                            response: n
                        }
                    }(t),
                    i = n.response.get();
                if (i && r > 0 && new Date().getTime() - i.created.getTime() < r) return i.data;
                let o = n.promise.get();
                o || (o = e(), n.promise.set(o));
                try {
                    let e = await o;
                    return n.response.set({
                        created: new Date,
                        data: e
                    }), e
                } finally {
                    n.promise.clear()
                }
            }
            let eT = e => `blockNumber.${e}`;
            async function eC(e, {
                cacheTime: t = e.cacheTime,
                maxAge: r
            } = {}) {
                return BigInt(await eI(() => e.request({
                    method: "eth_blockNumber"
                }), {
                    cacheKey: eT(e.uid),
                    cacheTime: r ? ? t
                }))
            }
            var eS = r(21019);
            async function ek(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: n = "latest"
            } = {}) {
                let i;
                let o = void 0 !== r ? (0, w.eC)(r) : void 0;
                return i = t ? await e.request({
                    method: "eth_getBlockTransactionCountByHash",
                    params: [t]
                }) : await e.request({
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [o || n]
                }), (0, eS.ly)(i)
            }
            async function eM(e, {
                address: t,
                blockNumber: r,
                blockTag: n = "latest"
            }) {
                let i = void 0 !== r ? (0, w.eC)(r) : void 0,
                    o = await e.request({
                        method: "eth_getCode",
                        params: [t, i || n]
                    });
                if ("0x" !== o) return o
            }
            var eB = r(16416),
                eN = r(65310);
            let eR = "/docs/contract/decodeEventLog";

            function eD({
                abi: e,
                data: t,
                strict: r,
                topics: n
            }) {
                let i = r ? ? !0,
                    [o, ...a] = n;
                if (!o) throw new B.FM({
                    docsPath: eR
                });
                let s = e.find(e => "event" === e.type && o === (0, ec.e)((0, ed.t)(e)));
                if (!(s && "name" in s) || "event" !== s.type) throw new B.lC(o, {
                    docsPath: eR
                });
                let {
                    name: u,
                    inputs: c
                } = s, l = c ? .some(e => !("name" in e && e.name)), d = l ? [] : {}, f = c.filter(e => "indexed" in e && e.indexed);
                for (let e = 0; e < f.length; e++) {
                    let t = f[e],
                        r = a[e];
                    if (!r) throw new B.Gy({
                        abiItem: s,
                        param: t
                    });
                    d[t.name || e] = function({
                        param: e,
                        value: t
                    }) {
                        return "string" === e.type || "bytes" === e.type || "tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/) ? t : ((0, eN.r)([e], t) || [])[0]
                    }({
                        param: t,
                        value: r
                    })
                }
                let h = c.filter(e => !("indexed" in e && e.indexed));
                if (h.length > 0) {
                    if (t && "0x" !== t) try {
                        let e = (0, eN.r)(h, t);
                        if (e) {
                            if (l) d = [...d, ...e];
                            else
                                for (let t = 0; t < h.length; t++) d[h[t].name] = e[t]
                        }
                    } catch (e) {
                        if (i) {
                            if (e instanceof B.xB) throw new B.SM({
                                abiItem: s,
                                data: e.data,
                                params: e.params,
                                size: e.size
                            });
                            throw e
                        }
                    } else if (i) throw new B.SM({
                        abiItem: s,
                        data: "0x",
                        params: h,
                        size: 0
                    })
                }
                return {
                    eventName: u,
                    args: Object.values(d).length > 0 ? d : void 0
                }
            }

            function ej(e, {
                args: t,
                eventName: r
            } = {}) {
                return { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    logIndex: e.logIndex ? Number(e.logIndex) : null,
                    transactionHash: e.transactionHash ? e.transactionHash : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    ...r ? {
                        args: t,
                        eventName: r
                    } : {}
                }
            }
            async function eF(e, {
                address: t,
                blockHash: r,
                fromBlock: n,
                toBlock: i,
                event: o,
                events: a,
                args: s,
                strict: u
            } = {}) {
                let c = u ? ? !1,
                    l = a ? ? (o ? [o] : void 0),
                    d = [];
                return l && (d = [l.flatMap(e => eh({
                    abi: [e],
                    eventName: e.name,
                    args: s
                }))], o && (d = d[0])), (r ? await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: d,
                        blockHash: r
                    }]
                }) : await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: d,
                        fromBlock: "bigint" == typeof n ? (0, w.eC)(n) : n,
                        toBlock: "bigint" == typeof i ? (0, w.eC)(i) : i
                    }]
                })).map(e => {
                    try {
                        let {
                            eventName: t,
                            args: r
                        } = l ? eD({
                            abi: l,
                            data: e.data,
                            topics: e.topics,
                            strict: c
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return ej(e, {
                            args: r,
                            eventName: t
                        })
                    } catch (n) {
                        let t, r;
                        if (n instanceof B.SM || n instanceof B.Gy) {
                            if (c) return;
                            t = n.abiItem.name, r = n.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return ej(e, {
                            args: r ? [] : {},
                            eventName: t
                        })
                    }
                }).filter(Boolean)
            }
            async function eU(e, {
                abi: t,
                address: r,
                args: n,
                blockHash: i,
                eventName: o,
                fromBlock: a,
                toBlock: s,
                strict: u
            }) {
                let c = o ? (0, ef.mE)({
                        abi: t,
                        name: o
                    }) : void 0,
                    l = c ? void 0 : t.filter(e => "event" === e.type);
                return (0, M.s)(e, eF, "getLogs")({
                    address: r,
                    args: n,
                    blockHash: i,
                    event: c,
                    events: l,
                    fromBlock: a,
                    toBlock: s,
                    strict: u
                })
            }
            async function eL(e, {
                blockCount: t,
                blockNumber: r,
                blockTag: n = "latest",
                rewardPercentiles: i
            }) {
                var o;
                let a = r ? (0, w.eC)(r) : void 0;
                return {
                    baseFeePerGas: (o = await e.request({
                        method: "eth_feeHistory",
                        params: [(0, w.eC)(t), a || n, i]
                    })).baseFeePerGas.map(e => BigInt(e)),
                    gasUsedRatio: o.gasUsedRatio,
                    oldestBlock: BigInt(o.oldestBlock),
                    reward: o.reward ? .map(e => e.map(e => BigInt(e)))
                }
            }
            async function eq(e, {
                filter: t
            }) {
                let r = "strict" in t && t.strict;
                return (await t.request({
                    method: "eth_getFilterChanges",
                    params: [t.id]
                })).map(e => {
                    if ("string" == typeof e) return e;
                    try {
                        let {
                            eventName: n,
                            args: i
                        } = "abi" in t && t.abi ? eD({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return ej(e, {
                            args: i,
                            eventName: n
                        })
                    } catch (i) {
                        let r, n;
                        if (i instanceof B.SM || i instanceof B.Gy) {
                            if ("strict" in t && t.strict) return;
                            r = i.abiItem.name, n = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return ej(e, {
                            args: n ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            async function ez(e, {
                filter: t
            }) {
                let r = t.strict ? ? !1;
                return (await t.request({
                    method: "eth_getFilterLogs",
                    params: [t.id]
                })).map(e => {
                    try {
                        let {
                            eventName: n,
                            args: i
                        } = "abi" in t && t.abi ? eD({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return ej(e, {
                            args: i,
                            eventName: n
                        })
                    } catch (i) {
                        let r, n;
                        if (i instanceof B.SM || i instanceof B.Gy) {
                            if ("strict" in t && t.strict) return;
                            r = i.abiItem.name, n = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return ej(e, {
                            args: n ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            var e$ = r(48206);
            async function eH(e, {
                address: t,
                blockNumber: r,
                blockTag: n,
                storageKeys: i
            }) {
                var o;
                let a = void 0 !== r ? (0, w.eC)(r) : void 0;
                return { ...o = await e.request({
                        method: "eth_getProof",
                        params: [t, i, a || (n ? ? "latest")]
                    }),
                    balance: o.balance ? BigInt(o.balance) : void 0,
                    nonce: o.nonce ? (0, eS.ly)(o.nonce) : void 0,
                    storageProof: o.storageProof ? o.storageProof.map(e => ({ ...e,
                        value: BigInt(e.value)
                    })) : void 0
                }
            }
            async function eG(e, {
                address: t,
                blockNumber: r,
                blockTag: n = "latest",
                slot: i
            }) {
                let o = void 0 !== r ? (0, w.eC)(r) : void 0;
                return await e.request({
                    method: "eth_getStorageAt",
                    params: [t, i, o || n]
                })
            }
            var eW = r(97658),
                eK = r(16719);
            async function eY(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: n,
                hash: i,
                index: o
            }) {
                let a = n || "latest",
                    s = void 0 !== r ? (0, w.eC)(r) : void 0,
                    u = null;
                if (i ? u = await e.request({
                        method: "eth_getTransactionByHash",
                        params: [i]
                    }) : t ? u = await e.request({
                        method: "eth_getTransactionByBlockHashAndIndex",
                        params: [t, (0, w.eC)(o)]
                    }) : (s || a) && (u = await e.request({
                        method: "eth_getTransactionByBlockNumberAndIndex",
                        params: [s || a, (0, w.eC)(o)]
                    })), !u) throw new eW.Bh({
                    blockHash: t,
                    blockNumber: r,
                    blockTag: a,
                    hash: i,
                    index: o
                });
                return (e.chain ? .formatters ? .transaction ? .format || eK.Tr)(u)
            }
            async function eV(e, {
                hash: t,
                transactionReceipt: r
            }) {
                let [n, i] = await Promise.all([(0, M.s)(e, eC, "getBlockNumber")({}), t ? (0, M.s)(e, eY, "getBlockNumber")({
                    hash: t
                }) : void 0]), o = r ? .blockNumber || i ? .blockNumber;
                return o ? n - o + 1 n : 0 n
            }
            var eQ = r(33208);
            let eJ = {
                "0x0": "reverted",
                "0x1": "success"
            };
            async function eZ(e, {
                hash: t
            }) {
                let r = await e.request({
                    method: "eth_getTransactionReceipt",
                    params: [t]
                });
                if (!r) throw new eW.Yb({
                    hash: t
                });
                return (e.chain ? .formatters ? .transactionReceipt ? .format || function(e) {
                    return { ...e,
                        blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                        contractAddress: e.contractAddress ? e.contractAddress : null,
                        cumulativeGasUsed: e.cumulativeGasUsed ? BigInt(e.cumulativeGasUsed) : null,
                        effectiveGasPrice: e.effectiveGasPrice ? BigInt(e.effectiveGasPrice) : null,
                        gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
                        logs: e.logs ? e.logs.map(e => ej(e)) : null,
                        to: e.to ? e.to : null,
                        transactionIndex: e.transactionIndex ? (0, eS.ly)(e.transactionIndex) : null,
                        status: e.status ? eJ[e.status] : null,
                        type: e.type ? eK.c8[e.type] || e.type : null
                    }
                })(r)
            }
            async function eX(e, t) {
                let {
                    allowFailure: r = !0,
                    batchSize: n,
                    blockNumber: i,
                    blockTag: o,
                    contracts: a,
                    multicallAddress: s
                } = t, u = n ? ? ("object" == typeof e.batch ? .multicall && e.batch.multicall.batchSize || 1024), c = s;
                if (!c) {
                    if (!e.chain) throw Error("client chain not configured. multicallAddress is required.");
                    c = (0, y.L)({
                        blockNumber: i,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let l = [
                        []
                    ],
                    d = 0,
                    f = 0;
                for (let e = 0; e < a.length; e++) {
                    let {
                        abi: t,
                        address: n,
                        args: i,
                        functionName: o
                    } = a[e];
                    try {
                        let e = (0, b.R)({
                            abi: t,
                            args: i,
                            functionName: o
                        });
                        f += (e.length - 2) / 2, u > 0 && f > u && l[d].length > 0 && (d++, f = (e.length - 2) / 2, l[d] = []), l[d] = [...l[d], {
                            allowFailure: !0,
                            callData: e,
                            target: n
                        }]
                    } catch (a) {
                        let e = R(a, {
                            abi: t,
                            address: n,
                            args: i,
                            docsPath: "/docs/contract/multicall",
                            functionName: o
                        });
                        if (!r) throw e;
                        l[d] = [...l[d], {
                            allowFailure: !0,
                            callData: "0x",
                            target: n
                        }]
                    }
                }
                let h = await Promise.allSettled(l.map(t => (0, M.s)(e, j, "readContract")({
                        abi: m.F8,
                        address: c,
                        args: [t],
                        blockNumber: i,
                        blockTag: o,
                        functionName: "aggregate3"
                    }))),
                    p = [];
                for (let e = 0; e < h.length; e++) {
                    let t = h[e];
                    if ("rejected" === t.status) {
                        if (!r) throw t.reason;
                        for (let r = 0; r < l[e].length; r++) p.push({
                            status: "failure",
                            error: t.reason,
                            result: void 0
                        });
                        continue
                    }
                    let n = t.value;
                    for (let t = 0; t < n.length; t++) {
                        let {
                            returnData: i,
                            success: o
                        } = n[t], {
                            callData: s
                        } = l[e][t], {
                            abi: u,
                            address: c,
                            functionName: d,
                            args: f
                        } = a[p.length];
                        try {
                            if ("0x" === s) throw new B.wb;
                            if (!o) throw new P.VQ({
                                data: i
                            });
                            let e = (0, g.k)({
                                abi: u,
                                args: f,
                                data: i,
                                functionName: d
                            });
                            p.push(r ? {
                                result: e,
                                status: "success"
                            } : e)
                        } catch (t) {
                            let e = R(t, {
                                abi: u,
                                address: c,
                                args: f,
                                docsPath: "/docs/contract/multicall",
                                functionName: d
                            });
                            if (!r) throw e;
                            p.push({
                                error: e,
                                result: void 0,
                                status: "failure"
                            })
                        }
                    }
                }
                if (p.length !== a.length) throw new A.G("multicall results mismatch");
                return p
            }
            async function e0(e, {
                abi: t,
                address: r,
                args: n,
                dataSuffix: i,
                functionName: o,
                ...a
            }) {
                let s = a.account ? (0, ey.T)(a.account) : void 0,
                    u = (0, b.R)({
                        abi: t,
                        args: n,
                        functionName: o
                    });
                try {
                    let {
                        data: s
                    } = await (0, M.s)(e, D.R, "call")({
                        batch: !1,
                        data: `${u}${i?i.replace("0x",""):""}`,
                        to: r,
                        ...a
                    });
                    return {
                        result: (0, g.k)({
                            abi: t,
                            args: n,
                            functionName: o,
                            data: s || "0x"
                        }),
                        request: {
                            abi: t,
                            address: r,
                            args: n,
                            dataSuffix: i,
                            functionName: o,
                            ...a
                        }
                    }
                } catch (e) {
                    throw R(e, {
                        abi: t,
                        address: r,
                        args: n,
                        docsPath: "/docs/contract/simulateContract",
                        functionName: o,
                        sender: s ? .address
                    })
                }
            }
            async function e1(e, {
                filter: t
            }) {
                return t.request({
                    method: "eth_uninstallFilter",
                    params: [t.id]
                })
            }
            BigInt(0), BigInt(1), BigInt(2);
            var e2 = r(32637);
            async function e6(e, {
                address: t,
                hash: r,
                signature: n,
                ...i
            }) {
                let o = (0, T.v)(n) ? n : (0, w.NC)(n);
                try {
                    let {
                        data: n
                    } = await (0, M.s)(e, D.R, "call")({
                        data: (0, e2.w)({
                            abi: m.$o,
                            args: [t, r, o],
                            bytecode: "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572"
                        }),
                        ...i
                    });
                    return function(e, t) {
                        let r = (0, T.v)(e) ? (0, _.O0)(e) : e;
                        return function(e, t) {
                            if (e.length !== t.length) return !1;
                            for (let r = 0; r < e.length; r++)
                                if (e[r] !== t[r]) return !1;
                            return !0
                        }(r, (0, T.v)("0x1") ? (0, _.O0)("0x1") : "0x1")
                    }(n ? ? "0x0", "0x1")
                } catch (e) {
                    if (e instanceof P.cg) return !1;
                    throw e
                }
            }
            async function e3(e, {
                address: t,
                message: r,
                signature: n,
                ...i
            }) {
                return e6(e, {
                    address: t,
                    hash: function(e, t) {
                        let r = "string" == typeof e ? (0, _.qX)(e) : e.raw instanceof Uint8Array ? e.raw : (0, _.O0)(e.raw),
                            n = (0, _.qX)(`\x19Ethereum Signed Message:
${r.length}`);
                        return (0, I.w)((0, O.zo)([n, r]), void 0)
                    }(r),
                    signature: n,
                    ...i
                })
            }
            var e5 = r(92416);

            function e8({
                data: e,
                primaryType: t,
                types: r
            }) {
                let n = function e({
                    data: t,
                    primaryType: r,
                    types: n
                }) {
                    let i = [{
                            type: "bytes32"
                        }],
                        o = [function({
                            primaryType: e,
                            types: t
                        }) {
                            let r = (0, w.NC)(function({
                                primaryType: e,
                                types: t
                            }) {
                                let r = "",
                                    n = function e({
                                        primaryType: t,
                                        types: r
                                    }, n = new Set) {
                                        let i = t.match(/^\w*/u),
                                            o = i ? .[0];
                                        if (n.has(o) || void 0 === r[o]) return n;
                                        for (let t of (n.add(o), r[o])) e({
                                            primaryType: t.type,
                                            types: r
                                        }, n);
                                        return n
                                    }({
                                        primaryType: e,
                                        types: t
                                    });
                                for (let i of (n.delete(e), [e, ...Array.from(n).sort()])) r += `${i}(${t[i].map(({name:e,type:t})=>`
                                $ {
                                    t
                                }
                                $ {
                                    e
                                }
                                `).join(",")})`;
                                return r
                            }({
                                primaryType: e,
                                types: t
                            }));
                            return (0, I.w)(r)
                        }({
                            primaryType: r,
                            types: n
                        })];
                    for (let a of n[r]) {
                        let [r, s] = function t({
                            types: r,
                            name: n,
                            type: i,
                            value: o
                        }) {
                            if (void 0 !== r[i]) return [{
                                type: "bytes32"
                            }, (0, I.w)(e({
                                data: o,
                                primaryType: i,
                                types: r
                            }))];
                            if ("bytes" === i) {
                                let e = o.length % 2 ? "0" : "";
                                return o = `0x${e+o.slice(2)}`, [{
                                    type: "bytes32"
                                }, (0, I.w)(o)]
                            }
                            if ("string" === i) return [{
                                type: "bytes32"
                            }, (0, I.w)((0, w.NC)(o))];
                            if (i.lastIndexOf("]") === i.length - 1) {
                                let e = i.slice(0, i.lastIndexOf("[")),
                                    a = o.map(i => t({
                                        name: n,
                                        type: e,
                                        types: r,
                                        value: i
                                    }));
                                return [{
                                    type: "bytes32"
                                }, (0, I.w)((0, el.E)(a.map(([e]) => e), a.map(([, e]) => e)))]
                            }
                            return [{
                                type: i
                            }, o]
                        }({
                            types: n,
                            name: a.name,
                            type: a.type,
                            value: t[a.name]
                        });
                        i.push(r), o.push(s)
                    }
                    return (0, el.E)(i, o)
                }({
                    data: e,
                    primaryType: t,
                    types: r
                });
                return (0, I.w)(n)
            }
            async function e4(e, {
                address: t,
                signature: r,
                message: n,
                primaryType: i,
                types: o,
                domain: a,
                ...s
            }) {
                return e6(e, {
                    address: t,
                    hash: function({
                        domain: e,
                        message: t,
                        primaryType: r,
                        types: n
                    }) {
                        let i = void 0 === e ? {} : e,
                            o = {
                                EIP712Domain: (0, e5.cj)({
                                    domain: i
                                }),
                                ...n
                            };
                        (0, e5.iC)({
                            domain: i,
                            message: t,
                            primaryType: r,
                            types: o
                        });
                        let a = ["0x1901"];
                        return i && a.push(function({
                            domain: e,
                            types: t
                        }) {
                            return e8({
                                data: e,
                                primaryType: "EIP712Domain",
                                types: t
                            })
                        }({
                            domain: i,
                            types: o
                        })), "EIP712Domain" !== r && a.push(e8({
                            data: t,
                            primaryType: r,
                            types: o
                        })), (0, I.w)((0, O.zo)(a))
                    }({
                        message: n,
                        primaryType: i,
                        types: o,
                        domain: a
                    }),
                    signature: r,
                    ...s
                })
            }
            var e9 = r(87655);
            let e7 = new Map,
                te = new Map,
                tt = 0;

            function tr(e, t, r) {
                let n = ++tt,
                    i = () => e7.get(e) || [],
                    o = () => {
                        let t = i();
                        e7.set(e, t.filter(e => e.id !== n))
                    },
                    a = () => {
                        let t = te.get(e);
                        1 === i().length && t && t(), o()
                    },
                    s = i();
                if (e7.set(e, [...s, {
                        id: n,
                        fns: t
                    }]), s && s.length > 0) return a;
                let u = {};
                for (let e in t) u[e] = (...t) => {
                    let r = i();
                    if (0 !== r.length)
                        for (let n of r) n.fns[e] ? .(...t)
                };
                let c = r(u);
                return "function" == typeof c && te.set(e, c), a
            }
            var tn = r(55894),
                ti = r(47499),
                to = r(97317);

            function ta(e, {
                emitOnBegin: t,
                initialWaitTime: r,
                interval: n
            }) {
                let i = !0,
                    o = () => i = !1;
                return (async () => {
                    let a;
                    t && (a = await e({
                        unpoll: o
                    }));
                    let s = await r ? .(a) ? ? n;
                    await (0, to.D)(s);
                    let u = async () => {
                        i && (await e({
                            unpoll: o
                        }), await (0, to.D)(n), u())
                    };
                    u()
                })(), o
            }

            function ts(e, {
                emitOnBegin: t = !1,
                emitMissed: r = !1,
                onBlockNumber: n,
                onError: i,
                poll: o,
                pollingInterval: a = e.pollingInterval
            }) {
                let s, u, c;
                return (void 0 !== o ? o : "webSocket" !== e.transport.type) ? tr((0, ti.P)(["watchBlockNumber", e.uid, t, r, a]), {
                    onBlockNumber: n,
                    onError: i
                }, n => ta(async () => {
                    try {
                        let t = await (0, M.s)(e, eC, "getBlockNumber")({
                            cacheTime: 0
                        });
                        if (s) {
                            if (t === s) return;
                            if (t - s > 1 && r)
                                for (let e = s + 1 n; e < t; e++) n.onBlockNumber(e, s), s = e
                        }(!s || t > s) && (n.onBlockNumber(t, s), s = t)
                    } catch (e) {
                        n.onError ? .(e)
                    }
                }, {
                    emitOnBegin: t,
                    interval: a
                })) : (u = !0, c = () => u = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                                if (!u) return;
                                let t = (0, eS.y_)(e.result ? .number);
                                n(t, s), s = t
                            },
                            onError(e) {
                                i ? .(e)
                            }
                        });
                        c = t, u || c()
                    } catch (e) {
                        i ? .(e)
                    }
                })(), c)
            }
            async function tu(e, {
                confirmations: t = 1,
                hash: r,
                onReplaced: n,
                pollingInterval: i = e.pollingInterval,
                timeout: o
            }) {
                let a, s, u;
                let c = (0, ti.P)(["waitForTransactionReceipt", e.uid, r]),
                    l = !1;
                return new Promise((d, f) => {
                    o && setTimeout(() => f(new eW.mc({
                        hash: r
                    })), o);
                    let h = tr(c, {
                        onReplaced: n,
                        resolve: d,
                        reject: f
                    }, n => {
                        let o = (0, M.s)(e, ts, "watchBlockNumber")({
                            emitMissed: !0,
                            emitOnBegin: !0,
                            poll: !0,
                            pollingInterval: i,
                            async onBlockNumber(i) {
                                if (l) return;
                                let c = i,
                                    d = e => {
                                        o(), e(), h()
                                    };
                                try {
                                    if (u) {
                                        if (t > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < t)) return;
                                        d(() => n.resolve(u));
                                        return
                                    }
                                    if (a || (l = !0, await (0, tn.J)(async () => {
                                            (a = await (0, M.s)(e, eY, "getTransaction")({
                                                hash: r
                                            })).blockNumber && (c = a.blockNumber)
                                        }, {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6
                                        }), l = !1), u = await (0, M.s)(e, eZ, "getTransactionReceipt")({
                                            hash: r
                                        }), t > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < t)) return;
                                    d(() => n.resolve(u))
                                } catch (r) {
                                    if (a && (r instanceof eW.Bh || r instanceof eW.Yb)) try {
                                        s = a, l = !0;
                                        let r = await (0, tn.J)(() => (0, M.s)(e, ex.Q, "getBlock")({
                                            blockNumber: c,
                                            includeTransactions: !0
                                        }), {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6,
                                            shouldRetry: ({
                                                error: e
                                            }) => e instanceof e9.f
                                        });
                                        l = !1;
                                        let i = r.transactions.find(({
                                            from: e,
                                            nonce: t
                                        }) => e === s.from && t === s.nonce);
                                        if (!i || (u = await (0, M.s)(e, eZ, "getTransactionReceipt")({
                                                hash: i.hash
                                            }), t > 1 && (!u.blockNumber || c - u.blockNumber + 1 n < t))) return;
                                        let o = "replaced";
                                        i.to === s.to && i.value === s.value ? o = "repriced" : i.from === i.to && 0 n === i.value && (o = "cancelled"), d(() => {
                                            n.onReplaced ? .({
                                                reason: o,
                                                replacedTransaction: s,
                                                transaction: i,
                                                transactionReceipt: u
                                            }), n.resolve(u)
                                        })
                                    } catch (e) {
                                        d(() => n.reject(e))
                                    } else d(() => n.reject(r))
                                }
                            }
                        })
                    })
                })
            }
            var tc = r(20621),
                tl = r(38374),
                td = r(96432);

            function tf(e) {
                return {
                    call: t => (0, D.R)(e, t),
                    createBlockFilter: () => es(e),
                    createContractEventFilter: t => em(e, t),
                    createEventFilter: t => eg(e, t),
                    createPendingTransactionFilter: () => eb(e),
                    estimateContractGas: t => ew(e, t),
                    estimateGas: t => (0, ev.Q)(e, t),
                    getBalance: t => eP(e, t),
                    getBlock: t => (0, ex.Q)(e, t),
                    getBlockNumber: t => eC(e, t),
                    getBlockTransactionCount: t => ek(e, t),
                    getBytecode: t => eM(e, t),
                    getChainId: () => (0, eB.L)(e),
                    getContractEvents: t => eU(e, t),
                    getEnsAddress: t => F(e, t),
                    getEnsAvatar: t => en(e, t),
                    getEnsName: t => ei(e, t),
                    getEnsResolver: t => eo(e, t),
                    getEnsText: t => er(e, t),
                    getFeeHistory: t => eL(e, t),
                    estimateFeesPerGas: t => (0, eE.X)(e, t),
                    getFilterChanges: t => eq(e, t),
                    getFilterLogs: t => ez(e, t),
                    getGasPrice: () => (0, e$.o)(e),
                    getLogs: t => eF(e, t),
                    getProof: t => eH(e, t),
                    estimateMaxPriorityFeePerGas: t => (0, eA._)(e, t),
                    getStorageAt: t => eG(e, t),
                    getTransaction: t => eY(e, t),
                    getTransactionConfirmations: t => eV(e, t),
                    getTransactionCount: t => (0, eQ.K)(e, t),
                    getTransactionReceipt: t => eZ(e, t),
                    multicall: t => eX(e, t),
                    prepareTransactionRequest: t => (0, tl.Z)(e, t),
                    readContract: t => j(e, t),
                    sendRawTransaction: t => (0, td.p)(e, t),
                    simulateContract: t => e0(e, t),
                    verifyMessage: t => e3(e, t),
                    verifyTypedData: t => e4(e, t),
                    uninstallFilter: t => e1(e, t),
                    waitForTransactionReceipt: t => tu(e, t),
                    watchBlocks: t => (function(e, {
                        blockTag: t = "latest",
                        emitMissed: r = !1,
                        emitOnBegin: n = !1,
                        onBlock: i,
                        onError: o,
                        includeTransactions: a,
                        poll: s,
                        pollingInterval: u = e.pollingInterval
                    }) {
                        let c, l, d;
                        let f = void 0 !== s ? s : "webSocket" !== e.transport.type,
                            h = a ? ? !1;
                        return f ? tr((0, ti.P)(["watchBlocks", e.uid, r, n, h, u]), {
                            onBlock: i,
                            onError: o
                        }, i => ta(async () => {
                            try {
                                let n = await (0, M.s)(e, ex.Q, "getBlock")({
                                    blockTag: t,
                                    includeTransactions: h
                                });
                                if (n.number && c ? .number) {
                                    if (n.number === c.number) return;
                                    if (n.number - c.number > 1 && r)
                                        for (let t = c ? .number + 1 n; t < n.number; t++) {
                                            let r = await (0, M.s)(e, ex.Q, "getBlock")({
                                                blockNumber: t,
                                                includeTransactions: h
                                            });
                                            i.onBlock(r, c), c = r
                                        }
                                }(!c ? .number || "pending" === t && !n ? .number || n.number && n.number > c.number) && (i.onBlock(n, c), c = n)
                            } catch (e) {
                                i.onError ? .(e)
                            }
                        }, {
                            emitOnBegin: n,
                            interval: u
                        })) : (l = !0, d = () => l = !1, (async () => {
                            try {
                                let {
                                    unsubscribe: t
                                } = await e.transport.subscribe({
                                    params: ["newHeads"],
                                    onData(t) {
                                        if (!l) return;
                                        let r = (e.chain ? .formatters ? .block ? .format || tc.Z)(t.result);
                                        i(r, c), c = r
                                    },
                                    onError(e) {
                                        o ? .(e)
                                    }
                                });
                                d = t, l || d()
                            } catch (e) {
                                o ? .(e)
                            }
                        })(), d)
                    })(e, t),
                    watchBlockNumber: t => ts(e, t),
                    watchContractEvent: t => (function(e, {
                        abi: t,
                        address: r,
                        args: n,
                        batch: i = !0,
                        eventName: o,
                        onError: a,
                        onLogs: s,
                        poll: u,
                        pollingInterval: c = e.pollingInterval,
                        strict: l
                    }) {
                        let d, f;
                        return (void 0 !== u ? u : "webSocket" !== e.transport.type) ? (() => {
                            let u = (0, ti.P)(["watchContractEvent", r, n, i, e.uid, o, c]),
                                d = l ? ? !1;
                            return tr(u, {
                                onLogs: s,
                                onError: a
                            }, a => {
                                let s, u;
                                let l = !1,
                                    f = ta(async () => {
                                        if (!l) {
                                            try {
                                                u = await (0, M.s)(e, em, "createContractEventFilter")({
                                                    abi: t,
                                                    address: r,
                                                    args: n,
                                                    eventName: o,
                                                    strict: d
                                                })
                                            } catch {}
                                            l = !0;
                                            return
                                        }
                                        try {
                                            let c;
                                            if (u) c = await (0, M.s)(e, eq, "getFilterChanges")({
                                                filter: u
                                            });
                                            else {
                                                let i = await (0, M.s)(e, eC, "getBlockNumber")({});
                                                c = s && s !== i ? await (0, M.s)(e, eU, "getContractEvents")({
                                                    abi: t,
                                                    address: r,
                                                    args: n,
                                                    eventName: o,
                                                    fromBlock: s + 1 n,
                                                    toBlock: i,
                                                    strict: d
                                                }) : [], s = i
                                            }
                                            if (0 === c.length) return;
                                            if (i) a.onLogs(c);
                                            else
                                                for (let e of c) a.onLogs([e])
                                        } catch (e) {
                                            u && e instanceof N.yR && (l = !1), a.onError ? .(e)
                                        }
                                    }, {
                                        emitOnBegin: !0,
                                        interval: c
                                    });
                                return async () => {
                                    u && await (0, M.s)(e, e1, "uninstallFilter")({
                                        filter: u
                                    }), f()
                                }
                            })
                        })() : (d = !0, f = () => d = !1, (async () => {
                            try {
                                let i = o ? eh({
                                        abi: t,
                                        eventName: o,
                                        args: n
                                    }) : [],
                                    {
                                        unsubscribe: u
                                    } = await e.transport.subscribe({
                                        params: ["logs", {
                                            address: r,
                                            topics: i
                                        }],
                                        onData(e) {
                                            if (!d) return;
                                            let r = e.result;
                                            try {
                                                let {
                                                    eventName: e,
                                                    args: n
                                                } = eD({
                                                    abi: t,
                                                    data: r.data,
                                                    topics: r.topics,
                                                    strict: l
                                                }), i = ej(r, {
                                                    args: n,
                                                    eventName: e
                                                });
                                                s([i])
                                            } catch (i) {
                                                let e, t;
                                                if (i instanceof B.SM || i instanceof B.Gy) {
                                                    if (l) return;
                                                    e = i.abiItem.name, t = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                                }
                                                let n = ej(r, {
                                                    args: t ? [] : {},
                                                    eventName: e
                                                });
                                                s([n])
                                            }
                                        },
                                        onError(e) {
                                            a ? .(e)
                                        }
                                    });
                                f = u, d || f()
                            } catch (e) {
                                a ? .(e)
                            }
                        })(), f)
                    })(e, t),
                    watchEvent: t => (function(e, {
                        address: t,
                        args: r,
                        batch: n = !0,
                        event: i,
                        events: o,
                        onError: a,
                        onLogs: s,
                        poll: u,
                        pollingInterval: c = e.pollingInterval,
                        strict: l
                    }) {
                        let d, f;
                        let h = void 0 !== u ? u : "webSocket" !== e.transport.type,
                            p = l ? ? !1;
                        return h ? tr((0, ti.P)(["watchEvent", t, r, n, e.uid, i, c]), {
                            onLogs: s,
                            onError: a
                        }, a => {
                            let s, u;
                            let l = !1,
                                d = ta(async () => {
                                    if (!l) {
                                        try {
                                            u = await (0, M.s)(e, eg, "createEventFilter")({
                                                address: t,
                                                args: r,
                                                event: i,
                                                events: o,
                                                strict: p
                                            })
                                        } catch {}
                                        l = !0;
                                        return
                                    }
                                    try {
                                        let c;
                                        if (u) c = await (0, M.s)(e, eq, "getFilterChanges")({
                                            filter: u
                                        });
                                        else {
                                            let n = await (0, M.s)(e, eC, "getBlockNumber")({});
                                            c = s && s !== n ? await (0, M.s)(e, eF, "getLogs")({
                                                address: t,
                                                args: r,
                                                event: i,
                                                events: o,
                                                fromBlock: s + 1 n,
                                                toBlock: n
                                            }) : [], s = n
                                        }
                                        if (0 === c.length) return;
                                        if (n) a.onLogs(c);
                                        else
                                            for (let e of c) a.onLogs([e])
                                    } catch (e) {
                                        u && e instanceof N.yR && (l = !1), a.onError ? .(e)
                                    }
                                }, {
                                    emitOnBegin: !0,
                                    interval: c
                                });
                            return async () => {
                                u && await (0, M.s)(e, e1, "uninstallFilter")({
                                    filter: u
                                }), d()
                            }
                        }) : (d = !0, f = () => d = !1, (async () => {
                            try {
                                let n = o ? ? (i ? [i] : void 0),
                                    u = [];
                                n && (u = [n.flatMap(e => eh({
                                    abi: [e],
                                    eventName: e.name,
                                    args: r
                                }))], i && (u = u[0]));
                                let {
                                    unsubscribe: c
                                } = await e.transport.subscribe({
                                    params: ["logs", {
                                        address: t,
                                        topics: u
                                    }],
                                    onData(e) {
                                        if (!d) return;
                                        let t = e.result;
                                        try {
                                            let {
                                                eventName: e,
                                                args: r
                                            } = eD({
                                                abi: n,
                                                data: t.data,
                                                topics: t.topics,
                                                strict: p
                                            }), i = ej(t, {
                                                args: r,
                                                eventName: e
                                            });
                                            s([i])
                                        } catch (i) {
                                            let e, r;
                                            if (i instanceof B.SM || i instanceof B.Gy) {
                                                if (l) return;
                                                e = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                            }
                                            let n = ej(t, {
                                                args: r ? [] : {},
                                                eventName: e
                                            });
                                            s([n])
                                        }
                                    },
                                    onError(e) {
                                        a ? .(e)
                                    }
                                });
                                f = c, d || f()
                            } catch (e) {
                                a ? .(e)
                            }
                        })(), f)
                    })(e, t),
                    watchPendingTransactions: t => (function(e, {
                        batch: t = !0,
                        onError: r,
                        onTransactions: n,
                        poll: i,
                        pollingInterval: o = e.pollingInterval
                    }) {
                        let a, s;
                        return (void 0 !== i ? i : "webSocket" !== e.transport.type) ? tr((0, ti.P)(["watchPendingTransactions", e.uid, t, o]), {
                            onTransactions: n,
                            onError: r
                        }, r => {
                            let n;
                            let i = ta(async () => {
                                try {
                                    if (!n) try {
                                        n = await (0, M.s)(e, eb, "createPendingTransactionFilter")({});
                                        return
                                    } catch (e) {
                                        throw i(), e
                                    }
                                    let o = await (0, M.s)(e, eq, "getFilterChanges")({
                                        filter: n
                                    });
                                    if (0 === o.length) return;
                                    if (t) r.onTransactions(o);
                                    else
                                        for (let e of o) r.onTransactions([e])
                                } catch (e) {
                                    r.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: o
                            });
                            return async () => {
                                n && await (0, M.s)(e, e1, "uninstallFilter")({
                                    filter: n
                                }), i()
                            }
                        }) : (a = !0, s = () => a = !1, (async () => {
                            try {
                                let {
                                    unsubscribe: t
                                } = await e.transport.subscribe({
                                    params: ["newPendingTransactions"],
                                    onData(e) {
                                        if (!a) return;
                                        let t = e.result;
                                        n([t])
                                    },
                                    onError(e) {
                                        r ? .(e)
                                    }
                                });
                                s = t, a || s()
                            } catch (e) {
                                r ? .(e)
                            }
                        })(), s)
                    })(e, t)
                }
            }

            function th(e) {
                let {
                    key: t = "public",
                    name: r = "Public Client"
                } = e;
                return (0, p.e)({ ...e,
                    key: t,
                    name: r,
                    type: "publicClient"
                }).extend(tf)
            }
            var tp = r(37591),
                tm = r(66021);

            function tg(e, t = {}) {
                let {
                    key: r = "fallback",
                    name: n = "Fallback",
                    rank: i = !1,
                    retryCount: o,
                    retryDelay: a
                } = t;
                return ({
                    chain: t,
                    pollingInterval: s = 4e3,
                    timeout: u
                }) => {
                    let c = e,
                        l = () => {},
                        d = (0, tm.q)({
                            key: r,
                            name: n,
                            async request({
                                method: e,
                                params: r
                            }) {
                                let n = async (i = 0) => {
                                    let o = c[i]({
                                        chain: t,
                                        retryCount: 0,
                                        timeout: u
                                    });
                                    try {
                                        let t = await o.request({
                                            method: e,
                                            params: r
                                        });
                                        return l({
                                            method: e,
                                            params: r,
                                            response: t,
                                            transport: o,
                                            status: "success"
                                        }), t
                                    } catch (t) {
                                        if (l({
                                                error: t,
                                                method: e,
                                                params: r,
                                                transport: o,
                                                status: "error"
                                            }), (0, tp.y)(t) || i === c.length - 1) throw t;
                                        return n(i + 1)
                                    }
                                };
                                return n()
                            },
                            retryCount: o,
                            retryDelay: a,
                            type: "fallback"
                        }, {
                            onResponse: e => l = e,
                            transports: c.map(e => e({
                                chain: t,
                                retryCount: 0
                            }))
                        });
                    if (i) {
                        let e = "object" == typeof i ? i : {};
                        ! function({
                            chain: e,
                            interval: t = 4e3,
                            onTransports: r,
                            sampleCount: n = 10,
                            timeout: i = 1e3,
                            transports: o,
                            weights: a = {}
                        }) {
                            let {
                                stability: s = .7,
                                latency: u = .3
                            } = a, c = [], l = async () => {
                                let a = await Promise.all(o.map(async t => {
                                    let r, n;
                                    let o = t({
                                            chain: e,
                                            retryCount: 0,
                                            timeout: i
                                        }),
                                        a = Date.now();
                                    try {
                                        await o.request({
                                            method: "net_listening"
                                        }), n = 1
                                    } catch {
                                        n = 0
                                    } finally {
                                        r = Date.now()
                                    }
                                    return {
                                        latency: r - a,
                                        success: n
                                    }
                                }));
                                c.push(a), c.length > n && c.shift();
                                let d = Math.max(...c.map(e => Math.max(...e.map(({
                                    latency: e
                                }) => e))));
                                r(o.map((e, t) => {
                                    let r = c.map(e => e[t].latency),
                                        n = r.reduce((e, t) => e + t, 0) / r.length,
                                        i = c.map(e => e[t].success),
                                        o = i.reduce((e, t) => e + t, 0) / i.length;
                                    return 0 === o ? [0, t] : [u * (1 - n / d) + s * o, t]
                                }).sort((e, t) => t[0] - e[0]).map(([, e]) => o[e])), await (0, to.D)(t), l()
                            };
                            l()
                        }({
                            chain: t,
                            interval: e.interval ? ? s,
                            onTransports: e => c = e,
                            sampleCount: e.sampleCount,
                            timeout: e.timeout,
                            transports: c,
                            weights: e.weights
                        })
                    }
                    return d
                }
            }
            var tb = r(4456);
            class ty extends A.G {
                constructor() {
                    super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                        docsPath: "/docs/clients/intro"
                    })
                }
            }
            var tv = r(10639),
                tw = r(15864);

            function tE(e, {
                errorInstance: t = Error("timed out"),
                timeout: r,
                signal: n
            }) {
                return new Promise((i, o) => {
                    (async () => {
                        let a;
                        try {
                            let s = new AbortController;
                            r > 0 && (a = setTimeout(() => {
                                n ? s.abort() : o(t)
                            }, r)), i(await e({
                                signal: s ? .signal
                            }))
                        } catch (e) {
                            "AbortError" === e.name && o(t), o(e)
                        } finally {
                            clearTimeout(a)
                        }
                    })()
                })
            }
            let tA = 0;
            async function tP(e, {
                body: t,
                fetchOptions: r = {},
                timeout: n = 1e4
            }) {
                let {
                    headers: i,
                    method: o,
                    signal: a
                } = r;
                try {
                    let s;
                    let u = await tE(async ({
                        signal: s
                    }) => await fetch(e, { ...r,
                        body: Array.isArray(t) ? (0, ti.P)(t.map(e => ({
                            jsonrpc: "2.0",
                            id: e.id ? ? tA++,
                            ...e
                        }))) : (0, ti.P)({
                            jsonrpc: "2.0",
                            id: t.id ? ? tA++,
                            ...t
                        }),
                        headers: { ...i,
                            "Content-Type": "application/json"
                        },
                        method: o || "POST",
                        signal: a || (n > 0 ? s : void 0)
                    }), {
                        errorInstance: new tb.W5({
                            body: t,
                            url: e
                        }),
                        timeout: n,
                        signal: !0
                    });
                    if (s = u.headers.get("Content-Type") ? .startsWith("application/json") ? await u.json() : await u.text(), !u.ok) throw new tb.Gg({
                        body: t,
                        details: (0, ti.P)(s.error) || u.statusText,
                        headers: u.headers,
                        status: u.status,
                        url: e
                    });
                    return s
                } catch (r) {
                    if (r instanceof tb.Gg || r instanceof tb.W5) throw r;
                    throw new tb.Gg({
                        body: t,
                        details: r.message,
                        url: e
                    })
                }
            }
            let tx = new Map;
            async function tO(e) {
                let t = tx.get(e);
                if (t) return t;
                let {
                    schedule: r
                } = (0, tv.S)({
                    id: e,
                    fn: async () => {
                        let r = new tw.WebSocket(e),
                            n = new Map,
                            i = new Map,
                            o = ({
                                data: e
                            }) => {
                                let t = JSON.parse(e),
                                    r = "eth_subscription" === t.method,
                                    o = r ? t.params.subscription : t.id,
                                    a = r ? i : n,
                                    s = a.get(o);
                                s && s({
                                    data: e
                                }), r || a.delete(o)
                            },
                            a = () => {
                                tx.delete(e), r.removeEventListener("close", a), r.removeEventListener("message", o)
                            };
                        return r.addEventListener("close", a), r.addEventListener("message", o), r.readyState === tw.WebSocket.CONNECTING && await new Promise((e, t) => {
                            r && (r.onopen = e, r.onerror = t)
                        }), t = Object.assign(r, {
                            requests: n,
                            subscriptions: i
                        }), tx.set(e, t), [t]
                    }
                }), [n, [i]] = await r();
                return i
            }
            let t_ = {
                http: tP,
                webSocket: function(e, {
                    body: t,
                    onResponse: r
                }) {
                    if (e.readyState === e.CLOSED || e.readyState === e.CLOSING) throw new tb.c9({
                        body: t,
                        url: e.url,
                        details: "Socket is closed."
                    });
                    let n = tA++,
                        i = ({
                            data: o
                        }) => {
                            let a = JSON.parse(o);
                            ("number" != typeof a.id || n === a.id) && (r ? .(a), "eth_subscribe" === t.method && "string" == typeof a.result && e.subscriptions.set(a.result, i), "eth_unsubscribe" === t.method && e.subscriptions.delete(t.params ? .[0]))
                        };
                    return e.requests.set(n, i), e.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...t,
                        id: n
                    })), e
                },
                webSocketAsync: async function(e, {
                    body: t,
                    timeout: r = 1e4
                }) {
                    return tE(() => new Promise(r => t_.webSocket(e, {
                        body: t,
                        onResponse: r
                    })), {
                        errorInstance: new tb.W5({
                            body: t,
                            url: e.url
                        }),
                        timeout: r
                    })
                }
            };
            var tI = r(54812),
                tT = r(90408);
            let tC = e => (t, r, n) => {
                    let i = n.subscribe;
                    return n.subscribe = (e, t, r) => {
                        let o = e;
                        if (t) {
                            let i = (null == r ? void 0 : r.equalityFn) || Object.is,
                                a = e(n.getState());
                            o = r => {
                                let n = e(r);
                                if (!i(a, n)) {
                                    let e = a;
                                    t(a = n, e)
                                }
                            }, (null == r ? void 0 : r.fireImmediately) && t(a, a)
                        }
                        return i(o)
                    }, e(t, r, n)
                },
                tS = e => t => {
                    try {
                        let r = e(t);
                        if (r instanceof Promise) return r;
                        return {
                            then: e => tS(e)(r),
                            catch (e) {
                                return this
                            }
                        }
                    } catch (e) {
                        return {
                            then(e) {
                                return this
                            },
                            catch: t => tS(t)(e)
                        }
                    }
                },
                tk = (e, t) => (r, n, i) => {
                    let o, a, s = {
                            getStorage: () => localStorage,
                            serialize: JSON.stringify,
                            deserialize: JSON.parse,
                            partialize: e => e,
                            version: 0,
                            merge: (e, t) => ({ ...t,
                                ...e
                            }),
                            ...t
                        },
                        u = !1,
                        c = new Set,
                        l = new Set;
                    try {
                        o = s.getStorage()
                    } catch (e) {}
                    if (!o) return e((...e) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`), r(...e)
                    }, n, i);
                    let d = tS(s.serialize),
                        f = () => {
                            let e;
                            let t = d({
                                state: s.partialize({ ...n()
                                }),
                                version: s.version
                            }).then(e => o.setItem(s.name, e)).catch(t => {
                                e = t
                            });
                            if (e) throw e;
                            return t
                        },
                        h = i.setState;
                    i.setState = (e, t) => {
                        h(e, t), f()
                    };
                    let p = e((...e) => {
                            r(...e), f()
                        }, n, i),
                        m = () => {
                            var e;
                            if (!o) return;
                            u = !1, c.forEach(e => e(n()));
                            let t = (null == (e = s.onRehydrateStorage) ? void 0 : e.call(s, n())) || void 0;
                            return tS(o.getItem.bind(o))(s.name).then(e => {
                                if (e) return s.deserialize(e)
                            }).then(e => {
                                if (e) {
                                    if ("number" != typeof e.version || e.version === s.version) return e.state;
                                    if (s.migrate) return s.migrate(e.state, e.version);
                                    console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                }
                            }).then(e => {
                                var t;
                                return r(a = s.merge(e, null != (t = n()) ? t : p), !0), f()
                            }).then(() => {
                                null == t || t(a, void 0), u = !0, l.forEach(e => e(a))
                            }).catch(e => {
                                null == t || t(void 0, e)
                            })
                        };
                    return i.persist = {
                        setOptions: e => {
                            s = { ...s,
                                ...e
                            }, e.getStorage && (o = e.getStorage())
                        },
                        clearStorage: () => {
                            null == o || o.removeItem(s.name)
                        },
                        getOptions: () => s,
                        rehydrate: () => m(),
                        hasHydrated: () => u,
                        onHydrate: e => (c.add(e), () => {
                            c.delete(e)
                        }),
                        onFinishHydration: e => (l.add(e), () => {
                            l.delete(e)
                        })
                    }, m(), a || p
                },
                tM = (e, t) => (r, n, i) => {
                    let o, a = {
                            storage: function(e, t) {
                                let r;
                                try {
                                    r = e()
                                } catch (e) {
                                    return
                                }
                                return {
                                    getItem: e => {
                                        var t;
                                        let n = e => null === e ? null : JSON.parse(e, void 0),
                                            i = null != (t = r.getItem(e)) ? t : null;
                                        return i instanceof Promise ? i.then(n) : n(i)
                                    },
                                    setItem: (e, t) => r.setItem(e, JSON.stringify(t, void 0)),
                                    removeItem: e => r.removeItem(e)
                                }
                            }(() => localStorage),
                            partialize: e => e,
                            version: 0,
                            merge: (e, t) => ({ ...t,
                                ...e
                            }),
                            ...t
                        },
                        s = !1,
                        u = new Set,
                        c = new Set,
                        l = a.storage;
                    if (!l) return e((...e) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${a.name}', the given storage is currently unavailable.`), r(...e)
                    }, n, i);
                    let d = () => {
                            let e = a.partialize({ ...n()
                            });
                            return l.setItem(a.name, {
                                state: e,
                                version: a.version
                            })
                        },
                        f = i.setState;
                    i.setState = (e, t) => {
                        f(e, t), d()
                    };
                    let h = e((...e) => {
                        r(...e), d()
                    }, n, i);
                    i.getInitialState = () => h;
                    let p = () => {
                        var e, t;
                        if (!l) return;
                        s = !1, u.forEach(e => {
                            var t;
                            return e(null != (t = n()) ? t : h)
                        });
                        let i = (null == (t = a.onRehydrateStorage) ? void 0 : t.call(a, null != (e = n()) ? e : h)) || void 0;
                        return tS(l.getItem.bind(l))(a.name).then(e => {
                            if (e) {
                                if ("number" != typeof e.version || e.version === a.version) return e.state;
                                if (a.migrate) return a.migrate(e.state, e.version);
                                console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                            }
                        }).then(e => {
                            var t;
                            return r(o = a.merge(e, null != (t = n()) ? t : h), !0), d()
                        }).then(() => {
                            null == i || i(o, void 0), o = n(), s = !0, c.forEach(e => e(o))
                        }).catch(e => {
                            null == i || i(void 0, e)
                        })
                    };
                    return i.persist = {
                        setOptions: e => {
                            a = { ...a,
                                ...e
                            }, e.storage && (l = e.storage)
                        },
                        clearStorage: () => {
                            null == l || l.removeItem(a.name)
                        },
                        getOptions: () => a,
                        rehydrate: () => p(),
                        hasHydrated: () => s,
                        onHydrate: e => (u.add(e), () => {
                            u.delete(e)
                        }),
                        onFinishHydration: e => (c.add(e), () => {
                            c.delete(e)
                        })
                    }, a.skipHydration || p(), o || h
                },
                tB = (e, t) => "getStorage" in t || "serialize" in t || "deserialize" in t ? (console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."), tk(e, t)) : tM(e, t),
                tN = e => {
                    let t;
                    let r = new Set,
                        n = (e, n) => {
                            let i = "function" == typeof e ? e(t) : e;
                            if (!Object.is(i, t)) {
                                let e = t;
                                t = (null != n ? n : "object" != typeof i || null === i) ? i : Object.assign({}, t, i), r.forEach(r => r(t, e))
                            }
                        },
                        i = () => t,
                        o = {
                            setState: n,
                            getState: i,
                            getInitialState: () => a,
                            subscribe: e => (r.add(e), () => r.delete(e)),
                            destroy: () => {
                                console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), r.clear()
                            }
                        },
                        a = t = e(n, i, o);
                    return o
                },
                tR = e => e ? tN(e) : tN;
            var tD = r(42921);

            function tj(e, t) {
                if (Object.is(e, t)) return !0;
                if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
                if (e instanceof Map && t instanceof Map) {
                    if (e.size !== t.size) return !1;
                    for (let [r, n] of e)
                        if (!Object.is(n, t.get(r))) return !1;
                    return !0
                }
                if (e instanceof Set && t instanceof Set) {
                    if (e.size !== t.size) return !1;
                    for (let r of e)
                        if (!t.has(r)) return !1;
                    return !0
                }
                let r = Object.keys(e);
                if (r.length !== Object.keys(t).length) return !1;
                for (let n of r)
                    if (!Object.prototype.hasOwnProperty.call(t, n) || !Object.is(e[n], t[n])) return !1;
                return !0
            }
            var tF = r(99112);

            function tU(e, t, {
                batch: r = {
                    multicall: {
                        wait: 32
                    }
                },
                pollingInterval: n = 4e3,
                rank: i,
                retryCount: o,
                retryDelay: a,
                stallTimeout: s
            } = {}) {
                if (!e.length) throw Error("must have at least one chain");
                let u = [],
                    c = {},
                    l = {};
                for (let r of e) {
                    let e = !1;
                    for (let n of t) {
                        let t = n(r);
                        t && (e = !0, u.some(({
                            id: e
                        }) => e === r.id) || (u = [...u, t.chain]), c[r.id] = [...c[r.id] || [], ...t.rpcUrls.http], t.rpcUrls.webSocket && (l[r.id] = [...l[r.id] || [], ...t.rpcUrls.webSocket]))
                    }
                    if (!e) throw Error(`Could not find valid provider configuration for chain "${r.name}".

You may need to add \`jsonRpcProvider\` to \`configureChains\` with the chain's RPC URLs.
Read more: https://wagmi.sh/core/providers/jsonRpc`)
                }
                return {
                    chains: u,
                    publicClient: ({
                        chainId: t
                    }) => {
                        let l = u.find(e => e.id === t) ? ? e[0],
                            d = c[l.id];
                        if (!d || !d[0]) throw Error(`No providers configured for chain "${l.id}"`);
                        return Object.assign(th({
                            batch: r,
                            chain: l,
                            transport: tg(d.map(e => (function(e, t = {}) {
                                let {
                                    batch: r,
                                    fetchOptions: n,
                                    key: i = "http",
                                    name: o = "HTTP JSON-RPC",
                                    retryDelay: a
                                } = t;
                                return ({
                                    chain: s,
                                    retryCount: u,
                                    timeout: c
                                }) => {
                                    let {
                                        batchSize: l = 1e3,
                                        wait: d = 0
                                    } = "object" == typeof r ? r : {}, f = t.retryCount ? ? u, h = c ? ? t.timeout ? ? 1e4, p = e || s ? .rpcUrls.default.http[0];
                                    if (!p) throw new ty;
                                    return (0, tm.q)({
                                        key: i,
                                        name: o,
                                        async request({
                                            method: t,
                                            params: i
                                        }) {
                                            let o = {
                                                    method: t,
                                                    params: i
                                                },
                                                {
                                                    schedule: a
                                                } = (0, tv.S)({
                                                    id: `${e}`,
                                                    wait: d,
                                                    shouldSplitBatch: e => e.length > l,
                                                    fn: e => t_.http(p, {
                                                        body: e,
                                                        fetchOptions: n,
                                                        timeout: h
                                                    }),
                                                    sort: (e, t) => e.id - t.id
                                                }),
                                                s = async e => r ? a(e) : [await t_.http(p, {
                                                    body: e,
                                                    fetchOptions: n,
                                                    timeout: h
                                                })],
                                                [{
                                                    error: u,
                                                    result: c
                                                }] = await s(o);
                                            if (u) throw new tb.bs({
                                                body: o,
                                                error: u,
                                                url: p
                                            });
                                            return c
                                        },
                                        retryCount: f,
                                        retryDelay: a,
                                        timeout: h,
                                        type: "http"
                                    }, {
                                        fetchOptions: n,
                                        url: e
                                    })
                                }
                            })(e, {
                                timeout: s
                            })), {
                                rank: i,
                                retryCount: o,
                                retryDelay: a
                            }),
                            pollingInterval: n
                        }), {
                            chains: u
                        })
                    },
                    webSocketPublicClient: ({
                        chainId: t
                    }) => {
                        let c = u.find(e => e.id === t) ? ? e[0],
                            d = l[c.id];
                        if (d && d[0]) return Object.assign(th({
                            batch: r,
                            chain: c,
                            transport: tg(d.map(e => (function(e, t = {}) {
                                let {
                                    key: r = "webSocket",
                                    name: n = "WebSocket JSON-RPC",
                                    retryDelay: i
                                } = t;
                                return ({
                                    chain: o,
                                    retryCount: a,
                                    timeout: s
                                }) => {
                                    let u = t.retryCount ? ? a,
                                        c = s ? ? t.timeout ? ? 1e4,
                                        l = e || o ? .rpcUrls.default.webSocket ? .[0];
                                    if (!l) throw new ty;
                                    return (0, tm.q)({
                                        key: r,
                                        name: n,
                                        async request({
                                            method: e,
                                            params: t
                                        }) {
                                            let r = {
                                                    method: e,
                                                    params: t
                                                },
                                                n = await tO(l),
                                                {
                                                    error: i,
                                                    result: o
                                                } = await t_.webSocketAsync(n, {
                                                    body: r,
                                                    timeout: c
                                                });
                                            if (i) throw new tb.bs({
                                                body: r,
                                                error: i,
                                                url: l
                                            });
                                            return o
                                        },
                                        retryCount: u,
                                        retryDelay: i,
                                        timeout: c,
                                        type: "webSocket"
                                    }, {
                                        getSocket: () => tO(l),
                                        async subscribe({
                                            params: e,
                                            onData: t,
                                            onError: r
                                        }) {
                                            let n = await tO(l),
                                                {
                                                    result: i
                                                } = await new Promise((i, o) => t_.webSocket(n, {
                                                    body: {
                                                        method: "eth_subscribe",
                                                        params: e
                                                    },
                                                    onResponse(e) {
                                                        if (e.error) {
                                                            o(e.error), r ? .(e.error);
                                                            return
                                                        }
                                                        if ("number" == typeof e.id) {
                                                            i(e);
                                                            return
                                                        }
                                                        "eth_subscription" === e.method && t(e.params)
                                                    }
                                                }));
                                            return {
                                                subscriptionId: i,
                                                unsubscribe: async () => new Promise(e => t_.webSocket(n, {
                                                    body: {
                                                        method: "eth_unsubscribe",
                                                        params: [i]
                                                    },
                                                    onResponse: e
                                                }))
                                            }
                                        }
                                    })
                                }
                            })(e, {
                                timeout: s
                            })), {
                                rank: i,
                                retryCount: o,
                                retryDelay: a
                            }),
                            pollingInterval: n
                        }), {
                            chains: u
                        })
                    }
                }
            }
            var tL = class extends Error {
                    constructor({
                        chainId: e,
                        connectorId: t
                    }) {
                        super(`Chain "${e}" not configured${t?` for connector "${t}"`:""}.`), this.name = "ChainNotConfigured"
                    }
                },
                tq = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorAlreadyConnectedError", this.message = "Connector already connected"
                    }
                },
                tz = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConfigChainsNotFound", this.message = "No chains were found on the wagmi config. Some functions that require a chain may not work."
                    }
                },
                t$ = class extends Error {
                    constructor({
                        connector: e
                    }) {
                        super(`"${e.name}" does not support programmatic chain switching.`), this.name = "SwitchChainNotSupportedError"
                    }
                },
                tH = (e, {
                    find: t,
                    replace: r
                }) => e && t(e) ? r(e) : "object" != typeof e ? e : Array.isArray(e) ? e.map(e => tH(e, {
                    find: t,
                    replace: r
                })) : e instanceof Object ? Object.entries(e).reduce((e, [n, i]) => ({ ...e,
                    [n]: tH(i, {
                        find: t,
                        replace: r
                    })
                }), {}) : e;

            function tG(e) {
                return tH(JSON.parse(e), {
                    find: e => "string" == typeof e && e.startsWith("#bigint."),
                    replace: e => BigInt(e.replace("#bigint.", ""))
                })
            }

            function tW(e) {
                return "number" == typeof e ? e : "wei" === e ? 0 : Math.abs(tT.Bd[e])
            }

            function tK(e, t) {
                return e.slice(0, t).join(".") || "."
            }

            function tY(e, t) {
                let {
                    length: r
                } = e;
                for (let n = 0; n < r; ++n)
                    if (e[n] === t) return n + 1;
                return 0
            }

            function tV(e, t, r, n) {
                return JSON.stringify(e, function(e, t) {
                    let r = "function" == typeof e,
                        n = "function" == typeof t,
                        i = [],
                        o = [];
                    return function(a, s) {
                        if ("object" == typeof s) {
                            if (i.length) {
                                let e = tY(i, this);
                                0 === e ? i[i.length] = this : (i.splice(e), o.splice(e)), o[o.length] = a;
                                let r = tY(i, s);
                                if (0 !== r) return n ? t.call(this, a, s, tK(o, r)) : `[ref=${tK(o,r)}]`
                            } else i[0] = s, o[0] = a
                        }
                        return r ? e.call(this, a, s) : s
                    }
                }((e, r) => {
                    let n = "bigint" == typeof r ? `#bigint.${r.toString()}` : r;
                    return t ? .(e, n) || n
                }, n), r ? ? void 0)
            }
            var tQ = {
                getItem: e => "",
                setItem: (e, t) => null,
                removeItem: e => null
            };

            function tJ({
                deserialize: e = tG,
                key: t = "wagmi",
                serialize: r = tV,
                storage: n
            }) {
                return { ...n,
                    getItem: (r, i = null) => {
                        let o = n.getItem(`${t}.${r}`);
                        try {
                            return o ? e(o) : i
                        } catch (e) {
                            return console.warn(e), i
                        }
                    },
                    setItem: (e, i) => {
                        if (null === i) n.removeItem(`${t}.${e}`);
                        else try {
                            n.setItem(`${t}.${e}`, r(i))
                        } catch (e) {
                            console.error(e)
                        }
                    },
                    removeItem: e => n.removeItem(`${t}.${e}`)
                }
            }
            var tZ = "store",
                tX = class {
                    constructor({
                        autoConnect: e = !1,
                        connectors: t = [new u._],
                        publicClient: r,
                        storage: s = tJ({
                            storage: "undefined" != typeof window ? window.localStorage : tQ
                        }),
                        logger: c = {
                            warn: console.warn
                        },
                        webSocketPublicClient: l
                    }) {
                        let p;
                        d(this, o), this.publicClients = new Map, this.webSocketPublicClients = new Map, d(this, n, void 0), d(this, i, void 0), this.args = {
                            autoConnect: e,
                            connectors: t,
                            logger: c,
                            publicClient: r,
                            storage: s,
                            webSocketPublicClient: l
                        };
                        let m = "disconnected";
                        if (e) try {
                            let e = s.getItem(tZ),
                                t = e ? .state ? .data;
                            m = t ? .account ? "reconnecting" : "connecting", p = t ? .chain ? .id
                        } catch (e) {}
                        let g = "function" == typeof t ? t() : t;
                        g.forEach(e => e.setStorage(s)), this.store = tR(tC(tB(() => ({
                            connectors: g,
                            publicClient: this.getPublicClient({
                                chainId: p
                            }),
                            status: m,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: p
                            })
                        }), {
                            name: tZ,
                            storage: s,
                            partialize: t => ({ ...e && {
                                    data: {
                                        account: t ? .data ? .account,
                                        chain: t ? .data ? .chain
                                    }
                                },
                                chains: t ? .chains
                            }),
                            version: 2
                        }))), this.storage = s, f(this, i, s ? .getItem("wallet")), h(this, o, a).call(this), e && "undefined" != typeof window && setTimeout(async () => await this.autoConnect(), 0)
                    }
                    get chains() {
                        return this.store.getState().chains
                    }
                    get connectors() {
                        return this.store.getState().connectors
                    }
                    get connector() {
                        return this.store.getState().connector
                    }
                    get data() {
                        return this.store.getState().data
                    }
                    get error() {
                        return this.store.getState().error
                    }
                    get lastUsedChainId() {
                        return this.data ? .chain ? .id
                    }
                    get publicClient() {
                        return this.store.getState().publicClient
                    }
                    get status() {
                        return this.store.getState().status
                    }
                    get subscribe() {
                        return this.store.subscribe
                    }
                    get webSocketPublicClient() {
                        return this.store.getState().webSocketPublicClient
                    }
                    setState(e) {
                        let t = "function" == typeof e ? e(this.store.getState()) : e;
                        this.store.setState(t, !0)
                    }
                    clearState() {
                        this.setState(e => ({ ...e,
                            chains: void 0,
                            connector: void 0,
                            data: void 0,
                            error: void 0,
                            status: "disconnected"
                        }))
                    }
                    async destroy() {
                        this.connector && await this.connector.disconnect ? .(), f(this, n, !1), this.clearState(), this.store.destroy()
                    }
                    async autoConnect() {
                        if (l(this, n)) return;
                        f(this, n, !0), this.setState(e => ({ ...e,
                            status: e.data ? .account ? "reconnecting" : "connecting"
                        }));
                        let e = l(this, i) ? [...this.connectors].sort(e => e.id === l(this, i) ? -1 : 1) : this.connectors,
                            t = !1;
                        for (let r of e) {
                            if (!r.ready || !r.isAuthorized || !await r.isAuthorized()) continue;
                            let e = await r.connect();
                            this.setState(t => ({ ...t,
                                connector: r,
                                chains: r ? .chains,
                                data: e,
                                status: "connected"
                            })), t = !0;
                            break
                        }
                        return t || this.setState(e => ({ ...e,
                            data: void 0,
                            status: "disconnected"
                        })), f(this, n, !1), this.data
                    }
                    setConnectors(e) {
                        this.args = { ...this.args,
                            connectors: e
                        };
                        let t = "function" == typeof e ? e() : e;
                        t.forEach(e => e.setStorage(this.args.storage)), this.setState(e => ({ ...e,
                            connectors: t
                        }))
                    }
                    getPublicClient({
                        chainId: e
                    } = {}) {
                        let t = this.publicClients.get(-1);
                        if (t && t ? .chain.id === e || (t = this.publicClients.get(e ? ? -1))) return t;
                        let {
                            publicClient: r
                        } = this.args;
                        return t = "function" == typeof r ? r({
                            chainId: e
                        }) : r, this.publicClients.set(e ? ? -1, t), t
                    }
                    setPublicClient(e) {
                        let t = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            publicClient: e
                        }, this.publicClients.clear(), this.setState(e => ({ ...e,
                            publicClient: this.getPublicClient({
                                chainId: t
                            })
                        }))
                    }
                    getWebSocketPublicClient({
                        chainId: e
                    } = {}) {
                        let t = this.webSocketPublicClients.get(-1);
                        if (t && t ? .chain.id === e || (t = this.webSocketPublicClients.get(e ? ? -1))) return t;
                        let {
                            webSocketPublicClient: r
                        } = this.args;
                        return (t = "function" == typeof r ? r({
                            chainId: e
                        }) : r) && this.webSocketPublicClients.set(e ? ? -1, t), t
                    }
                    setWebSocketPublicClient(e) {
                        let t = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            webSocketPublicClient: e
                        }, this.webSocketPublicClients.clear(), this.setState(e => ({ ...e,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: t
                            })
                        }))
                    }
                    setLastUsedConnector(e = null) {
                        this.storage ? .setItem("wallet", e)
                    }
                };

            function t0(e) {
                let t = new tX(e);
                return s = t, t
            }

            function t1() {
                if (!s) throw Error("No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config");
                return s
            }
            async function t2({
                chainId: e,
                connector: t
            }) {
                let r = t1(),
                    n = r.connector;
                if (n && t.id === n.id) throw new tq;
                try {
                    r.setState(e => ({ ...e,
                        status: "connecting"
                    }));
                    let n = await t.connect({
                        chainId: e
                    });
                    return r.setLastUsedConnector(t.id), r.setState(e => ({ ...e,
                        connector: t,
                        chains: t ? .chains,
                        data: n,
                        status: "connected"
                    })), r.storage.setItem("connected", !0), { ...n,
                        connector: t
                    }
                } catch (e) {
                    throw r.setState(e => ({ ...e,
                        status: e.connector ? "connected" : "disconnected"
                    })), e
                }
            }
            async function t6() {
                let e = t1();
                e.connector && await e.connector.disconnect(), e.clearState(), e.storage.removeItem("connected")
            }
            n = new WeakMap, i = new WeakMap, o = new WeakSet, a = function() {
                let e = e => {
                        this.setState(t => ({ ...t,
                            data: { ...t.data,
                                ...e
                            }
                        }))
                    },
                    t = () => {
                        this.clearState()
                    },
                    r = e => {
                        this.setState(t => ({ ...t,
                            error: e
                        }))
                    };
                this.store.subscribe(({
                    connector: e
                }) => e, (n, i) => {
                    i ? .off ? .("change", e), i ? .off ? .("disconnect", t), i ? .off ? .("error", r), n && (n.on ? .("change", e), n.on ? .("disconnect", t), n.on ? .("error", r))
                });
                let {
                    publicClient: n,
                    webSocketPublicClient: i
                } = this.args;
                ("function" == typeof n || "function" == typeof i) && this.store.subscribe(({
                    data: e
                }) => e ? .chain ? .id, e => {
                    this.setState(t => ({ ...t,
                        publicClient: this.getPublicClient({
                            chainId: e
                        }),
                        webSocketPublicClient: this.getWebSocketPublicClient({
                            chainId: e
                        })
                    }))
                })
            };
            var t3 = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }],
                t5 = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }];

            function t8({
                chainId: e
            } = {}) {
                let t = t1();
                return e && t.getPublicClient({
                    chainId: e
                }) || t.publicClient
            }
            async function t4({
                chainId: e
            } = {}) {
                let t = t1();
                return await t.connector ? .getWalletClient ? .({
                    chainId: e
                }) || null
            }

            function t9({
                chainId: e
            } = {}) {
                let t = t1();
                return e && t.getWebSocketPublicClient({
                    chainId: e
                }) || t.webSocketPublicClient
            }

            function t7(e, t) {
                let r = t1(),
                    n = async () => t(t8(e));
                return r.subscribe(({
                    publicClient: e
                }) => e, n)
            }

            function re(e, t) {
                let r = t1(),
                    n = async () => t(t9(e));
                return r.subscribe(({
                    webSocketPublicClient: e
                }) => e, n)
            }
            async function rt({
                chainId: e,
                contracts: t,
                blockNumber: r,
                blockTag: n,
                ...i
            }) {
                let o = t8({
                    chainId: e
                });
                if (!o.chains) throw new tz;
                if (e && o.chain.id !== e) throw new tL({
                    chainId: e
                });
                return o.multicall({
                    allowFailure: i.allowFailure ? ? !0,
                    blockNumber: r,
                    blockTag: n,
                    contracts: t
                })
            }
            async function rr({
                address: e,
                account: t,
                chainId: r,
                abi: n,
                args: i,
                functionName: o,
                blockNumber: a,
                blockTag: s
            }) {
                return t8({
                    chainId: r
                }).readContract({
                    abi: n,
                    address: e,
                    account: t,
                    functionName: o,
                    args: i,
                    blockNumber: a,
                    blockTag: s
                })
            }
            async function rn({
                contracts: e,
                blockNumber: t,
                blockTag: r,
                ...n
            }) {
                let {
                    allowFailure: i = !0
                } = n;
                try {
                    let n = t8(),
                        o = e.reduce((e, t, r) => {
                            let i = t.chainId ? ? n.chain.id;
                            return { ...e,
                                [i]: [...e[i] || [], {
                                    contract: t,
                                    index: r
                                }]
                            }
                        }, {}),
                        a = (await Promise.all(Object.entries(o).map(([e, n]) => rt({
                            allowFailure: i,
                            chainId: parseInt(e),
                            contracts: n.map(({
                                contract: e
                            }) => e),
                            blockNumber: t,
                            blockTag: r
                        })))).flat(),
                        s = Object.values(o).flatMap(e => e.map(({
                            index: e
                        }) => e));
                    return a.reduce((e, t, r) => (e && (e[s[r]] = t), e), [])
                } catch (o) {
                    if (o instanceof P.uq) throw o;
                    let n = () => e.map(e => rr({ ...e,
                        blockNumber: t,
                        blockTag: r
                    }));
                    if (i) return (await Promise.allSettled(n())).map(e => "fulfilled" === e.status ? {
                        result: e.value,
                        status: "success"
                    } : {
                        error: e.reason,
                        result: void 0,
                        status: "failure"
                    });
                    return await Promise.all(n())
                }
            }
            async function ri({
                address: e,
                chainId: t,
                formatUnits: r,
                token: n
            }) {
                let i = t1(),
                    o = t8({
                        chainId: t
                    });
                if (n) {
                    let i = async ({
                        abi: i
                    }) => {
                        let o = {
                                abi: i,
                                address: n,
                                chainId: t
                            },
                            [a, s, u] = await rn({
                                allowFailure: !1,
                                contracts: [{ ...o,
                                    functionName: "balanceOf",
                                    args: [e]
                                }, { ...o,
                                    functionName: "decimals"
                                }, { ...o,
                                    functionName: "symbol"
                                }]
                            });
                        return {
                            decimals: s,
                            formatted: (0, tD.b)(a ? ? "0", tW(r ? ? s)),
                            symbol: u,
                            value: a
                        }
                    };
                    try {
                        return await i({
                            abi: t3
                        })
                    } catch (e) {
                        if (e instanceof P.uq) {
                            let {
                                symbol: e,
                                ...t
                            } = await i({
                                abi: t5
                            });
                            return {
                                symbol: (0, eS.rR)((0, v.f)(e, {
                                    dir: "right"
                                })),
                                ...t
                            }
                        }
                        throw e
                    }
                }
                let a = [...i.publicClient.chains || [], ...i.chains ? ? []],
                    s = await o.getBalance({
                        address: e
                    }),
                    u = a.find(e => e.id === o.chain.id);
                return {
                    decimals: u ? .nativeCurrency.decimals ? ? 18,
                    formatted: (0, tD.b)(s ? ? "0", tW(r ? ? 18)),
                    symbol: u ? .nativeCurrency.symbol ? ? "ETH",
                    value: s
                }
            }

            function ro() {
                let {
                    data: e,
                    connector: t,
                    status: r
                } = t1();
                switch (r) {
                    case "connected":
                        return {
                            address: e ? .account,
                            connector: t,
                            isConnected: !0,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: r
                        };
                    case "reconnecting":
                        return {
                            address: e ? .account,
                            connector: t,
                            isConnected: !!e ? .account,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !0,
                            status: r
                        };
                    case "connecting":
                        return {
                            address: e ? .account,
                            connector: t,
                            isConnected: !1,
                            isConnecting: !0,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: r
                        };
                    case "disconnected":
                        return {
                            address: void 0,
                            connector: void 0,
                            isConnected: !1,
                            isConnecting: !1,
                            isDisconnected: !0,
                            isReconnecting: !1,
                            status: r
                        }
                }
            }

            function ra() {
                let e = t1(),
                    t = e.data ? .chain ? .id,
                    r = e.chains ? ? [],
                    n = [...e.publicClient ? .chains || [], ...r].find(e => e.id === t) ? ? {
                        id: t,
                        name: `Chain ${t}`,
                        network: `${t}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    };
                return {
                    chain: t ? { ...n,
                        ...e.data ? .chain,
                        id : t
                    } : void 0,
                    chains: r
                }
            }
            async function rs(e) {
                let t = await t4();
                if (!t) throw new tI.N;
                return await t.signMessage({
                    message: e.message
                })
            }
            async function ru({
                chainId: e
            }) {
                let {
                    connector: t
                } = t1();
                if (!t) throw new tI.N;
                if (!t.switchChain) throw new t$({
                    connector: t
                });
                return t.switchChain(e)
            }

            function rc(e, {
                selector: t = e => e
            } = {}) {
                return t1().subscribe(({
                    data: e,
                    connector: r,
                    status: n
                }) => t({
                    address: e ? .account,
                    connector: r,
                    status: n
                }), () => e(ro()), {
                    equalityFn: tj
                })
            }

            function rl(e, {
                selector: t = e => e
            } = {}) {
                return t1().subscribe(({
                    data: e,
                    chains: r
                }) => t({
                    chainId: e ? .chain ? .id,
                    chains: r
                }), () => e(ra()), {
                    equalityFn: tj
                })
            }
            async function rd({
                name: e,
                chainId: t
            }) {
                let {
                    normalize: n
                } = await r.e(3803).then(r.bind(r, 53803)), i = t8({
                    chainId: t
                });
                return await i.getEnsAvatar({
                    name: n(e)
                })
            }
            async function rf({
                address: e,
                chainId: t
            }) {
                return t8({
                    chainId: t
                }).getEnsName({
                    address: (0, tF.K)(e)
                })
            }
            async function rh({
                chainId: e
            } = {}) {
                let t = t8({
                    chainId: e
                });
                return await t.getBlockNumber()
            }
        },
        44839: function(e, t, r) {
            "use strict";
            t.Z = function() {
                for (var e, t, r = 0, n = "", i = arguments.length; r < i; r++)(e = arguments[r]) && (t = function e(t) {
                    var r, n, i = "";
                    if ("string" == typeof t || "number" == typeof t) i += t;
                    else if ("object" == typeof t) {
                        if (Array.isArray(t)) {
                            var o = t.length;
                            for (r = 0; r < o; r++) t[r] && (n = e(t[r])) && (i && (i += " "), i += n)
                        } else
                            for (n in t) t[n] && (i && (i += " "), i += n)
                    }
                    return i
                }(e)) && (n && (n += " "), n += t);
                return n
            }
        },
        15864: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                WebSocket: function() {
                    return n
                }
            });
            let n = function() {
                if ("undefined" != typeof WebSocket) return WebSocket;
                if (void 0 !== global.WebSocket) return global.WebSocket;
                if (void 0 !== window.WebSocket) return window.WebSocket;
                if (void 0 !== self.WebSocket) return self.WebSocket;
                throw Error("`WebSocket` is not supported in this environment")
            }()
        },
        11735: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                __addDisposableResource: function() {
                    return N
                },
                __assign: function() {
                    return o
                },
                __asyncDelegator: function() {
                    return O
                },
                __asyncGenerator: function() {
                    return x
                },
                __asyncValues: function() {
                    return _
                },
                __await: function() {
                    return P
                },
                __awaiter: function() {
                    return p
                },
                __classPrivateFieldGet: function() {
                    return k
                },
                __classPrivateFieldIn: function() {
                    return B
                },
                __classPrivateFieldSet: function() {
                    return M
                },
                __createBinding: function() {
                    return g
                },
                __decorate: function() {
                    return s
                },
                __disposeResources: function() {
                    return D
                },
                __esDecorate: function() {
                    return c
                },
                __exportStar: function() {
                    return b
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return m
                },
                __importDefault: function() {
                    return S
                },
                __importStar: function() {
                    return C
                },
                __makeTemplateObject: function() {
                    return I
                },
                __metadata: function() {
                    return h
                },
                __param: function() {
                    return u
                },
                __propKey: function() {
                    return d
                },
                __read: function() {
                    return v
                },
                __rest: function() {
                    return a
                },
                __runInitializers: function() {
                    return l
                },
                __setFunctionName: function() {
                    return f
                },
                __spread: function() {
                    return w
                },
                __spreadArray: function() {
                    return A
                },
                __spreadArrays: function() {
                    return E
                },
                __values: function() {
                    return y
                }
            });
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                if ("function" != typeof t && null !== t) throw TypeError("Class extends value " + String(t) + " is not a constructor or null");

                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function a(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function s(e, t, r, n) {
                var i, o = arguments.length,
                    a = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);
                else
                    for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
                return o > 3 && a && Object.defineProperty(t, r, a), a
            }

            function u(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function c(e, t, r, n, i, o) {
                function a(e) {
                    if (void 0 !== e && "function" != typeof e) throw TypeError("Function expected");
                    return e
                }
                for (var s, u = n.kind, c = "getter" === u ? "get" : "setter" === u ? "set" : "value", l = !t && e ? n.static ? e : e.prototype : null, d = t || (l ? Object.getOwnPropertyDescriptor(l, n.name) : {}), f = !1, h = r.length - 1; h >= 0; h--) {
                    var p = {};
                    for (var m in n) p[m] = "access" === m ? {} : n[m];
                    for (var m in n.access) p.access[m] = n.access[m];
                    p.addInitializer = function(e) {
                        if (f) throw TypeError("Cannot add initializers after decoration has completed");
                        o.push(a(e || null))
                    };
                    var g = (0, r[h])("accessor" === u ? {
                        get: d.get,
                        set: d.set
                    } : d[c], p);
                    if ("accessor" === u) {
                        if (void 0 === g) continue;
                        if (null === g || "object" != typeof g) throw TypeError("Object expected");
                        (s = a(g.get)) && (d.get = s), (s = a(g.set)) && (d.set = s), (s = a(g.init)) && i.unshift(s)
                    } else(s = a(g)) && ("field" === u ? i.unshift(s) : d[c] = s)
                }
                l && Object.defineProperty(l, n.name, d), f = !0
            }

            function l(e, t, r) {
                for (var n = arguments.length > 2, i = 0; i < t.length; i++) r = n ? t[i].call(e, r) : t[i].call(e);
                return n ? r : void 0
            }

            function d(e) {
                return "symbol" == typeof e ? e : "".concat(e)
            }

            function f(e, t, r) {
                return "symbol" == typeof t && (t = t.description ? "[".concat(t.description, "]") : ""), Object.defineProperty(e, "name", {
                    configurable: !0,
                    value: r ? "".concat(r, " ", t) : t
                })
            }

            function h(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function p(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(a, s)
                    }
                    u((n = n.apply(e, t || [])).next())
                })
            }

            function m(e, t) {
                var r, n, i, o, a = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: s(0),
                    throw: s(1),
                    return: s(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function s(s) {
                    return function(u) {
                        return function(s) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; o && (o = 0, s[0] && (a = 0)), a;) try {
                                if (r = 1, n && (i = 2 & s[0] ? n.return : s[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, s[1])).done) return i;
                                switch (n = 0, i && (s = [2 & s[0], i.value]), s[0]) {
                                    case 0:
                                    case 1:
                                        i = s;
                                        break;
                                    case 4:
                                        return a.label++, {
                                            value: s[1],
                                            done: !1
                                        };
                                    case 5:
                                        a.label++, n = s[1], s = [0];
                                        continue;
                                    case 7:
                                        s = a.ops.pop(), a.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = a.trys).length > 0 && i[i.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                            a = 0;
                                            continue
                                        }
                                        if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                            a.label = s[1];
                                            break
                                        }
                                        if (6 === s[0] && a.label < i[1]) {
                                            a.label = i[1], i = s;
                                            break
                                        }
                                        if (i && a.label < i[2]) {
                                            a.label = i[2], a.ops.push(s);
                                            break
                                        }
                                        i[2] && a.ops.pop(), a.trys.pop();
                                        continue
                                }
                                s = t.call(e, a)
                            } catch (e) {
                                s = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & s[0]) throw s[1];
                            return {
                                value: s[0] ? s[1] : void 0,
                                done: !0
                            }
                        }([s, u])
                    }
                }
            }
            var g = Object.create ? function(e, t, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(t, r);
                (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                }), Object.defineProperty(e, n, i)
            } : function(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            };

            function b(e, t) {
                for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || g(t, e, r)
            }

            function y(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function v(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    a = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) a.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return a
            }

            function w() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(v(arguments[t]));
                return e
            }

            function E() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], a = 0, s = o.length; a < s; a++, i++) n[i] = o[a];
                return n
            }

            function A(e, t, r) {
                if (r || 2 == arguments.length)
                    for (var n, i = 0, o = t.length; i < o; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                return e.concat(n || Array.prototype.slice.call(t))
            }

            function P(e) {
                return this instanceof P ? (this.v = e, this) : new P(e)
            }

            function x(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, a("next"), a("throw"), a("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function a(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || s(e, t)
                        })
                    })
                }

                function s(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof P ? Promise.resolve(r.value.v).then(u, c) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function u(e) {
                    s("next", e)
                }

                function c(e) {
                    s("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && s(o[0][0], o[0][1])
                }
            }

            function O(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: P(e[n](t)),
                            done: !1
                        } : i ? i(t) : t
                    } : i
                }
            }

            function _(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = y(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function I(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }
            var T = Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            };

            function C(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && g(t, e, r);
                return T(t, e), t
            }

            function S(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function k(e, t, r, n) {
                if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
            }

            function M(e, t, r, n, i) {
                if ("m" === n) throw TypeError("Private method is not writable");
                if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
            }

            function B(e, t) {
                if (null === t || "object" != typeof t && "function" != typeof t) throw TypeError("Cannot use 'in' operator on non-object");
                return "function" == typeof e ? t === e : e.has(t)
            }

            function N(e, t, r) {
                if (null != t) {
                    var n;
                    if ("object" != typeof t && "function" != typeof t) throw TypeError("Object expected.");
                    if (r) {
                        if (!Symbol.asyncDispose) throw TypeError("Symbol.asyncDispose is not defined.");
                        n = t[Symbol.asyncDispose]
                    }
                    if (void 0 === n) {
                        if (!Symbol.dispose) throw TypeError("Symbol.dispose is not defined.");
                        n = t[Symbol.dispose]
                    }
                    if ("function" != typeof n) throw TypeError("Object not disposable.");
                    e.stack.push({
                        value: t,
                        dispose: n,
                        async: r
                    })
                } else r && e.stack.push({
                    async: !0
                });
                return t
            }
            var R = "function" == typeof SuppressedError ? SuppressedError : function(e, t, r) {
                var n = Error(r);
                return n.name = "SuppressedError", n.error = e, n.suppressed = t, n
            };

            function D(e) {
                function t(t) {
                    e.error = e.hasError ? new R(t, e.error, "An error was suppressed during disposal.") : t, e.hasError = !0
                }
                return function r() {
                    for (; e.stack.length;) {
                        var n = e.stack.pop();
                        try {
                            var i = n.dispose && n.dispose.call(n.value);
                            if (n.async) return Promise.resolve(i).then(r, function(e) {
                                return t(e), r()
                            })
                        } catch (e) {
                            t(e)
                        }
                    }
                    if (e.hasError) throw e.error
                }()
            }
            t.default = {
                __extends: i,
                __assign: o,
                __rest: a,
                __decorate: s,
                __param: u,
                __metadata: h,
                __awaiter: p,
                __generator: m,
                __createBinding: g,
                __exportStar: b,
                __values: y,
                __read: v,
                __spread: w,
                __spreadArrays: E,
                __spreadArray: A,
                __await: P,
                __asyncGenerator: x,
                __asyncDelegator: O,
                __asyncValues: _,
                __makeTemplateObject: I,
                __importStar: C,
                __importDefault: S,
                __classPrivateFieldGet: k,
                __classPrivateFieldSet: M,
                __classPrivateFieldIn: B,
                __addDisposableResource: N,
                __disposeResources: D
            }
        },
        69199: function(e, t, r) {
            "use strict";
            r.d(t, {
                E: function() {
                    return i
                }
            });
            var n = r(8267);

            function i(e = 0) {
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? (0, n.P)(globalThis.Buffer.allocUnsafe(e)) : new Uint8Array(e)
            }
        },
        69717: function(e, t, r) {
            "use strict";
            r.d(t, {
                z: function() {
                    return o
                }
            });
            var n = r(69199),
                i = r(8267);

            function o(e, t) {
                t || (t = e.reduce((e, t) => e + t.length, 0));
                let r = (0, n.E)(t),
                    o = 0;
                for (let t of e) r.set(t, o), o += t.length;
                return (0, i.P)(r)
            }
        },
        55522: function(e, t, r) {
            "use strict";
            r.d(t, {
                m: function() {
                    return o
                }
            });
            var n = r(49112),
                i = r(8267);

            function o(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? (0, i.P)(globalThis.Buffer.from(e, "utf-8")) : r.decoder.decode(`${r.prefix}${e}`)
            }
        },
        39613: function(e, t, r) {
            "use strict";
            r.d(t, {
                BB: function() {
                    return o.B
                },
                mL: function() {
                    return i.m
                },
                zo: function() {
                    return n.z
                }
            });
            var n = r(69717),
                i = r(55522),
                o = r(3767)
        },
        3767: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return i
                }
            });
            var n = r(49112);

            function i(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? globalThis.Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString("utf8") : r.encoder.encode(e).substring(1)
            }
        },
        8267: function(e, t, r) {
            "use strict";

            function n(e) {
                return null != globalThis.Buffer ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e
            }
            r.d(t, {
                P: function() {
                    return n
                }
            })
        },
        49112: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return eK
                }
            });
            var n = {};
            r.r(n), r.d(n, {
                identity: function() {
                    return M
                }
            });
            var i = {};
            r.r(i), r.d(i, {
                base2: function() {
                    return B
                }
            });
            var o = {};
            r.r(o), r.d(o, {
                base8: function() {
                    return N
                }
            });
            var a = {};
            r.r(a), r.d(a, {
                base10: function() {
                    return R
                }
            });
            var s = {};
            r.r(s), r.d(s, {
                base16: function() {
                    return D
                },
                base16upper: function() {
                    return j
                }
            });
            var u = {};
            r.r(u), r.d(u, {
                base32: function() {
                    return F
                },
                base32hex: function() {
                    return z
                },
                base32hexpad: function() {
                    return H
                },
                base32hexpadupper: function() {
                    return G
                },
                base32hexupper: function() {
                    return $
                },
                base32pad: function() {
                    return L
                },
                base32padupper: function() {
                    return q
                },
                base32upper: function() {
                    return U
                },
                base32z: function() {
                    return W
                }
            });
            var c = {};
            r.r(c), r.d(c, {
                base36: function() {
                    return K
                },
                base36upper: function() {
                    return Y
                }
            });
            var l = {};
            r.r(l), r.d(l, {
                base58btc: function() {
                    return V
                },
                base58flickr: function() {
                    return Q
                }
            });
            var d = {};
            r.r(d), r.d(d, {
                base64: function() {
                    return J
                },
                base64pad: function() {
                    return Z
                },
                base64url: function() {
                    return X
                },
                base64urlpad: function() {
                    return ee
                }
            });
            var f = {};
            r.r(f), r.d(f, {
                base256emoji: function() {
                    return ei
                }
            });
            var h = {};
            r.r(h), r.d(h, {
                sha256: function() {
                    return eb
                },
                sha512: function() {
                    return ey
                }
            });
            var p = {};
            r.r(p), r.d(p, {
                identity: function() {
                    return ev
                }
            });
            var m = {};
            r.r(m), r.d(m, {
                code: function() {
                    return eE
                },
                decode: function() {
                    return eP
                },
                encode: function() {
                    return eA
                },
                name: function() {
                    return ew
                }
            });
            var g = {};
            r.r(g), r.d(g, {
                code: function() {
                    return eI
                },
                decode: function() {
                    return eC
                },
                encode: function() {
                    return eT
                },
                name: function() {
                    return e_
                }
            });
            var b = function(e, t) {
                if (e.length >= 255) throw TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), n = 0; n < r.length; n++) r[n] = 255;
                for (var i = 0; i < e.length; i++) {
                    var o = e.charAt(i),
                        a = o.charCodeAt(0);
                    if (255 !== r[a]) throw TypeError(o + " is ambiguous");
                    r[a] = i
                }
                var s = e.length,
                    u = e.charAt(0),
                    c = Math.log(s) / Math.log(256),
                    l = Math.log(256) / Math.log(s);

                function d(e) {
                    if ("string" != typeof e) throw TypeError("Expected String");
                    if (0 === e.length) return new Uint8Array;
                    var t = 0;
                    if (" " !== e[0]) {
                        for (var n = 0, i = 0; e[t] === u;) n++, t++;
                        for (var o = (e.length - t) * c + 1 >>> 0, a = new Uint8Array(o); e[t];) {
                            var l = r[e.charCodeAt(t)];
                            if (255 === l) return;
                            for (var d = 0, f = o - 1;
                                (0 !== l || d < i) && -1 !== f; f--, d++) l += s * a[f] >>> 0, a[f] = l % 256 >>> 0, l = l / 256 >>> 0;
                            if (0 !== l) throw Error("Non-zero carry");
                            i = d, t++
                        }
                        if (" " !== e[t]) {
                            for (var h = o - i; h !== o && 0 === a[h];) h++;
                            for (var p = new Uint8Array(n + (o - h)), m = n; h !== o;) p[m++] = a[h++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(t) {
                        if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                        if (0 === t.length) return "";
                        for (var r = 0, n = 0, i = 0, o = t.length; i !== o && 0 === t[i];) i++, r++;
                        for (var a = (o - i) * l + 1 >>> 0, c = new Uint8Array(a); i !== o;) {
                            for (var d = t[i], f = 0, h = a - 1;
                                (0 !== d || f < n) && -1 !== h; h--, f++) d += 256 * c[h] >>> 0, c[h] = d % s >>> 0, d = d / s >>> 0;
                            if (0 !== d) throw Error("Non-zero carry");
                            n = f, i++
                        }
                        for (var p = a - n; p !== a && 0 === c[p];) p++;
                        for (var m = u.repeat(r); p < a; ++p) m += e.charAt(c[p]);
                        return m
                    },
                    decodeUnsafe: d,
                    decode: function(e) {
                        var r = d(e);
                        if (r) return r;
                        throw Error(`Non-${t} character`)
                    }
                }
            };
            new Uint8Array(0);
            let y = (e, t) => {
                    if (e === t) return !0;
                    if (e.byteLength !== t.byteLength) return !1;
                    for (let r = 0; r < e.byteLength; r++)
                        if (e[r] !== t[r]) return !1;
                    return !0
                },
                v = e => {
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw Error("Unknown type, must be binary type")
                },
                w = e => new TextEncoder().encode(e),
                E = e => new TextDecoder().decode(e);
            class A {
                constructor(e, t, r) {
                    this.name = e, this.prefix = t, this.baseEncode = r
                }
                encode(e) {
                    if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class P {
                constructor(e, t, r) {
                    if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw Error("Invalid prefix character");
                    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r
                }
                decode(e) {
                    if ("string" == typeof e) {
                        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(e.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(e) {
                    return O(this, e)
                }
            }
            class x {
                constructor(e) {
                    this.decoders = e
                }
                or(e) {
                    return O(this, e)
                }
                decode(e) {
                    let t = e[0],
                        r = this.decoders[t];
                    if (r) return r.decode(e);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            let O = (e, t) => new x({ ...e.decoders || {
                    [e.prefix]: e
                },
                ...t.decoders || {
                    [t.prefix]: t
                }
            });
            class _ {
                constructor(e, t, r, n) {
                    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new A(e, t, r), this.decoder = new P(e, t, n)
                }
                encode(e) {
                    return this.encoder.encode(e)
                }
                decode(e) {
                    return this.decoder.decode(e)
                }
            }
            let I = ({
                    name: e,
                    prefix: t,
                    encode: r,
                    decode: n
                }) => new _(e, t, r, n),
                T = ({
                    prefix: e,
                    name: t,
                    alphabet: r
                }) => {
                    let {
                        encode: n,
                        decode: i
                    } = b(r, t);
                    return I({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: e => v(i(e))
                    })
                },
                C = (e, t, r, n) => {
                    let i = {};
                    for (let e = 0; e < t.length; ++e) i[t[e]] = e;
                    let o = e.length;
                    for (;
                        "=" === e[o - 1];) --o;
                    let a = new Uint8Array(o * r / 8 | 0),
                        s = 0,
                        u = 0,
                        c = 0;
                    for (let t = 0; t < o; ++t) {
                        let o = i[e[t]];
                        if (void 0 === o) throw SyntaxError(`Non-${n} character`);
                        u = u << r | o, (s += r) >= 8 && (s -= 8, a[c++] = 255 & u >> s)
                    }
                    if (s >= r || 255 & u << 8 - s) throw SyntaxError("Unexpected end of data");
                    return a
                },
                S = (e, t, r) => {
                    let n = "=" === t[t.length - 1],
                        i = (1 << r) - 1,
                        o = "",
                        a = 0,
                        s = 0;
                    for (let n = 0; n < e.length; ++n)
                        for (s = s << 8 | e[n], a += 8; a > r;) a -= r, o += t[i & s >> a];
                    if (a && (o += t[i & s << r - a]), n)
                        for (; o.length * r & 7;) o += "=";
                    return o
                },
                k = ({
                    name: e,
                    prefix: t,
                    bitsPerChar: r,
                    alphabet: n
                }) => I({
                    prefix: t,
                    name: e,
                    encode: e => S(e, n, r),
                    decode: t => C(t, n, r, e)
                }),
                M = I({
                    prefix: "\0",
                    name: "identity",
                    encode: e => E(e),
                    decode: e => w(e)
                }),
                B = k({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                N = k({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                R = T({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                D = k({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                j = k({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                F = k({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                U = k({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                L = k({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                q = k({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                z = k({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                $ = k({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                H = k({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                G = k({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                W = k({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                K = T({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Y = T({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                V = T({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Q = T({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                J = k({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Z = k({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                X = k({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                ee = k({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                et = Array.from("\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
                er = et.reduce((e, t, r) => (e[r] = t, e), []),
                en = et.reduce((e, t, r) => (e[t.codePointAt(0)] = r, e), []),
                ei = I({
                    prefix: "\uD83D\uDE80",
                    name: "base256emoji",
                    encode: function(e) {
                        return e.reduce((e, t) => e += er[t], "")
                    },
                    decode: function(e) {
                        let t = [];
                        for (let r of e) {
                            let e = en[r.codePointAt(0)];
                            if (void 0 === e) throw Error(`Non-base256emoji character: ${r}`);
                            t.push(e)
                        }
                        return new Uint8Array(t)
                    }
                });
            var eo = function e(t, r, n) {
                    r = r || [];
                    for (var i = n = n || 0; t >= 2147483648;) r[n++] = 255 & t | 128, t /= 128;
                    for (; - 128 & t;) r[n++] = 255 & t | 128, t >>>= 7;
                    return r[n] = 0 | t, e.bytes = n - i + 1, r
                },
                ea = function e(t, r) {
                    var n, i = 0,
                        r = r || 0,
                        o = 0,
                        a = r,
                        s = t.length;
                    do {
                        if (a >= s) throw e.bytes = 0, RangeError("Could not decode varint");
                        n = t[a++], i += o < 28 ? (127 & n) << o : (127 & n) * Math.pow(2, o), o += 7
                    } while (n >= 128);
                    return e.bytes = a - r, i
                };
            let es = (e, t = 0) => [ea(e, t), ea.bytes],
                eu = (e, t, r = 0) => (eo(e, t, r), t),
                ec = e => e < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : e < 34359738368 ? 5 : e < 4398046511104 ? 6 : e < 562949953421312 ? 7 : e < 72057594037927940 ? 8 : e < 0x7fffffffffffffff ? 9 : 10,
                el = (e, t) => {
                    let r = t.byteLength,
                        n = ec(e),
                        i = n + ec(r),
                        o = new Uint8Array(i + r);
                    return eu(e, o, 0), eu(r, o, n), o.set(t, i), new eh(e, r, t, o)
                },
                ed = e => {
                    let t = v(e),
                        [r, n] = es(t),
                        [i, o] = es(t.subarray(n)),
                        a = t.subarray(n + o);
                    if (a.byteLength !== i) throw Error("Incorrect length");
                    return new eh(r, i, a, t)
                },
                ef = (e, t) => e === t || e.code === t.code && e.size === t.size && y(e.bytes, t.bytes);
            class eh {
                constructor(e, t, r, n) {
                    this.code = e, this.size = t, this.digest = r, this.bytes = n
                }
            }
            let ep = ({
                name: e,
                code: t,
                encode: r
            }) => new em(e, t, r);
            class em {
                constructor(e, t, r) {
                    this.name = e, this.code = t, this.encode = r
                }
                digest(e) {
                    if (e instanceof Uint8Array) {
                        let t = this.encode(e);
                        return t instanceof Uint8Array ? el(this.code, t) : t.then(e => el(this.code, e))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            let eg = e => async t => new Uint8Array(await crypto.subtle.digest(e, t)),
                eb = ep({
                    name: "sha2-256",
                    code: 18,
                    encode: eg("SHA-256")
                }),
                ey = ep({
                    name: "sha2-512",
                    code: 19,
                    encode: eg("SHA-512")
                }),
                ev = {
                    code: 0,
                    name: "identity",
                    encode: v,
                    digest: e => el(0, v(e))
                },
                ew = "raw",
                eE = 85,
                eA = e => v(e),
                eP = e => v(e),
                ex = new TextEncoder,
                eO = new TextDecoder,
                e_ = "json",
                eI = 512,
                eT = e => ex.encode(JSON.stringify(e)),
                eC = e => JSON.parse(eO.decode(e));
            class eS {
                constructor(e, t, r, n) {
                    this.code = t, this.version = e, this.multihash = r, this.bytes = n, this.byteOffset = n.byteOffset, this.byteLength = n.byteLength, this.asCID = this, this._baseCache = new Map, Object.defineProperties(this, {
                        byteOffset: eU,
                        byteLength: eU,
                        code: eF,
                        version: eF,
                        multihash: eF,
                        bytes: eF,
                        _baseCache: eU,
                        asCID: eU
                    })
                }
                toV0() {
                    if (0 === this.version) return this; {
                        let {
                            code: e,
                            multihash: t
                        } = this;
                        if (e !== eN) throw Error("Cannot convert a non dag-pb CID to CIDv0");
                        if (t.code !== eR) throw Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                        return eS.createV0(t)
                    }
                }
                toV1() {
                    switch (this.version) {
                        case 0:
                            {
                                let {
                                    code: e,
                                    digest: t
                                } = this.multihash,
                                r = el(e, t);
                                return eS.createV1(this.code, r)
                            }
                        case 1:
                            return this;
                        default:
                            throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)
                    }
                }
                equals(e) {
                    return e && this.code === e.code && this.version === e.version && ef(this.multihash, e.multihash)
                }
                toString(e) {
                    let {
                        bytes: t,
                        version: r,
                        _baseCache: n
                    } = this;
                    return 0 === r ? eM(t, n, e || V.encoder) : eB(t, n, e || F.encoder)
                }
                toJSON() {
                    return {
                        code: this.code,
                        version: this.version,
                        hash: this.multihash.bytes
                    }
                }
                get[Symbol.toStringTag]() {
                    return "CID"
                }[Symbol.for("nodejs.util.inspect.custom")]() {
                    return "CID(" + this.toString() + ")"
                }
                static isCID(e) {
                    return eL(/^0\.0/, eq), !!(e && (e[ej] || e.asCID === e))
                }
                get toBaseEncodedString() {
                    throw Error("Deprecated, use .toString()")
                }
                get codec() {
                    throw Error('"codec" property is deprecated, use integer "code" property instead')
                }
                get buffer() {
                    throw Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")
                }
                get multibaseName() {
                    throw Error('"multibaseName" property is deprecated')
                }
                get prefix() {
                    throw Error('"prefix" property is deprecated')
                }
                static asCID(e) {
                    if (e instanceof eS) return e;
                    if (null != e && e.asCID === e) {
                        let {
                            version: t,
                            code: r,
                            multihash: n,
                            bytes: i
                        } = e;
                        return new eS(t, r, n, i || eD(t, r, n.bytes))
                    }
                    if (null == e || !0 !== e[ej]) return null; {
                        let {
                            version: t,
                            multihash: r,
                            code: n
                        } = e, i = ed(r);
                        return eS.create(t, n, i)
                    }
                }
                static create(e, t, r) {
                    if ("number" != typeof t) throw Error("String codecs are no longer supported");
                    switch (e) {
                        case 0:
                            if (t === eN) return new eS(e, t, r, r.bytes);
                            throw Error(`Version 0 CID must use dag-pb (code: ${eN}) block encoding`);
                        case 1:
                            {
                                let n = eD(e, t, r.bytes);
                                return new eS(e, t, r, n)
                            }
                        default:
                            throw Error("Invalid version")
                    }
                }
                static createV0(e) {
                    return eS.create(0, eN, e)
                }
                static createV1(e, t) {
                    return eS.create(1, e, t)
                }
                static decode(e) {
                    let [t, r] = eS.decodeFirst(e);
                    if (r.length) throw Error("Incorrect length");
                    return t
                }
                static decodeFirst(e) {
                    let t = eS.inspectBytes(e),
                        r = t.size - t.multihashSize,
                        n = v(e.subarray(r, r + t.multihashSize));
                    if (n.byteLength !== t.multihashSize) throw Error("Incorrect length");
                    let i = n.subarray(t.multihashSize - t.digestSize),
                        o = new eh(t.multihashCode, t.digestSize, i, n);
                    return [0 === t.version ? eS.createV0(o) : eS.createV1(t.codec, o), e.subarray(t.size)]
                }
                static inspectBytes(e) {
                    let t = 0,
                        r = () => {
                            let [r, n] = es(e.subarray(t));
                            return t += n, r
                        },
                        n = r(),
                        i = eN;
                    if (18 === n ? (n = 0, t = 0) : 1 === n && (i = r()), 0 !== n && 1 !== n) throw RangeError(`Invalid CID version ${n}`);
                    let o = t,
                        a = r(),
                        s = r(),
                        u = t + s;
                    return {
                        version: n,
                        codec: i,
                        multihashCode: a,
                        digestSize: s,
                        multihashSize: u - o,
                        size: u
                    }
                }
                static parse(e, t) {
                    let [r, n] = ek(e, t), i = eS.decode(n);
                    return i._baseCache.set(r, e), i
                }
            }
            let ek = (e, t) => {
                    switch (e[0]) {
                        case "Q":
                            return [V.prefix, (t || V).decode(`${V.prefix}${e}`)];
                        case V.prefix:
                            return [V.prefix, (t || V).decode(e)];
                        case F.prefix:
                            return [F.prefix, (t || F).decode(e)];
                        default:
                            if (null == t) throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
                            return [e[0], t.decode(e)]
                    }
                },
                eM = (e, t, r) => {
                    let {
                        prefix: n
                    } = r;
                    if (n !== V.prefix) throw Error(`Cannot string encode V0 in ${r.name} encoding`);
                    let i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e).slice(1);
                        return t.set(n, i), i
                    }
                },
                eB = (e, t, r) => {
                    let {
                        prefix: n
                    } = r, i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e);
                        return t.set(n, i), i
                    }
                },
                eN = 112,
                eR = 18,
                eD = (e, t, r) => {
                    let n = ec(e),
                        i = n + ec(t),
                        o = new Uint8Array(i + r.byteLength);
                    return eu(e, o, 0), eu(t, o, n), o.set(r, i), o
                },
                ej = Symbol.for("@ipld/js-cid/CID"),
                eF = {
                    writable: !1,
                    configurable: !1,
                    enumerable: !0
                },
                eU = {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1
                },
                eL = (e, t) => {
                    if (e.test("0.0.0-dev")) console.warn(t);
                    else throw Error(t)
                },
                eq = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
                ez = { ...n,
                    ...i,
                    ...o,
                    ...a,
                    ...s,
                    ...u,
                    ...c,
                    ...l,
                    ...d,
                    ...f
                };
            ({ ...h,
                ...p
            });
            var e$ = r(69199);

            function eH(e, t, r, n) {
                return {
                    name: e,
                    prefix: t,
                    encoder: {
                        name: e,
                        prefix: t,
                        encode: r
                    },
                    decoder: {
                        decode: n
                    }
                }
            }
            let eG = eH("utf8", "u", e => "u" + new TextDecoder("utf8").decode(e), e => new TextEncoder().encode(e.substring(1))),
                eW = eH("ascii", "a", e => {
                    let t = "a";
                    for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
                    return t
                }, e => {
                    e = e.substring(1);
                    let t = (0, e$.E)(e.length);
                    for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
                    return t
                });
            var eK = {
                utf8: eG,
                "utf-8": eG,
                hex: ez.base16,
                latin1: eW,
                ascii: eW,
                binary: eW,
                ...ez
            }
        },
        96104: function(e, t, r) {
            "use strict";

            function n(e) {
                return "string" == typeof e ? {
                    address: e,
                    type: "json-rpc"
                } : e
            }
            r.d(t, {
                T: function() {
                    return n
                }
            })
        },
        51362: function(e, t, r) {
            "use strict";
            r.d(t, {
                R: function() {
                    return y
                }
            });
            var n = r(96104),
                i = r(21620),
                o = r(48926),
                a = r(89045),
                s = r(58591),
                u = r(97225),
                c = r(14503),
                l = r(18543),
                d = r(95046),
                f = r(37764),
                h = r(43149),
                p = r(27031),
                m = r(37669),
                g = r(10639),
                b = r(82857);
            async function y(e, t) {
                let {
                    account: i = e.account,
                    batch: u = !!e.batch ? .multicall,
                    blockNumber: c,
                    blockTag: l = "latest",
                    accessList: g,
                    data: y,
                    gas: w,
                    gasPrice: E,
                    maxFeePerGas: A,
                    maxPriorityFeePerGas: P,
                    nonce: x,
                    to: O,
                    value: _,
                    ...I
                } = t, T = i ? (0, n.T)(i) : void 0;
                try {
                    (0, b.F)(t);
                    let r = (c ? (0, d.eC)(c) : void 0) || l,
                        n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || m.tG)({ ...(0, p.K)(I, {
                                format: n
                            }),
                            from: T ? .address,
                            accessList: g,
                            data: y,
                            gas: w,
                            gasPrice: E,
                            maxFeePerGas: A,
                            maxPriorityFeePerGas: P,
                            nonce: x,
                            to: O,
                            value: _
                        });
                    if (u && function({
                            request: e
                        }) {
                            let {
                                data: t,
                                to: r,
                                ...n
                            } = e;
                            return !(!t || t.startsWith("0x82ad56cb")) && !!r && !(Object.values(n).filter(e => void 0 !== e).length > 0)
                        }({
                            request: i
                        })) try {
                        return await v(e, { ...i,
                            blockNumber: c,
                            blockTag: l
                        })
                    } catch (e) {
                        if (!(e instanceof a.pZ) && !(e instanceof a.mm)) throw e
                    }
                    let o = await e.request({
                        method: "eth_call",
                        params: r ? [i, r] : [i]
                    });
                    if ("0x" === o) return {
                        data: void 0
                    };
                    return {
                        data: o
                    }
                } catch (u) {
                    let n = function(e) {
                            if (!(e instanceof o.G)) return;
                            let t = e.walk();
                            return "object" == typeof t.data ? t.data.data : t.data
                        }(u),
                        {
                            offchainLookup: i,
                            offchainLookupSignature: a
                        } = await r.e(1395).then(r.bind(r, 81395));
                    if (n ? .slice(0, 10) === a && O) return {
                        data: await i(e, {
                            data: n,
                            to: O
                        })
                    };
                    throw function(e, {
                        docsPath: t,
                        ...r
                    }) {
                        let n = (() => {
                            let t = (0, h.k)(e, r);
                            return t instanceof f.cj ? e : t
                        })();
                        return new s.cg(n, {
                            docsPath: t,
                            ...r
                        })
                    }(u, { ...t,
                        account: T,
                        chain: e.chain
                    })
                }
            }
            async function v(e, t) {
                let {
                    batchSize: r = 1024,
                    wait: n = 0
                } = "object" == typeof e.batch ? .multicall ? e.batch.multicall : {}, {
                    blockNumber: o,
                    blockTag: f = "latest",
                    data: h,
                    multicallAddress: p,
                    to: m
                } = t, b = p;
                if (!b) {
                    if (!e.chain) throw new a.pZ;
                    b = (0, l.L)({
                        blockNumber: o,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let y = (o ? (0, d.eC)(o) : void 0) || f,
                    {
                        schedule: v
                    } = (0, g.S)({
                        id: `${e.uid}.${y}`,
                        wait: n,
                        shouldSplitBatch: e => e.reduce((e, {
                            data: t
                        }) => e + (t.length - 2), 0) > 2 * r,
                        fn: async t => {
                            let r = t.map(e => ({
                                    allowFailure: !0,
                                    callData: e.data,
                                    target: e.to
                                })),
                                n = (0, c.R)({
                                    abi: i.F8,
                                    args: [r],
                                    functionName: "aggregate3"
                                }),
                                o = await e.request({
                                    method: "eth_call",
                                    params: [{
                                        data: n,
                                        to: b
                                    }, y]
                                });
                            return (0, u.k)({
                                abi: i.F8,
                                args: [r],
                                functionName: "aggregate3",
                                data: o || "0x"
                            })
                        }
                    }),
                    [{
                        returnData: w,
                        success: E
                    }] = await v({
                        data: h,
                        to: m
                    });
                if (!E) throw new s.VQ({
                    data: w
                });
                return "0x" === w ? {
                    data: void 0
                } : {
                    data: w
                }
            }
        },
        42665: function(e, t, r) {
            "use strict";
            r.d(t, {
                C: function() {
                    return c
                },
                X: function() {
                    return u
                }
            });
            var n = r(25511),
                i = r(93413),
                o = r(72127),
                a = r(49235),
                s = r(48206);
            async function u(e, t) {
                return c(e, t)
            }
            async function c(e, t) {
                let {
                    block: r,
                    chain: u = e.chain,
                    request: c,
                    type: l = "eip1559"
                } = t || {}, d = await (async () => "function" == typeof u ? .fees ? .baseFeeMultiplier ? u.fees.baseFeeMultiplier({
                    block: r,
                    client: e,
                    request: c
                }) : u ? .fees ? .baseFeeMultiplier ? ? 1.2)();
                if (d < 1) throw new n.Fz;
                let f = 10 ** (d.toString().split(".")[1] ? .length ? ? 0),
                    h = e => e * BigInt(Math.ceil(d * f)) / BigInt(f),
                    p = r || await (0, i.s)(e, a.Q, "getBlock")({});
                if ("function" == typeof u ? .fees ? .estimateFeesPerGas) return u.fees.estimateFeesPerGas({
                    block: r,
                    client: e,
                    multiply: h,
                    request: c,
                    type: l
                });
                if ("eip1559" === l) {
                    if ("bigint" != typeof p.baseFeePerGas) throw new n.e5;
                    let t = c ? .maxPriorityFeePerGas ? c.maxPriorityFeePerGas : await (0, o.h)(e, {
                            block: p,
                            chain: u,
                            request: c
                        }),
                        r = h(p.baseFeePerGas);
                    return {
                        maxFeePerGas: c ? .maxFeePerGas ? ? r + t,
                        maxPriorityFeePerGas: t
                    }
                }
                return {
                    gasPrice: c ? .gasPrice ? ? h(await (0, i.s)(e, s.o, "getGasPrice")({}))
                }
            }
        },
        60730: function(e, t, r) {
            "use strict";
            r.d(t, {
                Q: function() {
                    return b
                }
            });
            var n = r(96104),
                i = r(25355),
                o = r(95046),
                a = r(85053),
                s = r(49268),
                u = r(48926),
                c = r(97658);
            class l extends u.G {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: n,
                    data: i,
                    gas: o,
                    gasPrice: u,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: h,
                    value: p
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Estimate Gas Arguments:", (0, c.xr)({
                            from: t ? .address,
                            to: h,
                            value: void 0 !== p && `${(0,a.d)(p)} ${n?.nativeCurrency?.symbol||"ETH"}`,
                            data: i,
                            gas: o,
                            gasPrice: void 0 !== u && `${(0,s.o)(u)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,s.o)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,s.o)(d)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EstimateGasExecutionError"
                    }), this.cause = e
                }
            }
            var d = r(37764),
                f = r(43149),
                h = r(27031),
                p = r(37669),
                m = r(82857),
                g = r(38374);
            async function b(e, t) {
                let r = t.account ? ? e.account;
                if (!r) throw new i.o({
                    docsPath: "/docs/actions/public/estimateGas"
                });
                let a = (0, n.T)(r);
                try {
                    let {
                        accessList: r,
                        blockNumber: n,
                        blockTag: i,
                        data: s,
                        gas: u,
                        gasPrice: c,
                        maxFeePerGas: l,
                        maxPriorityFeePerGas: d,
                        nonce: f,
                        to: b,
                        value: y,
                        ...v
                    } = "local" === a.type ? await (0, g.Z)(e, t) : t, w = (n ? (0, o.eC)(n) : void 0) || i;
                    (0, m.F)(t);
                    let E = e.chain ? .formatters ? .transactionRequest ? .format,
                        A = (E || p.tG)({ ...(0, h.K)(v, {
                                format: E
                            }),
                            from: a.address,
                            accessList: r,
                            data: s,
                            gas: u,
                            gasPrice: c,
                            maxFeePerGas: l,
                            maxPriorityFeePerGas: d,
                            nonce: f,
                            to: b,
                            value: y
                        }),
                        P = await e.request({
                            method: "eth_estimateGas",
                            params: w ? [A, w] : [A]
                        });
                    return BigInt(P)
                } catch (r) {
                    throw function(e, {
                        docsPath: t,
                        ...r
                    }) {
                        return new l((() => {
                            let t = (0, f.k)(e, r);
                            return t instanceof d.cj ? e : t
                        })(), {
                            docsPath: t,
                            ...r
                        })
                    }(r, { ...t,
                        account: a,
                        chain: e.chain
                    })
                }
            }
        },
        72127: function(e, t, r) {
            "use strict";
            r.d(t, {
                _: function() {
                    return u
                },
                h: function() {
                    return c
                }
            });
            var n = r(25511),
                i = r(21019),
                o = r(93413),
                a = r(49235),
                s = r(48206);
            async function u(e, t) {
                return c(e, t)
            }
            async function c(e, t) {
                let {
                    block: r,
                    chain: u = e.chain,
                    request: c
                } = t || {};
                if ("function" == typeof u ? .fees ? .defaultPriorityFee) {
                    let t = r || await (0, o.s)(e, a.Q, "getBlock")({});
                    return u.fees.defaultPriorityFee({
                        block: t,
                        client: e,
                        request: c
                    })
                }
                if (void 0 !== u ? .fees ? .defaultPriorityFee) return u ? .fees ? .defaultPriorityFee;
                try {
                    let t = await e.request({
                        method: "eth_maxPriorityFeePerGas"
                    });
                    return (0, i.y_)(t)
                } catch {
                    let [t, i] = await Promise.all([r ? Promise.resolve(r) : (0, o.s)(e, a.Q, "getBlock")({}), (0, o.s)(e, s.o, "getGasPrice")({})]);
                    if ("bigint" != typeof t.baseFeePerGas) throw new n.e5;
                    let u = i - t.baseFeePerGas;
                    if (u < 0 n) return 0 n;
                    return u
                }
            }
        },
        49235: function(e, t, r) {
            "use strict";
            r.d(t, {
                Q: function() {
                    return a
                }
            });
            var n = r(87655),
                i = r(95046),
                o = r(20621);
            async function a(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: a,
                includeTransactions: s
            } = {}) {
                let u = s ? ? !1,
                    c = void 0 !== r ? (0, i.eC)(r) : void 0,
                    l = null;
                if (!(l = t ? await e.request({
                        method: "eth_getBlockByHash",
                        params: [t, u]
                    }) : await e.request({
                        method: "eth_getBlockByNumber",
                        params: [c || (a ? ? "latest"), u]
                    }))) throw new n.f({
                    blockHash: t,
                    blockNumber: r
                });
                return (e.chain ? .formatters ? .block ? .format || o.Z)(l)
            }
        },
        16416: function(e, t, r) {
            "use strict";
            r.d(t, {
                L: function() {
                    return i
                }
            });
            var n = r(21019);
            async function i(e) {
                let t = await e.request({
                    method: "eth_chainId"
                });
                return (0, n.ly)(t)
            }
        },
        48206: function(e, t, r) {
            "use strict";
            async function n(e) {
                return BigInt(await e.request({
                    method: "eth_gasPrice"
                }))
            }
            r.d(t, {
                o: function() {
                    return n
                }
            })
        },
        33208: function(e, t, r) {
            "use strict";
            r.d(t, {
                K: function() {
                    return o
                }
            });
            var n = r(21019),
                i = r(95046);
            async function o(e, {
                address: t,
                blockTag: r = "latest",
                blockNumber: o
            }) {
                let a = await e.request({
                    method: "eth_getTransactionCount",
                    params: [t, o ? (0, i.eC)(o) : r]
                });
                return (0, n.ly)(a)
            }
        },
        38374: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return h
                }
            });
            var n = r(96104),
                i = r(42665),
                o = r(60730),
                a = r(49235),
                s = r(33208),
                u = r(25355),
                c = r(25511),
                l = r(93413),
                d = r(82857),
                f = r(97658);
            async function h(e, t) {
                let {
                    account: r = e.account,
                    chain: h,
                    gas: p,
                    nonce: m,
                    type: g
                } = t;
                if (!r) throw new u.o;
                let b = (0, n.T)(r),
                    y = await (0, l.s)(e, a.Q, "getBlock")({
                        blockTag: "latest"
                    }),
                    v = { ...t,
                        from: b.address
                    };
                if (void 0 === m && (v.nonce = await (0, l.s)(e, s.K, "getTransactionCount")({
                        address: b.address,
                        blockTag: "pending"
                    })), void 0 === g) try {
                    v.type = function(e) {
                        if (e.type) return e.type;
                        if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas) return "eip1559";
                        if (void 0 !== e.gasPrice) return void 0 !== e.accessList ? "eip2930" : "legacy";
                        throw new f.j3({
                            transaction: e
                        })
                    }(v)
                } catch {
                    v.type = "bigint" == typeof y.baseFeePerGas ? "eip1559" : "legacy"
                }
                if ("eip1559" === v.type) {
                    let {
                        maxFeePerGas: r,
                        maxPriorityFeePerGas: n
                    } = await (0, i.C)(e, {
                        block: y,
                        chain: h,
                        request: v
                    });
                    if (void 0 === t.maxPriorityFeePerGas && t.maxFeePerGas && t.maxFeePerGas < n) throw new c.ld({
                        maxPriorityFeePerGas: n
                    });
                    v.maxPriorityFeePerGas = n, v.maxFeePerGas = r
                } else {
                    if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas) throw new c.e5;
                    let {
                        gasPrice: r
                    } = await (0, i.C)(e, {
                        block: y,
                        chain: h,
                        request: v,
                        type: "legacy"
                    });
                    v.gasPrice = r
                }
                return void 0 === p && (v.gas = await (0, l.s)(e, o.Q, "estimateGas")({ ...v,
                    account: {
                        address: b.address,
                        type: "json-rpc"
                    }
                })), (0, d.F)(v), v
            }
        },
        96432: function(e, t, r) {
            "use strict";
            async function n(e, {
                serializedTransaction: t
            }) {
                return e.request({
                    method: "eth_sendRawTransaction",
                    params: [t]
                })
            }
            r.d(t, {
                p: function() {
                    return n
                }
            })
        },
        16491: function(e, t, r) {
            "use strict";
            r.d(t, {
                R: function() {
                    return n
                }
            });
            let n = (0, r(95258).a)({
                id: 1,
                network: "homestead",
                name: "Ethereum",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://mainnet.infura.io/v3"],
                        webSocket: ["wss://mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://cloudflare-eth.com"]
                    },
                    public: {
                        http: ["https://cloudflare-eth.com"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",
                        blockCreated: 16966585
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 14353601
                    }
                }
            })
        },
        500: function(e, t, r) {
            "use strict";
            let n;
            r.d(t, {
                e: function() {
                    return a
                }
            });
            var i = r(96104);
            let o = 256;

            function a(e) {
                let {
                    batch: t,
                    cacheTime: r = e.pollingInterval ? ? 4e3,
                    key: a = "base",
                    name: s = "Base Client",
                    pollingInterval: u = 4e3,
                    type: c = "base"
                } = e, l = e.chain, d = e.account ? (0, i.T)(e.account) : void 0, {
                    config: f,
                    request: h,
                    value: p
                } = e.transport({
                    chain: l,
                    pollingInterval: u
                }), m = {
                    account: d,
                    batch: t,
                    cacheTime: r,
                    chain: l,
                    key: a,
                    name: s,
                    pollingInterval: u,
                    request: h,
                    transport: { ...f,
                        ...p
                    },
                    type: c,
                    uid: function(e = 11) {
                        if (!n || o + e > 512) {
                            n = "", o = 0;
                            for (let e = 0; e < 256; e++) n += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                        }
                        return n.substring(o, o++ + e)
                    }()
                };
                return Object.assign(m, {
                    extend: function e(t) {
                        return r => {
                            let n = r(t);
                            for (let e in m) delete n[e];
                            let i = { ...t,
                                ...n
                            };
                            return Object.assign(i, {
                                extend: e(i)
                            })
                        }
                    }(m)
                })
            }
        },
        14696: function(e, t, r) {
            "use strict";
            r.d(t, {
                K: function() {
                    return F
                }
            });
            var n = r(500),
                i = r(16416),
                o = r(95046);
            async function a(e, {
                chain: t
            }) {
                let {
                    id: r,
                    name: n,
                    nativeCurrency: i,
                    rpcUrls: a,
                    blockExplorers: s
                } = t;
                await e.request({
                    method: "wallet_addEthereumChain",
                    params: [{
                        chainId: (0, o.eC)(r),
                        chainName: n,
                        nativeCurrency: i,
                        rpcUrls: a.default.http,
                        blockExplorerUrls: s ? Object.values(s).map(({
                            url: e
                        }) => e) : void 0
                    }]
                })
            }
            var s = r(32637),
                u = r(96104),
                c = r(25355),
                l = r(89045);

            function d({
                chain: e,
                currentChainId: t
            }) {
                if (!e) throw new l.Bk;
                if (t !== e.id) throw new l.Yl({
                    chain: e,
                    currentChainId: t
                })
            }
            var f = r(37764),
                h = r(97658),
                p = r(43149),
                m = r(27031),
                g = r(37669),
                b = r(93413),
                y = r(82857),
                v = r(38374),
                w = r(96432);
            async function E(e, t) {
                let {
                    account: r = e.account,
                    chain: n = e.chain,
                    accessList: o,
                    data: a,
                    gas: s,
                    gasPrice: l,
                    maxFeePerGas: E,
                    maxPriorityFeePerGas: A,
                    nonce: P,
                    to: x,
                    value: O,
                    ..._
                } = t;
                if (!r) throw new c.o({
                    docsPath: "/docs/actions/wallet/sendTransaction"
                });
                let I = (0, u.T)(r);
                try {
                    let r;
                    if ((0, y.F)(t), null !== n && (r = await (0, b.s)(e, i.L, "getChainId")({}), d({
                            currentChainId: r,
                            chain: n
                        })), "local" === I.type) {
                        let t = await (0, b.s)(e, v.Z, "prepareTransactionRequest")({
                            account: I,
                            accessList: o,
                            chain: n,
                            data: a,
                            gas: s,
                            gasPrice: l,
                            maxFeePerGas: E,
                            maxPriorityFeePerGas: A,
                            nonce: P,
                            to: x,
                            value: O,
                            ..._
                        });
                        r || (r = await (0, b.s)(e, i.L, "getChainId")({}));
                        let u = n ? .serializers ? .transaction,
                            c = await I.signTransaction({ ...t,
                                chainId: r
                            }, {
                                serializer: u
                            });
                        return await (0, b.s)(e, w.p, "sendRawTransaction")({
                            serializedTransaction: c
                        })
                    }
                    let u = e.chain ? .formatters ? .transactionRequest ? .format,
                        c = (u || g.tG)({ ...(0, m.K)(_, {
                                format: u
                            }),
                            accessList: o,
                            data: a,
                            from: I.address,
                            gas: s,
                            gasPrice: l,
                            maxFeePerGas: E,
                            maxPriorityFeePerGas: A,
                            nonce: P,
                            to: x,
                            value: O
                        });
                    return await e.request({
                        method: "eth_sendTransaction",
                        params: [c]
                    })
                } catch (e) {
                    throw function(e, {
                        docsPath: t,
                        ...r
                    }) {
                        let n = (() => {
                            let t = (0, p.k)(e, r);
                            return t instanceof f.cj ? e : t
                        })();
                        return new h.mk(n, {
                            docsPath: t,
                            ...r
                        })
                    }(e, { ...t,
                        account: I,
                        chain: t.chain || void 0
                    })
                }
            }
            var A = r(99112);
            async function P(e) {
                return e.account ? .type === "local" ? [e.account.address] : (await e.request({
                    method: "eth_accounts"
                })).map(e => (0, A.x)(e))
            }
            async function x(e) {
                return await e.request({
                    method: "wallet_getPermissions"
                })
            }
            async function O(e) {
                return (await e.request({
                    method: "eth_requestAccounts"
                })).map(e => (0, A.K)(e))
            }
            async function _(e, t) {
                return e.request({
                    method: "wallet_requestPermissions",
                    params: [t]
                })
            }
            async function I(e, {
                account: t = e.account,
                message: r
            }) {
                if (!t) throw new c.o({
                    docsPath: "/docs/actions/wallet/signMessage"
                });
                let n = (0, u.T)(t);
                if ("local" === n.type) return n.signMessage({
                    message: r
                });
                let i = "string" == typeof r ? (0, o.$G)(r) : r.raw instanceof Uint8Array ? (0, o.NC)(r.raw) : r.raw;
                return e.request({
                    method: "personal_sign",
                    params: [i, n.address]
                })
            }
            async function T(e, t) {
                let {
                    account: r = e.account,
                    chain: n = e.chain,
                    ...a
                } = t;
                if (!r) throw new c.o({
                    docsPath: "/docs/actions/wallet/signTransaction"
                });
                let s = (0, u.T)(r);
                (0, y.F)({
                    account: s,
                    ...t
                });
                let l = await (0, b.s)(e, i.L, "getChainId")({});
                null !== n && d({
                    currentChainId: l,
                    chain: n
                });
                let f = n ? .formatters || e.chain ? .formatters,
                    h = f ? .transactionRequest ? .format || g.tG;
                return "local" === s.type ? s.signTransaction({ ...a,
                    chainId: l
                }, {
                    serializer: e.chain ? .serializers ? .transaction
                }) : await e.request({
                    method: "eth_signTransaction",
                    params: [{ ...h(a),
                        chainId: (0, o.eC)(l),
                        from: s.address
                    }]
                })
            }
            var C = r(40369),
                S = r(47499),
                k = r(92416);
            async function M(e, {
                account: t = e.account,
                domain: r,
                message: n,
                primaryType: i,
                types: o
            }) {
                if (!t) throw new c.o({
                    docsPath: "/docs/actions/wallet/signTypedData"
                });
                let a = (0, u.T)(t),
                    s = {
                        EIP712Domain: (0, k.cj)({
                            domain: r
                        }),
                        ...o
                    };
                if ((0, k.iC)({
                        domain: r,
                        message: n,
                        primaryType: i,
                        types: s
                    }), "local" === a.type) return a.signTypedData({
                    domain: r,
                    primaryType: i,
                    types: s,
                    message: n
                });
                let l = (0, S.P)({
                    domain: r ? ? {},
                    primaryType: i,
                    types: s,
                    message: n
                }, (e, t) => (0, C.v)(t) ? t.toLowerCase() : t);
                return e.request({
                    method: "eth_signTypedData_v4",
                    params: [a.address, l]
                })
            }
            async function B(e, {
                id: t
            }) {
                await e.request({
                    method: "wallet_switchEthereumChain",
                    params: [{
                        chainId: (0, o.eC)(t)
                    }]
                })
            }
            async function N(e, t) {
                return await e.request({
                    method: "wallet_watchAsset",
                    params: t
                })
            }
            var R = r(14503);
            async function D(e, {
                abi: t,
                address: r,
                args: n,
                dataSuffix: i,
                functionName: o,
                ...a
            }) {
                let s = (0, R.R)({
                    abi: t,
                    args: n,
                    functionName: o
                });
                return await (0, b.s)(e, E, "sendTransaction")({
                    data: `${s}${i?i.replace("0x",""):""}`,
                    to: r,
                    ...a
                })
            }

            function j(e) {
                return {
                    addChain: t => a(e, t),
                    deployContract: t => (function(e, {
                        abi: t,
                        args: r,
                        bytecode: n,
                        ...i
                    }) {
                        let o = (0, s.w)({
                            abi: t,
                            args: r,
                            bytecode: n
                        });
                        return E(e, { ...i,
                            data: o
                        })
                    })(e, t),
                    getAddresses: () => P(e),
                    getChainId: () => (0, i.L)(e),
                    getPermissions: () => x(e),
                    prepareTransactionRequest: t => (0, v.Z)(e, t),
                    requestAddresses: () => O(e),
                    requestPermissions: t => _(e, t),
                    sendRawTransaction: t => (0, w.p)(e, t),
                    sendTransaction: t => E(e, t),
                    signMessage: t => I(e, t),
                    signTransaction: t => T(e, t),
                    signTypedData: t => M(e, t),
                    switchChain: t => B(e, t),
                    watchAsset: t => N(e, t),
                    writeContract: t => D(e, t)
                }
            }

            function F(e) {
                let {
                    key: t = "wallet",
                    name: r = "Wallet Client",
                    transport: i
                } = e;
                return (0, n.e)({ ...e,
                    key: t,
                    name: r,
                    transport: e => i({ ...e,
                        retryCount: 0
                    }),
                    type: "walletClient"
                }).extend(j)
            }
        },
        66021: function(e, t, r) {
            "use strict";
            r.d(t, {
                q: function() {
                    return i
                }
            });
            var n = r(37591);

            function i({
                key: e,
                name: t,
                request: r,
                retryCount: i = 3,
                retryDelay: o = 150,
                timeout: a,
                type: s
            }, u) {
                return {
                    config: {
                        key: e,
                        name: t,
                        request: r,
                        retryCount: i,
                        retryDelay: o,
                        timeout: a,
                        type: s
                    },
                    request: (0, n.n)(r, {
                        retryCount: i,
                        retryDelay: o
                    }),
                    value: u
                }
            }
        },
        69532: function(e, t, r) {
            "use strict";
            r.d(t, {
                P: function() {
                    return i
                }
            });
            var n = r(66021);

            function i(e, t = {}) {
                let {
                    key: r = "custom",
                    name: i = "Custom Provider",
                    retryDelay: o
                } = t;
                return ({
                    retryCount: a
                }) => (0, n.q)({
                    key: r,
                    name: i,
                    request: e.request.bind(e),
                    retryCount: t.retryCount ? ? a,
                    retryDelay: o,
                    type: "custom"
                })
            }
        },
        21620: function(e, t, r) {
            "use strict";
            r.d(t, {
                $o: function() {
                    return c
                },
                F8: function() {
                    return n
                },
                X$: function() {
                    return u
                },
                du: function() {
                    return a
                },
                k3: function() {
                    return o
                },
                nZ: function() {
                    return s
                }
            });
            let n = [{
                    inputs: [{
                        components: [{
                            name: "target",
                            type: "address"
                        }, {
                            name: "allowFailure",
                            type: "bool"
                        }, {
                            name: "callData",
                            type: "bytes"
                        }],
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate3",
                    outputs: [{
                        components: [{
                            name: "success",
                            type: "bool"
                        }, {
                            name: "returnData",
                            type: "bytes"
                        }],
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }],
                i = [{
                    inputs: [],
                    name: "ResolverNotFound",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ResolverWildcardNotSupported",
                    type: "error"
                }],
                o = [...i, {
                    name: "resolve",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes"
                    }, {
                        name: "data",
                        type: "bytes"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }, {
                        name: "address",
                        type: "address"
                    }]
                }],
                a = [...i, {
                    name: "reverse",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "bytes",
                        name: "reverseName"
                    }],
                    outputs: [{
                        type: "string",
                        name: "resolvedName"
                    }, {
                        type: "address",
                        name: "resolvedAddress"
                    }, {
                        type: "address",
                        name: "reverseResolver"
                    }, {
                        type: "address",
                        name: "resolver"
                    }]
                }],
                s = [{
                    name: "text",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "key",
                        type: "string"
                    }],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }],
                u = [{
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }],
                    outputs: [{
                        name: "",
                        type: "address"
                    }]
                }, {
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "coinType",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }]
                }],
                c = [{
                    inputs: [{
                        internalType: "address",
                        name: "_signer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "_hash",
                        type: "bytes32"
                    }, {
                        internalType: "bytes",
                        name: "_signature",
                        type: "bytes"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }]
        },
        47807: function(e, t, r) {
            "use strict";
            r.d(t, {
                $: function() {
                    return n
                },
                Up: function() {
                    return i
                },
                hZ: function() {
                    return o
                }
            });
            let n = {
                    1: "An `assert` condition failed.",
                    17: "Arithmic operation resulted in underflow or overflow.",
                    18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                    33: "Attempted to convert to an invalid type.",
                    34: "Attempted to access a storage byte array that is incorrectly encoded.",
                    49: "Performed `.pop()` on an empty array",
                    50: "Array index is out of bounds.",
                    65: "Allocated too much memory or created an array which is too large.",
                    81: "Attempted to call a zero-initialized variable of internal function type."
                },
                i = {
                    inputs: [{
                        name: "message",
                        type: "string"
                    }],
                    name: "Error",
                    type: "error"
                },
                o = {
                    inputs: [{
                        name: "reason",
                        type: "uint256"
                    }],
                    name: "Panic",
                    type: "error"
                }
        },
        90408: function(e, t, r) {
            "use strict";
            r.d(t, {
                Bd: function() {
                    return o
                },
                Zn: function() {
                    return i
                },
                ez: function() {
                    return n
                }
            });
            let n = {
                    gwei: 9,
                    wei: 18
                },
                i = {
                    ether: -9,
                    wei: 9
                },
                o = {
                    ether: -18,
                    gwei: -9
                }
        },
        52186: function(e, t, r) {
            "use strict";
            r.d(t, {
                CI: function() {
                    return x
                },
                FM: function() {
                    return p
                },
                Gy: function() {
                    return A
                },
                KY: function() {
                    return w
                },
                M4: function() {
                    return d
                },
                MX: function() {
                    return y
                },
                S4: function() {
                    return v
                },
                SM: function() {
                    return E
                },
                cO: function() {
                    return s
                },
                dh: function() {
                    return P
                },
                fM: function() {
                    return a
                },
                fs: function() {
                    return f
                },
                gr: function() {
                    return l
                },
                hn: function() {
                    return O
                },
                lC: function() {
                    return m
                },
                mv: function() {
                    return g
                },
                wM: function() {
                    return _
                },
                wb: function() {
                    return c
                },
                xB: function() {
                    return u
                },
                xL: function() {
                    return b
                },
                yP: function() {
                    return h
                }
            });
            var n = r(20101),
                i = r(7508),
                o = r(48926);
            class a extends o.G {
                constructor({
                    docsPath: e
                }) {
                    super("A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorNotFoundError"
                    })
                }
            }
            class s extends o.G {
                constructor({
                    docsPath: e
                }) {
                    super("Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            }
            class u extends o.G {
                constructor({
                    data: e,
                    params: t,
                    size: r
                }) {
                    super(`Data size of ${r} bytes is too small for given parameters.`, {
                        metaMessages: [`Params: (${(0,n.h)(t,{includeName:!0})})`, `Data:   ${e} (${r} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e, this.params = t, this.size = r
                }
            }
            class c extends o.G {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            }
            class l extends o.G {
                constructor({
                    expectedLength: e,
                    givenLength: t,
                    type: r
                }) {
                    super(`ABI encoding array length mismatch for type ${r}.
Expected length: ${e}
Given length: ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            }
            class d extends o.G {
                constructor({
                    expectedSize: e,
                    value: t
                }) {
                    super(`Size of bytes "${t}" (bytes${(0,i.d)(t)}) does not match expected size (bytes${e}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            }
            class f extends o.G {
                constructor({
                    expectedLength: e,
                    givenLength: t
                }) {
                    super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            }
            class h extends o.G {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = e
                }
            }
            class p extends o.G {
                constructor({
                    docsPath: e
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            }
            class m extends o.G {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            }
            class g extends o.G {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Event ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            }
            class b extends o.G {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Function ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            }
            class y extends o.G {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            }
            class v extends o.G {
                constructor(e, t) {
                    super("Found ambiguous types in overloaded ABI items.", {
                        metaMessages: [`\`${e.type}\` in \`${(0,n.t)(e.abiItem)}\`, and`, `\`${t.type}\` in \`${(0,n.t)(t.abiItem)}\``, "", "These types encode differently and cannot be distinguished at runtime.", "Remove one of the ambiguous items in the ABI."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiItemAmbiguityError"
                    })
                }
            }
            class w extends o.G {
                constructor({
                    expectedSize: e,
                    givenSize: t
                }) {
                    super(`Expected bytes${e}, got bytes${t}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            }
            class E extends o.G {
                constructor({
                    abiItem: e,
                    data: t,
                    params: r,
                    size: i
                }) {
                    super(`Data size of ${i} bytes is too small for non-indexed event parameters.`, {
                        metaMessages: [`Params: (${(0,n.h)(r,{includeName:!0})})`, `Data:   ${t} (${i} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e, this.data = t, this.params = r, this.size = i
                }
            }
            class A extends o.G {
                constructor({
                    abiItem: e,
                    param: t
                }) {
                    super(`Expected a topic for indexed event parameter${t.name?` "${t.name}"`:""} on event "${(0,n.t)(e,{includeName:!0})}".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e
                }
            }
            class P extends o.G {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            }
            class x extends o.G {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            }
            class O extends o.G {
                constructor(e) {
                    super(`Value "${e}" is not a valid array.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            }
            class _ extends o.G {
                constructor(e) {
                    super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            }
        },
        25355: function(e, t, r) {
            "use strict";
            r.d(t, {
                o: function() {
                    return i
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    docsPath: e
                } = {}) {
                    super("Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.", {
                        docsPath: e,
                        docsSlug: "account"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AccountNotFoundError"
                    })
                }
            }
        },
        51359: function(e, t, r) {
            "use strict";
            r.d(t, {
                b: function() {
                    return i
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    address: e
                }) {
                    super(`Address "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAddressError"
                    })
                }
            }
        },
        48926: function(e, t, r) {
            "use strict";
            r.d(t, {
                G: function() {
                    return i
                }
            });
            var n = r(94290);
            class i extends Error {
                constructor(e, t = {}) {
                    super(), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ViemError"
                    }), Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0, n.bo)()
                    });
                    let r = t.cause instanceof i ? t.cause.details : t.cause ? .message ? t.cause.message : t.details,
                        o = t.cause instanceof i && t.cause.docsPath || t.docsPath;
                    this.message = [e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...o ? [`Docs: https://viem.sh${o}.html${t.docsSlug?`#${t.docsSlug}`:""}`] : [], ...r ? [`Details: ${r}`] : [], `Version: ${this.version}`].join("\n"), t.cause && (this.cause = t.cause), this.details = r, this.docsPath = o, this.metaMessages = t.metaMessages, this.shortMessage = e
                }
                walk(e) {
                    return function e(t, r) {
                        return r ? .(t) ? t : t && "object" == typeof t && "cause" in t ? e(t.cause, r) : r ? null : t
                    }(this, e)
                }
            }
        },
        87655: function(e, t, r) {
            "use strict";
            r.d(t, {
                f: function() {
                    return i
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    blockHash: e,
                    blockNumber: t
                }) {
                    let r = "Block";
                    e && (r = `Block at hash "${e}"`), t && (r = `Block at number "${t}"`), super(`${r} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BlockNotFoundError"
                    })
                }
            }
        },
        89045: function(e, t, r) {
            "use strict";
            r.d(t, {
                Bk: function() {
                    return a
                },
                Yl: function() {
                    return o
                },
                mm: function() {
                    return i
                },
                pZ: function() {
                    return s
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    blockNumber: e,
                    chain: t,
                    contract: r
                }) {
                    super(`Chain "${t.name}" does not support contract "${r.name}".`, {
                        metaMessages: ["This could be due to any of the following:", ...e && r.blockCreated && r.blockCreated > e ? [`- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${e}).`] : [`- The chain does not have the contract "${r.name}" configured.`]]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDoesNotSupportContract"
                    })
                }
            }
            class o extends n.G {
                constructor({
                    chain: e,
                    currentChainId: t
                }) {
                    super(`The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`, {
                        metaMessages: [`Current Chain ID:  ${t}`, `Expected Chain ID: ${e.id} – ${e.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            }
            class a extends n.G {
                constructor() {
                    super("No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            }
            class s extends n.G {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            }
        },
        58591: function(e, t, r) {
            "use strict";
            r.d(t, {
                cg: function() {
                    return g
                },
                uq: function() {
                    return b
                },
                Lu: function() {
                    return y
                },
                Dk: function() {
                    return v
                },
                VQ: function() {
                    return w
                }
            });
            var n = r(96104),
                i = r(47807),
                o = r(71108),
                a = r(20101),
                s = r(47499);

            function u({
                abiItem: e,
                args: t,
                includeFunctionName: r = !0,
                includeName: n = !1
            }) {
                if ("name" in e && "inputs" in e && e.inputs) return `${r?e.name:""}(${e.inputs.map((e,r)=>`${n&&e.name?`${e.name}: `:""}${"object"==typeof t[r]?(0,s.P)(t[r]):t[r]}`).join(", ")})`
            }
            var c = r(18748),
                l = r(85053),
                d = r(49268),
                f = r(52186),
                h = r(48926),
                p = r(97658),
                m = r(94290);
            class g extends h.G {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: i,
                    data: o,
                    gas: a,
                    gasPrice: s,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c,
                    nonce: f,
                    to: h,
                    value: m
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Raw Call Arguments:", (0, p.xr)({
                            from: (t ? (0, n.T)(t) : void 0) ? .address,
                            to: h,
                            value: void 0 !== m && `${(0,l.d)(m)} ${i?.nativeCurrency?.symbol||"ETH"}`,
                            data: o,
                            gas: a,
                            gasPrice: void 0 !== s && `${(0,d.o)(s)} gwei`,
                            maxFeePerGas: void 0 !== u && `${(0,d.o)(u)} gwei`,
                            maxPriorityFeePerGas: void 0 !== c && `${(0,d.o)(c)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CallExecutionError"
                    }), this.cause = e
                }
            }
            class b extends h.G {
                constructor(e, {
                    abi: t,
                    args: r,
                    contractAddress: n,
                    docsPath: i,
                    functionName: o,
                    sender: s
                }) {
                    let l = (0, c.mE)({
                            abi: t,
                            args: r,
                            name: o
                        }),
                        d = l ? u({
                            abiItem: l,
                            args: r,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0;
                    super(e.shortMessage || `An unknown error occurred while executing the contract function "${o}".`, {
                        cause: e,
                        docsPath: i,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Contract Call:", (0, p.xr)({
                            address: n && (0, m.CR)(n),
                            function: l ? (0, a.t)(l, {
                                includeName: !0
                            }) : void 0,
                            args: d && "()" !== d && `${[...Array(o?.length??0).keys()].map(()=>" ").join("")}${d}`,
                            sender: s
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = t, this.args = r, this.cause = e, this.contractAddress = n, this.functionName = o, this.sender = s
                }
            }
            class y extends h.G {
                constructor({
                    abi: e,
                    data: t,
                    functionName: r,
                    message: n
                }) {
                    let s, c, l, d, h;
                    if (t && "0x" !== t) try {
                        let {
                            abiItem: r,
                            errorName: n,
                            args: s
                        } = h = (0, o.p)({
                            abi: e,
                            data: t
                        });
                        if ("Error" === n) l = s[0];
                        else if ("Panic" === n) {
                            let [e] = s;
                            l = i.$[e]
                        } else {
                            let e = r ? (0, a.t)(r, {
                                    includeName: !0
                                }) : void 0,
                                t = r && s ? u({
                                    abiItem: r,
                                    args: s,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            c = [e ? `Error: ${e}` : "", t && "()" !== t ? `       ${[...Array(n?.length??0).keys()].map(()=>" ").join("")}${t}` : ""]
                        }
                    } catch (e) {
                        s = e
                    } else n && (l = n);
                    s instanceof f.yP && (d = s.signature, c = [`Unable to decode signature "${d}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${d}.`]), super(l && "execution reverted" !== l || d ? [`The contract function "${r}" reverted with the following ${d?"signature":"reason"}:`, l || d].join("\n") : `The contract function "${r}" reverted.`, {
                        cause: s,
                        metaMessages: c
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = h, this.reason = l, this.signature = d
                }
            }
            class v extends h.G {
                constructor({
                    functionName: e
                }) {
                    super(`The contract function "${e}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${e}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            }
            class w extends h.G {
                constructor({
                    data: e,
                    message: t
                }) {
                    super(t || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e
                }
            }
        },
        75057: function(e, t, r) {
            "use strict";
            r.d(t, {
                $: function() {
                    return o
                },
                m: function() {
                    return i
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    offset: e,
                    position: t,
                    size: r
                }) {
                    super(`Slice ${"start"===t?"starting":"ending"} at offset "${e}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SliceOffsetOutOfBoundsError"
                    })
                }
            }
            class o extends n.G {
                constructor({
                    size: e,
                    targetSize: t,
                    type: r
                }) {
                    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${t}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            }
        },
        74188: function(e, t, r) {
            "use strict";
            r.d(t, {
                Cd: function() {
                    return o
                },
                J5: function() {
                    return i
                },
                M6: function() {
                    return a
                }
            });
            var n = r(48926);
            class i extends n.G {
                constructor({
                    max: e,
                    min: t,
                    signed: r,
                    size: n,
                    value: i
                }) {
                    super(`Number "${i}" is not in safe ${n?`${8*n}-bit ${r?"signed":"unsigned"} `:""}integer range ${e?`(${t} to ${e})`:`(above ${t})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            }
            class o extends n.G {
                constructor(e) {
                    super(`Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            }
            class a extends n.G {
                constructor({
                    givenSize: e,
                    maxSize: t
                }) {
                    super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            }
        },
        25511: function(e, t, r) {
            "use strict";
            r.d(t, {
                Fz: function() {
                    return o
                },
                e5: function() {
                    return a
                },
                ld: function() {
                    return s
                }
            });
            var n = r(49268),
                i = r(48926);
            class o extends i.G {
                constructor() {
                    super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BaseFeeScalarError"
                    })
                }
            }
            class a extends i.G {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            }
            class s extends i.G {
                constructor({
                    maxPriorityFeePerGas: e
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,n.o)(e)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            }
        },
        37764: function(e, t, r) {
            "use strict";
            r.d(t, {
                C_: function() {
                    return d
                },
                G$: function() {
                    return s
                },
                Hh: function() {
                    return a
                },
                M_: function() {
                    return o
                },
                WF: function() {
                    return f
                },
                ZI: function() {
                    return u
                },
                cj: function() {
                    return g
                },
                cs: function() {
                    return m
                },
                dR: function() {
                    return h
                },
                pZ: function() {
                    return p
                },
                se: function() {
                    return l
                },
                vU: function() {
                    return c
                }
            });
            var n = r(49268),
                i = r(48926);
            class o extends i.G {
                constructor({
                    cause: e,
                    message: t
                } = {}) {
                    let r = t ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                    super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ExecutionRevertedError"
                    })
                }
            }
            Object.defineProperty(o, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(o, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            });
            class a extends i.G {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.o)(t)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            }
            Object.defineProperty(a, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            });
            class s extends i.G {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.o)(t)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            }
            Object.defineProperty(s, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            });
            class u extends i.G {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is higher than the next one expected.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            }
            Object.defineProperty(u, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            });
            class c extends i.G {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            }
            Object.defineProperty(c, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            });
            class l extends i.G {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            }
            Object.defineProperty(l, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            });
            class d extends i.G {
                constructor({
                    cause: e
                } = {}) {
                    super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.", {
                        cause: e,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            }
            Object.defineProperty(d, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            });
            class f extends i.G {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            }
            Object.defineProperty(f, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            });
            class h extends i.G {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction is too low.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            }
            Object.defineProperty(h, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            });
            class p extends i.G {
                constructor({
                    cause: e
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            }
            Object.defineProperty(p, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            });
            class m extends i.G {
                constructor({
                    cause: e,
                    maxPriorityFeePerGas: t,
                    maxFeePerGas: r
                } = {}) {
                    super(`The provided tip (\`maxPriorityFeePerGas\`${t?` = ${(0,n.o)(t)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${r?` = ${(0,n.o)(r)} gwei`:""}).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            }
            Object.defineProperty(m, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            });
            class g extends i.G {
                constructor({
                    cause: e
                }) {
                    super(`An error occurred while executing: ${e?.shortMessage}`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            }
        },
        4456: function(e, t, r) {
            "use strict";
            r.d(t, {
                Gg: function() {
                    return a
                },
                W5: function() {
                    return c
                },
                bs: function() {
                    return u
                },
                c9: function() {
                    return s
                }
            });
            var n = r(47499),
                i = r(48926),
                o = r(94290);
            class a extends i.G {
                constructor({
                    body: e,
                    details: t,
                    headers: r,
                    status: i,
                    url: a
                }) {
                    super("HTTP request failed.", {
                        details: t,
                        metaMessages: [i && `Status: ${i}`, `URL: ${(0,o.Gr)(a)}`, e && `Request body: ${(0,n.P)(e)}`].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "HttpRequestError"
                    }), Object.defineProperty(this, "body", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "headers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "status", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "url", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.body = e, this.headers = r, this.status = i, this.url = a
                }
            }
            class s extends i.G {
                constructor({
                    body: e,
                    details: t,
                    url: r
                }) {
                    super("WebSocket request failed.", {
                        details: t,
                        metaMessages: [`URL: ${(0,o.Gr)(r)}`, `Request body: ${(0,n.P)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            }
            class u extends i.G {
                constructor({
                    body: e,
                    error: t,
                    url: r
                }) {
                    super("RPC Request failed.", {
                        cause: t,
                        details: t.message,
                        metaMessages: [`URL: ${(0,o.Gr)(r)}`, `Request body: ${(0,n.P)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = t.code
                }
            }
            class c extends i.G {
                constructor({
                    body: e,
                    url: t
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,o.Gr)(t)}`, `Request body: ${(0,n.P)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            }
        },
        96329: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return u
                },
                GD: function() {
                    return y
                },
                I0: function() {
                    return P
                },
                KB: function() {
                    return m
                },
                LX: function() {
                    return c
                },
                Og: function() {
                    return h
                },
                PE: function() {
                    return w
                },
                Pv: function() {
                    return b
                },
                Ts: function() {
                    return E
                },
                XS: function() {
                    return d
                },
                ab: function() {
                    return v
                },
                gS: function() {
                    return g
                },
                ir: function() {
                    return O
                },
                nY: function() {
                    return l
                },
                pT: function() {
                    return p
                },
                s7: function() {
                    return s
                },
                u5: function() {
                    return A
                },
                x3: function() {
                    return x
                },
                yR: function() {
                    return f
                }
            });
            var n = r(48926),
                i = r(4456);
            class o extends n.G {
                constructor(e, {
                    code: t,
                    docsPath: r,
                    metaMessages: n,
                    shortMessage: o
                }) {
                    super(o, {
                        cause: e,
                        docsPath: r,
                        metaMessages: n || e ? .metaMessages
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.name = e.name, this.code = e instanceof i.bs ? e.code : t ? ? -1
                }
            }
            class a extends o {
                constructor(e, t) {
                    super(e, t), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t.data
                }
            }
            class s extends o {
                constructor(e) {
                    super(e, {
                        code: s.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            }
            Object.defineProperty(s, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            });
            class u extends o {
                constructor(e) {
                    super(e, {
                        code: u.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            }
            Object.defineProperty(u, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            });
            class c extends o {
                constructor(e) {
                    super(e, {
                        code: c.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(c, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            });
            class l extends o {
                constructor(e) {
                    super(e, {
                        code: l.code,
                        shortMessage: "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            }
            Object.defineProperty(l, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            });
            class d extends o {
                constructor(e) {
                    super(e, {
                        code: d.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            }
            Object.defineProperty(d, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            });
            class f extends o {
                constructor(e) {
                    super(e, {
                        code: f.code,
                        shortMessage: "Missing or invalid parameters.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            }
            Object.defineProperty(f, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            });
            class h extends o {
                constructor(e) {
                    super(e, {
                        code: h.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(h, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            });
            class p extends o {
                constructor(e) {
                    super(e, {
                        code: p.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            }
            Object.defineProperty(p, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            });
            class m extends o {
                constructor(e) {
                    super(e, {
                        code: m.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            }
            Object.defineProperty(m, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            });
            class g extends o {
                constructor(e) {
                    super(e, {
                        code: g.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            }
            Object.defineProperty(g, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            });
            class b extends o {
                constructor(e) {
                    super(e, {
                        code: b.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            }
            Object.defineProperty(b, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            });
            class y extends o {
                constructor(e) {
                    super(e, {
                        code: y.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            }
            Object.defineProperty(y, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            });
            class v extends a {
                constructor(e) {
                    super(e, {
                        code: v.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            }
            Object.defineProperty(v, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            });
            class w extends a {
                constructor(e) {
                    super(e, {
                        code: w.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            }
            Object.defineProperty(w, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            });
            class E extends a {
                constructor(e) {
                    super(e, {
                        code: E.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            }
            Object.defineProperty(E, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            });
            class A extends a {
                constructor(e) {
                    super(e, {
                        code: A.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            }
            Object.defineProperty(A, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            });
            class P extends a {
                constructor(e) {
                    super(e, {
                        code: P.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            }
            Object.defineProperty(P, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            });
            class x extends a {
                constructor(e) {
                    super(e, {
                        code: x.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            }
            Object.defineProperty(x, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            });
            class O extends o {
                constructor(e) {
                    super(e, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            }
        },
        97658: function(e, t, r) {
            "use strict";
            r.d(t, {
                Bh: function() {
                    return l
                },
                Yb: function() {
                    return d
                },
                j3: function() {
                    return u
                },
                mc: function() {
                    return f
                },
                mk: function() {
                    return c
                },
                xY: function() {
                    return s
                },
                xr: function() {
                    return a
                }
            });
            var n = r(85053),
                i = r(49268),
                o = r(48926);

            function a(e) {
                let t = Object.entries(e).map(([e, t]) => void 0 === t || !1 === t ? null : [e, t]).filter(Boolean),
                    r = t.reduce((e, [t]) => Math.max(e, t.length), 0);
                return t.map(([e, t]) => `  ${`${e}:`.padEnd(r+1)}  ${t}`).join("\n")
            }
            class s extends o.G {
                constructor() {
                    super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            }
            class u extends o.G {
                constructor({
                    transaction: e
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", a(e), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            }
            class c extends o.G {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: s,
                    gas: u,
                    gasPrice: c,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: h,
                    value: p
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Request Arguments:", a({
                            chain: o && `${o?.name} (id: ${o?.id})`,
                            from: t ? .address,
                            to: h,
                            value: void 0 !== p && `${(0,n.d)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                            data: s,
                            gas: u,
                            gasPrice: void 0 !== c && `${(0,i.o)(c)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,i.o)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,i.o)(d)} gwei`,
                            nonce: f
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = e
                }
            }
            class l extends o.G {
                constructor({
                    blockHash: e,
                    blockNumber: t,
                    blockTag: r,
                    hash: n,
                    index: i
                }) {
                    let o = "Transaction";
                    r && void 0 !== i && (o = `Transaction at block time "${r}" at index "${i}"`), e && void 0 !== i && (o = `Transaction at block hash "${e}" at index "${i}"`), t && void 0 !== i && (o = `Transaction at block number "${t}" at index "${i}"`), n && (o = `Transaction with hash "${n}"`), super(`${o} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            }
            class d extends o.G {
                constructor({
                    hash: e
                }) {
                    super(`Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            }
            class f extends o.G {
                constructor({
                    hash: e
                }) {
                    super(`Timed out while waiting for transaction with hash "${e}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            }
        },
        94290: function(e, t, r) {
            "use strict";
            r.d(t, {
                CR: function() {
                    return n
                },
                Gr: function() {
                    return i
                },
                bo: function() {
                    return o
                }
            });
            let n = e => e,
                i = e => e,
                o = () => "viem@1.21.3"
        },
        65310: function(e, t, r) {
            "use strict";
            r.d(t, {
                r: function() {
                    return l
                }
            });
            var n = r(52186),
                i = r(99112),
                o = r(7508),
                a = r(49014),
                s = r(77955),
                u = r(21019),
                c = r(39480);

            function l(e, t) {
                if ("0x" === t && e.length > 0) throw new n.wb;
                if ((0, o.d)(t) && 32 > (0, o.d)(t)) throw new n.xB({
                    data: t,
                    params: e,
                    size: (0, o.d)(t)
                });
                return function({
                    data: e,
                    params: t
                }) {
                    let r = [],
                        l = 0;
                    for (let f = 0; f < t.length; f++) {
                        if (l >= (0, o.d)(e)) throw new n.xB({
                            data: e,
                            params: t,
                            size: (0, o.d)(e)
                        });
                        let {
                            consumed: h,
                            value: p
                        } = function e({
                            data: t,
                            param: r,
                            position: o
                        }) {
                            let l = (0, c.S)(r.type);
                            if (l) {
                                let [n, i] = l;
                                return function(t, {
                                    param: r,
                                    length: n,
                                    position: i
                                }) {
                                    if (!n) {
                                        let n = (0, u.ly)((0, a.tP)(t, i, i + 32, {
                                                strict: !0
                                            })),
                                            o = (0, u.ly)((0, a.tP)(t, n, n + 32, {
                                                strict: !0
                                            })),
                                            s = 0,
                                            c = [];
                                        for (let i = 0; i < o; ++i) {
                                            let i = e({
                                                data: (0, a.tP)(t, n + 32),
                                                param: r,
                                                position: s
                                            });
                                            s += i.consumed, c.push(i.value)
                                        }
                                        return {
                                            value: c,
                                            consumed: 32
                                        }
                                    }
                                    if (d(r)) {
                                        let o = (0, c.S)(r.type),
                                            s = !o ? .[0],
                                            l = 0,
                                            d = [];
                                        for (let o = 0; o < n; ++o) {
                                            let n = (0, u.ly)((0, a.tP)(t, i, i + 32, {
                                                    strict: !0
                                                })),
                                                c = e({
                                                    data: (0, a.tP)(t, n),
                                                    param: r,
                                                    position: s ? l : 32 * o
                                                });
                                            l += c.consumed, d.push(c.value)
                                        }
                                        return {
                                            value: d,
                                            consumed: 32
                                        }
                                    }
                                    let o = 0,
                                        s = [];
                                    for (let a = 0; a < n; ++a) {
                                        let n = e({
                                            data: t,
                                            param: r,
                                            position: i + o
                                        });
                                        o += n.consumed, s.push(n.value)
                                    }
                                    return {
                                        value: s,
                                        consumed: o
                                    }
                                }(t, {
                                    length: n,
                                    param: { ...r,
                                        type: i
                                    },
                                    position: o
                                })
                            }
                            if ("tuple" === r.type) return function(t, {
                                param: r,
                                position: n
                            }) {
                                let i = 0 === r.components.length || r.components.some(({
                                        name: e
                                    }) => !e),
                                    o = i ? [] : {},
                                    s = 0;
                                if (d(r)) {
                                    let c = (0, u.ly)((0, a.tP)(t, n, n + 32, {
                                        strict: !0
                                    }));
                                    for (let n = 0; n < r.components.length; ++n) {
                                        let u = r.components[n],
                                            l = e({
                                                data: (0, a.tP)(t, c),
                                                param: u,
                                                position: s
                                            });
                                        s += l.consumed, o[i ? n : u ? .name] = l.value
                                    }
                                    return {
                                        consumed: 32,
                                        value: o
                                    }
                                }
                                for (let a = 0; a < r.components.length; ++a) {
                                    let u = r.components[a],
                                        c = e({
                                            data: t,
                                            param: u,
                                            position: n + s
                                        });
                                    s += c.consumed, o[i ? a : u ? .name] = c.value
                                }
                                return {
                                    consumed: s,
                                    value: o
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            if ("string" === r.type) return function(e, {
                                position: t
                            }) {
                                let r = (0, u.ly)((0, a.tP)(e, t, t + 32, {
                                        strict: !0
                                    })),
                                    n = (0, u.ly)((0, a.tP)(e, r, r + 32, {
                                        strict: !0
                                    }));
                                return 0 === n ? {
                                    consumed: 32,
                                    value: ""
                                } : {
                                    consumed: 32,
                                    value: (0, u.rR)((0, s.f)((0, a.tP)(e, r + 32, r + 32 + n, {
                                        strict: !0
                                    })))
                                }
                            }(t, {
                                position: o
                            });
                            if (r.type.startsWith("bytes")) return function(e, {
                                param: t,
                                position: r
                            }) {
                                let [n, i] = t.type.split("bytes");
                                if (!i) {
                                    let t = (0, u.ly)((0, a.tP)(e, r, r + 32, {
                                            strict: !0
                                        })),
                                        n = (0, u.ly)((0, a.tP)(e, t, t + 32, {
                                            strict: !0
                                        }));
                                    return 0 === n ? {
                                        consumed: 32,
                                        value: "0x"
                                    } : {
                                        consumed: 32,
                                        value: (0, a.tP)(e, t + 32, t + 32 + n, {
                                            strict: !0
                                        })
                                    }
                                }
                                return {
                                    consumed: 32,
                                    value: (0, a.tP)(e, r, r + parseInt(i), {
                                        strict: !0
                                    })
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            let f = (0, a.tP)(t, o, o + 32, {
                                strict: !0
                            });
                            if (r.type.startsWith("uint") || r.type.startsWith("int")) return function(e, {
                                param: t
                            }) {
                                let r = t.type.startsWith("int");
                                return {
                                    consumed: 32,
                                    value: parseInt(t.type.split("int")[1] || "256") > 48 ? (0, u.y_)(e, {
                                        signed: r
                                    }) : (0, u.ly)(e, {
                                        signed: r
                                    })
                                }
                            }(f, {
                                param: r
                            });
                            if ("address" === r.type) return {
                                consumed: 32,
                                value: (0, i.x)((0, a.tP)(f, -20))
                            };
                            if ("bool" === r.type) return {
                                consumed: 32,
                                value: (0, u.XA)(f)
                            };
                            throw new n.CI(r.type, {
                                docsPath: "/docs/contract/decodeAbiParameters"
                            })
                        }({
                            data: e,
                            param: t[f],
                            position: l
                        });
                        r.push(p), l += h
                    }
                    return r
                }({
                    data: t,
                    params: e
                })
            }

            function d(e) {
                let {
                    type: t
                } = e;
                if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
                if ("tuple" === t) return e.components ? .some(d);
                let r = (0, c.S)(e.type);
                return !!(r && d({ ...e,
                    type: r[1]
                }))
            }
        },
        71108: function(e, t, r) {
            "use strict";
            r.d(t, {
                p: function() {
                    return c
                }
            });
            var n = r(47807),
                i = r(52186),
                o = r(49014),
                a = r(83007),
                s = r(65310),
                u = r(20101);

            function c({
                abi: e,
                data: t
            }) {
                let r = (0, o.tP)(t, 0, 4);
                if ("0x" === r) throw new i.wb;
                let c = [...e || [], n.Up, n.hZ].find(e => "error" === e.type && r === (0, a.o)((0, u.t)(e)));
                if (!c) throw new i.yP(r, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: c,
                    args: "inputs" in c && c.inputs && c.inputs.length > 0 ? (0, s.r)(c.inputs, (0, o.tP)(t, 4)) : void 0,
                    errorName: c.name
                }
            }
        },
        97225: function(e, t, r) {
            "use strict";
            r.d(t, {
                k: function() {
                    return s
                }
            });
            var n = r(52186),
                i = r(65310),
                o = r(18748);
            let a = "/docs/contract/decodeFunctionResult";

            function s({
                abi: e,
                args: t,
                functionName: r,
                data: s
            }) {
                let u = e[0];
                if (r && !(u = (0, o.mE)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.xL(r, {
                    docsPath: a
                });
                if ("function" !== u.type) throw new n.xL(void 0, {
                    docsPath: a
                });
                if (!u.outputs) throw new n.MX(u.name, {
                    docsPath: a
                });
                let c = (0, i.r)(u.outputs, s);
                return c && c.length > 1 ? c : c && 1 === c.length ? c[0] : void 0
            }
        },
        39480: function(e, t, r) {
            "use strict";
            r.d(t, {
                E: function() {
                    return d
                },
                S: function() {
                    return h
                }
            });
            var n = r(52186),
                i = r(51359),
                o = r(64113),
                a = r(53932),
                s = r(88202),
                u = r(7508),
                c = r(49014),
                l = r(95046);

            function d(e, t) {
                if (e.length !== t.length) throw new n.fs({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = f(function({
                    params: e,
                    values: t
                }) {
                    let r = [];
                    for (let d = 0; d < e.length; d++) r.push(function e({
                        param: t,
                        value: r
                    }) {
                        let d = h(t.type);
                        if (d) {
                            let [i, o] = d;
                            return function(t, {
                                length: r,
                                param: i
                            }) {
                                let o = null === r;
                                if (!Array.isArray(t)) throw new n.hn(t);
                                if (!o && t.length !== r) throw new n.gr({
                                    expectedLength: r,
                                    givenLength: t.length,
                                    type: `${i.type}[${r}]`
                                });
                                let s = !1,
                                    u = [];
                                for (let r = 0; r < t.length; r++) {
                                    let n = e({
                                        param: i,
                                        value: t[r]
                                    });
                                    n.dynamic && (s = !0), u.push(n)
                                }
                                if (o || s) {
                                    let e = f(u);
                                    if (o) {
                                        let t = (0, l.eC)(u.length, {
                                            size: 32
                                        });
                                        return {
                                            dynamic: !0,
                                            encoded: u.length > 0 ? (0, a.zo)([t, e]) : t
                                        }
                                    }
                                    if (s) return {
                                        dynamic: !0,
                                        encoded: e
                                    }
                                }
                                return {
                                    dynamic: !1,
                                    encoded: (0, a.zo)(u.map(({
                                        encoded: e
                                    }) => e))
                                }
                            }(r, {
                                length: i,
                                param: { ...t,
                                    type: o
                                }
                            })
                        }
                        if ("tuple" === t.type) return function(t, {
                            param: r
                        }) {
                            let n = !1,
                                i = [];
                            for (let o = 0; o < r.components.length; o++) {
                                let a = r.components[o],
                                    s = Array.isArray(t) ? o : a.name,
                                    u = e({
                                        param: a,
                                        value: t[s]
                                    });
                                i.push(u), u.dynamic && (n = !0)
                            }
                            return {
                                dynamic: n,
                                encoded: n ? f(i) : (0, a.zo)(i.map(({
                                    encoded: e
                                }) => e))
                            }
                        }(r, {
                            param: t
                        });
                        if ("address" === t.type) return function(e) {
                            if (!(0, o.U)(e)) throw new i.b({
                                address: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, s.gc)(e.toLowerCase())
                            }
                        }(r);
                        if ("bool" === t.type) return {
                            dynamic: !1,
                            encoded: (0, s.gc)((0, l.C4)(r))
                        };
                        if (t.type.startsWith("uint") || t.type.startsWith("int")) return function(e, {
                            signed: t
                        }) {
                            return {
                                dynamic: !1,
                                encoded: (0, l.eC)(e, {
                                    size: 32,
                                    signed: t
                                })
                            }
                        }(r, {
                            signed: t.type.startsWith("int")
                        });
                        if (t.type.startsWith("bytes")) return function(e, {
                            param: t
                        }) {
                            let [, r] = t.type.split("bytes"), i = (0, u.d)(e);
                            if (!r) {
                                let t = e;
                                return i % 32 != 0 && (t = (0, s.gc)(t, {
                                    dir: "right",
                                    size: 32 * Math.ceil((e.length - 2) / 2 / 32)
                                })), {
                                    dynamic: !0,
                                    encoded: (0, a.zo)([(0, s.gc)((0, l.eC)(i, {
                                        size: 32
                                    })), t])
                                }
                            }
                            if (i !== parseInt(r)) throw new n.M4({
                                expectedSize: parseInt(r),
                                value: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, s.gc)(e, {
                                    dir: "right"
                                })
                            }
                        }(r, {
                            param: t
                        });
                        if ("string" === t.type) return function(e) {
                            let t = (0, l.$G)(e),
                                r = Math.ceil((0, u.d)(t) / 32),
                                n = [];
                            for (let e = 0; e < r; e++) n.push((0, s.gc)((0, c.tP)(t, 32 * e, (e + 1) * 32), {
                                dir: "right"
                            }));
                            return {
                                dynamic: !0,
                                encoded: (0, a.zo)([(0, s.gc)((0, l.eC)((0, u.d)(t), {
                                    size: 32
                                })), ...n])
                            }
                        }(r);
                        throw new n.dh(t.type, {
                            docsPath: "/docs/contract/encodeAbiParameters"
                        })
                    }({
                        param: e[d],
                        value: t[d]
                    }));
                    return r
                }({
                    params: e,
                    values: t
                }));
                return 0 === r.length ? "0x" : r
            }

            function f(e) {
                let t = 0;
                for (let r = 0; r < e.length; r++) {
                    let {
                        dynamic: n,
                        encoded: i
                    } = e[r];
                    n ? t += 32 : t += (0, u.d)(i)
                }
                let r = [],
                    n = [],
                    i = 0;
                for (let o = 0; o < e.length; o++) {
                    let {
                        dynamic: a,
                        encoded: s
                    } = e[o];
                    a ? (r.push((0, l.eC)(t + i, {
                        size: 32
                    })), n.push(s), i += (0, u.d)(s)) : r.push(s)
                }
                return (0, a.zo)([...r, ...n])
            }

            function h(e) {
                let t = e.match(/^(.*)\[(\d+)?\]$/);
                return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0
            }
        },
        32637: function(e, t, r) {
            "use strict";
            r.d(t, {
                w: function() {
                    return s
                }
            });
            var n = r(52186),
                i = r(53932),
                o = r(39480);
            let a = "/docs/contract/encodeDeployData";

            function s({
                abi: e,
                args: t,
                bytecode: r
            }) {
                if (!t || 0 === t.length) return r;
                let s = e.find(e => "type" in e && "constructor" === e.type);
                if (!s) throw new n.fM({
                    docsPath: a
                });
                if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length) throw new n.cO({
                    docsPath: a
                });
                let u = (0, o.E)(s.inputs, t);
                return (0, i.SM)([r, u])
            }
        },
        14503: function(e, t, r) {
            "use strict";
            r.d(t, {
                R: function() {
                    return c
                }
            });
            var n = r(52186),
                i = r(53932),
                o = r(83007),
                a = r(39480),
                s = r(20101),
                u = r(18748);

            function c({
                abi: e,
                args: t,
                functionName: r
            }) {
                let c = e[0];
                if (r && !(c = (0, u.mE)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.xL(r, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== c.type) throw new n.xL(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                let l = (0, s.t)(c),
                    d = (0, o.o)(l),
                    f = "inputs" in c && c.inputs ? (0, a.E)(c.inputs, t ? ? []) : void 0;
                return (0, i.SM)([d, f ? ? "0x"])
            }
        },
        20101: function(e, t, r) {
            "use strict";
            r.d(t, {
                h: function() {
                    return o
                },
                t: function() {
                    return i
                }
            });
            var n = r(52186);

            function i(e, {
                includeName: t = !1
            } = {}) {
                if ("function" !== e.type && "event" !== e.type && "error" !== e.type) throw new n.wM(e.type);
                return `${e.name}(${o(e.inputs,{includeName:t})})`
            }

            function o(e, {
                includeName: t = !1
            } = {}) {
                return e ? e.map(e => (function(e, {
                    includeName: t
                }) {
                    return e.type.startsWith("tuple") ? `(${o(e.components,{includeName:t})})${e.type.slice(5)}` : e.type + (t && e.name ? ` ${e.name}` : "")
                })(e, {
                    includeName: t
                })).join(t ? ", " : ",") : ""
            }
        },
        18748: function(e, t, r) {
            "use strict";
            r.d(t, {
                mE: function() {
                    return u
                }
            });
            var n = r(52186),
                i = r(40369),
                o = r(79660),
                a = r(83007),
                s = r(64113);

            function u({
                abi: e,
                args: t = [],
                name: r
            }) {
                let u;
                let c = (0, i.v)(r, {
                        strict: !1
                    }),
                    l = e.filter(e => c ? "function" === e.type ? (0, a.o)(e) === r : "event" === e.type && (0, o.e)(e) === r : "name" in e && e.name === r);
                if (0 !== l.length) {
                    if (1 === l.length) return l[0];
                    for (let e of l)
                        if ("inputs" in e) {
                            if (!t || 0 === t.length) {
                                if (!e.inputs || 0 === e.inputs.length) return e;
                                continue
                            }
                            if (e.inputs && 0 !== e.inputs.length && e.inputs.length === t.length && t.every((t, r) => {
                                    let n = "inputs" in e && e.inputs[r];
                                    return !!n && function e(t, r) {
                                        let n = typeof t,
                                            i = r.type;
                                        switch (i) {
                                            case "address":
                                                return (0, s.U)(t);
                                            case "bool":
                                                return "boolean" === n;
                                            case "function":
                                            case "string":
                                                return "string" === n;
                                            default:
                                                if ("tuple" === i && "components" in r) return Object.values(r.components).every((r, n) => e(Object.values(t)[n], r));
                                                if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(i)) return "number" === n || "bigint" === n;
                                                if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(i)) return "string" === n || t instanceof Uint8Array;
                                                if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(i)) return Array.isArray(t) && t.every(t => e(t, { ...r,
                                                    type: i.replace(/(\[[0-9]{0,}\])$/, "")
                                                }));
                                                return !1
                                        }
                                    }(t, n)
                                })) {
                                if (u && "inputs" in u && u.inputs) {
                                    let r = function e(t, r, n) {
                                        for (let i in t) {
                                            let o = t[i],
                                                a = r[i];
                                            if ("tuple" === o.type && "tuple" === a.type && "components" in o && "components" in a) return e(o.components, a.components, n[i]);
                                            let u = [o.type, a.type];
                                            if (u.includes("address") && u.includes("bytes20") || (u.includes("address") && u.includes("string") || u.includes("address") && u.includes("bytes")) && (0, s.U)(n[i])) return u
                                        }
                                    }(e.inputs, u.inputs, t);
                                    if (r) throw new n.S4({
                                        abiItem: e,
                                        type: r[0]
                                    }, {
                                        abiItem: u,
                                        type: r[1]
                                    })
                                }
                                u = e
                            }
                        }
                    return u || l[0]
                }
            }
        },
        99112: function(e, t, r) {
            "use strict";
            r.d(t, {
                K: function() {
                    return u
                },
                x: function() {
                    return s
                }
            });
            var n = r(51359),
                i = r(82361),
                o = r(28540),
                a = r(64113);

            function s(e, t) {
                let r = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
                    n = (0, o.w)((0, i.qX)(r), "bytes"),
                    a = (t ? r.substring(`${t}0x`.length) : r).split("");
                for (let e = 0; e < 40; e += 2) n[e >> 1] >> 4 >= 8 && a[e] && (a[e] = a[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && a[e + 1] && (a[e + 1] = a[e + 1].toUpperCase());
                return `0x${a.join("")}`
            }

            function u(e, t) {
                if (!(0, a.U)(e)) throw new n.b({
                    address: e
                });
                return s(e, t)
            }
        },
        64113: function(e, t, r) {
            "use strict";
            r.d(t, {
                U: function() {
                    return i
                }
            });
            let n = /^0x[a-fA-F0-9]{40}$/;

            function i(e) {
                return n.test(e)
            }
        },
        37591: function(e, t, r) {
            "use strict";
            r.d(t, {
                n: function() {
                    return u
                },
                y: function() {
                    return s
                }
            });
            var n = r(48926),
                i = r(4456),
                o = r(96329),
                a = r(55894);
            let s = e => "code" in e ? -1 !== e.code && -32004 !== e.code && -32005 !== e.code && -32042 !== e.code && -32603 !== e.code : e instanceof i.Gg && !!e.status && 403 !== e.status && 408 !== e.status && 413 !== e.status && 429 !== e.status && 500 !== e.status && 502 !== e.status && 503 !== e.status && 504 !== e.status;

            function u(e, {
                retryDelay: t = 150,
                retryCount: r = 3
            } = {}) {
                return async u => (0, a.J)(async () => {
                    try {
                        return await e(u)
                    } catch (e) {
                        switch (e.code) {
                            case o.s7.code:
                                throw new o.s7(e);
                            case o.B.code:
                                throw new o.B(e);
                            case o.LX.code:
                                throw new o.LX(e);
                            case o.nY.code:
                                throw new o.nY(e);
                            case o.XS.code:
                                throw new o.XS(e);
                            case o.yR.code:
                                throw new o.yR(e);
                            case o.Og.code:
                                throw new o.Og(e);
                            case o.pT.code:
                                throw new o.pT(e);
                            case o.KB.code:
                                throw new o.KB(e);
                            case o.gS.code:
                                throw new o.gS(e);
                            case o.Pv.code:
                                throw new o.Pv(e);
                            case o.GD.code:
                                throw new o.GD(e);
                            case o.ab.code:
                                throw new o.ab(e);
                            case o.PE.code:
                                throw new o.PE(e);
                            case o.Ts.code:
                                throw new o.Ts(e);
                            case o.u5.code:
                                throw new o.u5(e);
                            case o.I0.code:
                                throw new o.I0(e);
                            case o.x3.code:
                                throw new o.x3(e);
                            case 5e3:
                                throw new o.ab(e);
                            default:
                                if (e instanceof n.G) throw e;
                                throw new o.ir(e)
                        }
                    }
                }, {
                    delay: ({
                        count: e,
                        error: r
                    }) => {
                        if (r && r instanceof i.Gg) {
                            let e = r ? .headers ? .get("Retry-After");
                            if (e ? .match(/\d/)) return 1e3 * parseInt(e)
                        }
                        return ~~(1 << e) * t
                    },
                    retryCount: r,
                    shouldRetry: ({
                        error: e
                    }) => !s(e)
                })
            }
        },
        95258: function(e, t, r) {
            "use strict";

            function n(e, t = {}) {
                let {
                    fees: r = e.fees,
                    formatters: n = e.formatters,
                    serializers: i = e.serializers
                } = t;
                return { ...e,
                    fees: r,
                    formatters: n,
                    serializers: i
                }
            }
            r.d(t, {
                a: function() {
                    return n
                }
            })
        },
        18543: function(e, t, r) {
            "use strict";
            r.d(t, {
                L: function() {
                    return i
                }
            });
            var n = r(89045);

            function i({
                blockNumber: e,
                chain: t,
                contract: r
            }) {
                let i = t ? .contracts ? .[r];
                if (!i) throw new n.mm({
                    chain: t,
                    contract: {
                        name: r
                    }
                });
                if (e && i.blockCreated && i.blockCreated > e) throw new n.mm({
                    blockNumber: e,
                    chain: t,
                    contract: {
                        name: r,
                        blockCreated: i.blockCreated
                    }
                });
                return i.address
            }
        },
        53932: function(e, t, r) {
            "use strict";

            function n(e) {
                return "string" == typeof e[0] ? i(e) : function(e) {
                    let t = 0;
                    for (let r of e) t += r.length;
                    let r = new Uint8Array(t),
                        n = 0;
                    for (let t of e) r.set(t, n), n += t.length;
                    return r
                }(e)
            }

            function i(e) {
                return `0x${e.reduce((e,t)=>e+t.replace("0x",""),"")}`
            }
            r.d(t, {
                SM: function() {
                    return i
                },
                zo: function() {
                    return n
                }
            })
        },
        40369: function(e, t, r) {
            "use strict";

            function n(e, {
                strict: t = !0
            } = {}) {
                return !!e && "string" == typeof e && (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
            }
            r.d(t, {
                v: function() {
                    return n
                }
            })
        },
        88202: function(e, t, r) {
            "use strict";
            r.d(t, {
                gc: function() {
                    return o
                },
                vk: function() {
                    return i
                }
            });
            var n = r(75057);

            function i(e, {
                dir: t,
                size: r = 32
            } = {}) {
                return "string" == typeof e ? o(e, {
                    dir: t,
                    size: r
                }) : function(e, {
                    dir: t,
                    size: r = 32
                } = {}) {
                    if (null === r) return e;
                    if (e.length > r) throw new n.$({
                        size: e.length,
                        targetSize: r,
                        type: "bytes"
                    });
                    let i = new Uint8Array(r);
                    for (let n = 0; n < r; n++) {
                        let o = "right" === t;
                        i[o ? n : r - n - 1] = e[o ? n : e.length - n - 1]
                    }
                    return i
                }(e, {
                    dir: t,
                    size: r
                })
            }

            function o(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                let i = e.replace("0x", "");
                if (i.length > 2 * r) throw new n.$({
                    size: Math.ceil(i.length / 2),
                    targetSize: r,
                    type: "hex"
                });
                return `0x${i["right"===t?"padEnd":"padStart"](2*r,"0")}`
            }
        },
        7508: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return i
                }
            });
            var n = r(40369);

            function i(e) {
                return (0, n.v)(e, {
                    strict: !1
                }) ? Math.ceil((e.length - 2) / 2) : e.length
            }
        },
        49014: function(e, t, r) {
            "use strict";
            r.d(t, {
                tP: function() {
                    return a
                }
            });
            var n = r(75057),
                i = r(40369),
                o = r(7508);

            function a(e, t, r, {
                strict: n
            } = {}) {
                return (0, i.v)(e, {
                    strict: !1
                }) ? function(e, t, r, {
                    strict: n
                } = {}) {
                    s(e, t);
                    let i = `0x${e.replace("0x","").slice((t??0)*2,(r??e.length)*2)}`;
                    return n && u(i, t, r), i
                }(e, t, r, {
                    strict: n
                }) : function(e, t, r, {
                    strict: n
                } = {}) {
                    s(e, t);
                    let i = e.slice(t, r);
                    return n && u(i, t, r), i
                }(e, t, r, {
                    strict: n
                })
            }

            function s(e, t) {
                if ("number" == typeof t && t > 0 && t > (0, o.d)(e) - 1) throw new n.m({
                    offset: t,
                    position: "start",
                    size: (0, o.d)(e)
                })
            }

            function u(e, t, r) {
                if ("number" == typeof t && "number" == typeof r && (0, o.d)(e) !== r - t) throw new n.m({
                    offset: r,
                    position: "end",
                    size: (0, o.d)(e)
                })
            }
        },
        77955: function(e, t, r) {
            "use strict";

            function n(e, {
                dir: t = "left"
            } = {}) {
                let r = "string" == typeof e ? e.replace("0x", "") : e,
                    n = 0;
                for (let e = 0; e < r.length - 1 && "0" === r["left" === t ? e : r.length - e - 1].toString(); e++) n++;
                return (r = "left" === t ? r.slice(n) : r.slice(0, r.length - n), "string" == typeof e) ? (1 === r.length && "right" === t && (r = `${r}0`), `0x${r.length%2==1?`0${r}`:r}`) : r
            }
            r.d(t, {
                f: function() {
                    return n
                }
            })
        },
        21019: function(e, t, r) {
            "use strict";
            r.d(t, {
                XA: function() {
                    return c
                },
                Yf: function() {
                    return s
                },
                ly: function() {
                    return l
                },
                rR: function() {
                    return d
                },
                y_: function() {
                    return u
                }
            });
            var n = r(74188),
                i = r(7508),
                o = r(77955),
                a = r(82361);

            function s(e, {
                size: t
            }) {
                if ((0, i.d)(e) > t) throw new n.M6({
                    givenSize: (0, i.d)(e),
                    maxSize: t
                })
            }

            function u(e, t = {}) {
                let {
                    signed: r
                } = t;
                t.size && s(e, {
                    size: t.size
                });
                let n = BigInt(e);
                if (!r) return n;
                let i = (e.length - 2) / 2;
                return n <= (1 n << 8 n * BigInt(i) - 1 n) - 1 n ? n : n - BigInt(`0x${"f".padStart(2*i,"f")}`) - 1 n
            }

            function c(e, t = {}) {
                let r = e;
                if (t.size && (s(r, {
                        size: t.size
                    }), r = (0, o.f)(r)), "0x00" === (0, o.f)(r)) return !1;
                if ("0x01" === (0, o.f)(r)) return !0;
                throw new n.Cd(r)
            }

            function l(e, t = {}) {
                return Number(u(e, t))
            }

            function d(e, t = {}) {
                let r = (0, a.nr)(e);
                return t.size && (s(r, {
                    size: t.size
                }), r = (0, o.f)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
        },
        82361: function(e, t, r) {
            "use strict";
            r.d(t, {
                O0: function() {
                    return c
                },
                nr: function() {
                    return f
                },
                qX: function() {
                    return h
                }
            });
            var n = r(48926),
                i = r(40369),
                o = r(88202),
                a = r(21019),
                s = r(95046);
            let u = new TextEncoder;

            function c(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? f((0, s.eC)(e, t)) : "boolean" == typeof e ? function(e, t = {}) {
                    let r = new Uint8Array(1);
                    return (r[0] = Number(e), "number" == typeof t.size) ? ((0, a.Yf)(r, {
                        size: t.size
                    }), (0, o.vk)(r, {
                        size: t.size
                    })) : r
                }(e, t) : (0, i.v)(e) ? f(e, t) : h(e, t)
            }
            let l = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function d(e) {
                return e >= l.zero && e <= l.nine ? e - l.zero : e >= l.A && e <= l.F ? e - (l.A - 10) : e >= l.a && e <= l.f ? e - (l.a - 10) : void 0
            }

            function f(e, t = {}) {
                let r = e;
                t.size && ((0, a.Yf)(r, {
                    size: t.size
                }), r = (0, o.vk)(r, {
                    dir: "right",
                    size: t.size
                }));
                let i = r.slice(2);
                i.length % 2 && (i = `0${i}`);
                let s = i.length / 2,
                    u = new Uint8Array(s);
                for (let e = 0, t = 0; e < s; e++) {
                    let r = d(i.charCodeAt(t++)),
                        o = d(i.charCodeAt(t++));
                    if (void 0 === r || void 0 === o) throw new n.G(`Invalid byte sequence ("${i[t-2]}${i[t-1]}" in "${i}").`);
                    u[e] = 16 * r + o
                }
                return u
            }

            function h(e, t = {}) {
                let r = u.encode(e);
                return "number" == typeof t.size ? ((0, a.Yf)(r, {
                    size: t.size
                }), (0, o.vk)(r, {
                    dir: "right",
                    size: t.size
                })) : r
            }
        },
        95046: function(e, t, r) {
            "use strict";
            r.d(t, {
                $G: function() {
                    return f
                },
                C4: function() {
                    return u
                },
                NC: function() {
                    return s
                },
                ci: function() {
                    return c
                },
                eC: function() {
                    return l
                }
            });
            var n = r(74188),
                i = r(88202),
                o = r(21019);
            let a = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));

            function s(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? l(e, t) : "string" == typeof e ? f(e, t) : "boolean" == typeof e ? u(e, t) : c(e, t)
            }

            function u(e, t = {}) {
                let r = `0x${Number(e)}`;
                return "number" == typeof t.size ? ((0, o.Yf)(r, {
                    size: t.size
                }), (0, i.vk)(r, {
                    size: t.size
                })) : r
            }

            function c(e, t = {}) {
                let r = "";
                for (let t = 0; t < e.length; t++) r += a[e[t]];
                let n = `0x${r}`;
                return "number" == typeof t.size ? ((0, o.Yf)(n, {
                    size: t.size
                }), (0, i.vk)(n, {
                    dir: "right",
                    size: t.size
                })) : n
            }

            function l(e, t = {}) {
                let r;
                let {
                    signed: o,
                    size: a
                } = t, s = BigInt(e);
                a ? r = o ? (1 n << 8 n * BigInt(a) - 1 n) - 1 n : 2 n ** (8 n * BigInt(a)) - 1 n : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
                let u = "bigint" == typeof r && o ? -r - 1 n : 0;
                if (r && s > r || s < u) {
                    let t = "bigint" == typeof e ? "n" : "";
                    throw new n.J5({
                        max: r ? `${r}${t}` : void 0,
                        min: `${u}${t}`,
                        signed: o,
                        size: a,
                        value: `${e}${t}`
                    })
                }
                let c = `0x${(o&&s<0?(1n<<BigInt(8*a))+BigInt(s):s).toString(16)}`;
                return a ? (0, i.vk)(c, {
                    size: a
                }) : c
            }
            let d = new TextEncoder;

            function f(e, t = {}) {
                return c(d.encode(e), t)
            }
        },
        43149: function(e, t, r) {
            "use strict";
            r.d(t, {
                k: function() {
                    return o
                }
            });
            var n = r(48926),
                i = r(37764);

            function o(e, t) {
                let r = (e.details || "").toLowerCase(),
                    o = e.walk(e => e.code === i.M_.code);
                return o instanceof n.G ? new i.M_({
                    cause: e,
                    message: o.details
                }) : i.M_.nodeMessage.test(r) ? new i.M_({
                    cause: e,
                    message: e.details
                }) : i.Hh.nodeMessage.test(r) ? new i.Hh({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.G$.nodeMessage.test(r) ? new i.G$({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.ZI.nodeMessage.test(r) ? new i.ZI({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.vU.nodeMessage.test(r) ? new i.vU({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.se.nodeMessage.test(r) ? new i.se({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.C_.nodeMessage.test(r) ? new i.C_({
                    cause: e
                }) : i.WF.nodeMessage.test(r) ? new i.WF({
                    cause: e,
                    gas: t ? .gas
                }) : i.dR.nodeMessage.test(r) ? new i.dR({
                    cause: e,
                    gas: t ? .gas
                }) : i.pZ.nodeMessage.test(r) ? new i.pZ({
                    cause: e
                }) : i.cs.nodeMessage.test(r) ? new i.cs({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas,
                    maxPriorityFeePerGas: t ? .maxPriorityFeePerGas
                }) : new i.cj({
                    cause: e
                })
            }
        },
        20621: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return i
                }
            });
            var n = r(16719);

            function i(e) {
                let t = e.transactions ? .map(e => "string" == typeof e ? e : n.Tr(e));
                return { ...e,
                    baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
                    difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
                    gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
                    hash: e.hash ? e.hash : null,
                    logsBloom: e.logsBloom ? e.logsBloom : null,
                    nonce: e.nonce ? e.nonce : null,
                    number: e.number ? BigInt(e.number) : null,
                    size: e.size ? BigInt(e.size) : void 0,
                    timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
                    transactions: t,
                    totalDifficulty: e.totalDifficulty ? BigInt(e.totalDifficulty) : null
                }
            }
        },
        27031: function(e, t, r) {
            "use strict";

            function n(e, {
                format: t
            }) {
                if (!t) return {};
                let r = {};
                return ! function t(n) {
                    for (let i of Object.keys(n)) i in e && (r[i] = e[i]), n[i] && "object" == typeof n[i] && !Array.isArray(n[i]) && t(n[i])
                }(t(e || {})), r
            }
            r.d(t, {
                K: function() {
                    return n
                }
            })
        },
        16719: function(e, t, r) {
            "use strict";
            r.d(t, {
                Tr: function() {
                    return o
                },
                c8: function() {
                    return i
                }
            });
            var n = r(21019);
            let i = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            };

            function o(e) {
                let t = { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    chainId: e.chainId ? (0, n.ly)(e.chainId) : void 0,
                    gas: e.gas ? BigInt(e.gas) : void 0,
                    gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
                    maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: e.maxPriorityFeePerGas ? BigInt(e.maxPriorityFeePerGas) : void 0,
                    nonce: e.nonce ? (0, n.ly)(e.nonce) : void 0,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    type: e.type ? i[e.type] : void 0,
                    typeHex: e.type ? e.type : void 0,
                    value: e.value ? BigInt(e.value) : void 0,
                    v: e.v ? BigInt(e.v) : void 0
                };
                return t.yParity = (() => {
                    if (e.yParity) return Number(e.yParity);
                    if ("bigint" == typeof t.v) {
                        if (0 n === t.v || 27 n === t.v) return 0;
                        if (1 n === t.v || 28 n === t.v) return 1;
                        if (t.v >= 35 n) return t.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === t.type && (delete t.accessList, delete t.maxFeePerGas, delete t.maxPriorityFeePerGas, delete t.yParity), "eip2930" === t.type && (delete t.maxFeePerGas, delete t.maxPriorityFeePerGas), t
            }
        },
        37669: function(e, t, r) {
            "use strict";
            r.d(t, {
                tG: function() {
                    return o
                }
            });
            var n = r(95046);
            let i = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            };

            function o(e) {
                return { ...e,
                    gas: void 0 !== e.gas ? (0, n.eC)(e.gas) : void 0,
                    gasPrice: void 0 !== e.gasPrice ? (0, n.eC)(e.gasPrice) : void 0,
                    maxFeePerGas: void 0 !== e.maxFeePerGas ? (0, n.eC)(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: void 0 !== e.maxPriorityFeePerGas ? (0, n.eC)(e.maxPriorityFeePerGas) : void 0,
                    nonce: void 0 !== e.nonce ? (0, n.eC)(e.nonce) : void 0,
                    type: void 0 !== e.type ? i[e.type] : void 0,
                    value: void 0 !== e.value ? (0, n.eC)(e.value) : void 0
                }
            }
        },
        93413: function(e, t, r) {
            "use strict";

            function n(e, t, r) {
                return n => e[t.name || r] ? .(n) ? ? t(e, n)
            }
            r.d(t, {
                s: function() {
                    return n
                }
            })
        },
        79660: function(e, t, r) {
            "use strict";
            r.d(t, {
                e: function() {
                    return u
                }
            });
            var n = r(82361),
                i = r(76015);
            let o = e => (0, i.r)(e);
            var a = r(28540);
            let s = e => (0, a.w)((0, n.O0)(e)),
                u = e => s(o(e))
        },
        83007: function(e, t, r) {
            "use strict";
            r.d(t, {
                o: function() {
                    return u
                }
            });
            var n = r(49014),
                i = r(82361),
                o = r(76015),
                a = r(28540);
            let s = e => (0, a.w)((0, i.O0)(e)),
                u = e => (0, n.tP)(s((0, o.r)(e)), 0, 4)
        },
        76015: function(e, t, r) {
            "use strict";
            r.d(t, {
                r: function() {
                    return a
                }
            });
            let n = /^tuple(?<array>(\[(\d*)\])*)$/;

            function i(e) {
                let t = "",
                    r = e.length;
                for (let i = 0; i < r; i++) t += function e(t) {
                    let r = t.type;
                    if (n.test(t.type) && "components" in t) {
                        r = "(";
                        let i = t.components.length;
                        for (let n = 0; n < i; n++) r += e(t.components[n]), n < i - 1 && (r += ", ");
                        let o = function(e, t) {
                            let r = e.exec(t);
                            return r ? .groups
                        }(n, t.type);
                        return r += `)${o?.array??""}`, e({ ...t,
                            type: r
                        })
                    }
                    return ("indexed" in t && t.indexed && (r = `${r} indexed`), t.name) ? `${r} ${t.name}` : r
                }(e[i]), i !== r - 1 && (t += ", ");
                return t
            }
            var o = r(48926);
            let a = e => {
                var t;
                return function(e) {
                    let t = !0,
                        r = "",
                        n = 0,
                        i = "",
                        a = !1;
                    for (let o = 0; o < e.length; o++) {
                        let s = e[o];
                        if (["(", ")", ","].includes(s) && (t = !0), "(" === s && n++, ")" === s && n--, t) {
                            if (0 === n) {
                                if (" " === s && ["event", "function", ""].includes(i)) i = "";
                                else if (i += s, ")" === s) {
                                    a = !0;
                                    break
                                }
                                continue
                            }
                            if (" " === s) {
                                "," !== e[o - 1] && "," !== r && ",(" !== r && (r = "", t = !1);
                                continue
                            }
                            i += s, r += s
                        }
                    }
                    if (!a) throw new o.G("Unable to normalize signature.");
                    return i
                }("string" == typeof e ? e : "function" === (t = e).type ? `function ${t.name}(${i(t.inputs)})${t.stateMutability&&"nonpayable"!==t.stateMutability?` ${t.stateMutability}`:""}${t.outputs.length?` returns (${i(t.outputs)})`:""}` : "event" === t.type ? `event ${t.name}(${i(t.inputs)})` : "error" === t.type ? `error ${t.name}(${i(t.inputs)})` : "constructor" === t.type ? `constructor(${i(t.inputs)})${"payable"===t.stateMutability?" payable":""}` : "fallback" === t.type ? "fallback()" : "receive() external payable")
            }
        },
        28540: function(e, t, r) {
            "use strict";

            function n(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function i(e, ...t) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function o(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }
            r.d(t, {
                w: function() {
                    return N
                }
            });
            let a = BigInt(4294967296 - 1),
                s = BigInt(32),
                u = (e, t, r) => e << r | t >>> 32 - r,
                c = (e, t, r) => t << r | e >>> 32 - r,
                l = (e, t, r) => t << r - 32 | e >>> 64 - r,
                d = (e, t, r) => e << r - 32 | t >>> 64 - r,
                f = e => e instanceof Uint8Array,
                h = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
            if (68 !== new Uint8Array(new Uint32Array([287454020]).buffer)[0]) throw Error("Non little-endian hardware is not supported");

            function p(e) {
                if ("string" == typeof e && (e = function(e) {
                        if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                        return new Uint8Array(new TextEncoder().encode(e))
                    }(e)), !f(e)) throw Error(`expected Uint8Array, got ${typeof e}`);
                return e
            }
            class m {
                clone() {
                    return this._cloneInto()
                }
            }
            let [g, b, y] = [
                [],
                [],
                []
            ], v = BigInt(0), w = BigInt(1), E = BigInt(2), A = BigInt(7), P = BigInt(256), x = BigInt(113);
            for (let e = 0, t = w, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], g.push(2 * (5 * n + r)), b.push((e + 1) * (e + 2) / 2 % 64);
                let i = v;
                for (let e = 0; e < 7; e++)(t = (t << w ^ (t >> A) * x) % P) & E && (i ^= w << (w << BigInt(e)) - w);
                y.push(i)
            }
            let [O, _] = function(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let i = 0; i < e.length; i++) {
                    let {
                        h: o,
                        l: u
                    } = function(e, t = !1) {
                        return t ? {
                            h: Number(e & a),
                            l: Number(e >> s & a)
                        } : {
                            h: 0 | Number(e >> s & a),
                            l: 0 | Number(e & a)
                        }
                    }(e[i], t);
                    [r[i], n[i]] = [o, u]
                }
                return [r, n]
            }(y, !0), I = (e, t, r) => r > 32 ? l(e, t, r) : u(e, t, r), T = (e, t, r) => r > 32 ? d(e, t, r) : c(e, t, r);
            class C extends m {
                constructor(e, t, r, i = !1, o = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = o, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, n(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = h(this.state)
                }
                keccak() {
                    ! function(e, t = 24) {
                        let r = new Uint32Array(10);
                        for (let n = 24 - t; n < 24; n++) {
                            for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                            for (let t = 0; t < 10; t += 2) {
                                let n = (t + 8) % 10,
                                    i = (t + 2) % 10,
                                    o = r[i],
                                    a = r[i + 1],
                                    s = I(o, a, 1) ^ r[n],
                                    u = T(o, a, 1) ^ r[n + 1];
                                for (let r = 0; r < 50; r += 10) e[t + r] ^= s, e[t + r + 1] ^= u
                            }
                            let t = e[2],
                                i = e[3];
                            for (let r = 0; r < 24; r++) {
                                let n = b[r],
                                    o = I(t, i, n),
                                    a = T(t, i, n),
                                    s = g[r];
                                t = e[s], i = e[s + 1], e[s] = o, e[s + 1] = a
                            }
                            for (let t = 0; t < 50; t += 10) {
                                for (let n = 0; n < 10; n++) r[n] = e[t + n];
                                for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                            }
                            e[0] ^= O[n], e[1] ^= _[n]
                        }
                        r.fill(0)
                    }(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    o(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this, n = (e = p(e)).length;
                    for (let i = 0; i < n;) {
                        let o = Math.min(t - this.pos, n - i);
                        for (let t = 0; t < o; t++) r[this.pos++] ^= e[i++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    o(this, !1), i(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return n(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if (! function(e, t) {
                            i(e);
                            let r = t.outputLen;
                            if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
                        }(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(e) {
                    let {
                        blockLen: t,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: o
                    } = this;
                    return e || (e = new C(t, r, n, o, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = n, e.enableXOF = o, e.destroyed = this.destroyed, e
                }
            }
            let S = function(e) {
                let t = t => e().update(p(t)).digest(),
                    r = e();
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = () => e(), t
            }(() => new C(136, 1, 32));
            var k = r(40369),
                M = r(82361),
                B = r(95046);

            function N(e, t) {
                let r = S((0, k.v)(e, {
                    strict: !1
                }) ? (0, M.O0)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, B.NC)(r)
            }
        },
        10639: function(e, t, r) {
            "use strict";
            r.d(t, {
                S: function() {
                    return i
                }
            });
            let n = new Map;

            function i({
                fn: e,
                id: t,
                shouldSplitBatch: r,
                wait: i = 0,
                sort: o
            }) {
                let a = async () => {
                        let t = c();
                        s();
                        let r = t.map(({
                            args: e
                        }) => e);
                        0 !== r.length && e(r).then(e => {
                            o && Array.isArray(e) && e.sort(o);
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.resolve ? .([e[r], e])
                            }
                        }).catch(e => {
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.reject ? .(e)
                            }
                        })
                    },
                    s = () => n.delete(t),
                    u = () => c().map(({
                        args: e
                    }) => e),
                    c = () => n.get(t) || [],
                    l = e => n.set(t, [...c(), e]);
                return {
                    flush: s,
                    async schedule(e) {
                        let t = {},
                            n = new Promise((e, r) => {
                                t.resolve = e, t.reject = r
                            });
                        return (r ? .([...u(), e]) && a(), c().length > 0) ? l({
                            args: e,
                            pendingPromise: t
                        }) : (l({
                            args: e,
                            pendingPromise: t
                        }), setTimeout(a, i)), n
                    }
                }
            }
        },
        55894: function(e, t, r) {
            "use strict";
            r.d(t, {
                J: function() {
                    return i
                }
            });
            var n = r(97317);

            function i(e, {
                delay: t = 100,
                retryCount: r = 2,
                shouldRetry: i = () => !0
            } = {}) {
                return new Promise((o, a) => {
                    let s = async ({
                        count: u = 0
                    } = {}) => {
                        let c = async ({
                            error: e
                        }) => {
                            let r = "function" == typeof t ? t({
                                count: u,
                                error: e
                            }) : t;
                            r && await (0, n.D)(r), s({
                                count: u + 1
                            })
                        };
                        try {
                            let t = await e();
                            o(t)
                        } catch (e) {
                            if (u < r && await i({
                                    count: u,
                                    error: e
                                })) return c({
                                error: e
                            });
                            a(e)
                        }
                    };
                    s()
                })
            }
        },
        47499: function(e, t, r) {
            "use strict";
            r.d(t, {
                P: function() {
                    return n
                }
            });
            let n = (e, t, r) => JSON.stringify(e, (e, r) => {
                let n = "bigint" == typeof r ? r.toString() : r;
                return "function" == typeof t ? t(e, n) : n
            }, r)
        },
        82857: function(e, t, r) {
            "use strict";
            r.d(t, {
                F: function() {
                    return u
                }
            });
            var n = r(96104),
                i = r(51359),
                o = r(37764),
                a = r(97658),
                s = r(64113);

            function u(e) {
                let {
                    account: t,
                    gasPrice: r,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c,
                    to: l
                } = e, d = t ? (0, n.T)(t) : void 0;
                if (d && !(0, s.U)(d.address)) throw new i.b({
                    address: d.address
                });
                if (l && !(0, s.U)(l)) throw new i.b({
                    address: l
                });
                if (void 0 !== r && (void 0 !== u || void 0 !== c)) throw new a.xY;
                if (u && u > 2 n ** 256 n - 1 n) throw new o.Hh({
                    maxFeePerGas: u
                });
                if (c && u && c > u) throw new o.cs({
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: c
                })
            }
        },
        92416: function(e, t, r) {
            "use strict";
            r.d(t, {
                cj: function() {
                    return d
                },
                iC: function() {
                    return l
                }
            });
            var n = r(52186),
                i = r(51359),
                o = r(64113),
                a = r(7508),
                s = r(95046);
            let u = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
                c = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;

            function l({
                domain: e,
                message: t,
                primaryType: r,
                types: l
            }) {
                let d = (e, t) => {
                    for (let r of e) {
                        let {
                            name: e,
                            type: f
                        } = r, h = t[e], p = f.match(c);
                        if (p && ("number" == typeof h || "bigint" == typeof h)) {
                            let [e, t, r] = p;
                            (0, s.eC)(h, {
                                signed: "int" === t,
                                size: parseInt(r) / 8
                            })
                        }
                        if ("address" === f && "string" == typeof h && !(0, o.U)(h)) throw new i.b({
                            address: h
                        });
                        let m = f.match(u);
                        if (m) {
                            let [e, t] = m;
                            if (t && (0, a.d)(h) !== parseInt(t)) throw new n.KY({
                                expectedSize: parseInt(t),
                                givenSize: (0, a.d)(h)
                            })
                        }
                        let g = l[f];
                        g && d(g, h)
                    }
                };
                l.EIP712Domain && e && d(l.EIP712Domain, e), "EIP712Domain" !== r && d(l[r], t)
            }

            function d({
                domain: e
            }) {
                return ["string" == typeof e ? .name && {
                    name: "name",
                    type: "string"
                }, e ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof e ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, e ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, e ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }
        },
        85053: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return o
                }
            });
            var n = r(90408),
                i = r(42921);

            function o(e, t = "wei") {
                return (0, i.b)(e, n.ez[t])
            }
        },
        49268: function(e, t, r) {
            "use strict";
            r.d(t, {
                o: function() {
                    return o
                }
            });
            var n = r(90408),
                i = r(42921);

            function o(e, t = "wei") {
                return (0, i.b)(e, n.Zn[t])
            }
        },
        42921: function(e, t, r) {
            "use strict";

            function n(e, t) {
                let r = e.toString(),
                    n = r.startsWith("-");
                n && (r = r.slice(1));
                let [i, o] = [(r = r.padStart(t, "0")).slice(0, r.length - t), r.slice(r.length - t)];
                return o = o.replace(/(0+)$/, ""), `${n?"-":""}${i||"0"}${o?`.${o}`:""}`
            }
            r.d(t, {
                b: function() {
                    return n
                }
            })
        },
        97317: function(e, t, r) {
            "use strict";
            async function n(e) {
                return new Promise(t => setTimeout(t, e))
            }
            r.d(t, {
                D: function() {
                    return n
                }
            })
        },
        4654: function(e, t, r) {
            "use strict";
            let n;

            function i() {}
            r.d(t, {
                eM: function() {
                    return eA
                },
                _g: function() {
                    return ev
                },
                mA: function() {
                    return eD
                },
                KQ: function() {
                    return eF
                },
                $4: function() {
                    return eq
                },
                qL: function() {
                    return eH
                },
                c9: function() {
                    return eX
                },
                F6: function() {
                    return e1
                },
                LN: function() {
                    return eG
                },
                t_: function() {
                    return eS
                },
                QW: function() {
                    return eY
                },
                g0: function() {
                    return eJ
                }
            });
            let o = "undefined" == typeof window || "Deno" in window;

            function a() {}

            function s(e) {
                return "number" == typeof e && e >= 0 && e !== 1 / 0
            }

            function u(e, t) {
                return Math.max(e + (t || 0) - Date.now(), 0)
            }

            function c(e, t, r) {
                return E(e) ? "function" == typeof t ? { ...r,
                    queryKey: e,
                    queryFn: t
                } : { ...t,
                    queryKey: e
                } : e
            }

            function l(e, t, r) {
                return E(e) ? "function" == typeof t ? { ...r,
                    mutationKey: e,
                    mutationFn: t
                } : { ...t,
                    mutationKey: e
                } : "function" == typeof e ? { ...t,
                    mutationFn: e
                } : { ...e
                }
            }

            function d(e, t, r) {
                return E(e) ? [{ ...t,
                    queryKey: e
                }, r] : [e || {}, t]
            }

            function f(e, t) {
                let {
                    type: r = "all",
                    exact: n,
                    fetchStatus: i,
                    predicate: o,
                    queryKey: a,
                    stale: s
                } = e;
                if (E(a)) {
                    if (n) {
                        if (t.queryHash !== p(a, t.options)) return !1
                    } else {
                        if (!g(t.queryKey, a)) return !1
                    }
                }
                if ("all" !== r) {
                    let e = t.isActive();
                    if ("active" === r && !e || "inactive" === r && e) return !1
                }
                return ("boolean" != typeof s || t.isStale() === s) && (void 0 === i || i === t.state.fetchStatus) && (!o || !!o(t))
            }

            function h(e, t) {
                let {
                    exact: r,
                    fetching: n,
                    predicate: i,
                    mutationKey: o
                } = e;
                if (E(o)) {
                    if (!t.options.mutationKey) return !1;
                    if (r) {
                        if (m(t.options.mutationKey) !== m(o)) return !1
                    } else {
                        if (!g(t.options.mutationKey, o)) return !1
                    }
                }
                return ("boolean" != typeof n || "loading" === t.state.status === n) && (!i || !!i(t))
            }

            function p(e, t) {
                return ((null == t ? void 0 : t.queryKeyHashFn) || m)(e)
            }

            function m(e) {
                return JSON.stringify(e, (e, t) => v(t) ? Object.keys(t).sort().reduce((e, r) => (e[r] = t[r], e), {}) : t)
            }

            function g(e, t) {
                return e === t || typeof e == typeof t && !!e && !!t && "object" == typeof e && "object" == typeof t && !Object.keys(t).some(r => !g(e[r], t[r]))
            }

            function b(e, t) {
                if (e && !t || t && !e) return !1;
                for (let r in e)
                    if (e[r] !== t[r]) return !1;
                return !0
            }

            function y(e) {
                return Array.isArray(e) && e.length === Object.keys(e).length
            }

            function v(e) {
                if (!w(e)) return !1;
                let t = e.constructor;
                if (void 0 === t) return !0;
                let r = t.prototype;
                return !!(w(r) && r.hasOwnProperty("isPrototypeOf"))
            }

            function w(e) {
                return "[object Object]" === Object.prototype.toString.call(e)
            }

            function E(e) {
                return Array.isArray(e)
            }

            function A(e) {
                return new Promise(t => {
                    setTimeout(t, e)
                })
            }

            function P(e) {
                A(0).then(e)
            }

            function x(e, t, r) {
                return null != r.isDataEqual && r.isDataEqual(e, t) ? e : "function" == typeof r.structuralSharing ? r.structuralSharing(e, t) : !1 !== r.structuralSharing ? function e(t, r) {
                    if (t === r) return t;
                    let n = y(t) && y(r);
                    if (n || v(t) && v(r)) {
                        let i = n ? t.length : Object.keys(t).length,
                            o = n ? r : Object.keys(r),
                            a = o.length,
                            s = n ? [] : {},
                            u = 0;
                        for (let i = 0; i < a; i++) {
                            let a = n ? i : o[i];
                            s[a] = e(t[a], r[a]), s[a] === t[a] && u++
                        }
                        return i === a && u === i ? t : s
                    }
                    return r
                }(e, t) : t
            }
            let O = console,
                _ = function() {
                    let e = [],
                        t = 0,
                        r = e => {
                            e()
                        },
                        n = e => {
                            e()
                        },
                        i = n => {
                            t ? e.push(n) : P(() => {
                                r(n)
                            })
                        },
                        o = () => {
                            let t = e;
                            e = [], t.length && P(() => {
                                n(() => {
                                    t.forEach(e => {
                                        r(e)
                                    })
                                })
                            })
                        };
                    return {
                        batch: e => {
                            let r;
                            t++;
                            try {
                                r = e()
                            } finally {
                                --t || o()
                            }
                            return r
                        },
                        batchCalls: e => (...t) => {
                            i(() => {
                                e(...t)
                            })
                        },
                        schedule: i,
                        setNotifyFunction: e => {
                            r = e
                        },
                        setBatchNotifyFunction: e => {
                            n = e
                        }
                    }
                }();
            class I {
                constructor() {
                    this.listeners = new Set, this.subscribe = this.subscribe.bind(this)
                }
                subscribe(e) {
                    let t = {
                        listener: e
                    };
                    return this.listeners.add(t), this.onSubscribe(), () => {
                        this.listeners.delete(t), this.onUnsubscribe()
                    }
                }
                hasListeners() {
                    return this.listeners.size > 0
                }
                onSubscribe() {}
                onUnsubscribe() {}
            }
            class T extends I {
                constructor() {
                    super(), this.setup = e => {
                        if (!o && window.addEventListener) {
                            let t = () => e();
                            return window.addEventListener("visibilitychange", t, !1), window.addEventListener("focus", t, !1), () => {
                                window.removeEventListener("visibilitychange", t), window.removeEventListener("focus", t)
                            }
                        }
                    }
                }
                onSubscribe() {
                    this.cleanup || this.setEventListener(this.setup)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var e;
                        null == (e = this.cleanup) || e.call(this), this.cleanup = void 0
                    }
                }
                setEventListener(e) {
                    var t;
                    this.setup = e, null == (t = this.cleanup) || t.call(this), this.cleanup = e(e => {
                        "boolean" == typeof e ? this.setFocused(e) : this.onFocus()
                    })
                }
                setFocused(e) {
                    this.focused !== e && (this.focused = e, this.onFocus())
                }
                onFocus() {
                    this.listeners.forEach(({
                        listener: e
                    }) => {
                        e()
                    })
                }
                isFocused() {
                    return "boolean" == typeof this.focused ? this.focused : "undefined" == typeof document || [void 0, "visible", "prerender"].includes(document.visibilityState)
                }
            }
            let C = new T,
                S = ["online", "offline"];
            class k extends I {
                constructor() {
                    super(), this.setup = e => {
                        if (!o && window.addEventListener) {
                            let t = () => e();
                            return S.forEach(e => {
                                window.addEventListener(e, t, !1)
                            }), () => {
                                S.forEach(e => {
                                    window.removeEventListener(e, t)
                                })
                            }
                        }
                    }
                }
                onSubscribe() {
                    this.cleanup || this.setEventListener(this.setup)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var e;
                        null == (e = this.cleanup) || e.call(this), this.cleanup = void 0
                    }
                }
                setEventListener(e) {
                    var t;
                    this.setup = e, null == (t = this.cleanup) || t.call(this), this.cleanup = e(e => {
                        "boolean" == typeof e ? this.setOnline(e) : this.onOnline()
                    })
                }
                setOnline(e) {
                    this.online !== e && (this.online = e, this.onOnline())
                }
                onOnline() {
                    this.listeners.forEach(({
                        listener: e
                    }) => {
                        e()
                    })
                }
                isOnline() {
                    return "boolean" == typeof this.online ? this.online : "undefined" == typeof navigator || void 0 === navigator.onLine || navigator.onLine
                }
            }
            let M = new k;

            function B(e) {
                return Math.min(1e3 * 2 ** e, 3e4)
            }

            function N(e) {
                return (null != e ? e : "online") !== "online" || M.isOnline()
            }
            class R {
                constructor(e) {
                    this.revert = null == e ? void 0 : e.revert, this.silent = null == e ? void 0 : e.silent
                }
            }

            function D(e) {
                return e instanceof R
            }

            function j(e) {
                let t, r, n, i = !1,
                    o = 0,
                    a = !1,
                    s = new Promise((e, t) => {
                        r = e, n = t
                    }),
                    u = () => !C.isFocused() || "always" !== e.networkMode && !M.isOnline(),
                    c = n => {
                        a || (a = !0, null == e.onSuccess || e.onSuccess(n), null == t || t(), r(n))
                    },
                    l = r => {
                        a || (a = !0, null == e.onError || e.onError(r), null == t || t(), n(r))
                    },
                    d = () => new Promise(r => {
                        t = e => {
                            let t = a || !u();
                            return t && r(e), t
                        }, null == e.onPause || e.onPause()
                    }).then(() => {
                        t = void 0, a || null == e.onContinue || e.onContinue()
                    }),
                    f = () => {
                        let t;
                        if (!a) {
                            try {
                                t = e.fn()
                            } catch (e) {
                                t = Promise.reject(e)
                            }
                            Promise.resolve(t).then(c).catch(t => {
                                var r, n;
                                if (a) return;
                                let s = null != (r = e.retry) ? r : 3,
                                    c = null != (n = e.retryDelay) ? n : B,
                                    h = "function" == typeof c ? c(o, t) : c,
                                    p = !0 === s || "number" == typeof s && o < s || "function" == typeof s && s(o, t);
                                if (i || !p) {
                                    l(t);
                                    return
                                }
                                o++, null == e.onFail || e.onFail(o, t), A(h).then(() => {
                                    if (u()) return d()
                                }).then(() => {
                                    i ? l(t) : f()
                                })
                            })
                        }
                    };
                return N(e.networkMode) ? f() : d().then(f), {
                    promise: s,
                    cancel: t => {
                        a || (l(new R(t)), null == e.abort || e.abort())
                    },
                    continue: () => (null == t ? void 0 : t()) ? s : Promise.resolve(),
                    cancelRetry: () => {
                        i = !0
                    },
                    continueRetry: () => {
                        i = !1
                    }
                }
            }
            class F {
                destroy() {
                    this.clearGcTimeout()
                }
                scheduleGc() {
                    this.clearGcTimeout(), s(this.cacheTime) && (this.gcTimeout = setTimeout(() => {
                        this.optionalRemove()
                    }, this.cacheTime))
                }
                updateCacheTime(e) {
                    this.cacheTime = Math.max(this.cacheTime || 0, null != e ? e : o ? 1 / 0 : 3e5)
                }
                clearGcTimeout() {
                    this.gcTimeout && (clearTimeout(this.gcTimeout), this.gcTimeout = void 0)
                }
            }
            class U extends F {
                constructor(e) {
                    super(), this.abortSignalConsumed = !1, this.defaultOptions = e.defaultOptions, this.setOptions(e.options), this.observers = [], this.cache = e.cache, this.logger = e.logger || O, this.queryKey = e.queryKey, this.queryHash = e.queryHash, this.initialState = e.state || function(e) {
                        let t = "function" == typeof e.initialData ? e.initialData() : e.initialData,
                            r = void 0 !== t,
                            n = r ? "function" == typeof e.initialDataUpdatedAt ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
                        return {
                            data: t,
                            dataUpdateCount: 0,
                            dataUpdatedAt: r ? null != n ? n : Date.now() : 0,
                            error: null,
                            errorUpdateCount: 0,
                            errorUpdatedAt: 0,
                            fetchFailureCount: 0,
                            fetchFailureReason: null,
                            fetchMeta: null,
                            isInvalidated: !1,
                            status: r ? "success" : "loading",
                            fetchStatus: "idle"
                        }
                    }(this.options), this.state = this.initialState, this.scheduleGc()
                }
                get meta() {
                    return this.options.meta
                }
                setOptions(e) {
                    this.options = { ...this.defaultOptions,
                        ...e
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                optionalRemove() {
                    this.observers.length || "idle" !== this.state.fetchStatus || this.cache.remove(this)
                }
                setData(e, t) {
                    let r = x(this.state.data, e, this.options);
                    return this.dispatch({
                        data: r,
                        type: "success",
                        dataUpdatedAt: null == t ? void 0 : t.updatedAt,
                        manual: null == t ? void 0 : t.manual
                    }), r
                }
                setState(e, t) {
                    this.dispatch({
                        type: "setState",
                        state: e,
                        setStateOptions: t
                    })
                }
                cancel(e) {
                    var t;
                    let r = this.promise;
                    return null == (t = this.retryer) || t.cancel(e), r ? r.then(a).catch(a) : Promise.resolve()
                }
                destroy() {
                    super.destroy(), this.cancel({
                        silent: !0
                    })
                }
                reset() {
                    this.destroy(), this.setState(this.initialState)
                }
                isActive() {
                    return this.observers.some(e => !1 !== e.options.enabled)
                }
                isDisabled() {
                    return this.getObserversCount() > 0 && !this.isActive()
                }
                isStale() {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(e => e.getCurrentResult().isStale)
                }
                isStaleByTime(e = 0) {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || !u(this.state.dataUpdatedAt, e)
                }
                onFocus() {
                    var e;
                    let t = this.observers.find(e => e.shouldFetchOnWindowFocus());
                    t && t.refetch({
                        cancelRefetch: !1
                    }), null == (e = this.retryer) || e.continue()
                }
                onOnline() {
                    var e;
                    let t = this.observers.find(e => e.shouldFetchOnReconnect());
                    t && t.refetch({
                        cancelRefetch: !1
                    }), null == (e = this.retryer) || e.continue()
                }
                addObserver(e) {
                    this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), this.cache.notify({
                        type: "observerAdded",
                        query: this,
                        observer: e
                    }))
                }
                removeObserver(e) {
                    this.observers.includes(e) && (this.observers = this.observers.filter(t => t !== e), this.observers.length || (this.retryer && (this.abortSignalConsumed ? this.retryer.cancel({
                        revert: !0
                    }) : this.retryer.cancelRetry()), this.scheduleGc()), this.cache.notify({
                        type: "observerRemoved",
                        query: this,
                        observer: e
                    }))
                }
                getObserversCount() {
                    return this.observers.length
                }
                invalidate() {
                    this.state.isInvalidated || this.dispatch({
                        type: "invalidate"
                    })
                }
                fetch(e, t) {
                    var r, n, i, o;
                    if ("idle" !== this.state.fetchStatus) {
                        if (this.state.dataUpdatedAt && null != t && t.cancelRefetch) this.cancel({
                            silent: !0
                        });
                        else if (this.promise) return null == (i = this.retryer) || i.continueRetry(), this.promise
                    }
                    if (e && this.setOptions(e), !this.options.queryFn) {
                        let e = this.observers.find(e => e.options.queryFn);
                        e && this.setOptions(e.options)
                    }
                    let a = function() {
                            if ("function" == typeof AbortController) return new AbortController
                        }(),
                        s = {
                            queryKey: this.queryKey,
                            pageParam: void 0,
                            meta: this.meta
                        },
                        u = e => {
                            Object.defineProperty(e, "signal", {
                                enumerable: !0,
                                get: () => {
                                    if (a) return this.abortSignalConsumed = !0, a.signal
                                }
                            })
                        };
                    u(s);
                    let c = {
                        fetchOptions: t,
                        options: this.options,
                        queryKey: this.queryKey,
                        state: this.state,
                        fetchFn: () => this.options.queryFn ? (this.abortSignalConsumed = !1, this.options.queryFn(s)) : Promise.reject("Missing queryFn for queryKey '" + this.options.queryHash + "'")
                    };
                    u(c), null == (r = this.options.behavior) || r.onFetch(c), this.revertState = this.state, ("idle" === this.state.fetchStatus || this.state.fetchMeta !== (null == (n = c.fetchOptions) ? void 0 : n.meta)) && this.dispatch({
                        type: "fetch",
                        meta: null == (o = c.fetchOptions) ? void 0 : o.meta
                    });
                    let l = e => {
                        if (D(e) && e.silent || this.dispatch({
                                type: "error",
                                error: e
                            }), !D(e)) {
                            var t, r, n, i;
                            null == (t = (r = this.cache.config).onError) || t.call(r, e, this), null == (n = (i = this.cache.config).onSettled) || n.call(i, this.state.data, e, this)
                        }
                        this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                    };
                    return this.retryer = j({
                        fn: c.fetchFn,
                        abort: null == a ? void 0 : a.abort.bind(a),
                        onSuccess: e => {
                            var t, r, n, i;
                            if (void 0 === e) {
                                l(Error(this.queryHash + " data is undefined"));
                                return
                            }
                            this.setData(e), null == (t = (r = this.cache.config).onSuccess) || t.call(r, e, this), null == (n = (i = this.cache.config).onSettled) || n.call(i, e, this.state.error, this), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                        },
                        onError: l,
                        onFail: (e, t) => {
                            this.dispatch({
                                type: "failed",
                                failureCount: e,
                                error: t
                            })
                        },
                        onPause: () => {
                            this.dispatch({
                                type: "pause"
                            })
                        },
                        onContinue: () => {
                            this.dispatch({
                                type: "continue"
                            })
                        },
                        retry: c.options.retry,
                        retryDelay: c.options.retryDelay,
                        networkMode: c.options.networkMode
                    }), this.promise = this.retryer.promise, this.promise
                }
                dispatch(e) {
                    this.state = (t => {
                        var r, n;
                        switch (e.type) {
                            case "failed":
                                return { ...t,
                                    fetchFailureCount: e.failureCount,
                                    fetchFailureReason: e.error
                                };
                            case "pause":
                                return { ...t,
                                    fetchStatus: "paused"
                                };
                            case "continue":
                                return { ...t,
                                    fetchStatus: "fetching"
                                };
                            case "fetch":
                                return { ...t,
                                    fetchFailureCount: 0,
                                    fetchFailureReason: null,
                                    fetchMeta: null != (r = e.meta) ? r : null,
                                    fetchStatus: N(this.options.networkMode) ? "fetching" : "paused",
                                    ...!t.dataUpdatedAt && {
                                        error: null,
                                        status: "loading"
                                    }
                                };
                            case "success":
                                return { ...t,
                                    data: e.data,
                                    dataUpdateCount: t.dataUpdateCount + 1,
                                    dataUpdatedAt: null != (n = e.dataUpdatedAt) ? n : Date.now(),
                                    error: null,
                                    isInvalidated: !1,
                                    status: "success",
                                    ...!e.manual && {
                                        fetchStatus: "idle",
                                        fetchFailureCount: 0,
                                        fetchFailureReason: null
                                    }
                                };
                            case "error":
                                let i = e.error;
                                if (D(i) && i.revert && this.revertState) return { ...this.revertState,
                                    fetchStatus: "idle"
                                };
                                return { ...t,
                                    error: i,
                                    errorUpdateCount: t.errorUpdateCount + 1,
                                    errorUpdatedAt: Date.now(),
                                    fetchFailureCount: t.fetchFailureCount + 1,
                                    fetchFailureReason: i,
                                    fetchStatus: "idle",
                                    status: "error"
                                };
                            case "invalidate":
                                return { ...t,
                                    isInvalidated: !0
                                };
                            case "setState":
                                return { ...t,
                                    ...e.state
                                }
                        }
                    })(this.state), _.batch(() => {
                        this.observers.forEach(t => {
                            t.onQueryUpdate(e)
                        }), this.cache.notify({
                            query: this,
                            type: "updated",
                            action: e
                        })
                    })
                }
            }
            class L extends I {
                constructor(e) {
                    super(), this.config = e || {}, this.queries = [], this.queriesMap = {}
                }
                build(e, t, r) {
                    var n;
                    let i = t.queryKey,
                        o = null != (n = t.queryHash) ? n : p(i, t),
                        a = this.get(o);
                    return a || (a = new U({
                        cache: this,
                        logger: e.getLogger(),
                        queryKey: i,
                        queryHash: o,
                        options: e.defaultQueryOptions(t),
                        state: r,
                        defaultOptions: e.getQueryDefaults(i)
                    }), this.add(a)), a
                }
                add(e) {
                    this.queriesMap[e.queryHash] || (this.queriesMap[e.queryHash] = e, this.queries.push(e), this.notify({
                        type: "added",
                        query: e
                    }))
                }
                remove(e) {
                    let t = this.queriesMap[e.queryHash];
                    t && (e.destroy(), this.queries = this.queries.filter(t => t !== e), t === e && delete this.queriesMap[e.queryHash], this.notify({
                        type: "removed",
                        query: e
                    }))
                }
                clear() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            this.remove(e)
                        })
                    })
                }
                get(e) {
                    return this.queriesMap[e]
                }
                getAll() {
                    return this.queries
                }
                find(e, t) {
                    let [r] = d(e, t);
                    return void 0 === r.exact && (r.exact = !0), this.queries.find(e => f(r, e))
                }
                findAll(e, t) {
                    let [r] = d(e, t);
                    return Object.keys(r).length > 0 ? this.queries.filter(e => f(r, e)) : this.queries
                }
                notify(e) {
                    _.batch(() => {
                        this.listeners.forEach(({
                            listener: t
                        }) => {
                            t(e)
                        })
                    })
                }
                onFocus() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            e.onFocus()
                        })
                    })
                }
                onOnline() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            e.onOnline()
                        })
                    })
                }
            }
            class q extends F {
                constructor(e) {
                    super(), this.defaultOptions = e.defaultOptions, this.mutationId = e.mutationId, this.mutationCache = e.mutationCache, this.logger = e.logger || O, this.observers = [], this.state = e.state || z(), this.setOptions(e.options), this.scheduleGc()
                }
                setOptions(e) {
                    this.options = { ...this.defaultOptions,
                        ...e
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                get meta() {
                    return this.options.meta
                }
                setState(e) {
                    this.dispatch({
                        type: "setState",
                        state: e
                    })
                }
                addObserver(e) {
                    this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), this.mutationCache.notify({
                        type: "observerAdded",
                        mutation: this,
                        observer: e
                    }))
                }
                removeObserver(e) {
                    this.observers = this.observers.filter(t => t !== e), this.scheduleGc(), this.mutationCache.notify({
                        type: "observerRemoved",
                        mutation: this,
                        observer: e
                    })
                }
                optionalRemove() {
                    this.observers.length || ("loading" === this.state.status ? this.scheduleGc() : this.mutationCache.remove(this))
                }
                continue () {
                    var e, t;
                    return null != (e = null == (t = this.retryer) ? void 0 : t.continue()) ? e : this.execute()
                }
                async execute() {
                    var e, t, r, n, i, o, a, s, u, c, l, d, f, h, p, m, g, b, y, v;
                    let w = "loading" === this.state.status;
                    try {
                        if (!w) {
                            this.dispatch({
                                type: "loading",
                                variables: this.options.variables
                            }), await (null == (u = (c = this.mutationCache.config).onMutate) ? void 0 : u.call(c, this.state.variables, this));
                            let e = await (null == (l = (d = this.options).onMutate) ? void 0 : l.call(d, this.state.variables));
                            e !== this.state.context && this.dispatch({
                                type: "loading",
                                context: e,
                                variables: this.state.variables
                            })
                        }
                        let f = await (() => {
                            var e;
                            return this.retryer = j({
                                fn: () => this.options.mutationFn ? this.options.mutationFn(this.state.variables) : Promise.reject("No mutationFn found"),
                                onFail: (e, t) => {
                                    this.dispatch({
                                        type: "failed",
                                        failureCount: e,
                                        error: t
                                    })
                                },
                                onPause: () => {
                                    this.dispatch({
                                        type: "pause"
                                    })
                                },
                                onContinue: () => {
                                    this.dispatch({
                                        type: "continue"
                                    })
                                },
                                retry: null != (e = this.options.retry) ? e : 0,
                                retryDelay: this.options.retryDelay,
                                networkMode: this.options.networkMode
                            }), this.retryer.promise
                        })();
                        return await (null == (e = (t = this.mutationCache.config).onSuccess) ? void 0 : e.call(t, f, this.state.variables, this.state.context, this)), await (null == (r = (n = this.options).onSuccess) ? void 0 : r.call(n, f, this.state.variables, this.state.context)), await (null == (i = (o = this.mutationCache.config).onSettled) ? void 0 : i.call(o, f, null, this.state.variables, this.state.context, this)), await (null == (a = (s = this.options).onSettled) ? void 0 : a.call(s, f, null, this.state.variables, this.state.context)), this.dispatch({
                            type: "success",
                            data: f
                        }), f
                    } catch (e) {
                        try {
                            throw await (null == (f = (h = this.mutationCache.config).onError) ? void 0 : f.call(h, e, this.state.variables, this.state.context, this)), await (null == (p = (m = this.options).onError) ? void 0 : p.call(m, e, this.state.variables, this.state.context)), await (null == (g = (b = this.mutationCache.config).onSettled) ? void 0 : g.call(b, void 0, e, this.state.variables, this.state.context, this)), await (null == (y = (v = this.options).onSettled) ? void 0 : y.call(v, void 0, e, this.state.variables, this.state.context)), e
                        } finally {
                            this.dispatch({
                                type: "error",
                                error: e
                            })
                        }
                    }
                }
                dispatch(e) {
                    this.state = (t => {
                        switch (e.type) {
                            case "failed":
                                return { ...t,
                                    failureCount: e.failureCount,
                                    failureReason: e.error
                                };
                            case "pause":
                                return { ...t,
                                    isPaused: !0
                                };
                            case "continue":
                                return { ...t,
                                    isPaused: !1
                                };
                            case "loading":
                                return { ...t,
                                    context: e.context,
                                    data: void 0,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    isPaused: !N(this.options.networkMode),
                                    status: "loading",
                                    variables: e.variables
                                };
                            case "success":
                                return { ...t,
                                    data: e.data,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    status: "success",
                                    isPaused: !1
                                };
                            case "error":
                                return { ...t,
                                    data: void 0,
                                    error: e.error,
                                    failureCount: t.failureCount + 1,
                                    failureReason: e.error,
                                    isPaused: !1,
                                    status: "error"
                                };
                            case "setState":
                                return { ...t,
                                    ...e.state
                                }
                        }
                    })(this.state), _.batch(() => {
                        this.observers.forEach(t => {
                            t.onMutationUpdate(e)
                        }), this.mutationCache.notify({
                            mutation: this,
                            type: "updated",
                            action: e
                        })
                    })
                }
            }

            function z() {
                return {
                    context: void 0,
                    data: void 0,
                    error: null,
                    failureCount: 0,
                    failureReason: null,
                    isPaused: !1,
                    status: "idle",
                    variables: void 0
                }
            }
            class $ extends I {
                constructor(e) {
                    super(), this.config = e || {}, this.mutations = [], this.mutationId = 0
                }
                build(e, t, r) {
                    let n = new q({
                        mutationCache: this,
                        logger: e.getLogger(),
                        mutationId: ++this.mutationId,
                        options: e.defaultMutationOptions(t),
                        state: r,
                        defaultOptions: t.mutationKey ? e.getMutationDefaults(t.mutationKey) : void 0
                    });
                    return this.add(n), n
                }
                add(e) {
                    this.mutations.push(e), this.notify({
                        type: "added",
                        mutation: e
                    })
                }
                remove(e) {
                    this.mutations = this.mutations.filter(t => t !== e), this.notify({
                        type: "removed",
                        mutation: e
                    })
                }
                clear() {
                    _.batch(() => {
                        this.mutations.forEach(e => {
                            this.remove(e)
                        })
                    })
                }
                getAll() {
                    return this.mutations
                }
                find(e) {
                    return void 0 === e.exact && (e.exact = !0), this.mutations.find(t => h(e, t))
                }
                findAll(e) {
                    return this.mutations.filter(t => h(e, t))
                }
                notify(e) {
                    _.batch(() => {
                        this.listeners.forEach(({
                            listener: t
                        }) => {
                            t(e)
                        })
                    })
                }
                resumePausedMutations() {
                    var e;
                    return this.resuming = (null != (e = this.resuming) ? e : Promise.resolve()).then(() => {
                        let e = this.mutations.filter(e => e.state.isPaused);
                        return _.batch(() => e.reduce((e, t) => e.then(() => t.continue().catch(a)), Promise.resolve()))
                    }).then(() => {
                        this.resuming = void 0
                    }), this.resuming
                }
            }

            function H(e, t) {
                return null == e.getNextPageParam ? void 0 : e.getNextPageParam(t[t.length - 1], t)
            }
            class G {
                constructor(e = {}) {
                    this.queryCache = e.queryCache || new L, this.mutationCache = e.mutationCache || new $, this.logger = e.logger || O, this.defaultOptions = e.defaultOptions || {}, this.queryDefaults = [], this.mutationDefaults = [], this.mountCount = 0
                }
                mount() {
                    this.mountCount++, 1 === this.mountCount && (this.unsubscribeFocus = C.subscribe(() => {
                        C.isFocused() && (this.resumePausedMutations(), this.queryCache.onFocus())
                    }), this.unsubscribeOnline = M.subscribe(() => {
                        M.isOnline() && (this.resumePausedMutations(), this.queryCache.onOnline())
                    }))
                }
                unmount() {
                    var e, t;
                    this.mountCount--, 0 === this.mountCount && (null == (e = this.unsubscribeFocus) || e.call(this), this.unsubscribeFocus = void 0, null == (t = this.unsubscribeOnline) || t.call(this), this.unsubscribeOnline = void 0)
                }
                isFetching(e, t) {
                    let [r] = d(e, t);
                    return r.fetchStatus = "fetching", this.queryCache.findAll(r).length
                }
                isMutating(e) {
                    return this.mutationCache.findAll({ ...e,
                        fetching: !0
                    }).length
                }
                getQueryData(e, t) {
                    var r;
                    return null == (r = this.queryCache.find(e, t)) ? void 0 : r.state.data
                }
                ensureQueryData(e, t, r) {
                    let n = c(e, t, r),
                        i = this.getQueryData(n.queryKey);
                    return i ? Promise.resolve(i) : this.fetchQuery(n)
                }
                getQueriesData(e) {
                    return this.getQueryCache().findAll(e).map(({
                        queryKey: e,
                        state: t
                    }) => [e, t.data])
                }
                setQueryData(e, t, r) {
                    let n = this.queryCache.find(e),
                        i = null == n ? void 0 : n.state.data,
                        o = "function" == typeof t ? t(i) : t;
                    if (void 0 === o) return;
                    let a = c(e),
                        s = this.defaultQueryOptions(a);
                    return this.queryCache.build(this, s).setData(o, { ...r,
                        manual: !0
                    })
                }
                setQueriesData(e, t, r) {
                    return _.batch(() => this.getQueryCache().findAll(e).map(({
                        queryKey: e
                    }) => [e, this.setQueryData(e, t, r)]))
                }
                getQueryState(e, t) {
                    var r;
                    return null == (r = this.queryCache.find(e, t)) ? void 0 : r.state
                }
                removeQueries(e, t) {
                    let [r] = d(e, t), n = this.queryCache;
                    _.batch(() => {
                        n.findAll(r).forEach(e => {
                            n.remove(e)
                        })
                    })
                }
                resetQueries(e, t, r) {
                    let [n, i] = d(e, t, r), o = this.queryCache, a = {
                        type: "active",
                        ...n
                    };
                    return _.batch(() => (o.findAll(n).forEach(e => {
                        e.reset()
                    }), this.refetchQueries(a, i)))
                }
                cancelQueries(e, t, r) {
                    let [n, i = {}] = d(e, t, r);
                    return void 0 === i.revert && (i.revert = !0), Promise.all(_.batch(() => this.queryCache.findAll(n).map(e => e.cancel(i)))).then(a).catch(a)
                }
                invalidateQueries(e, t, r) {
                    let [n, i] = d(e, t, r);
                    return _.batch(() => {
                        var e, t;
                        if (this.queryCache.findAll(n).forEach(e => {
                                e.invalidate()
                            }), "none" === n.refetchType) return Promise.resolve();
                        let r = { ...n,
                            type: null != (e = null != (t = n.refetchType) ? t : n.type) ? e : "active"
                        };
                        return this.refetchQueries(r, i)
                    })
                }
                refetchQueries(e, t, r) {
                    let [n, i] = d(e, t, r), o = Promise.all(_.batch(() => this.queryCache.findAll(n).filter(e => !e.isDisabled()).map(e => {
                        var t;
                        return e.fetch(void 0, { ...i,
                            cancelRefetch: null == (t = null == i ? void 0 : i.cancelRefetch) || t,
                            meta: {
                                refetchPage: n.refetchPage
                            }
                        })
                    }))).then(a);
                    return null != i && i.throwOnError || (o = o.catch(a)), o
                }
                fetchQuery(e, t, r) {
                    let n = c(e, t, r),
                        i = this.defaultQueryOptions(n);
                    void 0 === i.retry && (i.retry = !1);
                    let o = this.queryCache.build(this, i);
                    return o.isStaleByTime(i.staleTime) ? o.fetch(i) : Promise.resolve(o.state.data)
                }
                prefetchQuery(e, t, r) {
                    return this.fetchQuery(e, t, r).then(a).catch(a)
                }
                fetchInfiniteQuery(e, t, r) {
                    let n = c(e, t, r);
                    return n.behavior = {
                        onFetch: e => {
                            e.fetchFn = () => {
                                var t, r, n, i, o, a, s;
                                let u;
                                let c = null == (t = e.fetchOptions) ? void 0 : null == (r = t.meta) ? void 0 : r.refetchPage,
                                    l = null == (n = e.fetchOptions) ? void 0 : null == (i = n.meta) ? void 0 : i.fetchMore,
                                    d = null == l ? void 0 : l.pageParam,
                                    f = (null == l ? void 0 : l.direction) === "forward",
                                    h = (null == l ? void 0 : l.direction) === "backward",
                                    p = (null == (o = e.state.data) ? void 0 : o.pages) || [],
                                    m = (null == (a = e.state.data) ? void 0 : a.pageParams) || [],
                                    g = m,
                                    b = !1,
                                    y = t => {
                                        Object.defineProperty(t, "signal", {
                                            enumerable: !0,
                                            get: () => {
                                                var t, r;
                                                return null != (t = e.signal) && t.aborted ? b = !0 : null == (r = e.signal) || r.addEventListener("abort", () => {
                                                    b = !0
                                                }), e.signal
                                            }
                                        })
                                    },
                                    v = e.options.queryFn || (() => Promise.reject("Missing queryFn for queryKey '" + e.options.queryHash + "'")),
                                    w = (e, t, r, n) => (g = n ? [t, ...g] : [...g, t], n ? [r, ...e] : [...e, r]),
                                    E = (t, r, n, i) => {
                                        if (b) return Promise.reject("Cancelled");
                                        if (void 0 === n && !r && t.length) return Promise.resolve(t);
                                        let o = {
                                            queryKey: e.queryKey,
                                            pageParam: n,
                                            meta: e.options.meta
                                        };
                                        return y(o), Promise.resolve(v(o)).then(e => w(t, n, e, i))
                                    };
                                if (p.length) {
                                    if (f) {
                                        let t = void 0 !== d,
                                            r = t ? d : H(e.options, p);
                                        u = E(p, t, r)
                                    } else if (h) {
                                        let t = void 0 !== d,
                                            r = t ? d : null == (s = e.options).getPreviousPageParam ? void 0 : s.getPreviousPageParam(p[0], p);
                                        u = E(p, t, r, !0)
                                    } else {
                                        g = [];
                                        let t = void 0 === e.options.getNextPageParam;
                                        u = !c || !p[0] || c(p[0], 0, p) ? E([], t, m[0]) : Promise.resolve(w([], m[0], p[0]));
                                        for (let r = 1; r < p.length; r++) u = u.then(n => {
                                            if (!c || !p[r] || c(p[r], r, p)) {
                                                let i = t ? m[r] : H(e.options, n);
                                                return E(n, t, i)
                                            }
                                            return Promise.resolve(w(n, m[r], p[r]))
                                        })
                                    }
                                } else u = E([]);
                                return u.then(e => ({
                                    pages: e,
                                    pageParams: g
                                }))
                            }
                        }
                    }, this.fetchQuery(n)
                }
                prefetchInfiniteQuery(e, t, r) {
                    return this.fetchInfiniteQuery(e, t, r).then(a).catch(a)
                }
                resumePausedMutations() {
                    return this.mutationCache.resumePausedMutations()
                }
                getQueryCache() {
                    return this.queryCache
                }
                getMutationCache() {
                    return this.mutationCache
                }
                getLogger() {
                    return this.logger
                }
                getDefaultOptions() {
                    return this.defaultOptions
                }
                setDefaultOptions(e) {
                    this.defaultOptions = e
                }
                setQueryDefaults(e, t) {
                    let r = this.queryDefaults.find(t => m(e) === m(t.queryKey));
                    r ? r.defaultOptions = t : this.queryDefaults.push({
                        queryKey: e,
                        defaultOptions: t
                    })
                }
                getQueryDefaults(e) {
                    if (!e) return;
                    let t = this.queryDefaults.find(t => g(e, t.queryKey));
                    return null == t ? void 0 : t.defaultOptions
                }
                setMutationDefaults(e, t) {
                    let r = this.mutationDefaults.find(t => m(e) === m(t.mutationKey));
                    r ? r.defaultOptions = t : this.mutationDefaults.push({
                        mutationKey: e,
                        defaultOptions: t
                    })
                }
                getMutationDefaults(e) {
                    if (!e) return;
                    let t = this.mutationDefaults.find(t => g(e, t.mutationKey));
                    return null == t ? void 0 : t.defaultOptions
                }
                defaultQueryOptions(e) {
                    if (null != e && e._defaulted) return e;
                    let t = { ...this.defaultOptions.queries,
                        ...this.getQueryDefaults(null == e ? void 0 : e.queryKey),
                        ...e,
                        _defaulted: !0
                    };
                    return !t.queryHash && t.queryKey && (t.queryHash = p(t.queryKey, t)), void 0 === t.refetchOnReconnect && (t.refetchOnReconnect = "always" !== t.networkMode), void 0 === t.useErrorBoundary && (t.useErrorBoundary = !!t.suspense), t
                }
                defaultMutationOptions(e) {
                    return null != e && e._defaulted ? e : { ...this.defaultOptions.mutations,
                        ...this.getMutationDefaults(null == e ? void 0 : e.mutationKey),
                        ...e,
                        _defaulted: !0
                    }
                }
                clear() {
                    this.queryCache.clear(), this.mutationCache.clear()
                }
            }

            function W(e) {
                return e.state.isPaused
            }

            function K(e) {
                return "success" === e.state.status
            }
            let Y = ["added", "removed", "updated"];

            function V(e) {
                return Y.includes(e)
            }
            async function Q({
                queryClient: e,
                persister: t,
                maxAge: r = 864e5,
                buster: n = "",
                hydrateOptions: i
            }) {
                try {
                    let o = await t.restoreClient();
                    if (o) {
                        if (o.timestamp) {
                            let a = Date.now() - o.timestamp > r,
                                s = o.buster !== n;
                            a || s ? t.removeClient() : function(e, t, r) {
                                if ("object" != typeof t || null === t) return;
                                let n = e.getMutationCache(),
                                    i = e.getQueryCache(),
                                    o = t.mutations || [],
                                    a = t.queries || [];
                                o.forEach(t => {
                                    var i;
                                    n.build(e, { ...null == r ? void 0 : null == (i = r.defaultOptions) ? void 0 : i.mutations,
                                        mutationKey: t.mutationKey
                                    }, t.state)
                                }), a.forEach(({
                                    queryKey: t,
                                    state: n,
                                    queryHash: o
                                }) => {
                                    var a;
                                    let s = i.get(o);
                                    if (s) {
                                        if (s.state.dataUpdatedAt < n.dataUpdatedAt) {
                                            let {
                                                fetchStatus: e,
                                                ...t
                                            } = n;
                                            s.setState(t)
                                        }
                                        return
                                    }
                                    i.build(e, { ...null == r ? void 0 : null == (a = r.defaultOptions) ? void 0 : a.queries,
                                        queryKey: t,
                                        queryHash: o
                                    }, { ...n,
                                        fetchStatus: "idle"
                                    })
                                })
                            }(e, o.clientState, i)
                        } else t.removeClient()
                    }
                } catch (e) {
                    t.removeClient()
                }
            }
            async function J({
                queryClient: e,
                persister: t,
                buster: r = "",
                dehydrateOptions: n
            }) {
                let i = {
                    buster: r,
                    timestamp: Date.now(),
                    clientState: function(e, t = {}) {
                        let r = [],
                            n = [];
                        if (!1 !== t.dehydrateMutations) {
                            let n = t.shouldDehydrateMutation || W;
                            e.getMutationCache().getAll().forEach(e => {
                                n(e) && r.push({
                                    mutationKey: e.options.mutationKey,
                                    state: e.state
                                })
                            })
                        }
                        if (!1 !== t.dehydrateQueries) {
                            let r = t.shouldDehydrateQuery || K;
                            e.getQueryCache().getAll().forEach(e => {
                                r(e) && n.push({
                                    state: e.state,
                                    queryKey: e.queryKey,
                                    queryHash: e.queryHash
                                })
                            })
                        }
                        return {
                            mutations: r,
                            queries: n
                        }
                    }(e, n)
                };
                await t.persistClient(i)
            }
            var Z = r(26686),
                X = r(2265);
            let ee = X.createContext(void 0),
                et = X.createContext(!1);

            function er(e, t) {
                return e || (t && "undefined" != typeof window ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = ee), window.ReactQueryClientContext) : ee)
            }
            let en = function() {
                    let {
                        context: e
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = X.useContext(er(e, X.useContext(et)));
                    if (!t) throw Error("No QueryClient set, use QueryClientProvider to set one");
                    return t
                },
                ei = e => {
                    let {
                        client: t,
                        children: r,
                        context: n,
                        contextSharing: i = !1
                    } = e;
                    X.useEffect(() => (t.mount(), () => {
                        t.unmount()
                    }), [t]);
                    let o = er(n, i);
                    return X.createElement(et.Provider, {
                        value: !n && i
                    }, X.createElement(o.Provider, {
                        value: t
                    }, r))
                },
                eo = X.createContext(!1),
                ea = () => X.useContext(eo);
            eo.Provider;
            let es = X.createContext((n = !1, {
                    clearReset: () => {
                        n = !1
                    },
                    reset: () => {
                        n = !0
                    },
                    isReset: () => n
                })),
                eu = () => X.useContext(es);
            var ec = r(64854);
            class el extends I {
                constructor(e, t) {
                    super(), this.client = e, this.setOptions(t), this.bindMethods(), this.updateResult()
                }
                bindMethods() {
                    this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this)
                }
                setOptions(e) {
                    var t;
                    let r = this.options;
                    this.options = this.client.defaultMutationOptions(e), b(r, this.options) || this.client.getMutationCache().notify({
                        type: "observerOptionsUpdated",
                        mutation: this.currentMutation,
                        observer: this
                    }), null == (t = this.currentMutation) || t.setOptions(this.options)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var e;
                        null == (e = this.currentMutation) || e.removeObserver(this)
                    }
                }
                onMutationUpdate(e) {
                    this.updateResult();
                    let t = {
                        listeners: !0
                    };
                    "success" === e.type ? t.onSuccess = !0 : "error" === e.type && (t.onError = !0), this.notify(t)
                }
                getCurrentResult() {
                    return this.currentResult
                }
                reset() {
                    this.currentMutation = void 0, this.updateResult(), this.notify({
                        listeners: !0
                    })
                }
                mutate(e, t) {
                    return this.mutateOptions = t, this.currentMutation && this.currentMutation.removeObserver(this), this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,
                        variables: void 0 !== e ? e : this.options.variables
                    }), this.currentMutation.addObserver(this), this.currentMutation.execute()
                }
                updateResult() {
                    let e = this.currentMutation ? this.currentMutation.state : z(),
                        t = { ...e,
                            isLoading: "loading" === e.status,
                            isSuccess: "success" === e.status,
                            isError: "error" === e.status,
                            isIdle: "idle" === e.status,
                            mutate: this.mutate,
                            reset: this.reset
                        };
                    this.currentResult = t
                }
                notify(e) {
                    _.batch(() => {
                        if (this.mutateOptions && this.hasListeners()) {
                            var t, r, n, i, o, a, s, u;
                            e.onSuccess ? (null == (t = (r = this.mutateOptions).onSuccess) || t.call(r, this.currentResult.data, this.currentResult.variables, this.currentResult.context), null == (n = (i = this.mutateOptions).onSettled) || n.call(i, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context)) : e.onError && (null == (o = (a = this.mutateOptions).onError) || o.call(a, this.currentResult.error, this.currentResult.variables, this.currentResult.context), null == (s = (u = this.mutateOptions).onSettled) || s.call(u, void 0, this.currentResult.error, this.currentResult.variables, this.currentResult.context))
                        }
                        e.listeners && this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(this.currentResult)
                        })
                    })
                }
            }
            let ed = r(41547).useSyncExternalStore;

            function ef() {}
            class eh extends I {
                constructor(e, t) {
                    super(), this.client = e, this.options = t, this.trackedProps = new Set, this.selectError = null, this.bindMethods(), this.setOptions(t)
                }
                bindMethods() {
                    this.remove = this.remove.bind(this), this.refetch = this.refetch.bind(this)
                }
                onSubscribe() {
                    1 === this.listeners.size && (this.currentQuery.addObserver(this), ep(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers())
                }
                onUnsubscribe() {
                    this.hasListeners() || this.destroy()
                }
                shouldFetchOnReconnect() {
                    return em(this.currentQuery, this.options, this.options.refetchOnReconnect)
                }
                shouldFetchOnWindowFocus() {
                    return em(this.currentQuery, this.options, this.options.refetchOnWindowFocus)
                }
                destroy() {
                    this.listeners = new Set, this.clearStaleTimeout(), this.clearRefetchInterval(), this.currentQuery.removeObserver(this)
                }
                setOptions(e, t) {
                    let r = this.options,
                        n = this.currentQuery;
                    if (this.options = this.client.defaultQueryOptions(e), b(r, this.options) || this.client.getQueryCache().notify({
                            type: "observerOptionsUpdated",
                            query: this.currentQuery,
                            observer: this
                        }), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw Error("Expected enabled to be a boolean");
                    this.options.queryKey || (this.options.queryKey = r.queryKey), this.updateQuery();
                    let i = this.hasListeners();
                    i && eg(this.currentQuery, n, this.options, r) && this.executeFetch(), this.updateResult(t), i && (this.currentQuery !== n || this.options.enabled !== r.enabled || this.options.staleTime !== r.staleTime) && this.updateStaleTimeout();
                    let o = this.computeRefetchInterval();
                    i && (this.currentQuery !== n || this.options.enabled !== r.enabled || o !== this.currentRefetchInterval) && this.updateRefetchInterval(o)
                }
                getOptimisticResult(e) {
                    let t = this.client.getQueryCache().build(this.client, e),
                        r = this.createResult(t, e);
                    return e.keepPreviousData || (void 0 !== e.placeholderData ? !r.isPlaceholderData : b(this.getCurrentResult(), r)) || (this.currentResult = r, this.currentResultOptions = this.options, this.currentResultState = this.currentQuery.state), r
                }
                getCurrentResult() {
                    return this.currentResult
                }
                trackResult(e) {
                    let t = {};
                    return Object.keys(e).forEach(r => {
                        Object.defineProperty(t, r, {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (this.trackedProps.add(r), e[r])
                        })
                    }), t
                }
                getCurrentQuery() {
                    return this.currentQuery
                }
                remove() {
                    this.client.getQueryCache().remove(this.currentQuery)
                }
                refetch({
                    refetchPage: e,
                    ...t
                } = {}) {
                    return this.fetch({ ...t,
                        meta: {
                            refetchPage: e
                        }
                    })
                }
                fetchOptimistic(e) {
                    let t = this.client.defaultQueryOptions(e),
                        r = this.client.getQueryCache().build(this.client, t);
                    return r.isFetchingOptimistic = !0, r.fetch().then(() => this.createResult(r, t))
                }
                fetch(e) {
                    var t;
                    return this.executeFetch({ ...e,
                        cancelRefetch: null == (t = e.cancelRefetch) || t
                    }).then(() => (this.updateResult(), this.currentResult))
                }
                executeFetch(e) {
                    this.updateQuery();
                    let t = this.currentQuery.fetch(this.options, e);
                    return null != e && e.throwOnError || (t = t.catch(a)), t
                }
                updateStaleTimeout() {
                    if (this.clearStaleTimeout(), o || this.currentResult.isStale || !s(this.options.staleTime)) return;
                    let e = u(this.currentResult.dataUpdatedAt, this.options.staleTime);
                    this.staleTimeoutId = setTimeout(() => {
                        this.currentResult.isStale || this.updateResult()
                    }, e + 1)
                }
                computeRefetchInterval() {
                    var e;
                    return "function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (e = this.options.refetchInterval) && e
                }
                updateRefetchInterval(e) {
                    this.clearRefetchInterval(), this.currentRefetchInterval = e, !o && !1 !== this.options.enabled && s(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval(() => {
                        (this.options.refetchIntervalInBackground || C.isFocused()) && this.executeFetch()
                    }, this.currentRefetchInterval))
                }
                updateTimers() {
                    this.updateStaleTimeout(), this.updateRefetchInterval(this.computeRefetchInterval())
                }
                clearStaleTimeout() {
                    this.staleTimeoutId && (clearTimeout(this.staleTimeoutId), this.staleTimeoutId = void 0)
                }
                clearRefetchInterval() {
                    this.refetchIntervalId && (clearInterval(this.refetchIntervalId), this.refetchIntervalId = void 0)
                }
                createResult(e, t) {
                    let r;
                    let n = this.currentQuery,
                        i = this.options,
                        o = this.currentResult,
                        a = this.currentResultState,
                        s = this.currentResultOptions,
                        u = e !== n,
                        c = u ? e.state : this.currentQueryInitialState,
                        l = u ? this.currentResult : this.previousQueryResult,
                        {
                            state: d
                        } = e,
                        {
                            dataUpdatedAt: f,
                            error: h,
                            errorUpdatedAt: p,
                            fetchStatus: m,
                            status: g
                        } = d,
                        b = !1,
                        y = !1;
                    if (t._optimisticResults) {
                        let r = this.hasListeners(),
                            o = !r && ep(e, t),
                            a = r && eg(e, n, t, i);
                        (o || a) && (m = N(e.options.networkMode) ? "fetching" : "paused", f || (g = "loading")), "isRestoring" === t._optimisticResults && (m = "idle")
                    }
                    if (t.keepPreviousData && !d.dataUpdatedAt && null != l && l.isSuccess && "error" !== g) r = l.data, f = l.dataUpdatedAt, g = l.status, b = !0;
                    else if (t.select && void 0 !== d.data) {
                        if (o && d.data === (null == a ? void 0 : a.data) && t.select === this.selectFn) r = this.selectResult;
                        else try {
                            this.selectFn = t.select, r = t.select(d.data), r = x(null == o ? void 0 : o.data, r, t), this.selectResult = r, this.selectError = null
                        } catch (e) {
                            this.selectError = e
                        }
                    } else r = d.data;
                    if (void 0 !== t.placeholderData && void 0 === r && "loading" === g) {
                        let e;
                        if (null != o && o.isPlaceholderData && t.placeholderData === (null == s ? void 0 : s.placeholderData)) e = o.data;
                        else if (e = "function" == typeof t.placeholderData ? t.placeholderData() : t.placeholderData, t.select && void 0 !== e) try {
                            e = t.select(e), this.selectError = null
                        } catch (e) {
                            this.selectError = e
                        }
                        void 0 !== e && (g = "success", r = x(null == o ? void 0 : o.data, e, t), y = !0)
                    }
                    this.selectError && (h = this.selectError, r = this.selectResult, p = Date.now(), g = "error");
                    let v = "fetching" === m,
                        w = "loading" === g,
                        E = "error" === g;
                    return {
                        status: g,
                        fetchStatus: m,
                        isLoading: w,
                        isSuccess: "success" === g,
                        isError: E,
                        isInitialLoading: w && v,
                        data: r,
                        dataUpdatedAt: f,
                        error: h,
                        errorUpdatedAt: p,
                        failureCount: d.fetchFailureCount,
                        failureReason: d.fetchFailureReason,
                        errorUpdateCount: d.errorUpdateCount,
                        isFetched: d.dataUpdateCount > 0 || d.errorUpdateCount > 0,
                        isFetchedAfterMount: d.dataUpdateCount > c.dataUpdateCount || d.errorUpdateCount > c.errorUpdateCount,
                        isFetching: v,
                        isRefetching: v && !w,
                        isLoadingError: E && 0 === d.dataUpdatedAt,
                        isPaused: "paused" === m,
                        isPlaceholderData: y,
                        isPreviousData: b,
                        isRefetchError: E && 0 !== d.dataUpdatedAt,
                        isStale: eb(e, t),
                        refetch: this.refetch,
                        remove: this.remove
                    }
                }
                updateResult(e) {
                    let t = this.currentResult,
                        r = this.createResult(this.currentQuery, this.options);
                    if (this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, b(r, t)) return;
                    this.currentResult = r;
                    let n = {
                        cache: !0
                    };
                    (null == e ? void 0 : e.listeners) !== !1 && (() => {
                        if (!t) return !0;
                        let {
                            notifyOnChangeProps: e
                        } = this.options, r = "function" == typeof e ? e() : e;
                        if ("all" === r || !r && !this.trackedProps.size) return !0;
                        let n = new Set(null != r ? r : this.trackedProps);
                        return this.options.useErrorBoundary && n.add("error"), Object.keys(this.currentResult).some(e => this.currentResult[e] !== t[e] && n.has(e))
                    })() && (n.listeners = !0), this.notify({ ...n,
                        ...e
                    })
                }
                updateQuery() {
                    let e = this.client.getQueryCache().build(this.client, this.options);
                    if (e === this.currentQuery) return;
                    let t = this.currentQuery;
                    this.currentQuery = e, this.currentQueryInitialState = e.state, this.previousQueryResult = this.currentResult, this.hasListeners() && (null == t || t.removeObserver(this), e.addObserver(this))
                }
                onQueryUpdate(e) {
                    let t = {};
                    "success" === e.type ? t.onSuccess = !e.manual : "error" !== e.type || D(e.error) || (t.onError = !0), this.updateResult(t), this.hasListeners() && this.updateTimers()
                }
                notify(e) {
                    _.batch(() => {
                        var t, r, n, i, o, a, s, u;
                        e.onSuccess ? (null == (t = (r = this.options).onSuccess) || t.call(r, this.currentResult.data), null == (n = (i = this.options).onSettled) || n.call(i, this.currentResult.data, null)) : e.onError && (null == (o = (a = this.options).onError) || o.call(a, this.currentResult.error), null == (s = (u = this.options).onSettled) || s.call(u, void 0, this.currentResult.error)), e.listeners && this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(this.currentResult)
                        }), e.cache && this.client.getQueryCache().notify({
                            query: this.currentQuery,
                            type: "observerResultsUpdated"
                        })
                    })
                }
            }

            function ep(e, t) {
                return !1 !== t.enabled && !e.state.dataUpdatedAt && !("error" === e.state.status && !1 === t.retryOnMount) || e.state.dataUpdatedAt > 0 && em(e, t, t.refetchOnMount)
            }

            function em(e, t, r) {
                if (!1 !== t.enabled) {
                    let n = "function" == typeof r ? r(e) : r;
                    return "always" === n || !1 !== n && eb(e, t)
                }
                return !1
            }

            function eg(e, t, r, n) {
                return !1 !== r.enabled && (e !== t || !1 === n.enabled) && (!r.suspense || "error" !== e.state.status) && eb(e, r)
            }

            function eb(e, t) {
                return e.isStaleByTime(t.staleTime)
            }
            var ey = r(84782);

            function ev(e) {
                let {
                    queryClient: t = new G({
                        defaultOptions: {
                            queries: {
                                cacheTime: 864e5,
                                networkMode: "offlineFirst",
                                refetchOnWindowFocus: !1,
                                retry: 0
                            },
                            mutations: {
                                networkMode: "offlineFirst"
                            }
                        }
                    }),
                    storage: r = (0, Z.o6)({
                        storage: "undefined" != typeof window && window.localStorage ? window.localStorage : Z.wp
                    }),
                    persister: n = "undefined" != typeof window ? function({
                        storage: e,
                        key: t = "REACT_QUERY_OFFLINE_CACHE",
                        throttleTime: r = 1e3,
                        serialize: n = JSON.stringify,
                        deserialize: o = JSON.parse,
                        retry: a
                    }) {
                        if (e) {
                            let i = r => {
                                try {
                                    e.setItem(t, n(r));
                                    return
                                } catch (e) {
                                    return e
                                }
                            };
                            return {
                                persistClient: function(e, t = 100) {
                                    let r, n = null;
                                    return function(...i) {
                                        r = i, null === n && (n = setTimeout(() => {
                                            e(...r), n = null
                                        }, t))
                                    }
                                }(e => {
                                    let t = e,
                                        r = i(t),
                                        n = 0;
                                    for (; r && t;) n++, (t = null == a ? void 0 : a({
                                        persistedClient: t,
                                        error: r,
                                        errorCount: n
                                    })) && (r = i(t))
                                }, r),
                                restoreClient: () => {
                                    let r = e.getItem(t);
                                    if (r) return o(r)
                                },
                                removeClient: () => {
                                    e.removeItem(t)
                                }
                            }
                        }
                        return {
                            persistClient: i,
                            restoreClient: () => void 0,
                            removeClient: i
                        }
                    }({
                        key: "cache",
                        storage: r,
                        serialize: e => e,
                        deserialize: e => e
                    }) : void 0,
                    ...o
                } = e, a = (0, Z._g)({ ...o,
                    storage: r
                });
                if (n) {
                    var s;
                    let e, r;
                    r = !1, Q(s = {
                        queryClient: t,
                        persister: n,
                        dehydrateOptions: {
                            shouldDehydrateQuery: e => 0 !== e.cacheTime && !1 !== e.queryKey[0].persist
                        }
                    }).then(() => {
                        r || (e = function(e) {
                            let t = e.queryClient.getQueryCache().subscribe(t => {
                                    V(t.type) && J(e)
                                }),
                                r = e.queryClient.getMutationCache().subscribe(t => {
                                    V(t.type) && J(e)
                                });
                            return () => {
                                t(), r()
                            }
                        }(s))
                    })
                }
                return Object.assign(a, {
                    queryClient: t
                })
            }
            var ew = X.createContext(void 0),
                eE = X.createContext(void 0);

            function eA(e) {
                let {
                    children: t,
                    config: r
                } = e;
                return X.createElement(ew.Provider, {
                    children: X.createElement(ei, {
                        children: t,
                        client: r.queryClient,
                        context: eE
                    }),
                    value: r
                })
            }

            function eP() {
                let e = X.useContext(ew);
                if (!e) throw Error("`useConfig` must be used within `WagmiConfig`.\n\nRead more: https://wagmi.sh/react/WagmiConfig");
                return e
            }
            var ex = ec.useSyncExternalStore;

            function eO(e) {
                return "[object Object]" === Object.prototype.toString.call(e)
            }

            function e_(e) {
                return JSON.stringify(e, (e, t) => ! function(e) {
                    if (!eO(e)) return !1;
                    let t = e.constructor;
                    if (void 0 === t) return !0;
                    let r = t.prototype;
                    return !!(eO(r) && r.hasOwnProperty("isPrototypeOf"))
                }(t) ? "bigint" == typeof t ? t.toString() : t : Object.keys(t).sort().reduce((e, r) => (e[r] = t[r], e), {}))
            }

            function eI(e, t, r) {
                return function(e, t, r) {
                    var n, i;
                    let o = l(e, void 0, void 0),
                        a = en({
                            context: o.context
                        }),
                        [s] = X.useState(() => new el(a, o));
                    X.useEffect(() => {
                        s.setOptions(o)
                    }, [s, o]);
                    let u = ed(X.useCallback(e => s.subscribe(_.batchCalls(e)), [s]), () => s.getCurrentResult(), () => s.getCurrentResult()),
                        c = X.useCallback((e, t) => {
                            s.mutate(e, t).catch(ef)
                        }, [s]);
                    if (u.error && (n = s.options.useErrorBoundary, i = [u.error], "function" == typeof n ? n(...i) : !!n)) throw u.error;
                    return { ...u,
                        mutate: c,
                        mutateAsync: u.mutate
                    }
                }({
                    context: eE,
                    ...l(e, t, r)
                })
            }

            function eT(e, t, r) {
                let n = function(e, t) {
                        var r, n;
                        let i = en({
                                context: e.context
                            }),
                            o = ea(),
                            a = eu(),
                            s = i.defaultQueryOptions({ ...e,
                                queryKeyHashFn: e_
                            });
                        s._optimisticResults = o ? "isRestoring" : "optimistic", s.onError && (s.onError = _.batchCalls(s.onError)), s.onSuccess && (s.onSuccess = _.batchCalls(s.onSuccess)), s.onSettled && (s.onSettled = _.batchCalls(s.onSettled)), s.suspense && "number" != typeof s.staleTime && (s.staleTime = 1e3), (s.suspense || s.useErrorBoundary) && !a.isReset() && (s.retryOnMount = !1);
                        let [u] = X.useState(() => new t(i, s)), c = u.getOptimisticResult(s);
                        if (ex(X.useCallback(e => o ? () => void 0 : u.subscribe(_.batchCalls(e)), [u, o]), () => u.getCurrentResult(), () => u.getCurrentResult()), X.useEffect(() => {
                                a.clearReset()
                            }, [a]), X.useEffect(() => {
                                u.setOptions(s, {
                                    listeners: !1
                                })
                            }, [s, u]), s.suspense && c.isLoading && c.isFetching && !o) throw u.fetchOptimistic(s).then(e => {
                            var t, r;
                            let {
                                data: n
                            } = e;
                            null === (t = s.onSuccess) || void 0 === t || t.call(s, n), null === (r = s.onSettled) || void 0 === r || r.call(s, n, null)
                        }).catch(e => {
                            var t, r;
                            a.clearReset(), null === (t = s.onError) || void 0 === t || t.call(s, e), null === (r = s.onSettled) || void 0 === r || r.call(s, void 0, e)
                        });
                        if (c.isError && !a.isReset() && !c.isFetching && (r = s.useErrorBoundary, n = [c.error, u.getCurrentQuery()], "function" == typeof r ? r(...n) : !!r)) throw c.error;
                        let l = "loading" === c.status && "idle" === c.fetchStatus ? "idle" : c.status,
                            d = "loading" === l && "fetching" === c.fetchStatus;
                        return { ...c,
                            defaultedOptions: s,
                            isIdle: "idle" === l,
                            isLoading: d,
                            observer: u,
                            status: l
                        }
                    }({
                        context: eE,
                        ...Array.isArray(e) ? "function" == typeof t ? { ...r,
                            queryKey: e,
                            queryFn: t
                        } : { ...t,
                            queryKey: e
                        } : e
                    }, eh),
                    i = {
                        data: n.data,
                        error: n.error,
                        fetchStatus: n.fetchStatus,
                        isError: n.isError,
                        isFetched: n.isFetched,
                        isFetchedAfterMount: n.isFetchedAfterMount,
                        isFetching: n.isFetching,
                        isIdle: n.isIdle,
                        isLoading: n.isLoading,
                        isRefetching: n.isRefetching,
                        isSuccess: n.isSuccess,
                        refetch: n.refetch,
                        status: n.status,
                        internal: {
                            dataUpdatedAt: n.dataUpdatedAt,
                            errorUpdatedAt: n.errorUpdatedAt,
                            failureCount: n.failureCount,
                            isFetchedAfterMount: n.isFetchedAfterMount,
                            isLoadingError: n.isLoadingError,
                            isPaused: n.isPaused,
                            isPlaceholderData: n.isPlaceholderData,
                            isPreviousData: n.isPreviousData,
                            isRefetchError: n.isRefetchError,
                            isStale: n.isStale,
                            remove: n.remove
                        }
                    };
                return n.defaultedOptions.notifyOnChangeProps ? i : function(e, t) {
                    let r = {};
                    return Object.keys(e).forEach(n => {
                        Object.defineProperty(r, n, {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (t.trackedProps.add(n), e[n])
                        })
                    }), r
                }(i, n.observer)
            }
            var eC = () => en({
                context: eE
            });

            function eS() {
                let {
                    chainId: e
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return (0, ey.useSyncExternalStoreWithSelector)(t => (0, Z.pC)({
                    chainId: e
                }, t), () => (0, Z.uV)({
                    chainId: e
                }), () => (0, Z.uV)({
                    chainId: e
                }), e => e, (e, t) => e.uid === t.uid)
            }

            function ek() {
                let {
                    chainId: e
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return eS({
                    chainId: e
                }).chain.id
            }

            function eM(e) {
                let {
                    chainId: t,
                    scopeKey: r
                } = e;
                return [{
                    entity: "blockNumber",
                    chainId: t,
                    scopeKey: r
                }]
            }

            function eB(e) {
                let {
                    queryKey: [{
                        chainId: t
                    }]
                } = e;
                return (0, Z.RQ)({
                    chainId: t
                })
            }
            var eN = e => "object" == typeof e && !Array.isArray(e);

            function eR(e, t) {
                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t,
                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Z.vZ,
                    i = X.useRef([]),
                    o = (0, ey.useSyncExternalStoreWithSelector)(e, t, r, e => e, (e, t) => {
                        if (eN(e) && eN(t) && i.current.length) {
                            for (let r of i.current)
                                if (!n(e[r], t[r])) return !1;
                            return !0
                        }
                        return n(e, t)
                    });
                if (eN(o)) {
                    let e = { ...o
                    };
                    return Object.defineProperties(e, Object.entries(e).reduce((e, t) => {
                        let [r, n] = t;
                        return { ...e,
                            [r]: {
                                configurable: !1,
                                enumerable: !0,
                                get: () => (i.current.includes(r) || i.current.push(r), n)
                            }
                        }
                    }, {})), e
                }
                return o
            }

            function eD() {
                let {
                    onConnect: e,
                    onDisconnect: t
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = eP(), n = eR(X.useCallback(e => (0, Z.uH)(e), [r]), Z.D0), i = X.useRef(), o = i.current;
                return X.useEffect(() => {
                    (null == o ? void 0 : o.status) !== "connected" && "connected" === n.status && (null == e || e({
                        address: n.address,
                        connector: n.connector,
                        isReconnected: (null == o ? void 0 : o.status) === "reconnecting" || (null == o ? void 0 : o.status) === void 0
                    })), (null == o ? void 0 : o.status) === "connected" && "disconnected" === n.status && (null == t || t()), i.current = n
                }, [e, t, o, n]), n
            }

            function ej(e) {
                let {
                    queryKey: [{
                        address: t,
                        chainId: r,
                        formatUnits: n,
                        token: i
                    }]
                } = e;
                if (!t) throw Error("address is required");
                return (0, Z.EG)({
                    address: t,
                    chainId: r,
                    formatUnits: n,
                    token: i
                })
            }

            function eF() {
                let {
                    address: e,
                    cacheTime: t,
                    chainId: r,
                    enabled: n = !0,
                    formatUnits: i,
                    scopeKey: o,
                    staleTime: a,
                    suspense: s,
                    token: u,
                    watch: c,
                    onError: l,
                    onSettled: d,
                    onSuccess: f
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, h = ek({
                    chainId: r
                }), p = X.useMemo(() => (function(e) {
                    let {
                        address: t,
                        chainId: r,
                        formatUnits: n,
                        scopeKey: i,
                        token: o
                    } = e;
                    return [{
                        entity: "balance",
                        address: t,
                        chainId: r,
                        formatUnits: n,
                        scopeKey: i,
                        token: o
                    }]
                })({
                    address: e,
                    chainId: h,
                    formatUnits: i,
                    scopeKey: o,
                    token: u
                }), [e, h, i, o, u]), m = eT(p, ej, {
                    cacheTime: t,
                    enabled: !!(n && e),
                    staleTime: a,
                    suspense: s,
                    onError: l,
                    onSettled: d,
                    onSuccess: f
                });
                return ! function(e) {
                    let {
                        chainId: t,
                        enabled: r,
                        queryKey: n
                    } = e, i = eC(), o = X.useCallback(() => i.invalidateQueries({
                        queryKey: n
                    }, {
                        cancelRefetch: !1
                    }), [i, n]);
                    ! function() {
                        let {
                            cacheTime: e = 0,
                            chainId: t,
                            enabled: r = !0,
                            scopeKey: n,
                            staleTime: i,
                            suspense: o,
                            watch: a = !1,
                            onBlock: s,
                            onError: u,
                            onSettled: c,
                            onSuccess: l
                        } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, d = ek({
                            chainId: t
                        }), f = eS({
                            chainId: d
                        }), h = function() {
                            let {
                                chainId: e
                            } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            return (0, ey.useSyncExternalStoreWithSelector)(t => (0, Z.fq)({
                                chainId: e
                            }, t), () => (0, Z.jr)({
                                chainId: e
                            }), () => (0, Z.jr)({
                                chainId: e
                            }), e => e, (e, t) => (null == e ? void 0 : e.uid) === (null == t ? void 0 : t.uid))
                        }({
                            chainId: d
                        }), p = eC();
                        X.useEffect(() => {
                            if (r && (a || s)) return (null != h ? h : f).watchBlockNumber({
                                onBlockNumber: e => {
                                    a && p.setQueryData(eM({
                                        chainId: d,
                                        scopeKey: n
                                    }), e), s && s(e)
                                },
                                emitOnBegin: !0
                            })
                        }, [d, n, s, f, p, a, h, r]), eT(eM({
                            scopeKey: n,
                            chainId: d
                        }), eB, {
                            cacheTime: e,
                            enabled: r,
                            staleTime: i,
                            suspense: o,
                            onError: u,
                            onSettled: c,
                            onSuccess: l
                        })
                    }({
                        chainId: t,
                        enabled: r,
                        onBlock: r ? o : void 0,
                        scopeKey: r ? void 0 : "idle"
                    })
                }({
                    chainId: h,
                    enabled: !!(n && c && e),
                    queryKey: p
                }), m
            }
            var eU = e => [{
                    entity: "connect",
                    ...e
                }],
                eL = e => {
                    let {
                        connector: t,
                        chainId: r
                    } = e;
                    if (!t) throw Error("connector is required");
                    return (0, Z.$j)({
                        connector: t,
                        chainId: r
                    })
                };

            function eq() {
                let {
                    chainId: e,
                    connector: t,
                    onError: r,
                    onMutate: n,
                    onSettled: i,
                    onSuccess: o
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, a = eP(), {
                    data: s,
                    error: u,
                    isError: c,
                    isIdle: l,
                    isLoading: d,
                    isSuccess: f,
                    mutate: h,
                    mutateAsync: p,
                    reset: m,
                    status: g,
                    variables: b
                } = eI(eU({
                    connector: t,
                    chainId: e
                }), eL, {
                    onError: r,
                    onMutate: n,
                    onSettled: i,
                    onSuccess: o
                });
                return {
                    connect: X.useCallback(r => {
                        var n, i;
                        return h({
                            chainId: null !== (n = null == r ? void 0 : r.chainId) && void 0 !== n ? n : e,
                            connector: null !== (i = null == r ? void 0 : r.connector) && void 0 !== i ? i : t
                        })
                    }, [e, t, h]),
                    connectAsync: X.useCallback(r => {
                        var n, i;
                        return p({
                            chainId: null !== (n = null == r ? void 0 : r.chainId) && void 0 !== n ? n : e,
                            connector: null !== (i = null == r ? void 0 : r.connector) && void 0 !== i ? i : t
                        })
                    }, [e, t, p]),
                    connectors: a.connectors,
                    data: s,
                    error: u,
                    isError: c,
                    isIdle: l,
                    isLoading: d,
                    isSuccess: f,
                    pendingConnector: null == b ? void 0 : b.connector,
                    reset: m,
                    status: g,
                    variables: b
                }
            }
            var ez = [{
                    entity: "disconnect"
                }],
                e$ = () => (0, Z.zP)();

            function eH() {
                let {
                    onError: e,
                    onMutate: t,
                    onSettled: r,
                    onSuccess: n
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {
                    error: i,
                    isError: o,
                    isIdle: a,
                    isLoading: s,
                    isSuccess: u,
                    mutate: c,
                    mutateAsync: l,
                    reset: d,
                    status: f
                } = eI(ez, e$, { ...e ? {
                        onError(t, r, n) {
                            e(t, n)
                        }
                    } : {},
                    onMutate: t,
                    ...r ? {
                        onSettled(e, t, n, i) {
                            r(t, i)
                        }
                    } : {},
                    ...n ? {
                        onSuccess(e, t, r) {
                            n(r)
                        }
                    } : {}
                });
                return {
                    disconnect: c,
                    disconnectAsync: l,
                    error: i,
                    isError: o,
                    isIdle: a,
                    isLoading: s,
                    isSuccess: u,
                    reset: d,
                    status: f
                }
            }

            function eG() {
                let e = eP();
                return eR((0, X.useCallback)(e => (0, Z.QC)(e), [e]), Z.Hy)
            }
            var eW = e => [{
                    entity: "signMessage",
                    ...e
                }],
                eK = e => {
                    let {
                        message: t
                    } = e;
                    if (!t) throw Error("message is required");
                    return (0, Z.l)({
                        message: t
                    })
                };

            function eY() {
                let {
                    message: e,
                    onError: t,
                    onMutate: r,
                    onSettled: n,
                    onSuccess: i
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {
                    data: o,
                    error: a,
                    isError: s,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: l,
                    mutate: d,
                    mutateAsync: f,
                    reset: h,
                    status: p,
                    variables: m
                } = eI(eW({
                    message: e
                }), eK, {
                    onError: t,
                    onMutate: r,
                    onSettled: n,
                    onSuccess: i
                });
                return {
                    data: o,
                    error: a,
                    isError: s,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: l,
                    reset: h,
                    signMessage: X.useCallback(t => d(t || {
                        message: e
                    }), [e, d]),
                    signMessageAsync: X.useCallback(t => f(t || {
                        message: e
                    }), [e, f]),
                    status: p,
                    variables: m
                }
            }
            var eV = e => [{
                    entity: "switchNetwork",
                    ...e
                }],
                eQ = e => {
                    let {
                        chainId: t
                    } = e;
                    if (!t) throw Error("chainId is required");
                    return (0, Z.If)({
                        chainId: t
                    })
                };

            function eJ() {
                var e, t;
                let r, n, {
                        chainId: i,
                        throwForSwitchChainNotSupported: o,
                        onError: a,
                        onMutate: s,
                        onSettled: u,
                        onSuccess: c
                    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    l = eP(),
                    d = function() {
                        let [, e] = X.useReducer(e => e + 1, 0);
                        return e
                    }(),
                    {
                        data: f,
                        error: h,
                        isError: p,
                        isIdle: m,
                        isLoading: g,
                        isSuccess: b,
                        mutate: y,
                        mutateAsync: v,
                        reset: w,
                        status: E,
                        variables: A
                    } = eI(eV({
                        chainId: i
                    }), eQ, {
                        onError: a,
                        onMutate: s,
                        onSettled: u,
                        onSuccess: c
                    }),
                    P = X.useCallback(e => y({
                        chainId: null != e ? e : i
                    }), [i, y]),
                    x = X.useCallback(e => v({
                        chainId: null != e ? e : i
                    }), [i, v]);
                X.useEffect(() => l.subscribe(e => {
                    let {
                        chains: t,
                        connector: r
                    } = e;
                    return {
                        chains: t,
                        connector: r
                    }
                }, d), [l, d]);
                let O = !!(null === (e = l.connector) || void 0 === e ? void 0 : e.switchChain);
                return (o || O) && (r = P, n = x), {
                    chains: null !== (t = l.chains) && void 0 !== t ? t : [],
                    data: f,
                    error: h,
                    isError: p,
                    isIdle: m,
                    isLoading: g,
                    isSuccess: b,
                    pendingChainId: null == A ? void 0 : A.chainId,
                    reset: w,
                    status: E,
                    switchNetwork: r,
                    switchNetworkAsync: n,
                    variables: A
                }
            }

            function eZ(e) {
                let {
                    queryKey: [{
                        name: t,
                        chainId: r
                    }]
                } = e;
                if (!t) throw Error("name is required");
                return (0, Z.w6)({
                    name: t,
                    chainId: r
                })
            }

            function eX() {
                let {
                    cacheTime: e,
                    chainId: t,
                    enabled: r = !0,
                    name: n,
                    scopeKey: i,
                    staleTime: o = 864e5,
                    suspense: a,
                    onError: s,
                    onSettled: u,
                    onSuccess: c
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, l = ek({
                    chainId: t
                });
                return eT(function(e) {
                    let {
                        name: t,
                        chainId: r,
                        scopeKey: n
                    } = e;
                    return [{
                        entity: "ensAvatar",
                        name: t,
                        chainId: r,
                        scopeKey: n
                    }]
                }({
                    name: n,
                    chainId: l,
                    scopeKey: i
                }), eZ, {
                    cacheTime: e,
                    enabled: !!(r && n && l),
                    staleTime: o,
                    suspense: a,
                    onError: s,
                    onSettled: u,
                    onSuccess: c
                })
            }

            function e0(e) {
                let {
                    queryKey: [{
                        address: t,
                        chainId: r
                    }]
                } = e;
                if (!t) throw Error("address is required");
                return (0, Z.Lk)({
                    address: t,
                    chainId: r
                })
            }

            function e1() {
                let {
                    address: e,
                    cacheTime: t,
                    chainId: r,
                    enabled: n = !0,
                    scopeKey: i,
                    staleTime: o = 864e5,
                    suspense: a,
                    onError: s,
                    onSettled: u,
                    onSuccess: c
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, l = ek({
                    chainId: r
                });
                return eT(function(e) {
                    let {
                        address: t,
                        chainId: r,
                        scopeKey: n
                    } = e;
                    return [{
                        entity: "ensName",
                        address: t,
                        chainId: r,
                        scopeKey: n
                    }]
                }({
                    address: e,
                    chainId: l,
                    scopeKey: i
                }), e0, {
                    cacheTime: t,
                    enabled: !!(n && e && l),
                    staleTime: o,
                    suspense: a,
                    onError: s,
                    onSettled: u,
                    onSuccess: c
                })
            }
        },
        69292: function(e) {
            "use strict";
            e.exports = JSON.parse('{"name":"@safe-global/safe-apps-sdk","version":"8.1.0","description":"SDK developed to integrate third-party apps with Safe app.","main":"dist/src/index.js","typings":"dist/src/index.d.ts","_files":["dist/**/*","src/**/*","CHANGELOG.md","README.md"],"sideEffects":false,"keywords":["Safe","sdk","apps"],"scripts":{"test":"jest","format-dist":"sed -i \'\' \'s/\\"files\\":/\\"_files\\":/\' dist/package.json","build":"yarn rimraf dist && tsc && yarn format-dist"},"author":"Safe (https://safe.global)","license":"MIT","dependencies":{"@safe-global/safe-gateway-typescript-sdk":"^3.5.3","viem":"^1.0.0"},"repository":{"type":"git","url":"git+https://github.com/safe-global/safe-apps-sdk.git"},"bugs":{"url":"https://github.com/safe-global/safe-apps-sdk/issues"},"homepage":"https://github.com/safe-global/safe-apps-sdk#readme","publishConfig":{"access":"public"}}')
        }
    }
]);